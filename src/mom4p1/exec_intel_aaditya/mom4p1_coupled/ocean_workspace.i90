!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!                                                                   !!
!!                   GNU General Public License                      !!
!!                                                                   !!
!! This file is part of the Flexible Modeling System (FMS).          !!
!!                                                                   !!
!! FMS is free software; you can redistribute it and/or modify       !!
!! it and are expected to follow the terms of the GNU General Public !!
!! License as published by the Free Software Foundation.             !!
!!                                                                   !!
!! FMS is distributed in the hope that it will be useful,            !!
!! but WITHOUT ANY WARRANTY; without even the implied warranty of    !!
!! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     !!
!! GNU General Public License for more details.                      !!
!!                                                                   !!
!! You should have received a copy of the GNU General Public License !!
!! along with FMS; if not, write to:                                 !!
!!          Free Software Foundation, Inc.                           !!
!!          59 Temple Place, Suite 330                               !!
!!          Boston, MA  02111-1307  USA                              !!
!! or see:                                                           !!
!!          http://www.gnu.org/licenses/gpl.txt                      !!
!!                                                                   !!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
module ocean_workspace_mod
!
! <CONTACT EMAIL="Matthew.Harrison@noaa.gov">
! M.J. Harrison
! </CONTACT>
!
! <REVIEWER EMAIL="Stephen.Griffies@noaa.gov">
! S.M. Griffies
! </REVIEWER>
!
!<OVERVIEW>
! This module allocates some workspace for use in mom4.
!</OVERVIEW>
!
!<DESCRIPTION>
! This module allocates some workspace for use in mom4.
!</DESCRIPTION>
!
use ocean_types_mod, only: ocean_domain_type, ocean_grid_type

implicit none

private

! This file contains some commonly used indices
! needed for setting up the various domains in mom4.
!
! The MOM4_STATIC_ARRAYS preprocessor option sets these
! indices according to values specified at compile time,
! whereas dynamic memory determines the indices at runtime.
!
! Dynimical allocation is more conveneient as it allows one to
! make changes to the model grid configuration without recompiling.
! However, on some platforms, use of static allocated arrays,
! whose size is set at runtime, provides for a more efficient
! executable.  Tests should be run to determine if significant
! differences exist on your specific computer and model
! configuration.
!



  integer :: isd
  integer :: ied
  integer :: jsd
  integer :: jed
  integer :: isc
  integer :: iec
  integer :: jsc
  integer :: jec
  integer :: isg
  integer :: ieg
  integer :: jsg
  integer :: jeg
  integer :: ni
  integer :: nj
  integer :: nk





real, public, allocatable, dimension(:,:)     :: wrk1_2d
real, public, allocatable, dimension(:,:)     :: wrk2_2d
real, public, allocatable, dimension(:,:)     :: wrk3_2d
real, public, allocatable, dimension(:,:)     :: wrk4_2d

real, public, allocatable, dimension(:,:,:)   :: wrk1
real, public, allocatable, dimension(:,:,:)   :: wrk2
real, public, allocatable, dimension(:,:,:)   :: wrk3
real, public, allocatable, dimension(:,:,:)   :: wrk4

real, public, allocatable, dimension(:,:,:)   :: wrk1_zw
real, public, allocatable, dimension(:,:,:)   :: wrk2_zw

real, public, allocatable, dimension(:,:,:,:) :: wrk1_v
real, public, allocatable, dimension(:,:,:,:) :: wrk2_v
real, public, allocatable, dimension(:,:,:,:) :: wrk3_v
real, public, allocatable, dimension(:,:,:,:) :: wrk4_v

real, public, allocatable, dimension(:,:,:)   :: wrk1_v2d
real, public, allocatable, dimension(:,:,:)   :: wrk2_v2d



public ocean_workspace_init, ocean_workspace_end



logical, private :: module_is_initialized = .FALSE.

contains

!#######################################################################
! <SUBROUTINE NAME="ocean_workspace_init">
!
! <DESCRIPTION>
! Initialize mom4 workspace module.
! </DESCRIPTION>
!
subroutine ocean_workspace_init(Domain, Grid)

type(ocean_domain_type), intent(in) :: Domain
type(ocean_grid_type), intent(in)   :: Grid

module_is_initialized = .TRUE.


allocate(wrk1_2d(Domain%isd:Domain%ied,Domain%jsd:Domain%jed))
allocate(wrk2_2d(Domain%isd:Domain%ied,Domain%jsd:Domain%jed))
allocate(wrk3_2d(Domain%isd:Domain%ied,Domain%jsd:Domain%jed))
allocate(wrk4_2d(Domain%isd:Domain%ied,Domain%jsd:Domain%jed))

allocate(wrk1(Domain%isd:Domain%ied,Domain%jsd:Domain%jed,Grid%nk))
allocate(wrk2(Domain%isd:Domain%ied,Domain%jsd:Domain%jed,Grid%nk))
allocate(wrk3(Domain%isd:Domain%ied,Domain%jsd:Domain%jed,Grid%nk))
allocate(wrk4(Domain%isd:Domain%ied,Domain%jsd:Domain%jed,Grid%nk))

allocate(wrk1_zw(Domain%isd:Domain%ied,Domain%jsd:Domain%jed,0:Grid%nk))
allocate(wrk2_zw(Domain%isd:Domain%ied,Domain%jsd:Domain%jed,0:Grid%nk))

allocate(wrk1_v(Domain%isd:Domain%ied,Domain%jsd:Domain%jed,Grid%nk,2))
allocate(wrk2_v(Domain%isd:Domain%ied,Domain%jsd:Domain%jed,Grid%nk,2))
allocate(wrk3_v(Domain%isd:Domain%ied,Domain%jsd:Domain%jed,Grid%nk,2))
allocate(wrk4_v(Domain%isd:Domain%ied,Domain%jsd:Domain%jed,Grid%nk,2))

allocate(wrk1_v2d(Domain%isd:Domain%ied,Domain%jsd:Domain%jed,2))
allocate(wrk2_v2d(Domain%isd:Domain%ied,Domain%jsd:Domain%jed,2))


end subroutine ocean_workspace_init
! </SUBROUTINE> NAME="ocean_workspace_init">


!#######################################################################
! <SUBROUTINE NAME="ocean_workspace_end">
!
! <DESCRIPTION>
! End mom4 workspace.
! </DESCRIPTION>
!
subroutine ocean_workspace_end()

module_is_initialized = .FALSE.


deallocate(wrk1,wrk2,wrk3,wrk4,wrk1_zw,wrk2_zw,wrk1_v,wrk2_v,wrk3_v,wrk4_v)
deallocate(wrk1_2d,wrk2_2d,wrk3_2d,wrk4_2d,wrk1_v2d,wrk2_v2d)


end subroutine ocean_workspace_end
! </SUBROUTINE> NAME="ocean_workspace_end">

end module ocean_workspace_mod

