netcdf grid_spec {
dimensions:
	gridlat_c = 200 ;
	gridlon_c = 360 ;
	gridlat_t = 200 ;
	gridlon_t = 360 ;
	gridlat_vert_c = 201 ;
	gridlon_vert_c = 361 ;
	gridlat_vert_t = 201 ;
	gridlon_vert_t = 361 ;
	zt = 50 ;
	zw = 50 ;
	i_atmXocn = 112872 ;
	i_atmXlnd = 7340 ;
	i_lndXocn = 112872 ;
	xba = 193 ;
	yba = 95 ;
	xta = 192 ;
	yta = 94 ;
	xbl = 193 ;
	ybl = 95 ;
	xtl = 192 ;
	ytl = 94 ;
	xto = 360 ;
	yto = 200 ;
variables:
	double cos_rot(gridlat_c, gridlon_c) ;
		cos_rot:long_name = "cos of rotation angle at corner cell centers" ;
		cos_rot:units = "radians" ;
	double dhtp(gridlat_t, gridlon_t) ;
		dhtp:long_name = "thickness of partial bottom t-cells" ;
		dhtp:units = "meters" ;
	double dhwt(gridlat_t, gridlon_t) ;
		dhwt:long_name = "vertical distance between t-points at bottom" ;
		dhwt:units = "meters" ;
	double dte(gridlat_t, gridlon_t) ;
		dte:long_name = "distance to eastern face of t cell" ;
		dte:units = "meters" ;
	double dtn(gridlat_t, gridlon_t) ;
		dtn:long_name = "distance to northern face of t cell" ;
		dtn:units = "meters" ;
	double dts(gridlat_t, gridlon_t) ;
		dts:long_name = "distance to southern face of t cell" ;
		dts:units = "meters" ;
	double dtw(gridlat_t, gridlon_t) ;
		dtw:long_name = "distance to western face of t cell" ;
		dtw:units = "meters" ;
	double due(gridlat_c, gridlon_c) ;
		due:long_name = "distance to eastern face of u cell" ;
		due:units = "meters" ;
	double dun(gridlat_c, gridlon_c) ;
		dun:long_name = "distance to northern face of u cell" ;
		dun:units = "meters" ;
	double dus(gridlat_c, gridlon_c) ;
		dus:long_name = "distance to southern face of u cell" ;
		dus:units = "meters" ;
	double duw(gridlat_c, gridlon_c) ;
		duw:long_name = "distance to western face of u cell" ;
		duw:units = "meters" ;
	double dxt(gridlat_t, gridlon_t) ;
		dxt:long_name = "width of t cell" ;
		dxt:units = "meters" ;
	double dxte(gridlat_t, gridlon_t) ;
		dxte:long_name = "distance to adjacent t cell to the east" ;
		dxte:units = "meters" ;
	double dxtn(gridlat_t, gridlon_t) ;
		dxtn:long_name = "width of northern face of t cell" ;
		dxtn:units = "meters" ;
	double dxu(gridlat_c, gridlon_c) ;
		dxu:long_name = "width of u cell" ;
		dxu:units = "meters" ;
	double dxue(gridlat_c, gridlon_c) ;
		dxue:long_name = "distance to adjacent u cell to the east" ;
		dxue:units = "meters" ;
	double dxun(gridlat_c, gridlon_c) ;
		dxun:long_name = "width of northern face of u cell" ;
		dxun:units = "meters" ;
	double dyt(gridlat_t, gridlon_t) ;
		dyt:long_name = "height of t cell" ;
		dyt:units = "meters" ;
	double dyte(gridlat_t, gridlon_t) ;
		dyte:long_name = "height of eastern face of t cell" ;
		dyte:units = "meters" ;
	double dytn(gridlat_t, gridlon_t) ;
		dytn:long_name = "distance to adjacent t cell to the north" ;
		dytn:units = "meters" ;
	double dyu(gridlat_c, gridlon_c) ;
		dyu:long_name = "height of u cell" ;
		dyu:units = "meters" ;
	double dyue(gridlat_c, gridlon_c) ;
		dyue:long_name = "height of eastern face of u cell" ;
		dyue:units = "meters" ;
	double dyun(gridlat_c, gridlon_c) ;
		dyun:long_name = "distance to adjacent u cell to the north" ;
		dyun:units = "meters" ;
	double geo_latc(gridlat_vert_c, gridlon_vert_c) ;
		geo_latc:long_name = "geographic latitude of corner cell centers (identical to geolat_vert_t)" ;
		geo_latc:units = "degrees_N" ;
	double geo_lonc(gridlat_vert_c, gridlon_vert_c) ;
		geo_lonc:long_name = "geographic longitude of corner cell centers (identical to geolon_vert_t)" ;
		geo_lonc:units = "degrees_E" ;
	double geolat_c(gridlat_c, gridlon_c) ;
		geolat_c:long_name = "geographic latitude of corner cell centers" ;
		geolat_c:units = "degrees_N" ;
	double geolat_e(gridlat_t, gridlon_c) ;
		geolat_e:long_name = "geographic latitude of east cell centers" ;
		geolat_e:units = "degrees_N" ;
	double geolat_n(gridlat_c, gridlon_t) ;
		geolat_n:long_name = "geographic latitude of north cell centers" ;
		geolat_n:units = "degrees_N" ;
	double geolat_t(gridlat_t, gridlon_t) ;
		geolat_t:long_name = "geographic latitude of t-cell centers" ;
		geolat_t:units = "degrees_N" ;
	double geolat_vert_t(gridlat_vert_t, gridlon_vert_t) ;
		geolat_vert_t:long_name = "geographic latitude of t-cell vertices" ;
		geolat_vert_t:units = "degrees_N" ;
	double geolon_c(gridlat_c, gridlon_c) ;
		geolon_c:long_name = "geographic longitude of corner cell centers" ;
		geolon_c:units = "degrees_E" ;
	double geolon_e(gridlat_t, gridlon_c) ;
		geolon_e:long_name = "geographic longitude of east cell centers" ;
		geolon_e:units = "degrees_E" ;
	double geolon_n(gridlat_c, gridlon_t) ;
		geolon_n:long_name = "geographic longitude of north cell centers" ;
		geolon_n:units = "degrees_E" ;
	double geolon_t(gridlat_t, gridlon_t) ;
		geolon_t:long_name = "geographic longitude of t-cell centers" ;
		geolon_t:units = "degrees_E" ;
	double geolon_vert_t(gridlat_vert_t, gridlon_vert_t) ;
		geolon_vert_t:long_name = "geographic longitude of t-cell vertices" ;
		geolon_vert_t:units = "degrees_E" ;
	float gridlat_c(gridlat_c) ;
		gridlat_c:long_name = "gridlat_c" ;
		gridlat_c:units = "degrees_N" ;
	float gridlat_t(gridlat_t) ;
		gridlat_t:long_name = "gridlat_t" ;
		gridlat_t:units = "degrees_N" ;
	float gridlat_vert_c(gridlat_vert_c) ;
		gridlat_vert_c:long_name = "gridlat_vert_c" ;
		gridlat_vert_c:units = "degrees_N" ;
	float gridlat_vert_t(gridlat_vert_t) ;
		gridlat_vert_t:long_name = "gridlat_vert_t" ;
		gridlat_vert_t:units = "degrees_N" ;
	float gridlon_c(gridlon_c) ;
		gridlon_c:long_name = "gridlon_c" ;
		gridlon_c:units = "degrees_E" ;
		gridlon_c:modulo = "y" ;
	float gridlon_t(gridlon_t) ;
		gridlon_t:long_name = "gridlon_t" ;
		gridlon_t:units = "degrees_E" ;
	float gridlon_vert_c(gridlon_vert_c) ;
		gridlon_vert_c:long_name = "gridlon_vert_c" ;
		gridlon_vert_c:units = "degrees_E" ;
	float gridlon_vert_t(gridlon_vert_t) ;
		gridlon_vert_t:long_name = "gridlon_vert_t" ;
		gridlon_vert_t:units = "degrees_E" ;
	double ht(gridlat_t, gridlon_t) ;
		ht:long_name = "topography at t-cell centers" ;
		ht:units = "meters" ;
	double hu(gridlat_c, gridlon_c) ;
		hu:long_name = "topography at corner cell centers" ;
		hu:units = "meters" ;
	double kmt(gridlat_t, gridlon_t) ;
		kmt:long_name = "number of vertical t-cells" ;
		kmt:units = "none" ;
	double kmu(gridlat_c, gridlon_c) ;
		kmu:long_name = "number of vertical u-cells" ;
		kmu:units = "none" ;
	double sin_rot(gridlat_c, gridlon_c) ;
		sin_rot:long_name = "sin of rotation angle at corner cell centers" ;
		sin_rot:units = "radians" ;
	double wet(gridlat_t, gridlon_t) ;
		wet:long_name = "land/sea flag (0=land) on t-cell" ;
		wet:units = "none" ;
	float zt(zt) ;
		zt:long_name = "zt" ;
		zt:units = "meters" ;
		zt:cartesian_axis = "z" ;
		zt:positive = "down" ;
	double ztp(gridlat_t, gridlon_t) ;
		ztp:long_name = "depth of partial bottom cell" ;
		ztp:units = "meters" ;
	float zw(zw) ;
		zw:long_name = "zw" ;
		zw:units = "meters" ;
		zw:cartesian_axis = "z" ;
		zw:positive = "down" ;
	double AREA_ATMxOCN(i_atmXocn) ;
	double DI_ATMxOCN(i_atmXocn) ;
	double DJ_ATMxOCN(i_atmXocn) ;
	int I_ATM_ATMxOCN(i_atmXocn) ;
	int J_ATM_ATMxOCN(i_atmXocn) ;
	int I_OCN_ATMxOCN(i_atmXocn) ;
	int J_OCN_ATMxOCN(i_atmXocn) ;
	double AREA_ATMxLND(i_atmXlnd) ;
	double DI_ATMxLND(i_atmXlnd) ;
	double DJ_ATMxLND(i_atmXlnd) ;
	int I_ATM_ATMxLND(i_atmXlnd) ;
	int J_ATM_ATMxLND(i_atmXlnd) ;
	int I_LND_ATMxLND(i_atmXlnd) ;
	int J_LND_ATMxLND(i_atmXlnd) ;
	double AREA_LNDxOCN(i_lndXocn) ;
	double DI_LNDxOCN(i_lndXocn) ;
	double DJ_LNDxOCN(i_lndXocn) ;
	int I_LND_LNDxOCN(i_lndXocn) ;
	int J_LND_LNDxOCN(i_lndXocn) ;
	int I_OCN_LNDxOCN(i_lndXocn) ;
	int J_OCN_LNDxOCN(i_lndXocn) ;
	double xba(xba) ;
	double yba(yba) ;
	double xta(xta) ;
	double yta(yta) ;
	double AREA_ATM(yta, xta) ;
	double xbl(xbl) ;
	double ybl(ybl) ;
	double xtl(xtl) ;
	double ytl(ytl) ;
	double AREA_LND(ytl, xtl) ;
	double AREA_LND_CELL(ytl, xtl) ;
	double xto(xto) ;
	double yto(yto) ;
	double AREA_OCN(yto, xto) ;

// global attributes:
		:filename = "grid_desc_fix_join.nc" ;
		:MPP_IO_VERSION = "$Id: mpp_io.F90,v 6.7 2003/04/09 21:17:55 fms Exp $" ;
		:title = "grid_desc_fix_join.nc" ;
		:version = "CVS $Id: grids.f90,v 1.2 2002/07/16 22:57:49 fms Exp $" ;
		:input_file = "/home/kd2/ONEDEGOCN_GRID/FIRST_PASS/grid_spec_onedegocn_mod_FIRST_GUESS_ver5.nc" ;
		:input_field = "ht" ;
		:join_lat = 65.f ;
		:y_boundary_type = "fold_north_edge" ;
		:x_boundary_type = "cyclic" ;
		:fill_isolated_cells = "y" ;
		:adjust_topo = "y" ;
		:kmt_min = 4.f ;
		:max_dist = 0.05f ;
		:num_neighbors = 4.f ;
		:history = "Fri Jan 24 17:02:02 2014: ncks -v gridlon_c,gridlon_t,gridlon_vert_c,gridlon_vert_t,gridlat_c,gridlat_t,gridlat_vert_c,gridlat_vert_t,zt,zw,geolon_t,geolat_t,geolon_c,geolat_c,geolon_e,geolat_e,geolon_n,geolat_n,geolon_vert_t,geolat_vert_t,geo_lonc,geo_latc,dte,dtw,dtn,dts,dxt,dyt,dyte,dxtn,dxte,dytn,due,duw,dun,dus,dxu,dyu,dyue,dxun,dxue,dyun,sin_rot,cos_rot,ht,hu,wet,kmt,dhtp,ztp,dhwt,kmu grid_spec.nc ocean_grid.nc" ;
		:NCO = "4.0.8" ;
}
