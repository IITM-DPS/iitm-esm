	.section .text
.LNDBG_TX:
# mark_description "Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 16.0.3.210 Build 20160415";
# mark_description "-I/home/CMIP/prajeesh/IITM-ESMv2/src/mom4p1/src/shared/mosaic -I/opt/cray/pe/libsci/17.09.1/INTEL/16.0/x86_6";
# mark_description "4/include -I/opt/cray/pe/netcdf/4.4.1.1.3/INTEL/16.0/include -I/opt/cray/pe/mpt/7.6.3/gni/mpich-intel/16.0/i";
# mark_description "nclude -I/opt/cray/pe/hdf5/1.10.0.3/INTEL/16.0/include -I/opt/cray/rca/2.2.11-6.0.4.0_13.2__g84de67a.ari/inc";
# mark_description "lude -I/opt/cray/alps/6.4.3-6.0.4.1_2.1__g92a2fc0.ari/include -I/opt/cray/xpmem/2.2.2-6.0.4.1_18.1__g43b0535";
# mark_description ".ari/include -I/opt/cray/gni-headers/5.0.11-6.0.4.0_7.2__g7136988.ari/include -I/opt/cray/pe/pmi/5.0.12/incl";
# mark_description "ude -I/opt/cray/ugni/6.0.14-6.0.4.0_14.1__ge7db4a2.ari/include -I/opt/cray/udreg/2.3.2-6.0.4.0_12.2__g2f9c3e";
# mark_description "e.ari/include -I/opt/cray/wlm_detect/1.2.1-6.0.4.0_22.1__gd26a3dc.ari/include -I/opt/cray/krca/2.2.2-6.0.4.1";
# mark_description "_18.3__g4614cf3.ari/include -I/opt/cray-hss-devel/8.0.0/include -xCORE-AVX2 -D__CRAYXC -D__CRAY_BROADWELL -D";
# mark_description "__CRAYXT_COMPUTE_LINUX_TARGET -Duse_netCDF4 -Duse_libMPI -DENABLE_ODA -DUSE_OCEAN_BGC -g -O3 -save-temps -c";
	.file "create_xgrid.c"
	.text
..TXTST0:
.L_2__routine_start_get_maxxgrid__0:
# -- Begin  get_maxxgrid_
	.text
# mark_begin;
       .align    16,0x90
	.globl get_maxxgrid_
# --- get_maxxgrid_(void)
get_maxxgrid_:
..B1.1:                         # Preds ..B1.0
	.cfi_startproc
..___tag_value_get_maxxgrid_.2:
..L3:
                                                          #53.1
..LN0:
	.file   1 "/home/CMIP/prajeesh/IITM-ESMv2/src/mom4p1/src/shared/mosaic/create_xgrid.c"
	.loc    1  53  prologue_end  is_stmt 1
..LN1:
	.loc    1  54  is_stmt 1
        movl      $10000000, %eax                               #54.10
..LN2:
	.loc    1  54  epilogue_begin  is_stmt 1
        ret                                                     #54.10
..LN3:
        .align    16,0x90
	.cfi_endproc
..LN4:
                                # LOE
..LN5:
# mark_end;
	.type	get_maxxgrid_,@function
	.size	get_maxxgrid_,.-get_maxxgrid_
..LNget_maxxgrid_.6:
.LNget_maxxgrid_:
	.data
# -- End  get_maxxgrid_
	.text
.L_2__routine_start_get_maxxgrid_1:
# -- Begin  get_maxxgrid
	.text
# mark_begin;
       .align    16,0x90
	.globl get_maxxgrid
# --- get_maxxgrid(void)
get_maxxgrid:
..B2.1:                         # Preds ..B2.0
	.cfi_startproc
..___tag_value_get_maxxgrid.9:
..L10:
                                                         #48.1
..LN7:
	.loc    1  48  prologue_end  is_stmt 1
..LN8:
	.loc    1  49  is_stmt 1
        movl      $10000000, %eax                               #49.10
..LN9:
	.loc    1  49  epilogue_begin  is_stmt 1
        ret                                                     #49.10
..LN10:
        .align    16,0x90
	.cfi_endproc
..LN11:
                                # LOE
..LN12:
# mark_end;
	.type	get_maxxgrid,@function
	.size	get_maxxgrid,.-get_maxxgrid
..LNget_maxxgrid.13:
.LNget_maxxgrid:
	.data
# -- End  get_maxxgrid
	.text
.L_2__routine_start_get_grid_area__2:
# -- Begin  get_grid_area_
	.text
# mark_begin;
       .align    16,0x90
	.globl get_grid_area_
# --- get_grid_area_(const int *, const int *, const double *, const double *, double *)
get_grid_area_:
# parameter 1(nlon): %rdi
# parameter 2(nlat): %rsi
# parameter 3(lon): %rdx
# parameter 4(lat): %rcx
# parameter 5(area): %r8
..B3.1:                         # Preds ..B3.0
	.cfi_startproc
..___tag_value_get_grid_area_.16:
..L17:
                                                         #62.1
..LN14:
	.loc    1  62  is_stmt 1
        subq      $440, %rsp                                    #62.1
	.cfi_def_cfa_offset 448
..LN15:
        movq      %rsi, %rax                                    #62.1
..LN16:
	.loc    1  71  prologue_end  is_stmt 1
        movl      (%rdi), %esi                                  #71.9
..LN17:
	.loc    1  75  is_stmt 1
        xorl      %r10d, %r10d                                  #75.7
..LN18:
        movslq    %esi, %rdi                                    #75.18
..LN19:
	.loc    1  72  is_stmt 1
        movl      (%rax), %r9d                                  #72.9
..LN20:
	.loc    1  75  is_stmt 1
        xorl      %eax, %eax                                    #75.9
..LN21:
        testl     %r9d, %r9d                                    #75.14
..LN22:
        jle       ..B3.10       # Prob 10%                      #75.14
..LN23:
                                # LOE rax rdx rcx rbx rbp rdi r8 r12 r13 r14 r15 esi r9d r10d
..B3.2:                         # Preds ..B3.1
..LN24:
        movq      %r12, (%rsp)                                  #75.9
..LN25:
        xorl      %r11d, %r11d                                  #75.9
..LN26:
        movq      %r13, 8(%rsp)                                 #75.9
..LN27:
        movq      %r14, 16(%rsp)                                #75.9
..LN28:
        movq      %r15, 24(%rsp)                                #75.9
..LN29:
        movq      %rbx, 32(%rsp)                                #75.9
..LN30:
        movq      %rbp, 40(%rsp)                                #75.9
	.cfi_offset 3, -416
	.cfi_offset 6, -408
	.cfi_offset 12, -448
	.cfi_offset 13, -440
	.cfi_offset 14, -432
	.cfi_offset 15, -424
..LN31:
                                # LOE rax rdx rcx rdi r8 esi r9d r10d r11d
..B3.3:                         # Preds ..B3.8 ..B3.11 ..B3.2
..L26:          # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN32:
        xorl      %r14d, %r14d                                  #75.27
..LN33:
        testl     %esi, %esi                                    #75.36
..LN34:
        jle       ..B3.11       # Prob 10%                      #75.36
..LN35:
                                # LOE rax rdx rcx rdi r8 r14 esi r9d r10d r11d
..B3.4:                         # Preds ..B3.3
..LN36:
	.loc    1  85  is_stmt 1
        movq      %rax, 416(%rsp)                               #85.5
..LN37:
	.loc    1  78  is_stmt 1
        lea       (%rsi,%r11), %ebp                             #78.25
..LN38:
        movslq    %ebp, %rbp                                    #78.15
..LN39:
	.loc    1  85  is_stmt 1
        lea       (%r8,%rax,8), %rbx                            #85.5
..LN40:
	.loc    1  76  is_stmt 1
        movslq    %r11d, %r11                                   #76.15
..LN41:
	.loc    1  85  is_stmt 1
        movl      %r11d, 424(%rsp)                              #85.5
..LN42:
        movl      %r10d, 408(%rsp)                              #85.5
..LN43:
        movl      %r9d, 400(%rsp)                               #85.5
..LN44:
	.loc    1  78  is_stmt 1
        lea       (%rdx,%rbp,8), %r13                           #78.15
..LN45:
	.loc    1  85  is_stmt 1
        movq      %rdi, 432(%rsp)                               #85.5
..LN46:
	.loc    1  82  is_stmt 1
        lea       (%rcx,%rbp,8), %r15                           #82.15
..LN47:
	.loc    1  85  is_stmt 1
        movl      %esi, 392(%rsp)                               #85.5
..LN48:
	.loc    1  80  is_stmt 1
        lea       (%rcx,%r11,8), %rbp                           #80.15
..LN49:
	.loc    1  85  is_stmt 1
        movq      %rdx, 384(%rsp)                               #85.5
..LN50:
	.loc    1  76  is_stmt 1
        lea       (%rdx,%r11,8), %r12                           #76.15
..LN51:
	.loc    1  85  is_stmt 1
        movq      %rcx, 376(%rsp)                               #85.5
..LN52:
        movq      %r8, 368(%rsp)                                #85.5
..LN53:
                                # LOE rbx rbp r12 r13 r14 r15
..B3.5:                         # Preds ..B3.7 ..B3.4
..L27:          # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN54:
	.loc    1  84  is_stmt 1
        lea       48(%rsp), %rdi                                #84.12
..LN55:
	.loc    1  76  is_stmt 1
        movq      (%r12,%r14,8), %rax                           #76.15
..LN56:
	.loc    1  84  is_stmt 1
        lea       208(%rsp), %rsi                               #84.12
..LN57:
	.loc    1  83  is_stmt 1
        movq      8(%r15,%r14,8), %rdx                          #83.15
..LN58:
	.loc    1  76  is_stmt 1
        movq      %rax, (%rdi)                                  #76.5
..LN59:
	.loc    1  77  is_stmt 1
        movq      8(%r12,%r14,8), %rcx                          #77.15
..LN60:
	.loc    1  78  is_stmt 1
        movq      16(%r13,%r14,8), %r8                          #78.15
..LN61:
	.loc    1  79  is_stmt 1
        movq      8(%r13,%r14,8), %r9                           #79.15
..LN62:
	.loc    1  80  is_stmt 1
        movq      (%rbp,%r14,8), %r10                           #80.15
..LN63:
	.loc    1  81  is_stmt 1
        movq      8(%rbp,%r14,8), %r11                          #81.15
..LN64:
	.loc    1  82  is_stmt 1
        movq      16(%r15,%r14,8), %rax                         #82.15
..LN65:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN66:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN67:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..LN68:
	.loc    1  77  is_stmt 1
        movq      %rcx, 8(%rdi)                                 #77.5
..LN69:
	.loc    1  78  is_stmt 1
        movq      %r8, 16(%rdi)                                 #78.5
..LN70:
	.loc    1  79  is_stmt 1
        movq      %r9, 24(%rdi)                                 #79.5
..LN71:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN72:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN73:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..___tag_value_get_grid_area_.28:
..LN74:
	.loc    1  84  is_stmt 1
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_get_grid_area_.29:
..LN75:
                                # LOE rbx rbp r12 r13 r14 r15 eax
..B3.6:                         # Preds ..B3.5
..LN76:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN77:
        lea       48(%rsp), %rdi                                #85.20
..LN78:
        lea       208(%rsp), %rsi                               #85.20
..___tag_value_get_grid_area_.30:
..LN79:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_get_grid_area_.31:
..LN80:
                                # LOE rbx rbp r12 r13 r14 r15 xmm0
..B3.7:                         # Preds ..B3.6
..LN81:
        vmovsd    %xmm0, (%rbx,%r14,8)                          #85.5
..LN82:
	.loc    1  75  is_stmt 1
        incq      %r14                                          #75.40
..LN83:
        cmpq      432(%rsp), %r14                               #75.36
..LN84:
        jl        ..B3.5        # Prob 82%                      #75.36
..LN85:
                                # LOE rbx rbp r12 r13 r14 r15
..B3.8:                         # Preds ..B3.7
..LN86:
        movl      408(%rsp), %r10d                              #
..LN87:
        incl      %r10d                                         #75.18
..LN88:
        movq      416(%rsp), %rax                               #
..LN89:
        movq      432(%rsp), %rdi                               #
..LN90:
        addq      %rdi, %rax                                    #75.18
..LN91:
        movl      400(%rsp), %r9d                               #
..LN92:
        movl      424(%rsp), %r11d                              #
..LN93:
        movl      392(%rsp), %esi                               #
..LN94:
        lea       1(%r11,%rsi), %r11d                           #75.18
..LN95:
        movq      384(%rsp), %rdx                               #
..LN96:
        movq      376(%rsp), %rcx                               #
..LN97:
        movq      368(%rsp), %r8                                #
..LN98:
        cmpl      %r9d, %r10d                                   #75.14
..LN99:
        jl        ..B3.3        # Prob 82%                      #75.14
..LN100:
                                # LOE rax rdx rcx rdi r8 esi r9d r10d r11d
..B3.9:                         # Preds ..B3.11 ..B3.8          # Infreq
..LN101:
        movq      (%rsp), %r12                                  #
	.cfi_restore 12
..LN102:
        movq      8(%rsp), %r13                                 #
	.cfi_restore 13
..LN103:
        movq      16(%rsp), %r14                                #
	.cfi_restore 14
..LN104:
        movq      24(%rsp), %r15                                #
	.cfi_restore 15
..LN105:
        movq      32(%rsp), %rbx                                #
	.cfi_restore 3
..LN106:
        movq      40(%rsp), %rbp                                #
	.cfi_restore 6
..LN107:
                                # LOE rbx rbp r12 r13 r14 r15
..B3.10:                        # Preds ..B3.9 ..B3.1           # Infreq
..LN108:
	.loc    1  64  epilogue_begin  is_stmt 1
        addq      $440, %rsp                                    #64.1
	.cfi_def_cfa_offset 8
..LN109:
        ret                                                     #64.1
	.cfi_def_cfa_offset 448
	.cfi_offset 3, -416
	.cfi_offset 6, -408
	.cfi_offset 12, -448
	.cfi_offset 13, -440
	.cfi_offset 14, -432
	.cfi_offset 15, -424
..LN110:
                                # LOE
..B3.11:                        # Preds ..B3.3                  # Infreq
..LN111:
	.loc    1  75  is_stmt 1
        incl      %r10d                                         #75.18
..LN112:
        addq      %rdi, %rax                                    #75.18
..LN113:
        lea       1(%r11,%rsi), %r11d                           #75.18
..LN114:
        cmpl      %r9d, %r10d                                   #75.14
..LN115:
        jl        ..B3.3        # Prob 82%                      #75.14
..LN116:
        jmp       ..B3.9        # Prob 100%                     #75.14
..LN117:
        .align    16,0x90
	.cfi_endproc
..LN118:
                                # LOE rax rdx rcx rdi r8 esi r9d r10d r11d
..LN119:
# mark_end;
	.type	get_grid_area_,@function
	.size	get_grid_area_,.-get_grid_area_
..LNget_grid_area_.120:
.LNget_grid_area_:
	.data
# -- End  get_grid_area_
	.text
.L_2__routine_start_get_grid_area_3:
# -- Begin  get_grid_area
	.text
# mark_begin;
       .align    16,0x90
	.globl get_grid_area
# --- get_grid_area(const int *, const int *, const double *, const double *, double *)
get_grid_area:
# parameter 1(nlon): %rdi
# parameter 2(nlat): %rsi
# parameter 3(lon): %rdx
# parameter 4(lat): %rcx
# parameter 5(area): %r8
..B4.1:                         # Preds ..B4.0
	.cfi_startproc
..___tag_value_get_grid_area.51:
..L52:
                                                         #67.1
..LN121:
	.loc    1  67  is_stmt 1
        subq      $440, %rsp                                    #67.1
	.cfi_def_cfa_offset 448
..LN122:
        movq      %rsi, %rax                                    #67.1
..LN123:
	.loc    1  71  prologue_end  is_stmt 1
        movl      (%rdi), %esi                                  #71.9
..LN124:
	.loc    1  75  is_stmt 1
        xorl      %r10d, %r10d                                  #75.7
..LN125:
        movslq    %esi, %rdi                                    #75.18
..LN126:
	.loc    1  72  is_stmt 1
        movl      (%rax), %r9d                                  #72.9
..LN127:
	.loc    1  75  is_stmt 1
        xorl      %eax, %eax                                    #75.9
..LN128:
        testl     %r9d, %r9d                                    #75.14
..LN129:
        jle       ..B4.10       # Prob 10%                      #75.14
..LN130:
                                # LOE rax rdx rcx rbx rbp rdi r8 r12 r13 r14 r15 esi r9d r10d
..B4.2:                         # Preds ..B4.1
..LN131:
        movq      %r12, (%rsp)                                  #75.9
..LN132:
        xorl      %r11d, %r11d                                  #75.9
..LN133:
        movq      %r13, 8(%rsp)                                 #75.9
..LN134:
        movq      %r14, 16(%rsp)                                #75.9
..LN135:
        movq      %r15, 24(%rsp)                                #75.9
..LN136:
        movq      %rbx, 32(%rsp)                                #75.9
..LN137:
        movq      %rbp, 40(%rsp)                                #75.9
	.cfi_offset 3, -416
	.cfi_offset 6, -408
	.cfi_offset 12, -448
	.cfi_offset 13, -440
	.cfi_offset 14, -432
	.cfi_offset 15, -424
..LN138:
                                # LOE rax rdx rcx rdi r8 esi r9d r10d r11d
..B4.3:                         # Preds ..B4.8 ..B4.11 ..B4.2
..L61:          # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN139:
        xorl      %r14d, %r14d                                  #75.27
..LN140:
        testl     %esi, %esi                                    #75.36
..LN141:
        jle       ..B4.11       # Prob 10%                      #75.36
..LN142:
                                # LOE rax rdx rcx rdi r8 r14 esi r9d r10d r11d
..B4.4:                         # Preds ..B4.3
..LN143:
	.loc    1  85  is_stmt 1
        movq      %rax, 416(%rsp)                               #85.5
..LN144:
	.loc    1  78  is_stmt 1
        lea       (%rsi,%r11), %ebp                             #78.25
..LN145:
        movslq    %ebp, %rbp                                    #78.15
..LN146:
	.loc    1  85  is_stmt 1
        lea       (%r8,%rax,8), %rbx                            #85.5
..LN147:
	.loc    1  76  is_stmt 1
        movslq    %r11d, %r11                                   #76.15
..LN148:
	.loc    1  85  is_stmt 1
        movl      %r11d, 424(%rsp)                              #85.5
..LN149:
        movl      %r10d, 408(%rsp)                              #85.5
..LN150:
        movl      %r9d, 400(%rsp)                               #85.5
..LN151:
	.loc    1  78  is_stmt 1
        lea       (%rdx,%rbp,8), %r13                           #78.15
..LN152:
	.loc    1  85  is_stmt 1
        movq      %rdi, 432(%rsp)                               #85.5
..LN153:
	.loc    1  82  is_stmt 1
        lea       (%rcx,%rbp,8), %r15                           #82.15
..LN154:
	.loc    1  85  is_stmt 1
        movl      %esi, 392(%rsp)                               #85.5
..LN155:
	.loc    1  80  is_stmt 1
        lea       (%rcx,%r11,8), %rbp                           #80.15
..LN156:
	.loc    1  85  is_stmt 1
        movq      %rdx, 384(%rsp)                               #85.5
..LN157:
	.loc    1  76  is_stmt 1
        lea       (%rdx,%r11,8), %r12                           #76.15
..LN158:
	.loc    1  85  is_stmt 1
        movq      %rcx, 376(%rsp)                               #85.5
..LN159:
        movq      %r8, 368(%rsp)                                #85.5
..LN160:
                                # LOE rbx rbp r12 r13 r14 r15
..B4.5:                         # Preds ..B4.7 ..B4.4
..L62:          # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN161:
	.loc    1  84  is_stmt 1
        lea       48(%rsp), %rdi                                #84.12
..LN162:
	.loc    1  76  is_stmt 1
        movq      (%r12,%r14,8), %rax                           #76.15
..LN163:
	.loc    1  84  is_stmt 1
        lea       208(%rsp), %rsi                               #84.12
..LN164:
	.loc    1  83  is_stmt 1
        movq      8(%r15,%r14,8), %rdx                          #83.15
..LN165:
	.loc    1  76  is_stmt 1
        movq      %rax, (%rdi)                                  #76.5
..LN166:
	.loc    1  77  is_stmt 1
        movq      8(%r12,%r14,8), %rcx                          #77.15
..LN167:
	.loc    1  78  is_stmt 1
        movq      16(%r13,%r14,8), %r8                          #78.15
..LN168:
	.loc    1  79  is_stmt 1
        movq      8(%r13,%r14,8), %r9                           #79.15
..LN169:
	.loc    1  80  is_stmt 1
        movq      (%rbp,%r14,8), %r10                           #80.15
..LN170:
	.loc    1  81  is_stmt 1
        movq      8(%rbp,%r14,8), %r11                          #81.15
..LN171:
	.loc    1  82  is_stmt 1
        movq      16(%r15,%r14,8), %rax                         #82.15
..LN172:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN173:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN174:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..LN175:
	.loc    1  77  is_stmt 1
        movq      %rcx, 8(%rdi)                                 #77.5
..LN176:
	.loc    1  78  is_stmt 1
        movq      %r8, 16(%rdi)                                 #78.5
..LN177:
	.loc    1  79  is_stmt 1
        movq      %r9, 24(%rdi)                                 #79.5
..LN178:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN179:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN180:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..___tag_value_get_grid_area.63:
..LN181:
	.loc    1  84  is_stmt 1
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_get_grid_area.64:
..LN182:
                                # LOE rbx rbp r12 r13 r14 r15 eax
..B4.6:                         # Preds ..B4.5
..LN183:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN184:
        lea       48(%rsp), %rdi                                #85.20
..LN185:
        lea       208(%rsp), %rsi                               #85.20
..___tag_value_get_grid_area.65:
..LN186:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_get_grid_area.66:
..LN187:
                                # LOE rbx rbp r12 r13 r14 r15 xmm0
..B4.7:                         # Preds ..B4.6
..LN188:
        vmovsd    %xmm0, (%rbx,%r14,8)                          #85.5
..LN189:
	.loc    1  75  is_stmt 1
        incq      %r14                                          #75.40
..LN190:
        cmpq      432(%rsp), %r14                               #75.36
..LN191:
        jl        ..B4.5        # Prob 82%                      #75.36
..LN192:
                                # LOE rbx rbp r12 r13 r14 r15
..B4.8:                         # Preds ..B4.7
..LN193:
        movl      408(%rsp), %r10d                              #
..LN194:
        incl      %r10d                                         #75.18
..LN195:
        movq      416(%rsp), %rax                               #
..LN196:
        movq      432(%rsp), %rdi                               #
..LN197:
        addq      %rdi, %rax                                    #75.18
..LN198:
        movl      400(%rsp), %r9d                               #
..LN199:
        movl      424(%rsp), %r11d                              #
..LN200:
        movl      392(%rsp), %esi                               #
..LN201:
        lea       1(%r11,%rsi), %r11d                           #75.18
..LN202:
        movq      384(%rsp), %rdx                               #
..LN203:
        movq      376(%rsp), %rcx                               #
..LN204:
        movq      368(%rsp), %r8                                #
..LN205:
        cmpl      %r9d, %r10d                                   #75.14
..LN206:
        jl        ..B4.3        # Prob 82%                      #75.14
..LN207:
                                # LOE rax rdx rcx rdi r8 esi r9d r10d r11d
..B4.9:                         # Preds ..B4.11 ..B4.8          # Infreq
..LN208:
        movq      (%rsp), %r12                                  #
	.cfi_restore 12
..LN209:
        movq      8(%rsp), %r13                                 #
	.cfi_restore 13
..LN210:
        movq      16(%rsp), %r14                                #
	.cfi_restore 14
..LN211:
        movq      24(%rsp), %r15                                #
	.cfi_restore 15
..LN212:
        movq      32(%rsp), %rbx                                #
	.cfi_restore 3
..LN213:
        movq      40(%rsp), %rbp                                #
	.cfi_restore 6
..LN214:
                                # LOE rbx rbp r12 r13 r14 r15
..B4.10:                        # Preds ..B4.9 ..B4.1           # Infreq
..LN215:
	.loc    1  88  epilogue_begin  is_stmt 1
        addq      $440, %rsp                                    #88.1
	.cfi_def_cfa_offset 8
..LN216:
        ret                                                     #88.1
	.cfi_def_cfa_offset 448
	.cfi_offset 3, -416
	.cfi_offset 6, -408
	.cfi_offset 12, -448
	.cfi_offset 13, -440
	.cfi_offset 14, -432
	.cfi_offset 15, -424
..LN217:
                                # LOE
..B4.11:                        # Preds ..B4.3                  # Infreq
..LN218:
	.loc    1  75  is_stmt 1
        incl      %r10d                                         #75.18
..LN219:
        addq      %rdi, %rax                                    #75.18
..LN220:
        lea       1(%r11,%rsi), %r11d                           #75.18
..LN221:
        cmpl      %r9d, %r10d                                   #75.14
..LN222:
        jl        ..B4.3        # Prob 82%                      #75.14
..LN223:
        jmp       ..B4.9        # Prob 100%                     #75.14
..LN224:
        .align    16,0x90
	.cfi_endproc
..LN225:
                                # LOE rax rdx rcx rdi r8 esi r9d r10d r11d
..LN226:
# mark_end;
	.type	get_grid_area,@function
	.size	get_grid_area,.-get_grid_area
..LNget_grid_area.227:
.LNget_grid_area:
	.data
# -- End  get_grid_area
	.text
.L_2__routine_start_get_grid_area_no_adjust_4:
# -- Begin  get_grid_area_no_adjust
	.text
# mark_begin;
       .align    16,0x90
	.globl get_grid_area_no_adjust
# --- get_grid_area_no_adjust(const int *, const int *, const double *, const double *, double *)
get_grid_area_no_adjust:
# parameter 1(nlon): %rdi
# parameter 2(nlat): %rsi
# parameter 3(lon): %rdx
# parameter 4(lat): %rcx
# parameter 5(area): %r8
..B5.1:                         # Preds ..B5.0
	.cfi_startproc
..___tag_value_get_grid_area_no_adjust.86:
..L87:
                                                         #92.1
..LN228:
	.loc    1  92  is_stmt 1
        subq      $440, %rsp                                    #92.1
	.cfi_def_cfa_offset 448
..LN229:
        movq      %rsi, %rax                                    #92.1
..LN230:
	.loc    1  96  prologue_end  is_stmt 1
        movl      (%rdi), %esi                                  #96.9
..LN231:
	.loc    1  100  is_stmt 1
        xorl      %r10d, %r10d                                  #100.7
..LN232:
        movslq    %esi, %rdi                                    #100.18
..LN233:
	.loc    1  97  is_stmt 1
        movl      (%rax), %r9d                                  #97.9
..LN234:
	.loc    1  100  is_stmt 1
        xorl      %eax, %eax                                    #100.9
..LN235:
        testl     %r9d, %r9d                                    #100.14
..LN236:
        jle       ..B5.9        # Prob 10%                      #100.14
..LN237:
                                # LOE rax rdx rcx rbx rbp rdi r8 r12 r13 r14 r15 esi r9d r10d
..B5.2:                         # Preds ..B5.1
..LN238:
        movq      %r12, (%rsp)                                  #100.9
..LN239:
        xorl      %r11d, %r11d                                  #100.9
..LN240:
        movq      %r13, 8(%rsp)                                 #100.9
..LN241:
        movq      %r14, 16(%rsp)                                #100.9
..LN242:
        movq      %r15, 24(%rsp)                                #100.9
..LN243:
        movq      %rbx, 32(%rsp)                                #100.9
..LN244:
        movq      %rbp, 40(%rsp)                                #100.9
	.cfi_offset 3, -416
	.cfi_offset 6, -408
	.cfi_offset 12, -448
	.cfi_offset 13, -440
	.cfi_offset 14, -432
	.cfi_offset 15, -424
..LN245:
                                # LOE rax rdx rcx rdi r8 esi r9d r10d r11d
..B5.3:                         # Preds ..B5.7 ..B5.10 ..B5.2
..L96:          # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN246:
        xorl      %r14d, %r14d                                  #100.27
..LN247:
        testl     %esi, %esi                                    #100.36
..LN248:
        jle       ..B5.10       # Prob 10%                      #100.36
..LN249:
                                # LOE rax rdx rcx rdi r8 r14 esi r9d r10d r11d
..B5.4:                         # Preds ..B5.3
..LN250:
	.loc    1  110  is_stmt 1
        movq      %rax, 416(%rsp)                               #110.5
..LN251:
	.loc    1  103  is_stmt 1
        lea       (%rsi,%r11), %ebp                             #103.25
..LN252:
        movslq    %ebp, %rbp                                    #103.15
..LN253:
	.loc    1  110  is_stmt 1
        lea       (%r8,%rax,8), %rbx                            #110.5
..LN254:
	.loc    1  101  is_stmt 1
        movslq    %r11d, %r11                                   #101.15
..LN255:
	.loc    1  110  is_stmt 1
        movl      %r11d, 424(%rsp)                              #110.5
..LN256:
        movl      %r10d, 408(%rsp)                              #110.5
..LN257:
        movl      %r9d, 400(%rsp)                               #110.5
..LN258:
	.loc    1  103  is_stmt 1
        lea       (%rdx,%rbp,8), %r13                           #103.15
..LN259:
	.loc    1  110  is_stmt 1
        movq      %rdi, 432(%rsp)                               #110.5
..LN260:
	.loc    1  107  is_stmt 1
        lea       (%rcx,%rbp,8), %r15                           #107.15
..LN261:
	.loc    1  110  is_stmt 1
        movl      %esi, 392(%rsp)                               #110.5
..LN262:
	.loc    1  105  is_stmt 1
        lea       (%rcx,%r11,8), %rbp                           #105.15
..LN263:
	.loc    1  110  is_stmt 1
        movq      %rdx, 384(%rsp)                               #110.5
..LN264:
	.loc    1  101  is_stmt 1
        lea       (%rdx,%r11,8), %r12                           #101.15
..LN265:
	.loc    1  110  is_stmt 1
        movq      %rcx, 376(%rsp)                               #110.5
..LN266:
        movq      %r8, 368(%rsp)                                #110.5
..LN267:
                                # LOE rbx rbp r12 r13 r14 r15
..B5.5:                         # Preds ..B5.6 ..B5.4
..L97:          # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN268:
        lea       48(%rsp), %rdi                                #110.20
..LN269:
	.loc    1  101  is_stmt 1
        movq      (%r12,%r14,8), %rax                           #101.15
..LN270:
	.loc    1  110  is_stmt 1
        lea       208(%rsp), %rsi                               #110.20
..LN271:
	.loc    1  108  is_stmt 1
        movq      8(%r15,%r14,8), %rdx                          #108.15
..LN272:
	.loc    1  101  is_stmt 1
        movq      %rax, (%rdi)                                  #101.5
..LN273:
	.loc    1  102  is_stmt 1
        movq      8(%r12,%r14,8), %rcx                          #102.15
..LN274:
	.loc    1  103  is_stmt 1
        movq      16(%r13,%r14,8), %r8                          #103.15
..LN275:
	.loc    1  104  is_stmt 1
        movq      8(%r13,%r14,8), %r9                           #104.15
..LN276:
	.loc    1  105  is_stmt 1
        movq      (%rbp,%r14,8), %r10                           #105.15
..LN277:
	.loc    1  106  is_stmt 1
        movq      8(%rbp,%r14,8), %r11                          #106.15
..LN278:
	.loc    1  107  is_stmt 1
        movq      16(%r15,%r14,8), %rax                         #107.15
..LN279:
	.loc    1  108  is_stmt 1
        movq      %rdx, 24(%rsi)                                #108.5
..LN280:
	.loc    1  110  is_stmt 1
        movl      $4, %edx                                      #110.20
..LN281:
	.loc    1  102  is_stmt 1
        movq      %rcx, 8(%rdi)                                 #102.5
..LN282:
	.loc    1  103  is_stmt 1
        movq      %r8, 16(%rdi)                                 #103.5
..LN283:
	.loc    1  104  is_stmt 1
        movq      %r9, 24(%rdi)                                 #104.5
..LN284:
	.loc    1  105  is_stmt 1
        movq      %r10, (%rsi)                                  #105.5
..LN285:
	.loc    1  106  is_stmt 1
        movq      %r11, 8(%rsi)                                 #106.5
..LN286:
	.loc    1  107  is_stmt 1
        movq      %rax, 16(%rsi)                                #107.5
..___tag_value_get_grid_area_no_adjust.98:
..LN287:
	.loc    1  110  is_stmt 1
#       poly_area_no_adjust(const double *, const double *, int)
        call      poly_area_no_adjust                           #110.20
..___tag_value_get_grid_area_no_adjust.99:
..LN288:
                                # LOE rbx rbp r12 r13 r14 r15 xmm0
..B5.6:                         # Preds ..B5.5
..LN289:
        vmovsd    %xmm0, (%rbx,%r14,8)                          #110.5
..LN290:
	.loc    1  100  is_stmt 1
        incq      %r14                                          #100.40
..LN291:
        cmpq      432(%rsp), %r14                               #100.36
..LN292:
        jl        ..B5.5        # Prob 82%                      #100.36
..LN293:
                                # LOE rbx rbp r12 r13 r14 r15
..B5.7:                         # Preds ..B5.6
..LN294:
        movl      408(%rsp), %r10d                              #
..LN295:
        incl      %r10d                                         #100.18
..LN296:
        movq      416(%rsp), %rax                               #
..LN297:
        movq      432(%rsp), %rdi                               #
..LN298:
        addq      %rdi, %rax                                    #100.18
..LN299:
        movl      400(%rsp), %r9d                               #
..LN300:
        movl      424(%rsp), %r11d                              #
..LN301:
        movl      392(%rsp), %esi                               #
..LN302:
        lea       1(%r11,%rsi), %r11d                           #100.18
..LN303:
        movq      384(%rsp), %rdx                               #
..LN304:
        movq      376(%rsp), %rcx                               #
..LN305:
        movq      368(%rsp), %r8                                #
..LN306:
        cmpl      %r9d, %r10d                                   #100.14
..LN307:
        jl        ..B5.3        # Prob 82%                      #100.14
..LN308:
                                # LOE rax rdx rcx rdi r8 esi r9d r10d r11d
..B5.8:                         # Preds ..B5.10 ..B5.7          # Infreq
..LN309:
        movq      (%rsp), %r12                                  #
	.cfi_restore 12
..LN310:
        movq      8(%rsp), %r13                                 #
	.cfi_restore 13
..LN311:
        movq      16(%rsp), %r14                                #
	.cfi_restore 14
..LN312:
        movq      24(%rsp), %r15                                #
	.cfi_restore 15
..LN313:
        movq      32(%rsp), %rbx                                #
	.cfi_restore 3
..LN314:
        movq      40(%rsp), %rbp                                #
	.cfi_restore 6
..LN315:
                                # LOE rbx rbp r12 r13 r14 r15
..B5.9:                         # Preds ..B5.8 ..B5.1           # Infreq
..LN316:
	.loc    1  113  epilogue_begin  is_stmt 1
        addq      $440, %rsp                                    #113.1
	.cfi_def_cfa_offset 8
..LN317:
        ret                                                     #113.1
	.cfi_def_cfa_offset 448
	.cfi_offset 3, -416
	.cfi_offset 6, -408
	.cfi_offset 12, -448
	.cfi_offset 13, -440
	.cfi_offset 14, -432
	.cfi_offset 15, -424
..LN318:
                                # LOE
..B5.10:                        # Preds ..B5.3                  # Infreq
..LN319:
	.loc    1  100  is_stmt 1
        incl      %r10d                                         #100.18
..LN320:
        addq      %rdi, %rax                                    #100.18
..LN321:
        lea       1(%r11,%rsi), %r11d                           #100.18
..LN322:
        cmpl      %r9d, %r10d                                   #100.14
..LN323:
        jl        ..B5.3        # Prob 82%                      #100.14
..LN324:
        jmp       ..B5.8        # Prob 100%                     #100.14
..LN325:
        .align    16,0x90
	.cfi_endproc
..LN326:
                                # LOE rax rdx rcx rdi r8 esi r9d r10d r11d
..LN327:
# mark_end;
	.type	get_grid_area_no_adjust,@function
	.size	get_grid_area_no_adjust,.-get_grid_area_no_adjust
..LNget_grid_area_no_adjust.328:
.LNget_grid_area_no_adjust:
	.data
# -- End  get_grid_area_no_adjust
	.text
.L_2__routine_start_create_xgrid_1dx2d_order1__5:
# -- Begin  create_xgrid_1dx2d_order1_
	.text
# mark_begin;
       .align    16,0x90
	.globl create_xgrid_1dx2d_order1_
# --- create_xgrid_1dx2d_order1_(const int *, const int *, const int *, const int *, const double *, const double *, const double *, const double *, const double *, int *, int *, int *, int *, double *)
create_xgrid_1dx2d_order1_:
# parameter 1(nlon_in): %rdi
# parameter 2(nlat_in): %rsi
# parameter 3(nlon_out): %rdx
# parameter 4(nlat_out): %rcx
# parameter 5(lon_in): %r8
# parameter 6(lat_in): %r9
# parameter 7(lon_out): 16 + %rbp
# parameter 8(lat_out): 24 + %rbp
# parameter 9(mask_in): 32 + %rbp
# parameter 10(i_in): 40 + %rbp
# parameter 11(j_in): 48 + %rbp
# parameter 12(i_out): 56 + %rbp
# parameter 13(j_out): 64 + %rbp
# parameter 14(xgrid_area): 72 + %rbp
..B6.1:                         # Preds ..B6.0
	.cfi_startproc
..___tag_value_create_xgrid_1dx2d_order1_.119:
..L120:
                                                        #124.1
..LN329:
	.loc    1  124  is_stmt 1
        pushq     %rbp                                          #124.1
	.cfi_def_cfa_offset 16
..LN330:
        movq      %rsp, %rbp                                    #124.1
	.cfi_def_cfa 6, 16
	.cfi_offset 6, -16
..LN331:
        andq      $-32, %rsp                                    #124.1
..LN332:
        pushq     %r12                                          #124.1
..LN333:
        pushq     %r13                                          #124.1
..LN334:
        pushq     %r14                                          #124.1
..LN335:
        pushq     %r15                                          #124.1
..LN336:
        pushq     %rbx                                          #124.1
..LN337:
        subq      $2776, %rsp                                   #124.1
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN338:
        movq      %rdi, %rbx                                    #124.1
..LN339:
        movq      %rsi, %r12                                    #124.1
..LN340:
        movq      %rdx, %r13                                    #124.1
..LN341:
        movq      %rcx, %r15                                    #124.1
..LN342:
        movq      %r9, 2592(%rsp)                               #124.1
..LN343:
	.loc    1  145  prologue_end  is_stmt 1
        movl      (%rbx), %edi                                  #145.10
..LN344:
        movl      %edi, 2184(%rsp)                              #145.10
..LN345:
	.loc    1  172  is_stmt 1
        movslq    %edi, %rdi                                    #172.21
..LN346:
        movq      %rdi, 2608(%rsp)                              #172.21
..LN347:
	.loc    1  146  is_stmt 1
        movl      (%r12), %r11d                                 #146.10
..LN348:
	.loc    1  154  is_stmt 1
        imull     %r11d, %edi                                   #154.23
..LN349:
        movslq    %edi, %rdi                                    #154.23
..LN350:
	.loc    1  147  is_stmt 1
        movl      (%r13), %eax                                  #147.10
..LN351:
	.loc    1  148  is_stmt 1
        movl      (%r15), %r10d                                 #148.10
..LN352:
	.loc    1  154  is_stmt 1
        shlq      $3, %rdi                                      #154.23
..LN353:
	.loc    1  147  is_stmt 1
        movl      %eax, 2648(%rsp)                              #147.10
..LN354:
	.loc    1  176  is_stmt 1
        movslq    %eax, %rax                                    #176.23
..LN355:
	.loc    1  124  is_stmt 1
        movq      %r8, 2600(%rsp)                               #124.1
..LN356:
	.loc    1  146  is_stmt 1
        movl      %r11d, 2168(%rsp)                             #146.10
..LN357:
	.loc    1  176  is_stmt 1
        movq      %rax, 2752(%rsp)                              #176.23
..LN358:
	.loc    1  148  is_stmt 1
        movl      %r10d, 2640(%rsp)                             #148.10
..LN359:
	.loc    1  150  is_stmt 1
        movq      $0, 2624(%rsp)                                #150.3
..LN360:
	.loc    1  154  is_stmt 1
#       malloc(size_t)
        call      malloc                                        #154.23
..LN361:
                                # LOE rax rbx r12 r13 r15
..B6.130:                       # Preds ..B6.1
..LN362:
        movq      %rax, 2160(%rsp)                              #154.23
..LN363:
                                # LOE rbx r12 r13 r15
..B6.2:                         # Preds ..B6.130
..LN364:
	.loc    1  155  is_stmt 1
        movl      2648(%rsp), %edi                              #155.24
..LN365:
        imull     2640(%rsp), %edi                              #155.24
..LN366:
        movslq    %edi, %rdi                                    #155.24
..LN367:
        shlq      $3, %rdi                                      #155.24
..LN368:
#       malloc(size_t)
        call      malloc                                        #155.24
..LN369:
                                # LOE rax rbx r12 r13 r15
..B6.131:                       # Preds ..B6.2
..LN370:
        movq      %rax, %r14                                    #155.24
..LN371:
                                # LOE rbx r12 r13 r14 r15
..B6.3:                         # Preds ..B6.131
..LN372:
	.loc    1  156  is_stmt 1
        movl      2184(%rsp), %eax                              #156.32
..LN373:
        movl      2168(%rsp), %edx                              #156.40
..LN374:
        lea       1(%rax), %edi                                 #156.32
..LN375:
        movl      %edi, 24(%rsp)                                #156.32
..LN376:
        lea       1(%rdx), %ecx                                 #156.40
..LN377:
	.loc    1  158  is_stmt 1
        movslq    %edi, %rdi                                    #158.32
..LN378:
        movq      %rdi, 32(%rsp)                                #158.32
..LN379:
	.loc    1  156  is_stmt 1
        imull     %ecx, %edi                                    #156.40
..LN380:
        movslq    %edi, %rdi                                    #156.40
..LN381:
        shlq      $3, %rdi                                      #156.43
..LN382:
        movl      %ecx, 40(%rsp)                                #156.40
..LN383:
        movq      %rdi, (%rsp)                                  #156.43
..LN384:
#       malloc(size_t)
        call      malloc                                        #156.20
..LN385:
                                # LOE rax rbx r12 r13 r14 r15
..B6.132:                       # Preds ..B6.3
..LN386:
        movq      %rax, 960(%rsp)                               #156.20
..LN387:
                                # LOE rbx r12 r13 r14 r15
..B6.4:                         # Preds ..B6.132
..LN388:
	.loc    1  157  is_stmt 1
        movq      (%rsp), %rdi                                  #157.20
..LN389:
#       malloc(size_t)
        call      malloc                                        #157.20
..LN390:
                                # LOE rax rbx r12 r13 r14 r15
..B6.133:                       # Preds ..B6.4
..LN391:
        movq      %rax, 968(%rsp)                               #157.20
..LN392:
                                # LOE rbx r12 r13 r14 r15
..B6.5:                         # Preds ..B6.133
..LN393:
	.loc    1  158  is_stmt 1
        xorl      %r9d, %r9d                                    #158.32
..LN394:
        xorl      %r8d, %r8d                                    #158.3
..LN395:
        xorl      %r10d, %r10d                                  #158.32
..LN396:
        cmpl      $0, 2168(%rsp)                                #158.17
..LN397:
        jl        ..B6.48       # Prob 9%                       #158.17
..LN398:
                                # LOE rbx r9 r10 r12 r13 r14 r15 r8d
..B6.6:                         # Preds ..B6.5
..LN399:
        movq      2608(%rsp), %rsi                              #158.28
..LN400:
        movq      %rbx, 8(%rsp)                                 #158.28
..LN401:
        movq      %r14, 2656(%rsp)                              #158.28
..LN402:
        movq      %r12, 16(%rsp)                                #158.28
..LN403:
        lea       1(%rsi), %r11                                 #158.28
..LN404:
        movl      %r11d, %esi                                   #158.28
..LN405:
        movl      %esi, %eax                                    #158.28
..LN406:
        andl      $-4, %eax                                     #158.28
..LN407:
        movslq    %eax, %rax                                    #158.28
..LN408:
        movq      %rax, (%rsp)                                  #158.28
..LN409:
        movq      %r13, 640(%rsp)                               #158.28
..LN410:
        movq      %r15, 648(%rsp)                               #158.28
..LN411:
        movq      968(%rsp), %rax                               #158.28
..LN412:
        movq      960(%rsp), %rdx                               #158.28
..LN413:
        movl      24(%rsp), %ebx                                #158.28
..LN414:
        movq      2592(%rsp), %rcx                              #158.28
..LN415:
                                # LOE rax rdx rcx r9 r10 r11 ebx esi r8d
..B6.7:                         # Preds ..B6.46 ..B6.6
..L130:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN416:
        cmpl      $0, 2184(%rsp)                                #158.42
..LN417:
        jl        ..B6.46       # Prob 50%                      #158.42
..LN418:
                                # LOE rax rdx rcx r9 r10 r11 ebx esi r8d
..B6.8:                         # Preds ..B6.7
..LN419:
        cmpq      $4, %r11                                      #158.28
..LN420:
        jl        ..B6.124      # Prob 10%                      #158.28
..LN421:
                                # LOE rax rdx rcx r9 r10 r11 ebx esi r8d
..B6.9:                         # Preds ..B6.8
..LN422:
	.loc    1  159  is_stmt 1
        lea       (%rdx,%r9,8), %r13                            #159.5
..LN423:
	.loc    1  158  is_stmt 1
        cmpq      $95, %r11                                     #158.28
..LN424:
        jl        ..B6.126      # Prob 10%                      #158.28
..LN425:
                                # LOE rax rdx rcx r9 r10 r11 r13 ebx esi r8d
..B6.10:                        # Preds ..B6.9
..LN426:
        movq      %r13, %r14                                    #158.28
..LN427:
        andq      $31, %r14                                     #158.28
..LN428:
        testl     %r14d, %r14d                                  #158.28
..LN429:
        je        ..B6.13       # Prob 50%                      #158.28
..LN430:
                                # LOE rax rdx rcx r9 r10 r11 r13 ebx esi r8d r14d
..B6.11:                        # Preds ..B6.10
..LN431:
        testl     $7, %r14d                                     #158.28
..LN432:
        jne       ..B6.124      # Prob 10%                      #158.28
..LN433:
                                # LOE rax rdx rcx r9 r10 r11 r13 ebx esi r8d r14d
..B6.12:                        # Preds ..B6.11
..LN434:
        negl      %r14d                                         #158.28
..LN435:
        addl      $32, %r14d                                    #158.28
..LN436:
        shrl      $3, %r14d                                     #158.28
..LN437:
                                # LOE rax rdx rcx r9 r10 r11 r13 ebx esi r8d r14d
..B6.13:                        # Preds ..B6.12 ..B6.10
..LN438:
        movl      %r14d, %r12d                                  #158.28
..LN439:
        lea       4(%r12), %rdi                                 #158.28
..LN440:
        cmpq      %rdi, %r11                                    #158.28
..LN441:
        jl        ..B6.124      # Prob 10%                      #158.28
..LN442:
                                # LOE rax rdx rcx r9 r10 r11 r12 r13 ebx esi r8d r14d
..B6.14:                        # Preds ..B6.13
..LN443:
        negl      %r14d                                         #158.28
..LN444:
        xorl      %edi, %edi                                    #158.28
..LN445:
        addl      %esi, %r14d                                   #158.28
..LN446:
        andl      $3, %r14d                                     #158.28
..LN447:
        negl      %r14d                                         #158.28
..LN448:
        addl      %esi, %r14d                                   #158.28
..LN449:
        movslq    %r14d, %r14                                   #158.28
..LN450:
        testq     %r12, %r12                                    #158.28
..LN451:
        jbe       ..B6.18       # Prob 10%                      #158.28
..LN452:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 r14 ebx esi r8d
..B6.15:                        # Preds ..B6.14
..LN453:
        movq      2600(%rsp), %r15                              #
..LN454:
                                # LOE rax rdx rdi r9 r10 r11 r12 r13 r14 r15 ebx esi r8d
..B6.16:                        # Preds ..B6.16 ..B6.15
..L131:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # PEELED LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
..LN455:
	.loc    1  159  is_stmt 1
        movq      (%r15,%rdi,8), %rcx                           #159.24
..LN456:
        movq      %rcx, (%r13,%rdi,8)                           #159.5
..LN457:
	.loc    1  158  is_stmt 1
        incq      %rdi                                          #158.28
..LN458:
        cmpq      %r12, %rdi                                    #158.28
..LN459:
        jb        ..B6.16       # Prob 82%                      #158.28
..LN460:
                                # LOE rax rdx rdi r9 r10 r11 r12 r13 r14 r15 ebx esi r8d
..B6.17:                        # Preds ..B6.16
..LN461:
        movq      2592(%rsp), %rcx                              #
..LN462:
                                # LOE rax rdx rcx r9 r10 r11 r12 r13 r14 ebx esi r8d
..B6.18:                        # Preds ..B6.17 ..B6.14 ..B6.126
..LN463:
        movq      2600(%rsp), %rdi                              #
..LN464:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 r14 ebx esi r8d
..B6.19:                        # Preds ..B6.19 ..B6.18
..L132:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS VECTORIZED
                # VECTORIZATION HAS UNALIGNED MEMORY REFERENCES
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN465:
	.loc    1  159  is_stmt 1
        vmovupd   (%rdi,%r12,8), %ymm0                          #159.24
..LN466:
        vmovupd   %ymm0, (%r13,%r12,8)                          #159.5
..LN467:
	.loc    1  158  is_stmt 1
        addq      $4, %r12                                      #158.28
..LN468:
        cmpq      %r14, %r12                                    #158.28
..LN469:
        jb        ..B6.19       # Prob 82%                      #158.28
..LN470:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 r14 ebx esi r8d
..B6.21:                        # Preds ..B6.19 ..B6.124
..LN471:
        cmpq      %r11, %r14                                    #158.28
..LN472:
        jae       ..B6.25       # Prob 10%                      #158.28
..LN473:
                                # LOE rax rdx rcx r9 r10 r11 r14 ebx esi r8d
..B6.22:                        # Preds ..B6.21
..LN474:
	.loc    1  159  is_stmt 1
        movq      2600(%rsp), %r13                              #159.5
..LN475:
        lea       (%rdx,%r9,8), %rdi                            #159.5
..LN476:
                                # LOE rax rdx rcx rdi r9 r10 r11 r13 r14 ebx esi r8d
..B6.23:                        # Preds ..B6.23 ..B6.22
..L133:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
..LN477:
        movq      (%r13,%r14,8), %r12                           #159.24
..LN478:
        movq      %r12, (%rdi,%r14,8)                           #159.5
..LN479:
	.loc    1  158  is_stmt 1
        incq      %r14                                          #158.28
..LN480:
        cmpq      %r11, %r14                                    #158.28
..LN481:
        jb        ..B6.23       # Prob 82%                      #158.28
..LN482:
                                # LOE rax rdx rcx rdi r9 r10 r11 r13 r14 ebx esi r8d
..B6.25:                        # Preds ..B6.23 ..B6.21
..LN483:
        cmpl      $16, %ebx                                     #158.28
..LN484:
        jl        ..B6.121      # Prob 10%                      #158.28
..LN485:
                                # LOE rax rdx rcx r9 r10 r11 ebx esi r8d
..B6.26:                        # Preds ..B6.25
..LN486:
	.loc    1  160  is_stmt 1
        lea       (%rax,%r9,8), %rdi                            #160.5
..LN487:
	.loc    1  158  is_stmt 1
        movq      %rdi, %r13                                    #158.28
..LN488:
        andq      $31, %r13                                     #158.28
..LN489:
        movl      %r13d, %r13d                                  #158.28
..LN490:
        testl     %r13d, %r13d                                  #158.28
..LN491:
        je        ..B6.29       # Prob 50%                      #158.28
..LN492:
                                # LOE rax rdx rcx rdi r9 r10 r11 r13 ebx esi r8d
..B6.27:                        # Preds ..B6.26
..LN493:
        testl     $7, %r13d                                     #158.28
..LN494:
        jne       ..B6.121      # Prob 10%                      #158.28
..LN495:
                                # LOE rax rdx rcx rdi r9 r10 r11 r13 ebx esi r8d
..B6.28:                        # Preds ..B6.27
..LN496:
        negl      %r13d                                         #158.28
..LN497:
        addl      $32, %r13d                                    #158.28
..LN498:
        shrl      $3, %r13d                                     #158.28
..LN499:
                                # LOE rax rdx rcx rdi r9 r10 r11 r13 ebx esi r8d
..B6.29:                        # Preds ..B6.28 ..B6.26
..LN500:
        lea       16(%r13), %r12d                               #158.28
..LN501:
        cmpl      %r12d, %ebx                                   #158.28
..LN502:
        jl        ..B6.121      # Prob 10%                      #158.28
..LN503:
                                # LOE rax rdx rcx rdi r9 r10 r11 r13 ebx esi r8d
..B6.30:                        # Preds ..B6.29
..LN504:
        movl      %ebx, %r14d                                   #158.28
..LN505:
        xorl      %r12d, %r12d                                  #158.28
..LN506:
        subl      %r13d, %r14d                                  #158.28
..LN507:
        andl      $15, %r14d                                    #158.28
..LN508:
        negl      %r14d                                         #158.28
..LN509:
        addl      %ebx, %r14d                                   #158.28
..LN510:
	.loc    1  160  is_stmt 1
        vmovsd    (%rcx,%r10,8), %xmm0                          #160.24
..LN511:
	.loc    1  158  is_stmt 1
        testq     %r13, %r13                                    #158.28
..LN512:
        jbe       ..B6.34       # Prob 10%                      #158.28
..LN513:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 ebx esi r8d r14d xmm0
..B6.32:                        # Preds ..B6.30 ..B6.32
..L134:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 4
                # PEELED LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.648438
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.937500
..LN514:
	.loc    1  160  is_stmt 1
        vmovsd    %xmm0, (%rdi,%r12,8)                          #160.5
..LN515:
	.loc    1  158  is_stmt 1
        incq      %r12                                          #158.28
..LN516:
        cmpq      %r13, %r12                                    #158.28
..LN517:
        jb        ..B6.32       # Prob 82%                      #158.28
..LN518:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 ebx esi r8d r14d xmm0
..B6.34:                        # Preds ..B6.32 ..B6.30
..LN519:
        movslq    %r14d, %r12                                   #158.28
..LN520:
	.loc    1  160  is_stmt 1
        vbroadcastsd %xmm0, %ymm0                               #160.24
..LN521:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 ebx esi r8d r14d ymm0
..B6.35:                        # Preds ..B6.35 ..B6.34
..L135:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 4
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 8.648438
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.937500
                # MAIN VECTOR TYPE: 64-bits floating point
..LN522:
        vmovupd   %ymm0, (%rdi,%r13,8)                          #160.5
..LN523:
        vmovupd   %ymm0, 32(%rdi,%r13,8)                        #160.5
..LN524:
        vmovupd   %ymm0, 64(%rdi,%r13,8)                        #160.5
..LN525:
        vmovupd   %ymm0, 96(%rdi,%r13,8)                        #160.5
..LN526:
	.loc    1  158  is_stmt 1
        addq      $16, %r13                                     #158.28
..LN527:
        cmpq      %r12, %r13                                    #158.28
..LN528:
        jb        ..B6.35       # Prob 82%                      #158.28
..LN529:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 ebx esi r8d r14d ymm0
..B6.37:                        # Preds ..B6.35 ..B6.121
..LN530:
        lea       1(%r14), %edi                                 #158.28
..LN531:
        cmpl      %edi, %ebx                                    #158.28
..LN532:
        jb        ..B6.46       # Prob 50%                      #158.28
..LN533:
                                # LOE rax rdx rcx r9 r10 r11 ebx esi r8d r14d
..B6.38:                        # Preds ..B6.37
..LN534:
        movslq    %r14d, %r13                                   #158.28
..LN535:
        negq      %r13                                          #158.28
..LN536:
        addq      32(%rsp), %r13                                #158.28
..LN537:
        cmpq      $4, %r13                                      #158.28
..LN538:
        jl        ..B6.120      # Prob 10%                      #158.28
..LN539:
                                # LOE rax rdx rcx r9 r10 r11 r13 ebx esi r8d r14d
..B6.39:                        # Preds ..B6.38
..LN540:
	.loc    1  160  is_stmt 1
        movslq    %r14d, %r15                                   #160.5
..LN541:
	.loc    1  158  is_stmt 1
        movl      %r13d, %r12d                                  #158.28
..LN542:
	.loc    1  160  is_stmt 1
        addq      %r9, %r15                                     #160.5
..LN543:
	.loc    1  158  is_stmt 1
        andl      $-4, %r12d                                    #158.28
..LN544:
	.loc    1  160  is_stmt 1
        vbroadcastsd (%rcx,%r10,8), %ymm0                       #160.24
..LN545:
	.loc    1  158  is_stmt 1
        xorl      %edi, %edi                                    #158.28
..LN546:
        movslq    %r12d, %r12                                   #158.28
..LN547:
	.loc    1  160  is_stmt 1
        lea       (%rax,%r15,8), %r15                           #160.5
..LN548:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 r15 ebx esi r8d r14d ymm0
..B6.40:                        # Preds ..B6.40 ..B6.39
..L136:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS VECTORIZED
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION HAS UNALIGNED MEMORY REFERENCES
                # VECTORIZATION SPEEDUP COEFFECIENT 2.542969
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 2.750000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN549:
        vmovupd   %ymm0, (%r15,%rdi,8)                          #160.5
..LN550:
	.loc    1  158  is_stmt 1
        addq      $4, %rdi                                      #158.28
..LN551:
        cmpq      %r12, %rdi                                    #158.28
..LN552:
        jb        ..B6.40       # Prob 82%                      #158.28
..LN553:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 r15 ebx esi r8d r14d ymm0
..B6.42:                        # Preds ..B6.40 ..B6.120
..LN554:
        cmpq      %r13, %r12                                    #158.28
..LN555:
        jae       ..B6.46       # Prob 10%                      #158.28
..LN556:
                                # LOE rax rdx rcx r9 r10 r11 r12 r13 ebx esi r8d r14d
..B6.43:                        # Preds ..B6.42
..LN557:
	.loc    1  160  is_stmt 1
        movslq    %r14d, %r14                                   #160.5
..LN558:
        addq      %r9, %r14                                     #160.5
..LN559:
        lea       (%rax,%r14,8), %rdi                           #160.5
..LN560:
        movq      (%rcx,%r10,8), %r14                           #160.24
..LN561:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 r14 ebx esi r8d
..B6.44:                        # Preds ..B6.44 ..B6.43
..L137:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 2.542969
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 2.750000
..LN562:
        movq      %r14, (%rdi,%r12,8)                           #160.5
..LN563:
	.loc    1  158  is_stmt 1
        incq      %r12                                          #158.28
..LN564:
        cmpq      %r13, %r12                                    #158.28
..LN565:
        jb        ..B6.44       # Prob 82%                      #158.28
..LN566:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 r14 ebx esi r8d
..B6.46:                        # Preds ..B6.44 ..B6.7 ..B6.37 ..B6.42
..LN567:
        incl      %r8d                                          #158.3
..LN568:
        incq      %r10                                          #158.3
..LN569:
        addq      32(%rsp), %r9                                 #158.3
..LN570:
        cmpl      40(%rsp), %r8d                                #158.3
..LN571:
        jb        ..B6.7        # Prob 82%                      #158.3
..LN572:
                                # LOE rax rdx rcx r9 r10 r11 ebx esi r8d
..B6.47:                        # Preds ..B6.46
..LN573:
        movq      2656(%rsp), %r14                              #
..LN574:
        movq      8(%rsp), %rbx                                 #
..LN575:
        movq      16(%rsp), %r12                                #
..LN576:
        movq      640(%rsp), %r13                               #
..LN577:
        movq      648(%rsp), %r15                               #
..LN578:
                                # LOE rbx r12 r13 r14 r15
..B6.48:                        # Preds ..B6.5 ..B6.47
..LN579:
	.loc    1  163  is_stmt 1
        cmpl      $1, 2184(%rsp)                                #163.12
..LN580:
        jle       ..B6.57       # Prob 50%                      #163.12
..LN581:
                                # LOE rbx r12 r13 r14 r15
..B6.49:                        # Preds ..B6.48
..LN582:
	.loc    1  71  is_stmt 1
        movl      (%rbx), %r8d                                  #71.9
..LN583:
	.loc    1  75  is_stmt 1
        xorl      %ecx, %ecx                                    #75.7
..LN584:
	.loc    1  72  is_stmt 1
        movl      (%r12), %ebx                                  #72.9
..LN585:
	.loc    1  75  is_stmt 1
        xorl      %edx, %edx                                    #75.9
..LN586:
        movslq    %r8d, %rsi                                    #75.18
..LN587:
        testl     %ebx, %ebx                                    #75.14
..LN588:
        jle       ..B6.65       # Prob 10%                      #75.14
..LN589:
                                # LOE rdx rsi r13 r14 r15 ecx ebx r8d
..B6.50:                        # Preds ..B6.49
..LN590:
        movl      %ebx, 328(%rsp)                               #75.9
..LN591:
        xorl      %eax, %eax                                    #75.9
..LN592:
        movq      %r14, 2656(%rsp)                              #75.9
..LN593:
        movq      %r13, 640(%rsp)                               #75.9
..LN594:
        movq      %r15, 648(%rsp)                               #75.9
..LN595:
        movq      968(%rsp), %r10                               #75.9
..LN596:
        movq      960(%rsp), %rdi                               #75.9
..LN597:
        movq      2160(%rsp), %r9                               #75.9
..LN598:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B6.51:                        # Preds ..B6.56 ..B6.115 ..B6.50
..L138:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN599:
        xorl      %r13d, %r13d                                  #75.27
..LN600:
        testl     %r8d, %r8d                                    #75.36
..LN601:
        jle       ..B6.115      # Prob 10%                      #75.36
..LN602:
                                # LOE rdx rsi rdi r9 r10 r13 eax ecx r8d
..B6.52:                        # Preds ..B6.51
..LN603:
	.loc    1  85  is_stmt 1
        movq      %rdx, 344(%rsp)                               #85.5
..LN604:
	.loc    1  78  is_stmt 1
        lea       (%r8,%rax), %ebx                              #78.25
..LN605:
        movslq    %ebx, %rbx                                    #78.15
..LN606:
	.loc    1  85  is_stmt 1
        lea       (%r9,%rdx,8), %r11                            #85.5
..LN607:
	.loc    1  76  is_stmt 1
        movslq    %eax, %rax                                    #76.15
..LN608:
	.loc    1  85  is_stmt 1
        movq      %r11, 368(%rsp)                               #85.5
..LN609:
        movl      %eax, 352(%rsp)                               #85.5
..LN610:
        movl      %ecx, 336(%rsp)                               #85.5
..LN611:
	.loc    1  78  is_stmt 1
        lea       (%rdi,%rbx,8), %r12                           #78.15
..LN612:
	.loc    1  85  is_stmt 1
        movq      %rsi, 360(%rsp)                               #85.5
..LN613:
	.loc    1  82  is_stmt 1
        lea       (%r10,%rbx,8), %rbx                           #82.15
..LN614:
	.loc    1  85  is_stmt 1
        movl      %r8d, 320(%rsp)                               #85.5
..LN615:
	.loc    1  80  is_stmt 1
        lea       (%r10,%rax,8), %r14                           #80.15
..LN616:
	.loc    1  76  is_stmt 1
        lea       (%rdi,%rax,8), %r15                           #76.15
..LN617:
                                # LOE rbx r12 r13 r14 r15
..B6.53:                        # Preds ..B6.55 ..B6.52
..L139:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN618:
	.loc    1  84  is_stmt 1
        lea       (%rsp), %rdi                                  #84.12
..LN619:
	.loc    1  76  is_stmt 1
        movq      (%r15,%r13,8), %rax                           #76.15
..LN620:
	.loc    1  84  is_stmt 1
        lea       160(%rsp), %rsi                               #84.12
..LN621:
	.loc    1  83  is_stmt 1
        movq      8(%rbx,%r13,8), %rdx                          #83.15
..LN622:
	.loc    1  76  is_stmt 1
        movq      %rax, (%rdi)                                  #76.5
..LN623:
	.loc    1  77  is_stmt 1
        movq      8(%r15,%r13,8), %rcx                          #77.15
..LN624:
	.loc    1  78  is_stmt 1
        movq      16(%r12,%r13,8), %r8                          #78.15
..LN625:
	.loc    1  79  is_stmt 1
        movq      8(%r12,%r13,8), %r9                           #79.15
..LN626:
	.loc    1  80  is_stmt 1
        movq      (%r14,%r13,8), %r10                           #80.15
..LN627:
	.loc    1  81  is_stmt 1
        movq      8(%r14,%r13,8), %r11                          #81.15
..LN628:
	.loc    1  82  is_stmt 1
        movq      16(%rbx,%r13,8), %rax                         #82.15
..LN629:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN630:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN631:
	.loc    1  77  is_stmt 1
        movq      %rcx, 8(%rdi)                                 #77.5
..LN632:
	.loc    1  78  is_stmt 1
        movq      %r8, 16(%rdi)                                 #78.5
..LN633:
	.loc    1  79  is_stmt 1
        movq      %r9, 24(%rdi)                                 #79.5
..LN634:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN635:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN636:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN637:
	.loc    1  84  is_stmt 1
        vzeroupper                                              #84.12
..LN638:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_1dx2d_order1_.140:
..LN639:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_1dx2d_order1_.141:
..LN640:
                                # LOE rbx r12 r13 r14 r15 eax
..B6.54:                        # Preds ..B6.53
..LN641:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN642:
        lea       (%rsp), %rdi                                  #85.20
..LN643:
        lea       160(%rsp), %rsi                               #85.20
..___tag_value_create_xgrid_1dx2d_order1_.142:
..LN644:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_1dx2d_order1_.143:
..LN645:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B6.55:                        # Preds ..B6.54
..LN646:
        movq      368(%rsp), %rax                               #85.5
..LN647:
        vmovsd    %xmm0, (%rax,%r13,8)                          #85.5
..LN648:
	.loc    1  75  is_stmt 1
        incq      %r13                                          #75.40
..LN649:
        cmpq      360(%rsp), %r13                               #75.36
..LN650:
        jl        ..B6.53       # Prob 82%                      #75.36
..LN651:
                                # LOE rbx r12 r13 r14 r15
..B6.56:                        # Preds ..B6.55
..LN652:
        movl      336(%rsp), %ecx                               #
..LN653:
        incl      %ecx                                          #75.18
..LN654:
        movq      344(%rsp), %rdx                               #
..LN655:
        movq      360(%rsp), %rsi                               #
..LN656:
        addq      %rsi, %rdx                                    #75.18
..LN657:
        movl      352(%rsp), %eax                               #
..LN658:
        movl      320(%rsp), %r8d                               #
..LN659:
        lea       1(%rax,%r8), %eax                             #75.18
..LN660:
        movq      968(%rsp), %r10                               #
..LN661:
        movq      960(%rsp), %rdi                               #
..LN662:
        movq      2160(%rsp), %r9                               #
..LN663:
        cmpl      328(%rsp), %ecx                               #75.14
..LN664:
        jl        ..B6.51       # Prob 82%                      #75.14
..LN665:
        jmp       ..B6.64       # Prob 100%                     #75.14
..LN666:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B6.57:                        # Preds ..B6.48
..LN667:
	.loc    1  96  is_stmt 1
        movl      (%rbx), %r8d                                  #96.9
..LN668:
	.loc    1  100  is_stmt 1
        xorl      %ecx, %ecx                                    #100.7
..LN669:
	.loc    1  97  is_stmt 1
        movl      (%r12), %ebx                                  #97.9
..LN670:
	.loc    1  100  is_stmt 1
        xorl      %edx, %edx                                    #100.9
..LN671:
        movslq    %r8d, %rsi                                    #100.18
..LN672:
        testl     %ebx, %ebx                                    #100.14
..LN673:
        jle       ..B6.65       # Prob 10%                      #100.14
..LN674:
                                # LOE rdx rsi r13 r14 r15 ecx ebx r8d
..B6.58:                        # Preds ..B6.57
..LN675:
        movl      %ebx, 8(%rsp)                                 #100.9
..LN676:
        xorl      %eax, %eax                                    #100.9
..LN677:
        movq      %r14, 2656(%rsp)                              #100.9
..LN678:
        movq      %r13, 640(%rsp)                               #100.9
..LN679:
        movq      %r15, 648(%rsp)                               #100.9
..LN680:
        movq      968(%rsp), %r10                               #100.9
..LN681:
        movq      960(%rsp), %rdi                               #100.9
..LN682:
        movq      2160(%rsp), %r9                               #100.9
..LN683:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B6.59:                        # Preds ..B6.63 ..B6.117 ..B6.58
..L144:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN684:
        xorl      %r13d, %r13d                                  #100.27
..LN685:
        testl     %r8d, %r8d                                    #100.36
..LN686:
        jle       ..B6.117      # Prob 10%                      #100.36
..LN687:
                                # LOE rdx rsi rdi r9 r10 r13 eax ecx r8d
..B6.60:                        # Preds ..B6.59
..LN688:
	.loc    1  110  is_stmt 1
        movq      %rdx, 24(%rsp)                                #110.5
..LN689:
	.loc    1  103  is_stmt 1
        lea       (%r8,%rax), %ebx                              #103.25
..LN690:
        movslq    %ebx, %rbx                                    #103.15
..LN691:
	.loc    1  110  is_stmt 1
        lea       (%r9,%rdx,8), %r11                            #110.5
..LN692:
	.loc    1  101  is_stmt 1
        movslq    %eax, %rax                                    #101.15
..LN693:
	.loc    1  110  is_stmt 1
        movq      %r11, 48(%rsp)                                #110.5
..LN694:
        movl      %eax, 32(%rsp)                                #110.5
..LN695:
        movl      %ecx, 16(%rsp)                                #110.5
..LN696:
	.loc    1  103  is_stmt 1
        lea       (%rdi,%rbx,8), %r12                           #103.15
..LN697:
	.loc    1  110  is_stmt 1
        movq      %rsi, 40(%rsp)                                #110.5
..LN698:
	.loc    1  107  is_stmt 1
        lea       (%r10,%rbx,8), %rbx                           #107.15
..LN699:
	.loc    1  110  is_stmt 1
        movl      %r8d, (%rsp)                                  #110.5
..LN700:
	.loc    1  105  is_stmt 1
        lea       (%r10,%rax,8), %r14                           #105.15
..LN701:
	.loc    1  101  is_stmt 1
        lea       (%rdi,%rax,8), %r15                           #101.15
..LN702:
                                # LOE rbx r12 r13 r14 r15
..B6.61:                        # Preds ..B6.62 ..B6.60
..L145:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN703:
	.loc    1  110  is_stmt 1
        lea       320(%rsp), %rdi                               #110.20
..LN704:
	.loc    1  101  is_stmt 1
        movq      (%r15,%r13,8), %rax                           #101.15
..LN705:
	.loc    1  110  is_stmt 1
        lea       480(%rsp), %rsi                               #110.20
..LN706:
	.loc    1  108  is_stmt 1
        movq      8(%rbx,%r13,8), %rdx                          #108.15
..LN707:
	.loc    1  101  is_stmt 1
        movq      %rax, -160(%rsi)                              #101.5
..LN708:
	.loc    1  102  is_stmt 1
        movq      8(%r15,%r13,8), %rcx                          #102.15
..LN709:
	.loc    1  103  is_stmt 1
        movq      16(%r12,%r13,8), %r8                          #103.15
..LN710:
	.loc    1  104  is_stmt 1
        movq      8(%r12,%r13,8), %r9                           #104.15
..LN711:
	.loc    1  105  is_stmt 1
        movq      (%r14,%r13,8), %r10                           #105.15
..LN712:
	.loc    1  106  is_stmt 1
        movq      8(%r14,%r13,8), %r11                          #106.15
..LN713:
	.loc    1  107  is_stmt 1
        movq      16(%rbx,%r13,8), %rax                         #107.15
..LN714:
	.loc    1  108  is_stmt 1
        movq      %rdx, 24(%rsi)                                #108.5
..LN715:
	.loc    1  110  is_stmt 1
        movl      $4, %edx                                      #110.20
..LN716:
	.loc    1  102  is_stmt 1
        movq      %rcx, -152(%rsi)                              #102.5
..LN717:
	.loc    1  103  is_stmt 1
        movq      %r8, -144(%rsi)                               #103.5
..LN718:
	.loc    1  104  is_stmt 1
        movq      %r9, -136(%rsi)                               #104.5
..LN719:
	.loc    1  105  is_stmt 1
        movq      %r10, (%rsi)                                  #105.5
..LN720:
	.loc    1  106  is_stmt 1
        movq      %r11, 8(%rsi)                                 #106.5
..LN721:
	.loc    1  107  is_stmt 1
        movq      %rax, 16(%rsi)                                #107.5
..LN722:
	.loc    1  110  is_stmt 1
        vzeroupper                                              #110.20
..___tag_value_create_xgrid_1dx2d_order1_.146:
..LN723:
#       poly_area_no_adjust(const double *, const double *, int)
        call      poly_area_no_adjust                           #110.20
..___tag_value_create_xgrid_1dx2d_order1_.147:
..LN724:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B6.62:                        # Preds ..B6.61
..LN725:
        movq      48(%rsp), %rax                                #110.5
..LN726:
        vmovsd    %xmm0, (%rax,%r13,8)                          #110.5
..LN727:
	.loc    1  100  is_stmt 1
        incq      %r13                                          #100.40
..LN728:
        cmpq      40(%rsp), %r13                                #100.36
..LN729:
        jl        ..B6.61       # Prob 82%                      #100.36
..LN730:
                                # LOE rbx r12 r13 r14 r15
..B6.63:                        # Preds ..B6.62
..LN731:
        movl      16(%rsp), %ecx                                #
..LN732:
        incl      %ecx                                          #100.18
..LN733:
        movq      24(%rsp), %rdx                                #
..LN734:
        movq      40(%rsp), %rsi                                #
..LN735:
        addq      %rsi, %rdx                                    #100.18
..LN736:
        movl      32(%rsp), %eax                                #
..LN737:
        movl      (%rsp), %r8d                                  #
..LN738:
        lea       1(%rax,%r8), %eax                             #100.18
..LN739:
        movq      968(%rsp), %r10                               #
..LN740:
        movq      960(%rsp), %rdi                               #
..LN741:
        movq      2160(%rsp), %r9                               #
..LN742:
        cmpl      8(%rsp), %ecx                                 #100.14
..LN743:
        jl        ..B6.59       # Prob 82%                      #100.14
..LN744:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B6.64:                        # Preds ..B6.56 ..B6.117 ..B6.115 ..B6.63 # Infreq
..LN745:
        movq      2656(%rsp), %r14                              #
..LN746:
        movq      640(%rsp), %r13                               #
..LN747:
        movq      648(%rsp), %r15                               #
..LN748:
                                # LOE r13 r14 r15
..B6.65:                        # Preds ..B6.64 ..B6.57 ..B6.49 # Infreq
..LN749:
	.loc    1  72  is_stmt 1
        movl      (%r15), %edx                                  #72.9
..LN750:
	.loc    1  75  is_stmt 1
        xorl      %r9d, %r9d                                    #75.7
..LN751:
	.loc    1  71  is_stmt 1
        movl      (%r13), %eax                                  #71.9
..LN752:
	.loc    1  75  is_stmt 1
        xorl      %r10d, %r10d                                  #75.9
..LN753:
        movslq    %eax, %r8                                     #75.18
..LN754:
        testl     %edx, %edx                                    #75.14
..LN755:
        jle       ..B6.74       # Prob 10%                      #75.14
..LN756:
                                # LOE r8 r10 r14 eax edx r9d
..B6.66:                        # Preds ..B6.65                 # Infreq
..LN757:
        movl      %edx, 984(%rsp)                               #75.9
..LN758:
        xorl      %esi, %esi                                    #75.9
..LN759:
        movq      24(%rbp), %rcx                                #75.9
..LN760:
        movq      %r14, %rdi                                    #75.9
..LN761:
        movq      16(%rbp), %rdx                                #75.9
..LN762:
                                # LOE rdx rcx rdi r8 r10 eax esi r9d
..B6.67:                        # Preds ..B6.72 ..B6.113 ..B6.66 # Infreq
..L148:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN763:
        xorl      %r12d, %r12d                                  #75.27
..LN764:
        testl     %eax, %eax                                    #75.36
..LN765:
        jle       ..B6.113      # Prob 10%                      #75.36
..LN766:
                                # LOE rdx rcx rdi r8 r10 r12 eax esi r9d
..B6.68:                        # Preds ..B6.67                 # Infreq
..LN767:
	.loc    1  85  is_stmt 1
        movq      %r10, 1000(%rsp)                              #85.5
..LN768:
	.loc    1  78  is_stmt 1
        lea       (%rax,%rsi), %r13d                            #78.25
..LN769:
        movslq    %r13d, %r13                                   #78.15
..LN770:
	.loc    1  85  is_stmt 1
        lea       (%rdi,%r10,8), %r11                           #85.5
..LN771:
	.loc    1  76  is_stmt 1
        movslq    %esi, %rsi                                    #76.15
..LN772:
	.loc    1  85  is_stmt 1
        movq      %r11, 1024(%rsp)                              #85.5
..LN773:
        movl      %esi, 1008(%rsp)                              #85.5
..LN774:
        movl      %r9d, 992(%rsp)                               #85.5
..LN775:
	.loc    1  78  is_stmt 1
        lea       (%rdx,%r13,8), %rbx                           #78.15
..LN776:
	.loc    1  85  is_stmt 1
        movq      %r8, 1016(%rsp)                               #85.5
..LN777:
	.loc    1  82  is_stmt 1
        lea       (%rcx,%r13,8), %r13                           #82.15
..LN778:
	.loc    1  85  is_stmt 1
        movl      %eax, 976(%rsp)                               #85.5
..LN779:
	.loc    1  80  is_stmt 1
        lea       (%rcx,%rsi,8), %r15                           #80.15
..LN780:
	.loc    1  85  is_stmt 1
        movq      %rdi, 2656(%rsp)                              #85.5
..LN781:
	.loc    1  76  is_stmt 1
        lea       (%rdx,%rsi,8), %r14                           #76.15
..LN782:
                                # LOE rbx r12 r13 r14 r15
..B6.69:                        # Preds ..B6.71 ..B6.68         # Infreq
..L149:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN783:
	.loc    1  84  is_stmt 1
        lea       640(%rsp), %rdi                               #84.12
..LN784:
	.loc    1  76  is_stmt 1
        movq      (%r14,%r12,8), %rax                           #76.15
..LN785:
	.loc    1  84  is_stmt 1
        lea       800(%rsp), %rsi                               #84.12
..LN786:
	.loc    1  83  is_stmt 1
        movq      8(%r13,%r12,8), %rdx                          #83.15
..LN787:
	.loc    1  76  is_stmt 1
        movq      %rax, -160(%rsi)                              #76.5
..LN788:
	.loc    1  77  is_stmt 1
        movq      8(%r14,%r12,8), %rcx                          #77.15
..LN789:
	.loc    1  78  is_stmt 1
        movq      16(%rbx,%r12,8), %r8                          #78.15
..LN790:
	.loc    1  79  is_stmt 1
        movq      8(%rbx,%r12,8), %r9                           #79.15
..LN791:
	.loc    1  80  is_stmt 1
        movq      (%r15,%r12,8), %r10                           #80.15
..LN792:
	.loc    1  81  is_stmt 1
        movq      8(%r15,%r12,8), %r11                          #81.15
..LN793:
	.loc    1  82  is_stmt 1
        movq      16(%r13,%r12,8), %rax                         #82.15
..LN794:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN795:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN796:
	.loc    1  77  is_stmt 1
        movq      %rcx, -152(%rsi)                              #77.5
..LN797:
	.loc    1  78  is_stmt 1
        movq      %r8, -144(%rsi)                               #78.5
..LN798:
	.loc    1  79  is_stmt 1
        movq      %r9, -136(%rsi)                               #79.5
..LN799:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN800:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN801:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN802:
	.loc    1  84  is_stmt 1
        vzeroupper                                              #84.12
..LN803:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_1dx2d_order1_.150:
..LN804:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_1dx2d_order1_.151:
..LN805:
                                # LOE rbx r12 r13 r14 r15 eax
..B6.70:                        # Preds ..B6.69                 # Infreq
..LN806:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN807:
        lea       640(%rsp), %rdi                               #85.20
..LN808:
        lea       800(%rsp), %rsi                               #85.20
..___tag_value_create_xgrid_1dx2d_order1_.152:
..LN809:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_1dx2d_order1_.153:
..LN810:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B6.71:                        # Preds ..B6.70                 # Infreq
..LN811:
        movq      1024(%rsp), %rax                              #85.5
..LN812:
        vmovsd    %xmm0, (%rax,%r12,8)                          #85.5
..LN813:
	.loc    1  75  is_stmt 1
        incq      %r12                                          #75.40
..LN814:
        cmpq      1016(%rsp), %r12                              #75.36
..LN815:
        jl        ..B6.69       # Prob 82%                      #75.36
..LN816:
                                # LOE rbx r12 r13 r14 r15
..B6.72:                        # Preds ..B6.71                 # Infreq
..LN817:
        movl      992(%rsp), %r9d                               #
..LN818:
        incl      %r9d                                          #75.18
..LN819:
        movq      1000(%rsp), %r10                              #
..LN820:
        movq      1016(%rsp), %r8                               #
..LN821:
        addq      %r8, %r10                                     #75.18
..LN822:
        movl      1008(%rsp), %esi                              #
..LN823:
        movl      976(%rsp), %eax                               #
..LN824:
        lea       1(%rsi,%rax), %esi                            #75.18
..LN825:
        movq      2656(%rsp), %rdi                              #
..LN826:
        movq      24(%rbp), %rcx                                #
..LN827:
        movq      16(%rbp), %rdx                                #
..LN828:
        cmpl      984(%rsp), %r9d                               #75.14
..LN829:
        jl        ..B6.67       # Prob 82%                      #75.14
..LN830:
                                # LOE rdx rcx rdi r8 r10 eax esi edi r9d dil
..B6.73:                        # Preds ..B6.113 ..B6.72        # Infreq
..LN831:
        movq      %rdi, %r14                                    #
..LN832:
                                # LOE r14
..B6.74:                        # Preds ..B6.73 ..B6.65         # Infreq
..LN833:
	.loc    1  169  is_stmt 1
        vzeroupper                                              #169.3
..LN834:
        movq      960(%rsp), %rdi                               #169.3
..LN835:
#       free(void *)
        call      free                                          #169.3
..LN836:
                                # LOE r14
..B6.75:                        # Preds ..B6.74                 # Infreq
..LN837:
	.loc    1  170  is_stmt 1
        movq      968(%rsp), %rdi                               #170.3
..LN838:
#       free(void *)
        call      free                                          #170.3
..LN839:
                                # LOE r14
..B6.76:                        # Preds ..B6.75                 # Infreq
..LN840:
	.loc    1  172  is_stmt 1
        xorl      %eax, %eax                                    #172.10
..LN841:
        xorl      %ecx, %ecx                                    #172.7
..LN842:
        xorl      %edx, %edx                                    #172.10
..LN843:
        cmpl      $0, 2168(%rsp)                                #172.16
..LN844:
        jle       ..B6.108      # Prob 10%                      #172.16
..LN845:
                                # LOE rax rdx r14 ecx
..B6.77:                        # Preds ..B6.76                 # Infreq
..LN846:
	.loc    1  124  is_stmt 1
        movq      %r14, %rdi                                    #124.1
..LN847:
        movq      32(%rbp), %rsi                                #124.1
..LN848:
        movq      48(%rbp), %r10                                #124.1
..LN849:
        movq      72(%rbp), %rbx                                #124.1
..LN850:
        movq      24(%rbp), %r9                                 #124.1
..LN851:
        movq      16(%rbp), %r8                                 #124.1
..LN852:
	.loc    1  172  is_stmt 1
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm0             #172.76
..LN853:
	.loc    1  198  is_stmt 1
        vmovsd    .L_2il0floatpacket.2(%rip), %xmm1             #198.23
..LN854:
	.loc    1  124  is_stmt 1
        movq      2160(%rsp), %r13                              #124.1
..LN855:
        movl      2168(%rsp), %r15d                             #124.1
..LN856:
        movq      2608(%rsp), %r11                              #124.1
..LN857:
        movl      2184(%rsp), %r14d                             #124.1
..LN858:
                                # LOE rax rdx rsi rdi r8 r9 r11 r13 ecx r14d r15d xmm0
..B6.78:                        # Preds ..B6.82 ..B6.111 ..B6.77 # Infreq
..L154:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN859:
	.loc    1  172  is_stmt 1
        xorl      %r12d, %r12d                                  #172.31
..LN860:
        testl     %r14d, %r14d                                  #172.40
..LN861:
        jle       ..B6.111      # Prob 10%                      #172.40
..LN862:
                                # LOE rax rdx rsi rdi r8 r9 r11 r12 r13 ecx r14d r15d xmm0
..B6.79:                        # Preds ..B6.78                 # Infreq
..LN863:
	.loc    1  197  is_stmt 1
        movq      %rdx, 2176(%rsp)                              #197.13
..LN864:
        lea       (%r13,%rdx,8), %r10                           #197.13
..LN865:
        movq      %r10, 2688(%rsp)                              #197.13
..LN866:
	.loc    1  172  is_stmt 1
        lea       (%rsi,%rdx,8), %rbx                           #172.55
..LN867:
	.loc    1  197  is_stmt 1
        movl      %ecx, 2632(%rsp)                              #197.13
..LN868:
        movl      2640(%rsp), %r13d                             #197.13
..LN869:
        movq      2752(%rsp), %rsi                              #197.13
..LN870:
        movq      2600(%rsp), %r15                              #197.13
..LN871:
        movq      2592(%rsp), %r14                              #197.13
..LN872:
                                # LOE rax rbx rsi rdi r8 r9 r11 r12 r14 r15 r13d xmm0
..B6.80:                        # Preds ..B6.81 ..B6.79         # Infreq
..L155:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN873:
	.loc    1  172  is_stmt 1
        vmovsd    (%rbx,%r12,8), %xmm1                          #172.55
..LN874:
        vcomisd   %xmm0, %xmm1                                  #172.76
..LN875:
        ja        ..B6.83       # Prob 50%                      #172.76
..LN876:
                                # LOE rax rbx rsi rdi r8 r9 r11 r12 r14 r15 r13d xmm0
..B6.81:                        # Preds ..B6.103 ..B6.106 ..B6.83 ..B6.80 # Infreq
..LN877:
        incq      %r12                                          #172.45
..LN878:
        cmpq      %r11, %r12                                    #172.40
..LN879:
        jl        ..B6.80       # Prob 82%                      #172.40
..LN880:
                                # LOE rax rbx rsi rdi r8 r9 r11 r12 r14 r15 r13d xmm0
..B6.82:                        # Preds ..B6.81                 # Infreq
..LN881:
        movl      2632(%rsp), %ecx                              #
..LN882:
        incq      %rax                                          #172.21
..LN883:
        incl      %ecx                                          #172.21
..LN884:
        movq      2176(%rsp), %rdx                              #
..LN885:
        movl      2168(%rsp), %r15d                             #
..LN886:
        addq      %r11, %rdx                                    #172.21
..LN887:
        movq      2160(%rsp), %r13                              #
..LN888:
        movl      2184(%rsp), %r14d                             #
..LN889:
        movq      32(%rbp), %rsi                                #
..LN890:
        cmpl      %r15d, %ecx                                   #172.16
..LN891:
        jl        ..B6.78       # Prob 82%                      #172.16
..LN892:
        jmp       ..B6.107      # Prob 100%                     #172.16
..LN893:
                                # LOE rax rdx rsi rdi r8 r9 r11 r13 ecx r14d r15d xmm0
..B6.83:                        # Preds ..B6.80                 # Infreq
..LN894:
	.loc    1  176  is_stmt 1
        xorl      %ecx, %ecx                                    #176.9
..LN895:
        xorl      %r10d, %r10d                                  #176.12
..LN896:
	.loc    1  174  is_stmt 1
        vmovsd    (%r15,%r12,8), %xmm5                          #174.14
..LN897:
	.loc    1  176  is_stmt 1
        xorl      %edx, %edx                                    #176.12
..LN898:
	.loc    1  175  is_stmt 1
        vmovsd    8(%r15,%r12,8), %xmm3                         #175.14
..LN899:
	.loc    1  174  is_stmt 1
        vmovsd    (%r14,%rax,8), %xmm4                          #174.37
..LN900:
	.loc    1  175  is_stmt 1
        vmovsd    8(%r14,%rax,8), %xmm2                         #175.37
..LN901:
	.loc    1  176  is_stmt 1
        testl     %r13d, %r13d                                  #176.18
..LN902:
        jle       ..B6.81       # Prob 10%                      #176.18
..LN903:
                                # LOE rax rbx rsi rdi r8 r9 r10 r11 r12 r14 r15 edx ecx r13d xmm0 xmm2 xmm3 xmm4 xmm5
..B6.84:                        # Preds ..B6.83                 # Infreq
..LN904:
	.loc    1  193  is_stmt 1
        movq      %rax, 2616(%rsp)                              #193.53
..LN905:
        vaddsd    %xmm3, %xmm5, %xmm1                           #193.45
..LN906:
        vmulsd    %xmm1, %xmm0, %xmm1                           #193.53
..LN907:
        vmovsd    %xmm1, 2728(%rsp)                             #193.53
..LN908:
        vmovsd    %xmm2, 2744(%rsp)                             #193.53
..LN909:
        vmovsd    %xmm3, 2720(%rsp)                             #193.53
..LN910:
        vmovsd    %xmm4, 2760(%rsp)                             #193.53
..LN911:
        vmovsd    %xmm5, 2736(%rsp)                             #193.53
..LN912:
        movq      %rbx, 2696(%rsp)                              #193.53
..LN913:
        movq      %r12, 2712(%rsp)                              #193.53
..LN914:
        movl      2648(%rsp), %eax                              #193.53
..LN915:
                                # LOE rsi rdi r8 r9 r10 eax edx ecx
..B6.85:                        # Preds ..B6.102 ..B6.105 ..B6.84 # Infreq
..L156:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN916:
	.loc    1  176  is_stmt 1
        xorl      %r13d, %r13d                                  #176.33
..LN917:
        testl     %eax, %eax                                    #176.42
..LN918:
        jle       ..B6.105      # Prob 10%                      #176.42
..LN919:
                                # LOE rsi rdi r8 r9 r10 r13 eax edx ecx
..B6.86:                        # Preds ..B6.85                 # Infreq
..LN920:
	.loc    1  197  is_stmt 1
        movq      %r10, 2672(%rsp)                              #197.13
..LN921:
	.loc    1  182  is_stmt 1
        lea       (%rax,%rdx), %ebx                             #182.32
..LN922:
        movslq    %ebx, %rbx                                    #182.17
..LN923:
	.loc    1  197  is_stmt 1
        lea       (%rdi,%r10,8), %r11                           #197.13
..LN924:
	.loc    1  180  is_stmt 1
        movslq    %edx, %rdx                                    #180.17
..LN925:
	.loc    1  197  is_stmt 1
        movq      %r11, 2704(%rsp)                              #197.13
..LN926:
        movl      %edx, 2664(%rsp)                              #197.13
..LN927:
        movl      %ecx, 2680(%rsp)                              #197.13
..LN928:
	.loc    1  182  is_stmt 1
        lea       (%r9,%rbx,8), %r14                            #182.17
..LN929:
	.loc    1  197  is_stmt 1
        movq      %rdi, 2656(%rsp)                              #197.13
..LN930:
	.loc    1  191  is_stmt 1
        lea       (%r8,%rbx,8), %r12                            #191.17
..LN931:
	.loc    1  189  is_stmt 1
        lea       (%r8,%rdx,8), %rbx                            #189.17
..LN932:
	.loc    1  180  is_stmt 1
        lea       (%r9,%rdx,8), %r15                            #180.17
..LN933:
                                # LOE rbx r12 r13 r14 r15
..B6.87:                        # Preds ..B6.101 ..B6.86        # Infreq
..L157:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN934:
        vmovsd    (%r15,%r13,8), %xmm4                          #180.17
..LN935:
	.loc    1  184  is_stmt 1
        vmovsd    2760(%rsp), %xmm0                             #184.23
..LN936:
	.loc    1  181  is_stmt 1
        vmovsd    8(%r15,%r13,8), %xmm3                         #181.17
..LN937:
	.loc    1  182  is_stmt 1
        vmovsd    16(%r14,%r13,8), %xmm2                        #182.17
..LN938:
	.loc    1  183  is_stmt 1
        vmovsd    8(%r14,%r13,8), %xmm1                         #183.17
..LN939:
	.loc    1  180  is_stmt 1
        vmovsd    %xmm4, 2192(%rsp)                             #180.7
..LN940:
	.loc    1  181  is_stmt 1
        vmovsd    %xmm3, 2200(%rsp)                             #181.7
..LN941:
	.loc    1  182  is_stmt 1
        vmovsd    %xmm2, 2208(%rsp)                             #182.7
..LN942:
	.loc    1  183  is_stmt 1
        vmovsd    %xmm1, 2216(%rsp)                             #183.7
..LN943:
	.loc    1  184  is_stmt 1
        vcomisd   %xmm4, %xmm0                                  #184.23
..LN944:
        jb        ..B6.91       # Prob 50%                      #184.23
..LN945:
                                # LOE rbx r12 r13 r14 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B6.88:                        # Preds ..B6.87                 # Infreq
..LN946:
        vcomisd   %xmm3, %xmm0                                  #184.44
..LN947:
        jb        ..B6.91       # Prob 50%                      #184.44
..LN948:
                                # LOE rbx r12 r13 r14 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B6.89:                        # Preds ..B6.88                 # Infreq
..LN949:
	.loc    1  185  is_stmt 1
        vcomisd   %xmm2, %xmm0                                  #185.19
..LN950:
        jb        ..B6.91       # Prob 50%                      #185.19
..LN951:
                                # LOE rbx r12 r13 r14 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B6.90:                        # Preds ..B6.89                 # Infreq
..LN952:
        vcomisd   %xmm1, %xmm0                                  #185.40
..LN953:
        jae       ..B6.101      # Prob 50%                      #185.40
..LN954:
                                # LOE rbx r12 r13 r14 r15 xmm1 xmm2 xmm3 xmm4
..B6.91:                        # Preds ..B6.90 ..B6.89 ..B6.88 ..B6.87 # Infreq
..LN955:
	.loc    1  186  is_stmt 1
        vcomisd   2744(%rsp), %xmm4                             #186.23
..LN956:
        jb        ..B6.95       # Prob 22%                      #186.23
..LN957:
                                # LOE rbx r12 r13 r14 r15 xmm1 xmm2 xmm3
..B6.92:                        # Preds ..B6.91                 # Infreq
..LN958:
        vcomisd   2744(%rsp), %xmm3                             #186.44
..LN959:
        jb        ..B6.95       # Prob 22%                      #186.44
..LN960:
                                # LOE rbx r12 r13 r14 r15 xmm1 xmm2
..B6.93:                        # Preds ..B6.92                 # Infreq
..LN961:
	.loc    1  187  is_stmt 1
        vcomisd   2744(%rsp), %xmm2                             #187.19
..LN962:
        jb        ..B6.95       # Prob 22%                      #187.19
..LN963:
                                # LOE rbx r12 r13 r14 r15 xmm1
..B6.94:                        # Preds ..B6.93                 # Infreq
..LN964:
        vcomisd   2744(%rsp), %xmm1                             #187.40
..LN965:
        jae       ..B6.101      # Prob 78%                      #187.40
..LN966:
                                # LOE rbx r12 r13 r14 r15
..B6.95:                        # Preds ..B6.94 ..B6.93 ..B6.92 ..B6.91 # Infreq
..LN967:
	.loc    1  193  is_stmt 1
        lea       960(%rsp), %rdi                               #193.14
..LN968:
	.loc    1  189  is_stmt 1
        movq      (%rbx,%r13,8), %rax                           #189.17
..LN969:
	.loc    1  193  is_stmt 1
        lea       2192(%rsp), %rsi                              #193.14
..LN970:
	.loc    1  190  is_stmt 1
        movq      8(%rbx,%r13,8), %rcx                          #190.17
..LN971:
	.loc    1  193  is_stmt 1
        movl      $4, %edx                                      #193.14
..LN972:
	.loc    1  191  is_stmt 1
        movq      16(%r12,%r13,8), %r8                          #191.17
..LN973:
	.loc    1  192  is_stmt 1
        movq      8(%r12,%r13,8), %r9                           #192.17
..LN974:
	.loc    1  193  is_stmt 1
        vmovsd    536(%rsi), %xmm0                              #193.14
..LN975:
	.loc    1  189  is_stmt 1
        movq      %rax, -1232(%rsi)                             #189.7
..LN976:
	.loc    1  190  is_stmt 1
        movq      %rcx, -1224(%rsi)                             #190.7
..LN977:
	.loc    1  191  is_stmt 1
        movq      %r8, -1216(%rsi)                              #191.7
..LN978:
	.loc    1  192  is_stmt 1
        movq      %r9, -1208(%rsi)                              #192.7
..___tag_value_create_xgrid_1dx2d_order1_.158:
..LN979:
	.loc    1  193  is_stmt 1
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #193.14
..___tag_value_create_xgrid_1dx2d_order1_.159:
..LN980:
                                # LOE rbx r12 r13 r14 r15 eax
..B6.96:                        # Preds ..B6.95                 # Infreq
..LN981:
	.loc    1  195  is_stmt 1
        lea       960(%rsp), %rdi                               #195.21
..LN982:
        vmovsd    1776(%rdi), %xmm0                             #195.21
..LN983:
        lea       2192(%rsp), %rsi                              #195.21
..LN984:
        vmovsd    568(%rsi), %xmm1                              #195.21
..LN985:
        lea       1360(%rsp), %rcx                              #195.21
..LN986:
        vmovsd    1360(%rcx), %xmm2                             #195.21
..LN987:
        lea       1760(%rsp), %r8                               #195.21
..LN988:
        vmovsd    1384(%rcx), %xmm3                             #195.21
..LN989:
        movl      %eax, %edx                                    #195.21
..___tag_value_create_xgrid_1dx2d_order1_.160:
..LN990:
#       clip(const double *, const double *, int, double, double, double, double, double *, double *)
        call      clip                                          #195.21
..___tag_value_create_xgrid_1dx2d_order1_.161:
..LN991:
                                # LOE rbx r12 r13 r14 r15 eax
..B6.97:                        # Preds ..B6.96                 # Infreq
..LN992:
        testl     %eax, %eax                                    #195.96
..LN993:
        jle       ..B6.101      # Prob 40%                      #195.96
..LN994:
                                # LOE rbx r12 r13 r14 r15 eax
..B6.98:                        # Preds ..B6.97                 # Infreq
..LN995:
	.loc    1  196  is_stmt 1
        movl      %eax, %edx                                    #196.10
..LN996:
        lea       1360(%rsp), %rdi                              #196.10
..LN997:
        lea       1760(%rsp), %rsi                              #196.10
..___tag_value_create_xgrid_1dx2d_order1_.162:
..LN998:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #196.10
..___tag_value_create_xgrid_1dx2d_order1_.163:
..LN999:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B6.99:                        # Preds ..B6.98                 # Infreq
..LN1000:
        movq      2696(%rsp), %rax                              #196.45
..LN1001:
        movq      2712(%rsp), %rcx                              #196.45
..LN1002:
	.loc    1  197  is_stmt 1
        movq      2688(%rsp), %rdx                              #197.13
..LN1003:
	.loc    1  198  is_stmt 1
        movq      2704(%rsp), %rsi                              #198.2
..LN1004:
	.loc    1  196  is_stmt 1
        vmulsd    (%rax,%rcx,8), %xmm0, %xmm2                   #196.45
..LN1005:
	.loc    1  197  is_stmt 1
        vmovsd    (%rdx,%rcx,8), %xmm0                          #197.13
..LN1006:
	.loc    1  198  is_stmt 1
        vminsd    (%rsi,%r13,8), %xmm0, %xmm0                   #198.2
..LN1007:
        vdivsd    %xmm0, %xmm2, %xmm1                           #198.12
..LN1008:
        vcomisd   .L_2il0floatpacket.2(%rip), %xmm1             #198.23
..LN1009:
        jbe       ..B6.101      # Prob 50%                      #198.23
..LN1010:
                                # LOE rbx r12 r13 r14 r15 xmm2
..B6.100:                       # Preds ..B6.99                 # Infreq
..LN1011:
	.loc    1  199  is_stmt 1
        movq      2624(%rsp), %r11                              #199.10
..LN1012:
	.loc    1  200  is_stmt 1
        movq      40(%rbp), %rcx                                #200.4
..LN1013:
	.loc    1  201  is_stmt 1
        movq      48(%rbp), %rdi                                #201.4
..LN1014:
	.loc    1  202  is_stmt 1
        movq      56(%rbp), %r8                                 #202.4
..LN1015:
	.loc    1  199  is_stmt 1
        movq      72(%rbp), %rax                                #199.10
..LN1016:
	.loc    1  203  is_stmt 1
        movq      64(%rbp), %r10                                #203.4
..LN1017:
	.loc    1  200  is_stmt 1
        movq      2712(%rsp), %rdx                              #200.4
..LN1018:
	.loc    1  201  is_stmt 1
        movl      2632(%rsp), %esi                              #201.4
..LN1019:
	.loc    1  203  is_stmt 1
        movl      2680(%rsp), %r9d                              #203.4
..LN1020:
	.loc    1  200  is_stmt 1
        movl      %edx, (%rcx,%r11,4)                           #200.4
..LN1021:
	.loc    1  201  is_stmt 1
        movl      %esi, (%rdi,%r11,4)                           #201.4
..LN1022:
	.loc    1  202  is_stmt 1
        movl      %r13d, (%r8,%r11,4)                           #202.4
..LN1023:
	.loc    1  199  is_stmt 1
        vmovsd    %xmm2, (%rax,%r11,8)                          #199.10
..LN1024:
	.loc    1  203  is_stmt 1
        movl      %r9d, (%r10,%r11,4)                           #203.4
..LN1025:
	.loc    1  204  is_stmt 1
        incq      %r11                                          #204.6
..LN1026:
        movq      %r11, 2624(%rsp)                              #204.6
..LN1027:
	.loc    1  205  is_stmt 1
        cmpq      $10000000, %r11                               #205.16
..LN1028:
        jg        ..B6.104      # Prob 0%                       #205.16
..LN1029:
                                # LOE rbx r12 r13 r14 r15
..B6.101:                       # Preds ..B6.94 ..B6.90 ..B6.104 ..B6.100 ..B6.99
                                #       ..B6.97                 # Infreq
..LN1030:
	.loc    1  176  is_stmt 1
        incq      %r13                                          #176.47
..LN1031:
        cmpq      2752(%rsp), %r13                              #176.42
..LN1032:
        jl        ..B6.87       # Prob 82%                      #176.42
..LN1033:
                                # LOE rbx r12 r13 r14 r15
..B6.102:                       # Preds ..B6.101                # Infreq
..LN1034:
        movl      2680(%rsp), %ecx                              #
..LN1035:
        incl      %ecx                                          #176.23
..LN1036:
        movq      2672(%rsp), %r10                              #
..LN1037:
        movq      2752(%rsp), %rsi                              #
..LN1038:
        addq      %rsi, %r10                                    #176.23
..LN1039:
        movl      2664(%rsp), %edx                              #
..LN1040:
        movl      2648(%rsp), %eax                              #
..LN1041:
        lea       1(%rdx,%rax), %edx                            #176.23
..LN1042:
        movq      2656(%rsp), %rdi                              #
..LN1043:
        movq      24(%rbp), %r9                                 #
..LN1044:
        movq      16(%rbp), %r8                                 #
..LN1045:
        cmpl      2640(%rsp), %ecx                              #176.18
..LN1046:
        jl        ..B6.85       # Prob 82%                      #176.18
..LN1047:
                                # LOE rsi rdi r8 r9 r10 eax edx ecx esi edi sil dil
..B6.103:                       # Preds ..B6.102                # Infreq
..LN1048:
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm0             #
..LN1049:
        movq      2696(%rsp), %rbx                              #
..LN1050:
        movq      2712(%rsp), %r12                              #
..LN1051:
        movq      2616(%rsp), %rax                              #
..LN1052:
        movl      2640(%rsp), %r13d                             #
..LN1053:
        movq      2608(%rsp), %r11                              #
..LN1054:
        movq      2600(%rsp), %r15                              #
..LN1055:
        movq      2592(%rsp), %r14                              #
..LN1056:
        jmp       ..B6.81       # Prob 100%                     #
..LN1057:
                                # LOE rax rbx rsi rdi r8 r9 r11 r12 r14 r15 r13d xmm0
..B6.104:                       # Preds ..B6.100                # Infreq
..LN1058:
	.loc    1  205  is_stmt 1
        movl      $.L_2__STRING.0, %edi                         #205.26
..___tag_value_create_xgrid_1dx2d_order1_.164:
..LN1059:
#       error_handler(const char *)
        call      error_handler                                 #205.26
..___tag_value_create_xgrid_1dx2d_order1_.165:
..LN1060:
        jmp       ..B6.101      # Prob 100%                     #205.26
..LN1061:
                                # LOE rbx r12 r13 r14 r15
..B6.105:                       # Preds ..B6.85                 # Infreq
..LN1062:
	.loc    1  176  is_stmt 1
        incl      %ecx                                          #176.23
..LN1063:
        addq      %rsi, %r10                                    #176.23
..LN1064:
        lea       1(%rdx,%rax), %edx                            #176.23
..LN1065:
        cmpl      2640(%rsp), %ecx                              #176.18
..LN1066:
        jl        ..B6.85       # Prob 82%                      #176.18
..LN1067:
                                # LOE rsi rdi r8 r9 r10 eax edx ecx
..B6.106:                       # Preds ..B6.105                # Infreq
..LN1068:
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm0             #
..LN1069:
        movq      2696(%rsp), %rbx                              #
..LN1070:
        movq      2712(%rsp), %r12                              #
..LN1071:
        movq      2616(%rsp), %rax                              #
..LN1072:
        movl      2640(%rsp), %r13d                             #
..LN1073:
        movq      2608(%rsp), %r11                              #
..LN1074:
        movq      2600(%rsp), %r15                              #
..LN1075:
        movq      2592(%rsp), %r14                              #
..LN1076:
        jmp       ..B6.81       # Prob 100%                     #
..LN1077:
                                # LOE rax rbx rsi rdi r8 r9 r11 r12 r14 r15 r13d xmm0
..B6.107:                       # Preds ..B6.111 ..B6.82        # Infreq
..LN1078:
        movq      %rdi, %r14                                    #
..LN1079:
                                # LOE r14
..B6.108:                       # Preds ..B6.107 ..B6.76        # Infreq
..LN1080:
	.loc    1  211  is_stmt 1
        movq      2160(%rsp), %rdi                              #211.3
..LN1081:
#       free(void *)
        call      free                                          #211.3
..LN1082:
                                # LOE r14
..B6.109:                       # Preds ..B6.108                # Infreq
..LN1083:
	.loc    1  212  is_stmt 1
        movq      %r14, %rdi                                    #212.3
..LN1084:
#       free(void *)
        call      free                                          #212.3
..LN1085:
                                # LOE
..B6.110:                       # Preds ..B6.109                # Infreq
..LN1086:
	.loc    1  129  is_stmt 1
        movq      2624(%rsp), %rax                              #129.10
..LN1087:
	.loc    1  129  epilogue_begin  is_stmt 1
        addq      $2776, %rsp                                   #129.10
	.cfi_restore 3
..LN1088:
        popq      %rbx                                          #129.10
	.cfi_restore 15
..LN1089:
        popq      %r15                                          #129.10
	.cfi_restore 14
..LN1090:
        popq      %r14                                          #129.10
	.cfi_restore 13
..LN1091:
        popq      %r13                                          #129.10
	.cfi_restore 12
..LN1092:
        popq      %r12                                          #129.10
..LN1093:
        movq      %rbp, %rsp                                    #129.10
..LN1094:
        popq      %rbp                                          #129.10
	.cfi_def_cfa 7, 8
	.cfi_restore 6
..LN1095:
        ret                                                     #129.10
	.cfi_def_cfa 6, 16
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_offset 6, -16
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN1096:
                                # LOE
..B6.111:                       # Preds ..B6.78                 # Infreq
..LN1097:
	.loc    1  172  is_stmt 1
        incl      %ecx                                          #172.21
..LN1098:
        addq      %r11, %rdx                                    #172.21
..LN1099:
        incq      %rax                                          #172.21
..LN1100:
        cmpl      %r15d, %ecx                                   #172.16
..LN1101:
        jl        ..B6.78       # Prob 82%                      #172.16
..LN1102:
        jmp       ..B6.107      # Prob 100%                     #172.16
..LN1103:
                                # LOE rax rdx rsi rdi r8 r9 r11 r13 ecx r14d r15d xmm0
..B6.113:                       # Preds ..B6.67                 # Infreq
..LN1104:
	.loc    1  75  is_stmt 1
        incl      %r9d                                          #75.18
..LN1105:
        addq      %r8, %r10                                     #75.18
..LN1106:
        lea       1(%rsi,%rax), %esi                            #75.18
..LN1107:
        cmpl      984(%rsp), %r9d                               #75.14
..LN1108:
        jl        ..B6.67       # Prob 82%                      #75.14
..LN1109:
        jmp       ..B6.73       # Prob 100%                     #75.14
..LN1110:
                                # LOE rdx rcx rdi r8 r10 eax esi r9d
..B6.115:                       # Preds ..B6.51                 # Infreq
..LN1111:
        incl      %ecx                                          #75.18
..LN1112:
        addq      %rsi, %rdx                                    #75.18
..LN1113:
        lea       1(%rax,%r8), %eax                             #75.18
..LN1114:
        cmpl      328(%rsp), %ecx                               #75.14
..LN1115:
        jl        ..B6.51       # Prob 82%                      #75.14
..LN1116:
        jmp       ..B6.64       # Prob 100%                     #75.14
..LN1117:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B6.117:                       # Preds ..B6.59                 # Infreq
..LN1118:
	.loc    1  100  is_stmt 1
        incl      %ecx                                          #100.18
..LN1119:
        addq      %rsi, %rdx                                    #100.18
..LN1120:
        lea       1(%rax,%r8), %eax                             #100.18
..LN1121:
        cmpl      8(%rsp), %ecx                                 #100.14
..LN1122:
        jl        ..B6.59       # Prob 82%                      #100.14
..LN1123:
        jmp       ..B6.64       # Prob 100%                     #100.14
..LN1124:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B6.120:                       # Preds ..B6.38                 # Infreq
..LN1125:
	.loc    1  158  is_stmt 1
        xorl      %r12d, %r12d                                  #158.28
..LN1126:
        jmp       ..B6.42       # Prob 100%                     #158.28
..LN1127:
                                # LOE rax rdx rcx r9 r10 r11 r12 r13 ebx esi r8d r14d
..B6.121:                       # Preds ..B6.25 ..B6.27 ..B6.29 # Infreq
..LN1128:
        xorl      %r14d, %r14d                                  #158.28
..LN1129:
        jmp       ..B6.37       # Prob 100%                     #158.28
..LN1130:
                                # LOE rax rdx rcx r9 r10 r11 ebx esi r8d r14d
..B6.124:                       # Preds ..B6.8 ..B6.11 ..B6.13  # Infreq
..LN1131:
        xorl      %r14d, %r14d                                  #158.28
..LN1132:
        jmp       ..B6.21       # Prob 100%                     #158.28
..LN1133:
                                # LOE rax rdx rcx r9 r10 r11 r14 ebx esi r8d
..B6.126:                       # Preds ..B6.9                  # Infreq
..LN1134:
        movq      (%rsp), %r14                                  #158.28
..LN1135:
        xorl      %r12d, %r12d                                  #158.28
..LN1136:
        jmp       ..B6.18       # Prob 100%                     #158.28
..LN1137:
        .align    16,0x90
	.cfi_endproc
..LN1138:
                                # LOE rax rdx rcx r9 r10 r11 r12 r13 r14 ebx esi r8d
..LN1139:
# mark_end;
	.type	create_xgrid_1dx2d_order1_,@function
	.size	create_xgrid_1dx2d_order1_,.-create_xgrid_1dx2d_order1_
..LNcreate_xgrid_1dx2d_order1_.1140:
.LNcreate_xgrid_1dx2d_order1_:
	.data
# -- End  create_xgrid_1dx2d_order1_
	.text
.L_2__routine_start_create_xgrid_1dx2d_order1_6:
# -- Begin  create_xgrid_1dx2d_order1
	.text
# mark_begin;
       .align    16,0x90
	.globl create_xgrid_1dx2d_order1
# --- create_xgrid_1dx2d_order1(const int *, const int *, const int *, const int *, const double *, const double *, const double *, const double *, const double *, int *, int *, int *, int *, double *)
create_xgrid_1dx2d_order1:
# parameter 1(nlon_in): %rdi
# parameter 2(nlat_in): %rsi
# parameter 3(nlon_out): %rdx
# parameter 4(nlat_out): %rcx
# parameter 5(lon_in): %r8
# parameter 6(lat_in): %r9
# parameter 7(lon_out): 16 + %rbp
# parameter 8(lat_out): 24 + %rbp
# parameter 9(mask_in): 32 + %rbp
# parameter 10(i_in): 40 + %rbp
# parameter 11(j_in): 48 + %rbp
# parameter 12(i_out): 56 + %rbp
# parameter 13(j_out): 64 + %rbp
# parameter 14(xgrid_area): 72 + %rbp
..B7.1:                         # Preds ..B7.0
	.cfi_startproc
..___tag_value_create_xgrid_1dx2d_order1.185:
..L186:
                                                        #137.1
..LN1141:
	.loc    1  137  is_stmt 1
        pushq     %rbp                                          #137.1
	.cfi_def_cfa_offset 16
..LN1142:
        movq      %rsp, %rbp                                    #137.1
	.cfi_def_cfa 6, 16
	.cfi_offset 6, -16
..LN1143:
        andq      $-32, %rsp                                    #137.1
..LN1144:
        pushq     %r12                                          #137.1
..LN1145:
        pushq     %r13                                          #137.1
..LN1146:
        pushq     %r14                                          #137.1
..LN1147:
        pushq     %r15                                          #137.1
..LN1148:
        pushq     %rbx                                          #137.1
..LN1149:
        subq      $2776, %rsp                                   #137.1
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN1150:
        movq      %rdi, %rbx                                    #137.1
..LN1151:
        movq      %rsi, %r12                                    #137.1
..LN1152:
        movq      %rdx, %r13                                    #137.1
..LN1153:
        movq      %rcx, %r15                                    #137.1
..LN1154:
        movq      %r9, 2592(%rsp)                               #137.1
..LN1155:
	.loc    1  145  prologue_end  is_stmt 1
        movl      (%rbx), %edi                                  #145.10
..LN1156:
        movl      %edi, 2184(%rsp)                              #145.10
..LN1157:
	.loc    1  172  is_stmt 1
        movslq    %edi, %rdi                                    #172.21
..LN1158:
        movq      %rdi, 2608(%rsp)                              #172.21
..LN1159:
	.loc    1  146  is_stmt 1
        movl      (%r12), %r11d                                 #146.10
..LN1160:
	.loc    1  154  is_stmt 1
        imull     %r11d, %edi                                   #154.23
..LN1161:
        movslq    %edi, %rdi                                    #154.23
..LN1162:
	.loc    1  147  is_stmt 1
        movl      (%r13), %eax                                  #147.10
..LN1163:
	.loc    1  148  is_stmt 1
        movl      (%r15), %r10d                                 #148.10
..LN1164:
	.loc    1  154  is_stmt 1
        shlq      $3, %rdi                                      #154.23
..LN1165:
	.loc    1  147  is_stmt 1
        movl      %eax, 2648(%rsp)                              #147.10
..LN1166:
	.loc    1  176  is_stmt 1
        movslq    %eax, %rax                                    #176.23
..LN1167:
	.loc    1  137  is_stmt 1
        movq      %r8, 2600(%rsp)                               #137.1
..LN1168:
	.loc    1  146  is_stmt 1
        movl      %r11d, 2168(%rsp)                             #146.10
..LN1169:
	.loc    1  176  is_stmt 1
        movq      %rax, 2752(%rsp)                              #176.23
..LN1170:
	.loc    1  148  is_stmt 1
        movl      %r10d, 2640(%rsp)                             #148.10
..LN1171:
	.loc    1  150  is_stmt 1
        movq      $0, 2624(%rsp)                                #150.3
..LN1172:
	.loc    1  154  is_stmt 1
#       malloc(size_t)
        call      malloc                                        #154.23
..LN1173:
                                # LOE rax rbx r12 r13 r15
..B7.130:                       # Preds ..B7.1
..LN1174:
        movq      %rax, 2160(%rsp)                              #154.23
..LN1175:
                                # LOE rbx r12 r13 r15
..B7.2:                         # Preds ..B7.130
..LN1176:
	.loc    1  155  is_stmt 1
        movl      2648(%rsp), %edi                              #155.24
..LN1177:
        imull     2640(%rsp), %edi                              #155.24
..LN1178:
        movslq    %edi, %rdi                                    #155.24
..LN1179:
        shlq      $3, %rdi                                      #155.24
..LN1180:
#       malloc(size_t)
        call      malloc                                        #155.24
..LN1181:
                                # LOE rax rbx r12 r13 r15
..B7.131:                       # Preds ..B7.2
..LN1182:
        movq      %rax, %r14                                    #155.24
..LN1183:
                                # LOE rbx r12 r13 r14 r15
..B7.3:                         # Preds ..B7.131
..LN1184:
	.loc    1  156  is_stmt 1
        movl      2184(%rsp), %eax                              #156.32
..LN1185:
        movl      2168(%rsp), %edx                              #156.40
..LN1186:
        lea       1(%rax), %edi                                 #156.32
..LN1187:
        movl      %edi, 24(%rsp)                                #156.32
..LN1188:
        lea       1(%rdx), %ecx                                 #156.40
..LN1189:
	.loc    1  158  is_stmt 1
        movslq    %edi, %rdi                                    #158.32
..LN1190:
        movq      %rdi, 32(%rsp)                                #158.32
..LN1191:
	.loc    1  156  is_stmt 1
        imull     %ecx, %edi                                    #156.40
..LN1192:
        movslq    %edi, %rdi                                    #156.40
..LN1193:
        shlq      $3, %rdi                                      #156.43
..LN1194:
        movl      %ecx, 40(%rsp)                                #156.40
..LN1195:
        movq      %rdi, (%rsp)                                  #156.43
..LN1196:
#       malloc(size_t)
        call      malloc                                        #156.20
..LN1197:
                                # LOE rax rbx r12 r13 r14 r15
..B7.132:                       # Preds ..B7.3
..LN1198:
        movq      %rax, 960(%rsp)                               #156.20
..LN1199:
                                # LOE rbx r12 r13 r14 r15
..B7.4:                         # Preds ..B7.132
..LN1200:
	.loc    1  157  is_stmt 1
        movq      (%rsp), %rdi                                  #157.20
..LN1201:
#       malloc(size_t)
        call      malloc                                        #157.20
..LN1202:
                                # LOE rax rbx r12 r13 r14 r15
..B7.133:                       # Preds ..B7.4
..LN1203:
        movq      %rax, 968(%rsp)                               #157.20
..LN1204:
                                # LOE rbx r12 r13 r14 r15
..B7.5:                         # Preds ..B7.133
..LN1205:
	.loc    1  158  is_stmt 1
        xorl      %r9d, %r9d                                    #158.32
..LN1206:
        xorl      %r8d, %r8d                                    #158.3
..LN1207:
        xorl      %r10d, %r10d                                  #158.32
..LN1208:
        cmpl      $0, 2168(%rsp)                                #158.17
..LN1209:
        jl        ..B7.48       # Prob 9%                       #158.17
..LN1210:
                                # LOE rbx r9 r10 r12 r13 r14 r15 r8d
..B7.6:                         # Preds ..B7.5
..LN1211:
        movq      2608(%rsp), %rsi                              #158.28
..LN1212:
        movq      %rbx, 8(%rsp)                                 #158.28
..LN1213:
        movq      %r14, 2656(%rsp)                              #158.28
..LN1214:
        movq      %r12, 16(%rsp)                                #158.28
..LN1215:
        lea       1(%rsi), %r11                                 #158.28
..LN1216:
        movl      %r11d, %esi                                   #158.28
..LN1217:
        movl      %esi, %eax                                    #158.28
..LN1218:
        andl      $-4, %eax                                     #158.28
..LN1219:
        movslq    %eax, %rax                                    #158.28
..LN1220:
        movq      %rax, (%rsp)                                  #158.28
..LN1221:
        movq      %r13, 640(%rsp)                               #158.28
..LN1222:
        movq      %r15, 648(%rsp)                               #158.28
..LN1223:
        movq      968(%rsp), %rax                               #158.28
..LN1224:
        movq      960(%rsp), %rdx                               #158.28
..LN1225:
        movl      24(%rsp), %ebx                                #158.28
..LN1226:
        movq      2592(%rsp), %rcx                              #158.28
..LN1227:
                                # LOE rax rdx rcx r9 r10 r11 ebx esi r8d
..B7.7:                         # Preds ..B7.46 ..B7.6
..L196:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN1228:
        cmpl      $0, 2184(%rsp)                                #158.42
..LN1229:
        jl        ..B7.46       # Prob 50%                      #158.42
..LN1230:
                                # LOE rax rdx rcx r9 r10 r11 ebx esi r8d
..B7.8:                         # Preds ..B7.7
..LN1231:
        cmpq      $4, %r11                                      #158.28
..LN1232:
        jl        ..B7.124      # Prob 10%                      #158.28
..LN1233:
                                # LOE rax rdx rcx r9 r10 r11 ebx esi r8d
..B7.9:                         # Preds ..B7.8
..LN1234:
	.loc    1  159  is_stmt 1
        lea       (%rdx,%r9,8), %r13                            #159.5
..LN1235:
	.loc    1  158  is_stmt 1
        cmpq      $95, %r11                                     #158.28
..LN1236:
        jl        ..B7.126      # Prob 10%                      #158.28
..LN1237:
                                # LOE rax rdx rcx r9 r10 r11 r13 ebx esi r8d
..B7.10:                        # Preds ..B7.9
..LN1238:
        movq      %r13, %r14                                    #158.28
..LN1239:
        andq      $31, %r14                                     #158.28
..LN1240:
        testl     %r14d, %r14d                                  #158.28
..LN1241:
        je        ..B7.13       # Prob 50%                      #158.28
..LN1242:
                                # LOE rax rdx rcx r9 r10 r11 r13 ebx esi r8d r14d
..B7.11:                        # Preds ..B7.10
..LN1243:
        testl     $7, %r14d                                     #158.28
..LN1244:
        jne       ..B7.124      # Prob 10%                      #158.28
..LN1245:
                                # LOE rax rdx rcx r9 r10 r11 r13 ebx esi r8d r14d
..B7.12:                        # Preds ..B7.11
..LN1246:
        negl      %r14d                                         #158.28
..LN1247:
        addl      $32, %r14d                                    #158.28
..LN1248:
        shrl      $3, %r14d                                     #158.28
..LN1249:
                                # LOE rax rdx rcx r9 r10 r11 r13 ebx esi r8d r14d
..B7.13:                        # Preds ..B7.12 ..B7.10
..LN1250:
        movl      %r14d, %r12d                                  #158.28
..LN1251:
        lea       4(%r12), %rdi                                 #158.28
..LN1252:
        cmpq      %rdi, %r11                                    #158.28
..LN1253:
        jl        ..B7.124      # Prob 10%                      #158.28
..LN1254:
                                # LOE rax rdx rcx r9 r10 r11 r12 r13 ebx esi r8d r14d
..B7.14:                        # Preds ..B7.13
..LN1255:
        negl      %r14d                                         #158.28
..LN1256:
        xorl      %edi, %edi                                    #158.28
..LN1257:
        addl      %esi, %r14d                                   #158.28
..LN1258:
        andl      $3, %r14d                                     #158.28
..LN1259:
        negl      %r14d                                         #158.28
..LN1260:
        addl      %esi, %r14d                                   #158.28
..LN1261:
        movslq    %r14d, %r14                                   #158.28
..LN1262:
        testq     %r12, %r12                                    #158.28
..LN1263:
        jbe       ..B7.18       # Prob 10%                      #158.28
..LN1264:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 r14 ebx esi r8d
..B7.15:                        # Preds ..B7.14
..LN1265:
        movq      2600(%rsp), %r15                              #
..LN1266:
                                # LOE rax rdx rdi r9 r10 r11 r12 r13 r14 r15 ebx esi r8d
..B7.16:                        # Preds ..B7.16 ..B7.15
..L197:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # PEELED LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
..LN1267:
	.loc    1  159  is_stmt 1
        movq      (%r15,%rdi,8), %rcx                           #159.24
..LN1268:
        movq      %rcx, (%r13,%rdi,8)                           #159.5
..LN1269:
	.loc    1  158  is_stmt 1
        incq      %rdi                                          #158.28
..LN1270:
        cmpq      %r12, %rdi                                    #158.28
..LN1271:
        jb        ..B7.16       # Prob 82%                      #158.28
..LN1272:
                                # LOE rax rdx rdi r9 r10 r11 r12 r13 r14 r15 ebx esi r8d
..B7.17:                        # Preds ..B7.16
..LN1273:
        movq      2592(%rsp), %rcx                              #
..LN1274:
                                # LOE rax rdx rcx r9 r10 r11 r12 r13 r14 ebx esi r8d
..B7.18:                        # Preds ..B7.17 ..B7.14 ..B7.126
..LN1275:
        movq      2600(%rsp), %rdi                              #
..LN1276:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 r14 ebx esi r8d
..B7.19:                        # Preds ..B7.19 ..B7.18
..L198:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS VECTORIZED
                # VECTORIZATION HAS UNALIGNED MEMORY REFERENCES
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN1277:
	.loc    1  159  is_stmt 1
        vmovupd   (%rdi,%r12,8), %ymm0                          #159.24
..LN1278:
        vmovupd   %ymm0, (%r13,%r12,8)                          #159.5
..LN1279:
	.loc    1  158  is_stmt 1
        addq      $4, %r12                                      #158.28
..LN1280:
        cmpq      %r14, %r12                                    #158.28
..LN1281:
        jb        ..B7.19       # Prob 82%                      #158.28
..LN1282:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 r14 ebx esi r8d
..B7.21:                        # Preds ..B7.19 ..B7.124
..LN1283:
        cmpq      %r11, %r14                                    #158.28
..LN1284:
        jae       ..B7.25       # Prob 10%                      #158.28
..LN1285:
                                # LOE rax rdx rcx r9 r10 r11 r14 ebx esi r8d
..B7.22:                        # Preds ..B7.21
..LN1286:
	.loc    1  159  is_stmt 1
        movq      2600(%rsp), %r13                              #159.5
..LN1287:
        lea       (%rdx,%r9,8), %rdi                            #159.5
..LN1288:
                                # LOE rax rdx rcx rdi r9 r10 r11 r13 r14 ebx esi r8d
..B7.23:                        # Preds ..B7.23 ..B7.22
..L199:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
..LN1289:
        movq      (%r13,%r14,8), %r12                           #159.24
..LN1290:
        movq      %r12, (%rdi,%r14,8)                           #159.5
..LN1291:
	.loc    1  158  is_stmt 1
        incq      %r14                                          #158.28
..LN1292:
        cmpq      %r11, %r14                                    #158.28
..LN1293:
        jb        ..B7.23       # Prob 82%                      #158.28
..LN1294:
                                # LOE rax rdx rcx rdi r9 r10 r11 r13 r14 ebx esi r8d
..B7.25:                        # Preds ..B7.23 ..B7.21
..LN1295:
        cmpl      $16, %ebx                                     #158.28
..LN1296:
        jl        ..B7.121      # Prob 10%                      #158.28
..LN1297:
                                # LOE rax rdx rcx r9 r10 r11 ebx esi r8d
..B7.26:                        # Preds ..B7.25
..LN1298:
	.loc    1  160  is_stmt 1
        lea       (%rax,%r9,8), %rdi                            #160.5
..LN1299:
	.loc    1  158  is_stmt 1
        movq      %rdi, %r13                                    #158.28
..LN1300:
        andq      $31, %r13                                     #158.28
..LN1301:
        movl      %r13d, %r13d                                  #158.28
..LN1302:
        testl     %r13d, %r13d                                  #158.28
..LN1303:
        je        ..B7.29       # Prob 50%                      #158.28
..LN1304:
                                # LOE rax rdx rcx rdi r9 r10 r11 r13 ebx esi r8d
..B7.27:                        # Preds ..B7.26
..LN1305:
        testl     $7, %r13d                                     #158.28
..LN1306:
        jne       ..B7.121      # Prob 10%                      #158.28
..LN1307:
                                # LOE rax rdx rcx rdi r9 r10 r11 r13 ebx esi r8d
..B7.28:                        # Preds ..B7.27
..LN1308:
        negl      %r13d                                         #158.28
..LN1309:
        addl      $32, %r13d                                    #158.28
..LN1310:
        shrl      $3, %r13d                                     #158.28
..LN1311:
                                # LOE rax rdx rcx rdi r9 r10 r11 r13 ebx esi r8d
..B7.29:                        # Preds ..B7.28 ..B7.26
..LN1312:
        lea       16(%r13), %r12d                               #158.28
..LN1313:
        cmpl      %r12d, %ebx                                   #158.28
..LN1314:
        jl        ..B7.121      # Prob 10%                      #158.28
..LN1315:
                                # LOE rax rdx rcx rdi r9 r10 r11 r13 ebx esi r8d
..B7.30:                        # Preds ..B7.29
..LN1316:
        movl      %ebx, %r14d                                   #158.28
..LN1317:
        xorl      %r12d, %r12d                                  #158.28
..LN1318:
        subl      %r13d, %r14d                                  #158.28
..LN1319:
        andl      $15, %r14d                                    #158.28
..LN1320:
        negl      %r14d                                         #158.28
..LN1321:
        addl      %ebx, %r14d                                   #158.28
..LN1322:
	.loc    1  160  is_stmt 1
        vmovsd    (%rcx,%r10,8), %xmm0                          #160.24
..LN1323:
	.loc    1  158  is_stmt 1
        testq     %r13, %r13                                    #158.28
..LN1324:
        jbe       ..B7.34       # Prob 10%                      #158.28
..LN1325:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 ebx esi r8d r14d xmm0
..B7.32:                        # Preds ..B7.30 ..B7.32
..L200:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 4
                # PEELED LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.648438
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.937500
..LN1326:
	.loc    1  160  is_stmt 1
        vmovsd    %xmm0, (%rdi,%r12,8)                          #160.5
..LN1327:
	.loc    1  158  is_stmt 1
        incq      %r12                                          #158.28
..LN1328:
        cmpq      %r13, %r12                                    #158.28
..LN1329:
        jb        ..B7.32       # Prob 82%                      #158.28
..LN1330:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 ebx esi r8d r14d xmm0
..B7.34:                        # Preds ..B7.32 ..B7.30
..LN1331:
        movslq    %r14d, %r12                                   #158.28
..LN1332:
	.loc    1  160  is_stmt 1
        vbroadcastsd %xmm0, %ymm0                               #160.24
..LN1333:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 ebx esi r8d r14d ymm0
..B7.35:                        # Preds ..B7.35 ..B7.34
..L201:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 4
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 8.648438
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.937500
                # MAIN VECTOR TYPE: 64-bits floating point
..LN1334:
        vmovupd   %ymm0, (%rdi,%r13,8)                          #160.5
..LN1335:
        vmovupd   %ymm0, 32(%rdi,%r13,8)                        #160.5
..LN1336:
        vmovupd   %ymm0, 64(%rdi,%r13,8)                        #160.5
..LN1337:
        vmovupd   %ymm0, 96(%rdi,%r13,8)                        #160.5
..LN1338:
	.loc    1  158  is_stmt 1
        addq      $16, %r13                                     #158.28
..LN1339:
        cmpq      %r12, %r13                                    #158.28
..LN1340:
        jb        ..B7.35       # Prob 82%                      #158.28
..LN1341:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 ebx esi r8d r14d ymm0
..B7.37:                        # Preds ..B7.35 ..B7.121
..LN1342:
        lea       1(%r14), %edi                                 #158.28
..LN1343:
        cmpl      %edi, %ebx                                    #158.28
..LN1344:
        jb        ..B7.46       # Prob 50%                      #158.28
..LN1345:
                                # LOE rax rdx rcx r9 r10 r11 ebx esi r8d r14d
..B7.38:                        # Preds ..B7.37
..LN1346:
        movslq    %r14d, %r13                                   #158.28
..LN1347:
        negq      %r13                                          #158.28
..LN1348:
        addq      32(%rsp), %r13                                #158.28
..LN1349:
        cmpq      $4, %r13                                      #158.28
..LN1350:
        jl        ..B7.120      # Prob 10%                      #158.28
..LN1351:
                                # LOE rax rdx rcx r9 r10 r11 r13 ebx esi r8d r14d
..B7.39:                        # Preds ..B7.38
..LN1352:
	.loc    1  160  is_stmt 1
        movslq    %r14d, %r15                                   #160.5
..LN1353:
	.loc    1  158  is_stmt 1
        movl      %r13d, %r12d                                  #158.28
..LN1354:
	.loc    1  160  is_stmt 1
        addq      %r9, %r15                                     #160.5
..LN1355:
	.loc    1  158  is_stmt 1
        andl      $-4, %r12d                                    #158.28
..LN1356:
	.loc    1  160  is_stmt 1
        vbroadcastsd (%rcx,%r10,8), %ymm0                       #160.24
..LN1357:
	.loc    1  158  is_stmt 1
        xorl      %edi, %edi                                    #158.28
..LN1358:
        movslq    %r12d, %r12                                   #158.28
..LN1359:
	.loc    1  160  is_stmt 1
        lea       (%rax,%r15,8), %r15                           #160.5
..LN1360:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 r15 ebx esi r8d r14d ymm0
..B7.40:                        # Preds ..B7.40 ..B7.39
..L202:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS VECTORIZED
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION HAS UNALIGNED MEMORY REFERENCES
                # VECTORIZATION SPEEDUP COEFFECIENT 2.542969
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 2.750000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN1361:
        vmovupd   %ymm0, (%r15,%rdi,8)                          #160.5
..LN1362:
	.loc    1  158  is_stmt 1
        addq      $4, %rdi                                      #158.28
..LN1363:
        cmpq      %r12, %rdi                                    #158.28
..LN1364:
        jb        ..B7.40       # Prob 82%                      #158.28
..LN1365:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 r15 ebx esi r8d r14d ymm0
..B7.42:                        # Preds ..B7.40 ..B7.120
..LN1366:
        cmpq      %r13, %r12                                    #158.28
..LN1367:
        jae       ..B7.46       # Prob 10%                      #158.28
..LN1368:
                                # LOE rax rdx rcx r9 r10 r11 r12 r13 ebx esi r8d r14d
..B7.43:                        # Preds ..B7.42
..LN1369:
	.loc    1  160  is_stmt 1
        movslq    %r14d, %r14                                   #160.5
..LN1370:
        addq      %r9, %r14                                     #160.5
..LN1371:
        lea       (%rax,%r14,8), %rdi                           #160.5
..LN1372:
        movq      (%rcx,%r10,8), %r14                           #160.24
..LN1373:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 r14 ebx esi r8d
..B7.44:                        # Preds ..B7.44 ..B7.43
..L203:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 2.542969
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 2.750000
..LN1374:
        movq      %r14, (%rdi,%r12,8)                           #160.5
..LN1375:
	.loc    1  158  is_stmt 1
        incq      %r12                                          #158.28
..LN1376:
        cmpq      %r13, %r12                                    #158.28
..LN1377:
        jb        ..B7.44       # Prob 82%                      #158.28
..LN1378:
                                # LOE rax rdx rcx rdi r9 r10 r11 r12 r13 r14 ebx esi r8d
..B7.46:                        # Preds ..B7.44 ..B7.7 ..B7.37 ..B7.42
..LN1379:
        incl      %r8d                                          #158.3
..LN1380:
        incq      %r10                                          #158.3
..LN1381:
        addq      32(%rsp), %r9                                 #158.3
..LN1382:
        cmpl      40(%rsp), %r8d                                #158.3
..LN1383:
        jb        ..B7.7        # Prob 82%                      #158.3
..LN1384:
                                # LOE rax rdx rcx r9 r10 r11 ebx esi r8d
..B7.47:                        # Preds ..B7.46
..LN1385:
        movq      2656(%rsp), %r14                              #
..LN1386:
        movq      8(%rsp), %rbx                                 #
..LN1387:
        movq      16(%rsp), %r12                                #
..LN1388:
        movq      640(%rsp), %r13                               #
..LN1389:
        movq      648(%rsp), %r15                               #
..LN1390:
                                # LOE rbx r12 r13 r14 r15
..B7.48:                        # Preds ..B7.5 ..B7.47
..LN1391:
	.loc    1  163  is_stmt 1
        cmpl      $1, 2184(%rsp)                                #163.12
..LN1392:
        jle       ..B7.57       # Prob 50%                      #163.12
..LN1393:
                                # LOE rbx r12 r13 r14 r15
..B7.49:                        # Preds ..B7.48
..LN1394:
	.loc    1  71  is_stmt 1
        movl      (%rbx), %r8d                                  #71.9
..LN1395:
	.loc    1  75  is_stmt 1
        xorl      %ecx, %ecx                                    #75.7
..LN1396:
	.loc    1  72  is_stmt 1
        movl      (%r12), %ebx                                  #72.9
..LN1397:
	.loc    1  75  is_stmt 1
        xorl      %edx, %edx                                    #75.9
..LN1398:
        movslq    %r8d, %rsi                                    #75.18
..LN1399:
        testl     %ebx, %ebx                                    #75.14
..LN1400:
        jle       ..B7.65       # Prob 10%                      #75.14
..LN1401:
                                # LOE rdx rsi r13 r14 r15 ecx ebx r8d
..B7.50:                        # Preds ..B7.49
..LN1402:
        movl      %ebx, 328(%rsp)                               #75.9
..LN1403:
        xorl      %eax, %eax                                    #75.9
..LN1404:
        movq      %r14, 2656(%rsp)                              #75.9
..LN1405:
        movq      %r13, 640(%rsp)                               #75.9
..LN1406:
        movq      %r15, 648(%rsp)                               #75.9
..LN1407:
        movq      968(%rsp), %r10                               #75.9
..LN1408:
        movq      960(%rsp), %rdi                               #75.9
..LN1409:
        movq      2160(%rsp), %r9                               #75.9
..LN1410:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B7.51:                        # Preds ..B7.56 ..B7.115 ..B7.50
..L204:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN1411:
        xorl      %r13d, %r13d                                  #75.27
..LN1412:
        testl     %r8d, %r8d                                    #75.36
..LN1413:
        jle       ..B7.115      # Prob 10%                      #75.36
..LN1414:
                                # LOE rdx rsi rdi r9 r10 r13 eax ecx r8d
..B7.52:                        # Preds ..B7.51
..LN1415:
	.loc    1  85  is_stmt 1
        movq      %rdx, 344(%rsp)                               #85.5
..LN1416:
	.loc    1  78  is_stmt 1
        lea       (%r8,%rax), %ebx                              #78.25
..LN1417:
        movslq    %ebx, %rbx                                    #78.15
..LN1418:
	.loc    1  85  is_stmt 1
        lea       (%r9,%rdx,8), %r11                            #85.5
..LN1419:
	.loc    1  76  is_stmt 1
        movslq    %eax, %rax                                    #76.15
..LN1420:
	.loc    1  85  is_stmt 1
        movq      %r11, 368(%rsp)                               #85.5
..LN1421:
        movl      %eax, 352(%rsp)                               #85.5
..LN1422:
        movl      %ecx, 336(%rsp)                               #85.5
..LN1423:
	.loc    1  78  is_stmt 1
        lea       (%rdi,%rbx,8), %r12                           #78.15
..LN1424:
	.loc    1  85  is_stmt 1
        movq      %rsi, 360(%rsp)                               #85.5
..LN1425:
	.loc    1  82  is_stmt 1
        lea       (%r10,%rbx,8), %rbx                           #82.15
..LN1426:
	.loc    1  85  is_stmt 1
        movl      %r8d, 320(%rsp)                               #85.5
..LN1427:
	.loc    1  80  is_stmt 1
        lea       (%r10,%rax,8), %r14                           #80.15
..LN1428:
	.loc    1  76  is_stmt 1
        lea       (%rdi,%rax,8), %r15                           #76.15
..LN1429:
                                # LOE rbx r12 r13 r14 r15
..B7.53:                        # Preds ..B7.55 ..B7.52
..L205:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN1430:
	.loc    1  84  is_stmt 1
        lea       (%rsp), %rdi                                  #84.12
..LN1431:
	.loc    1  76  is_stmt 1
        movq      (%r15,%r13,8), %rax                           #76.15
..LN1432:
	.loc    1  84  is_stmt 1
        lea       160(%rsp), %rsi                               #84.12
..LN1433:
	.loc    1  83  is_stmt 1
        movq      8(%rbx,%r13,8), %rdx                          #83.15
..LN1434:
	.loc    1  76  is_stmt 1
        movq      %rax, (%rdi)                                  #76.5
..LN1435:
	.loc    1  77  is_stmt 1
        movq      8(%r15,%r13,8), %rcx                          #77.15
..LN1436:
	.loc    1  78  is_stmt 1
        movq      16(%r12,%r13,8), %r8                          #78.15
..LN1437:
	.loc    1  79  is_stmt 1
        movq      8(%r12,%r13,8), %r9                           #79.15
..LN1438:
	.loc    1  80  is_stmt 1
        movq      (%r14,%r13,8), %r10                           #80.15
..LN1439:
	.loc    1  81  is_stmt 1
        movq      8(%r14,%r13,8), %r11                          #81.15
..LN1440:
	.loc    1  82  is_stmt 1
        movq      16(%rbx,%r13,8), %rax                         #82.15
..LN1441:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN1442:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN1443:
	.loc    1  77  is_stmt 1
        movq      %rcx, 8(%rdi)                                 #77.5
..LN1444:
	.loc    1  78  is_stmt 1
        movq      %r8, 16(%rdi)                                 #78.5
..LN1445:
	.loc    1  79  is_stmt 1
        movq      %r9, 24(%rdi)                                 #79.5
..LN1446:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN1447:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN1448:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN1449:
	.loc    1  84  is_stmt 1
        vzeroupper                                              #84.12
..LN1450:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_1dx2d_order1.206:
..LN1451:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_1dx2d_order1.207:
..LN1452:
                                # LOE rbx r12 r13 r14 r15 eax
..B7.54:                        # Preds ..B7.53
..LN1453:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN1454:
        lea       (%rsp), %rdi                                  #85.20
..LN1455:
        lea       160(%rsp), %rsi                               #85.20
..___tag_value_create_xgrid_1dx2d_order1.208:
..LN1456:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_1dx2d_order1.209:
..LN1457:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B7.55:                        # Preds ..B7.54
..LN1458:
        movq      368(%rsp), %rax                               #85.5
..LN1459:
        vmovsd    %xmm0, (%rax,%r13,8)                          #85.5
..LN1460:
	.loc    1  75  is_stmt 1
        incq      %r13                                          #75.40
..LN1461:
        cmpq      360(%rsp), %r13                               #75.36
..LN1462:
        jl        ..B7.53       # Prob 82%                      #75.36
..LN1463:
                                # LOE rbx r12 r13 r14 r15
..B7.56:                        # Preds ..B7.55
..LN1464:
        movl      336(%rsp), %ecx                               #
..LN1465:
        incl      %ecx                                          #75.18
..LN1466:
        movq      344(%rsp), %rdx                               #
..LN1467:
        movq      360(%rsp), %rsi                               #
..LN1468:
        addq      %rsi, %rdx                                    #75.18
..LN1469:
        movl      352(%rsp), %eax                               #
..LN1470:
        movl      320(%rsp), %r8d                               #
..LN1471:
        lea       1(%rax,%r8), %eax                             #75.18
..LN1472:
        movq      968(%rsp), %r10                               #
..LN1473:
        movq      960(%rsp), %rdi                               #
..LN1474:
        movq      2160(%rsp), %r9                               #
..LN1475:
        cmpl      328(%rsp), %ecx                               #75.14
..LN1476:
        jl        ..B7.51       # Prob 82%                      #75.14
..LN1477:
        jmp       ..B7.64       # Prob 100%                     #75.14
..LN1478:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B7.57:                        # Preds ..B7.48
..LN1479:
	.loc    1  96  is_stmt 1
        movl      (%rbx), %r8d                                  #96.9
..LN1480:
	.loc    1  100  is_stmt 1
        xorl      %ecx, %ecx                                    #100.7
..LN1481:
	.loc    1  97  is_stmt 1
        movl      (%r12), %ebx                                  #97.9
..LN1482:
	.loc    1  100  is_stmt 1
        xorl      %edx, %edx                                    #100.9
..LN1483:
        movslq    %r8d, %rsi                                    #100.18
..LN1484:
        testl     %ebx, %ebx                                    #100.14
..LN1485:
        jle       ..B7.65       # Prob 10%                      #100.14
..LN1486:
                                # LOE rdx rsi r13 r14 r15 ecx ebx r8d
..B7.58:                        # Preds ..B7.57
..LN1487:
        movl      %ebx, 8(%rsp)                                 #100.9
..LN1488:
        xorl      %eax, %eax                                    #100.9
..LN1489:
        movq      %r14, 2656(%rsp)                              #100.9
..LN1490:
        movq      %r13, 640(%rsp)                               #100.9
..LN1491:
        movq      %r15, 648(%rsp)                               #100.9
..LN1492:
        movq      968(%rsp), %r10                               #100.9
..LN1493:
        movq      960(%rsp), %rdi                               #100.9
..LN1494:
        movq      2160(%rsp), %r9                               #100.9
..LN1495:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B7.59:                        # Preds ..B7.63 ..B7.117 ..B7.58
..L210:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN1496:
        xorl      %r13d, %r13d                                  #100.27
..LN1497:
        testl     %r8d, %r8d                                    #100.36
..LN1498:
        jle       ..B7.117      # Prob 10%                      #100.36
..LN1499:
                                # LOE rdx rsi rdi r9 r10 r13 eax ecx r8d
..B7.60:                        # Preds ..B7.59
..LN1500:
	.loc    1  110  is_stmt 1
        movq      %rdx, 24(%rsp)                                #110.5
..LN1501:
	.loc    1  103  is_stmt 1
        lea       (%r8,%rax), %ebx                              #103.25
..LN1502:
        movslq    %ebx, %rbx                                    #103.15
..LN1503:
	.loc    1  110  is_stmt 1
        lea       (%r9,%rdx,8), %r11                            #110.5
..LN1504:
	.loc    1  101  is_stmt 1
        movslq    %eax, %rax                                    #101.15
..LN1505:
	.loc    1  110  is_stmt 1
        movq      %r11, 48(%rsp)                                #110.5
..LN1506:
        movl      %eax, 32(%rsp)                                #110.5
..LN1507:
        movl      %ecx, 16(%rsp)                                #110.5
..LN1508:
	.loc    1  103  is_stmt 1
        lea       (%rdi,%rbx,8), %r12                           #103.15
..LN1509:
	.loc    1  110  is_stmt 1
        movq      %rsi, 40(%rsp)                                #110.5
..LN1510:
	.loc    1  107  is_stmt 1
        lea       (%r10,%rbx,8), %rbx                           #107.15
..LN1511:
	.loc    1  110  is_stmt 1
        movl      %r8d, (%rsp)                                  #110.5
..LN1512:
	.loc    1  105  is_stmt 1
        lea       (%r10,%rax,8), %r14                           #105.15
..LN1513:
	.loc    1  101  is_stmt 1
        lea       (%rdi,%rax,8), %r15                           #101.15
..LN1514:
                                # LOE rbx r12 r13 r14 r15
..B7.61:                        # Preds ..B7.62 ..B7.60
..L211:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN1515:
	.loc    1  110  is_stmt 1
        lea       320(%rsp), %rdi                               #110.20
..LN1516:
	.loc    1  101  is_stmt 1
        movq      (%r15,%r13,8), %rax                           #101.15
..LN1517:
	.loc    1  110  is_stmt 1
        lea       480(%rsp), %rsi                               #110.20
..LN1518:
	.loc    1  108  is_stmt 1
        movq      8(%rbx,%r13,8), %rdx                          #108.15
..LN1519:
	.loc    1  101  is_stmt 1
        movq      %rax, -160(%rsi)                              #101.5
..LN1520:
	.loc    1  102  is_stmt 1
        movq      8(%r15,%r13,8), %rcx                          #102.15
..LN1521:
	.loc    1  103  is_stmt 1
        movq      16(%r12,%r13,8), %r8                          #103.15
..LN1522:
	.loc    1  104  is_stmt 1
        movq      8(%r12,%r13,8), %r9                           #104.15
..LN1523:
	.loc    1  105  is_stmt 1
        movq      (%r14,%r13,8), %r10                           #105.15
..LN1524:
	.loc    1  106  is_stmt 1
        movq      8(%r14,%r13,8), %r11                          #106.15
..LN1525:
	.loc    1  107  is_stmt 1
        movq      16(%rbx,%r13,8), %rax                         #107.15
..LN1526:
	.loc    1  108  is_stmt 1
        movq      %rdx, 24(%rsi)                                #108.5
..LN1527:
	.loc    1  110  is_stmt 1
        movl      $4, %edx                                      #110.20
..LN1528:
	.loc    1  102  is_stmt 1
        movq      %rcx, -152(%rsi)                              #102.5
..LN1529:
	.loc    1  103  is_stmt 1
        movq      %r8, -144(%rsi)                               #103.5
..LN1530:
	.loc    1  104  is_stmt 1
        movq      %r9, -136(%rsi)                               #104.5
..LN1531:
	.loc    1  105  is_stmt 1
        movq      %r10, (%rsi)                                  #105.5
..LN1532:
	.loc    1  106  is_stmt 1
        movq      %r11, 8(%rsi)                                 #106.5
..LN1533:
	.loc    1  107  is_stmt 1
        movq      %rax, 16(%rsi)                                #107.5
..LN1534:
	.loc    1  110  is_stmt 1
        vzeroupper                                              #110.20
..___tag_value_create_xgrid_1dx2d_order1.212:
..LN1535:
#       poly_area_no_adjust(const double *, const double *, int)
        call      poly_area_no_adjust                           #110.20
..___tag_value_create_xgrid_1dx2d_order1.213:
..LN1536:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B7.62:                        # Preds ..B7.61
..LN1537:
        movq      48(%rsp), %rax                                #110.5
..LN1538:
        vmovsd    %xmm0, (%rax,%r13,8)                          #110.5
..LN1539:
	.loc    1  100  is_stmt 1
        incq      %r13                                          #100.40
..LN1540:
        cmpq      40(%rsp), %r13                                #100.36
..LN1541:
        jl        ..B7.61       # Prob 82%                      #100.36
..LN1542:
                                # LOE rbx r12 r13 r14 r15
..B7.63:                        # Preds ..B7.62
..LN1543:
        movl      16(%rsp), %ecx                                #
..LN1544:
        incl      %ecx                                          #100.18
..LN1545:
        movq      24(%rsp), %rdx                                #
..LN1546:
        movq      40(%rsp), %rsi                                #
..LN1547:
        addq      %rsi, %rdx                                    #100.18
..LN1548:
        movl      32(%rsp), %eax                                #
..LN1549:
        movl      (%rsp), %r8d                                  #
..LN1550:
        lea       1(%rax,%r8), %eax                             #100.18
..LN1551:
        movq      968(%rsp), %r10                               #
..LN1552:
        movq      960(%rsp), %rdi                               #
..LN1553:
        movq      2160(%rsp), %r9                               #
..LN1554:
        cmpl      8(%rsp), %ecx                                 #100.14
..LN1555:
        jl        ..B7.59       # Prob 82%                      #100.14
..LN1556:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B7.64:                        # Preds ..B7.56 ..B7.117 ..B7.115 ..B7.63 # Infreq
..LN1557:
        movq      2656(%rsp), %r14                              #
..LN1558:
        movq      640(%rsp), %r13                               #
..LN1559:
        movq      648(%rsp), %r15                               #
..LN1560:
                                # LOE r13 r14 r15
..B7.65:                        # Preds ..B7.64 ..B7.57 ..B7.49 # Infreq
..LN1561:
	.loc    1  72  is_stmt 1
        movl      (%r15), %edx                                  #72.9
..LN1562:
	.loc    1  75  is_stmt 1
        xorl      %r9d, %r9d                                    #75.7
..LN1563:
	.loc    1  71  is_stmt 1
        movl      (%r13), %eax                                  #71.9
..LN1564:
	.loc    1  75  is_stmt 1
        xorl      %r10d, %r10d                                  #75.9
..LN1565:
        movslq    %eax, %r8                                     #75.18
..LN1566:
        testl     %edx, %edx                                    #75.14
..LN1567:
        jle       ..B7.74       # Prob 10%                      #75.14
..LN1568:
                                # LOE r8 r10 r14 eax edx r9d
..B7.66:                        # Preds ..B7.65                 # Infreq
..LN1569:
        movl      %edx, 984(%rsp)                               #75.9
..LN1570:
        xorl      %esi, %esi                                    #75.9
..LN1571:
        movq      24(%rbp), %rcx                                #75.9
..LN1572:
        movq      %r14, %rdi                                    #75.9
..LN1573:
        movq      16(%rbp), %rdx                                #75.9
..LN1574:
                                # LOE rdx rcx rdi r8 r10 eax esi r9d
..B7.67:                        # Preds ..B7.72 ..B7.113 ..B7.66 # Infreq
..L214:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN1575:
        xorl      %r12d, %r12d                                  #75.27
..LN1576:
        testl     %eax, %eax                                    #75.36
..LN1577:
        jle       ..B7.113      # Prob 10%                      #75.36
..LN1578:
                                # LOE rdx rcx rdi r8 r10 r12 eax esi r9d
..B7.68:                        # Preds ..B7.67                 # Infreq
..LN1579:
	.loc    1  85  is_stmt 1
        movq      %r10, 1000(%rsp)                              #85.5
..LN1580:
	.loc    1  78  is_stmt 1
        lea       (%rax,%rsi), %r13d                            #78.25
..LN1581:
        movslq    %r13d, %r13                                   #78.15
..LN1582:
	.loc    1  85  is_stmt 1
        lea       (%rdi,%r10,8), %r11                           #85.5
..LN1583:
	.loc    1  76  is_stmt 1
        movslq    %esi, %rsi                                    #76.15
..LN1584:
	.loc    1  85  is_stmt 1
        movq      %r11, 1024(%rsp)                              #85.5
..LN1585:
        movl      %esi, 1008(%rsp)                              #85.5
..LN1586:
        movl      %r9d, 992(%rsp)                               #85.5
..LN1587:
	.loc    1  78  is_stmt 1
        lea       (%rdx,%r13,8), %rbx                           #78.15
..LN1588:
	.loc    1  85  is_stmt 1
        movq      %r8, 1016(%rsp)                               #85.5
..LN1589:
	.loc    1  82  is_stmt 1
        lea       (%rcx,%r13,8), %r13                           #82.15
..LN1590:
	.loc    1  85  is_stmt 1
        movl      %eax, 976(%rsp)                               #85.5
..LN1591:
	.loc    1  80  is_stmt 1
        lea       (%rcx,%rsi,8), %r15                           #80.15
..LN1592:
	.loc    1  85  is_stmt 1
        movq      %rdi, 2656(%rsp)                              #85.5
..LN1593:
	.loc    1  76  is_stmt 1
        lea       (%rdx,%rsi,8), %r14                           #76.15
..LN1594:
                                # LOE rbx r12 r13 r14 r15
..B7.69:                        # Preds ..B7.71 ..B7.68         # Infreq
..L215:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN1595:
	.loc    1  84  is_stmt 1
        lea       640(%rsp), %rdi                               #84.12
..LN1596:
	.loc    1  76  is_stmt 1
        movq      (%r14,%r12,8), %rax                           #76.15
..LN1597:
	.loc    1  84  is_stmt 1
        lea       800(%rsp), %rsi                               #84.12
..LN1598:
	.loc    1  83  is_stmt 1
        movq      8(%r13,%r12,8), %rdx                          #83.15
..LN1599:
	.loc    1  76  is_stmt 1
        movq      %rax, -160(%rsi)                              #76.5
..LN1600:
	.loc    1  77  is_stmt 1
        movq      8(%r14,%r12,8), %rcx                          #77.15
..LN1601:
	.loc    1  78  is_stmt 1
        movq      16(%rbx,%r12,8), %r8                          #78.15
..LN1602:
	.loc    1  79  is_stmt 1
        movq      8(%rbx,%r12,8), %r9                           #79.15
..LN1603:
	.loc    1  80  is_stmt 1
        movq      (%r15,%r12,8), %r10                           #80.15
..LN1604:
	.loc    1  81  is_stmt 1
        movq      8(%r15,%r12,8), %r11                          #81.15
..LN1605:
	.loc    1  82  is_stmt 1
        movq      16(%r13,%r12,8), %rax                         #82.15
..LN1606:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN1607:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN1608:
	.loc    1  77  is_stmt 1
        movq      %rcx, -152(%rsi)                              #77.5
..LN1609:
	.loc    1  78  is_stmt 1
        movq      %r8, -144(%rsi)                               #78.5
..LN1610:
	.loc    1  79  is_stmt 1
        movq      %r9, -136(%rsi)                               #79.5
..LN1611:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN1612:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN1613:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN1614:
	.loc    1  84  is_stmt 1
        vzeroupper                                              #84.12
..LN1615:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_1dx2d_order1.216:
..LN1616:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_1dx2d_order1.217:
..LN1617:
                                # LOE rbx r12 r13 r14 r15 eax
..B7.70:                        # Preds ..B7.69                 # Infreq
..LN1618:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN1619:
        lea       640(%rsp), %rdi                               #85.20
..LN1620:
        lea       800(%rsp), %rsi                               #85.20
..___tag_value_create_xgrid_1dx2d_order1.218:
..LN1621:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_1dx2d_order1.219:
..LN1622:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B7.71:                        # Preds ..B7.70                 # Infreq
..LN1623:
        movq      1024(%rsp), %rax                              #85.5
..LN1624:
        vmovsd    %xmm0, (%rax,%r12,8)                          #85.5
..LN1625:
	.loc    1  75  is_stmt 1
        incq      %r12                                          #75.40
..LN1626:
        cmpq      1016(%rsp), %r12                              #75.36
..LN1627:
        jl        ..B7.69       # Prob 82%                      #75.36
..LN1628:
                                # LOE rbx r12 r13 r14 r15
..B7.72:                        # Preds ..B7.71                 # Infreq
..LN1629:
        movl      992(%rsp), %r9d                               #
..LN1630:
        incl      %r9d                                          #75.18
..LN1631:
        movq      1000(%rsp), %r10                              #
..LN1632:
        movq      1016(%rsp), %r8                               #
..LN1633:
        addq      %r8, %r10                                     #75.18
..LN1634:
        movl      1008(%rsp), %esi                              #
..LN1635:
        movl      976(%rsp), %eax                               #
..LN1636:
        lea       1(%rsi,%rax), %esi                            #75.18
..LN1637:
        movq      2656(%rsp), %rdi                              #
..LN1638:
        movq      24(%rbp), %rcx                                #
..LN1639:
        movq      16(%rbp), %rdx                                #
..LN1640:
        cmpl      984(%rsp), %r9d                               #75.14
..LN1641:
        jl        ..B7.67       # Prob 82%                      #75.14
..LN1642:
                                # LOE rdx rcx rdi r8 r10 eax esi edi r9d dil
..B7.73:                        # Preds ..B7.113 ..B7.72        # Infreq
..LN1643:
        movq      %rdi, %r14                                    #
..LN1644:
                                # LOE r14
..B7.74:                        # Preds ..B7.73 ..B7.65         # Infreq
..LN1645:
	.loc    1  169  is_stmt 1
        vzeroupper                                              #169.3
..LN1646:
        movq      960(%rsp), %rdi                               #169.3
..LN1647:
#       free(void *)
        call      free                                          #169.3
..LN1648:
                                # LOE r14
..B7.75:                        # Preds ..B7.74                 # Infreq
..LN1649:
	.loc    1  170  is_stmt 1
        movq      968(%rsp), %rdi                               #170.3
..LN1650:
#       free(void *)
        call      free                                          #170.3
..LN1651:
                                # LOE r14
..B7.76:                        # Preds ..B7.75                 # Infreq
..LN1652:
	.loc    1  172  is_stmt 1
        xorl      %eax, %eax                                    #172.10
..LN1653:
        xorl      %ecx, %ecx                                    #172.7
..LN1654:
        xorl      %edx, %edx                                    #172.10
..LN1655:
        cmpl      $0, 2168(%rsp)                                #172.16
..LN1656:
        jle       ..B7.108      # Prob 10%                      #172.16
..LN1657:
                                # LOE rax rdx r14 ecx
..B7.77:                        # Preds ..B7.76                 # Infreq
..LN1658:
	.loc    1  137  is_stmt 1
        movq      %r14, %rdi                                    #137.1
..LN1659:
        movq      32(%rbp), %rsi                                #137.1
..LN1660:
        movq      48(%rbp), %r10                                #137.1
..LN1661:
        movq      72(%rbp), %rbx                                #137.1
..LN1662:
        movq      24(%rbp), %r9                                 #137.1
..LN1663:
        movq      16(%rbp), %r8                                 #137.1
..LN1664:
	.loc    1  172  is_stmt 1
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm0             #172.76
..LN1665:
	.loc    1  198  is_stmt 1
        vmovsd    .L_2il0floatpacket.2(%rip), %xmm1             #198.23
..LN1666:
	.loc    1  137  is_stmt 1
        movq      2160(%rsp), %r13                              #137.1
..LN1667:
        movl      2168(%rsp), %r15d                             #137.1
..LN1668:
        movq      2608(%rsp), %r11                              #137.1
..LN1669:
        movl      2184(%rsp), %r14d                             #137.1
..LN1670:
                                # LOE rax rdx rsi rdi r8 r9 r11 r13 ecx r14d r15d xmm0
..B7.78:                        # Preds ..B7.82 ..B7.111 ..B7.77 # Infreq
..L220:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN1671:
	.loc    1  172  is_stmt 1
        xorl      %r12d, %r12d                                  #172.31
..LN1672:
        testl     %r14d, %r14d                                  #172.40
..LN1673:
        jle       ..B7.111      # Prob 10%                      #172.40
..LN1674:
                                # LOE rax rdx rsi rdi r8 r9 r11 r12 r13 ecx r14d r15d xmm0
..B7.79:                        # Preds ..B7.78                 # Infreq
..LN1675:
	.loc    1  197  is_stmt 1
        movq      %rdx, 2176(%rsp)                              #197.13
..LN1676:
        lea       (%r13,%rdx,8), %r10                           #197.13
..LN1677:
        movq      %r10, 2688(%rsp)                              #197.13
..LN1678:
	.loc    1  172  is_stmt 1
        lea       (%rsi,%rdx,8), %rbx                           #172.55
..LN1679:
	.loc    1  197  is_stmt 1
        movl      %ecx, 2632(%rsp)                              #197.13
..LN1680:
        movl      2640(%rsp), %r13d                             #197.13
..LN1681:
        movq      2752(%rsp), %rsi                              #197.13
..LN1682:
        movq      2600(%rsp), %r15                              #197.13
..LN1683:
        movq      2592(%rsp), %r14                              #197.13
..LN1684:
                                # LOE rax rbx rsi rdi r8 r9 r11 r12 r14 r15 r13d xmm0
..B7.80:                        # Preds ..B7.81 ..B7.79         # Infreq
..L221:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN1685:
	.loc    1  172  is_stmt 1
        vmovsd    (%rbx,%r12,8), %xmm1                          #172.55
..LN1686:
        vcomisd   %xmm0, %xmm1                                  #172.76
..LN1687:
        ja        ..B7.83       # Prob 50%                      #172.76
..LN1688:
                                # LOE rax rbx rsi rdi r8 r9 r11 r12 r14 r15 r13d xmm0
..B7.81:                        # Preds ..B7.103 ..B7.106 ..B7.83 ..B7.80 # Infreq
..LN1689:
        incq      %r12                                          #172.45
..LN1690:
        cmpq      %r11, %r12                                    #172.40
..LN1691:
        jl        ..B7.80       # Prob 82%                      #172.40
..LN1692:
                                # LOE rax rbx rsi rdi r8 r9 r11 r12 r14 r15 r13d xmm0
..B7.82:                        # Preds ..B7.81                 # Infreq
..LN1693:
        movl      2632(%rsp), %ecx                              #
..LN1694:
        incq      %rax                                          #172.21
..LN1695:
        incl      %ecx                                          #172.21
..LN1696:
        movq      2176(%rsp), %rdx                              #
..LN1697:
        movl      2168(%rsp), %r15d                             #
..LN1698:
        addq      %r11, %rdx                                    #172.21
..LN1699:
        movq      2160(%rsp), %r13                              #
..LN1700:
        movl      2184(%rsp), %r14d                             #
..LN1701:
        movq      32(%rbp), %rsi                                #
..LN1702:
        cmpl      %r15d, %ecx                                   #172.16
..LN1703:
        jl        ..B7.78       # Prob 82%                      #172.16
..LN1704:
        jmp       ..B7.107      # Prob 100%                     #172.16
..LN1705:
                                # LOE rax rdx rsi rdi r8 r9 r11 r13 ecx r14d r15d xmm0
..B7.83:                        # Preds ..B7.80                 # Infreq
..LN1706:
	.loc    1  176  is_stmt 1
        xorl      %ecx, %ecx                                    #176.9
..LN1707:
        xorl      %r10d, %r10d                                  #176.12
..LN1708:
	.loc    1  174  is_stmt 1
        vmovsd    (%r15,%r12,8), %xmm5                          #174.14
..LN1709:
	.loc    1  176  is_stmt 1
        xorl      %edx, %edx                                    #176.12
..LN1710:
	.loc    1  175  is_stmt 1
        vmovsd    8(%r15,%r12,8), %xmm3                         #175.14
..LN1711:
	.loc    1  174  is_stmt 1
        vmovsd    (%r14,%rax,8), %xmm4                          #174.37
..LN1712:
	.loc    1  175  is_stmt 1
        vmovsd    8(%r14,%rax,8), %xmm2                         #175.37
..LN1713:
	.loc    1  176  is_stmt 1
        testl     %r13d, %r13d                                  #176.18
..LN1714:
        jle       ..B7.81       # Prob 10%                      #176.18
..LN1715:
                                # LOE rax rbx rsi rdi r8 r9 r10 r11 r12 r14 r15 edx ecx r13d xmm0 xmm2 xmm3 xmm4 xmm5
..B7.84:                        # Preds ..B7.83                 # Infreq
..LN1716:
	.loc    1  193  is_stmt 1
        movq      %rax, 2616(%rsp)                              #193.53
..LN1717:
        vaddsd    %xmm3, %xmm5, %xmm1                           #193.45
..LN1718:
        vmulsd    %xmm1, %xmm0, %xmm1                           #193.53
..LN1719:
        vmovsd    %xmm1, 2728(%rsp)                             #193.53
..LN1720:
        vmovsd    %xmm2, 2744(%rsp)                             #193.53
..LN1721:
        vmovsd    %xmm3, 2720(%rsp)                             #193.53
..LN1722:
        vmovsd    %xmm4, 2760(%rsp)                             #193.53
..LN1723:
        vmovsd    %xmm5, 2736(%rsp)                             #193.53
..LN1724:
        movq      %rbx, 2696(%rsp)                              #193.53
..LN1725:
        movq      %r12, 2712(%rsp)                              #193.53
..LN1726:
        movl      2648(%rsp), %eax                              #193.53
..LN1727:
                                # LOE rsi rdi r8 r9 r10 eax edx ecx
..B7.85:                        # Preds ..B7.102 ..B7.105 ..B7.84 # Infreq
..L222:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN1728:
	.loc    1  176  is_stmt 1
        xorl      %r13d, %r13d                                  #176.33
..LN1729:
        testl     %eax, %eax                                    #176.42
..LN1730:
        jle       ..B7.105      # Prob 10%                      #176.42
..LN1731:
                                # LOE rsi rdi r8 r9 r10 r13 eax edx ecx
..B7.86:                        # Preds ..B7.85                 # Infreq
..LN1732:
	.loc    1  197  is_stmt 1
        movq      %r10, 2672(%rsp)                              #197.13
..LN1733:
	.loc    1  182  is_stmt 1
        lea       (%rax,%rdx), %ebx                             #182.32
..LN1734:
        movslq    %ebx, %rbx                                    #182.17
..LN1735:
	.loc    1  197  is_stmt 1
        lea       (%rdi,%r10,8), %r11                           #197.13
..LN1736:
	.loc    1  180  is_stmt 1
        movslq    %edx, %rdx                                    #180.17
..LN1737:
	.loc    1  197  is_stmt 1
        movq      %r11, 2704(%rsp)                              #197.13
..LN1738:
        movl      %edx, 2664(%rsp)                              #197.13
..LN1739:
        movl      %ecx, 2680(%rsp)                              #197.13
..LN1740:
	.loc    1  182  is_stmt 1
        lea       (%r9,%rbx,8), %r14                            #182.17
..LN1741:
	.loc    1  197  is_stmt 1
        movq      %rdi, 2656(%rsp)                              #197.13
..LN1742:
	.loc    1  191  is_stmt 1
        lea       (%r8,%rbx,8), %r12                            #191.17
..LN1743:
	.loc    1  189  is_stmt 1
        lea       (%r8,%rdx,8), %rbx                            #189.17
..LN1744:
	.loc    1  180  is_stmt 1
        lea       (%r9,%rdx,8), %r15                            #180.17
..LN1745:
                                # LOE rbx r12 r13 r14 r15
..B7.87:                        # Preds ..B7.101 ..B7.86        # Infreq
..L223:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN1746:
        vmovsd    (%r15,%r13,8), %xmm4                          #180.17
..LN1747:
	.loc    1  184  is_stmt 1
        vmovsd    2760(%rsp), %xmm0                             #184.23
..LN1748:
	.loc    1  181  is_stmt 1
        vmovsd    8(%r15,%r13,8), %xmm3                         #181.17
..LN1749:
	.loc    1  182  is_stmt 1
        vmovsd    16(%r14,%r13,8), %xmm2                        #182.17
..LN1750:
	.loc    1  183  is_stmt 1
        vmovsd    8(%r14,%r13,8), %xmm1                         #183.17
..LN1751:
	.loc    1  180  is_stmt 1
        vmovsd    %xmm4, 2192(%rsp)                             #180.7
..LN1752:
	.loc    1  181  is_stmt 1
        vmovsd    %xmm3, 2200(%rsp)                             #181.7
..LN1753:
	.loc    1  182  is_stmt 1
        vmovsd    %xmm2, 2208(%rsp)                             #182.7
..LN1754:
	.loc    1  183  is_stmt 1
        vmovsd    %xmm1, 2216(%rsp)                             #183.7
..LN1755:
	.loc    1  184  is_stmt 1
        vcomisd   %xmm4, %xmm0                                  #184.23
..LN1756:
        jb        ..B7.91       # Prob 50%                      #184.23
..LN1757:
                                # LOE rbx r12 r13 r14 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B7.88:                        # Preds ..B7.87                 # Infreq
..LN1758:
        vcomisd   %xmm3, %xmm0                                  #184.44
..LN1759:
        jb        ..B7.91       # Prob 50%                      #184.44
..LN1760:
                                # LOE rbx r12 r13 r14 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B7.89:                        # Preds ..B7.88                 # Infreq
..LN1761:
	.loc    1  185  is_stmt 1
        vcomisd   %xmm2, %xmm0                                  #185.19
..LN1762:
        jb        ..B7.91       # Prob 50%                      #185.19
..LN1763:
                                # LOE rbx r12 r13 r14 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B7.90:                        # Preds ..B7.89                 # Infreq
..LN1764:
        vcomisd   %xmm1, %xmm0                                  #185.40
..LN1765:
        jae       ..B7.101      # Prob 50%                      #185.40
..LN1766:
                                # LOE rbx r12 r13 r14 r15 xmm1 xmm2 xmm3 xmm4
..B7.91:                        # Preds ..B7.90 ..B7.89 ..B7.88 ..B7.87 # Infreq
..LN1767:
	.loc    1  186  is_stmt 1
        vcomisd   2744(%rsp), %xmm4                             #186.23
..LN1768:
        jb        ..B7.95       # Prob 22%                      #186.23
..LN1769:
                                # LOE rbx r12 r13 r14 r15 xmm1 xmm2 xmm3
..B7.92:                        # Preds ..B7.91                 # Infreq
..LN1770:
        vcomisd   2744(%rsp), %xmm3                             #186.44
..LN1771:
        jb        ..B7.95       # Prob 22%                      #186.44
..LN1772:
                                # LOE rbx r12 r13 r14 r15 xmm1 xmm2
..B7.93:                        # Preds ..B7.92                 # Infreq
..LN1773:
	.loc    1  187  is_stmt 1
        vcomisd   2744(%rsp), %xmm2                             #187.19
..LN1774:
        jb        ..B7.95       # Prob 22%                      #187.19
..LN1775:
                                # LOE rbx r12 r13 r14 r15 xmm1
..B7.94:                        # Preds ..B7.93                 # Infreq
..LN1776:
        vcomisd   2744(%rsp), %xmm1                             #187.40
..LN1777:
        jae       ..B7.101      # Prob 78%                      #187.40
..LN1778:
                                # LOE rbx r12 r13 r14 r15
..B7.95:                        # Preds ..B7.94 ..B7.93 ..B7.92 ..B7.91 # Infreq
..LN1779:
	.loc    1  193  is_stmt 1
        lea       960(%rsp), %rdi                               #193.14
..LN1780:
	.loc    1  189  is_stmt 1
        movq      (%rbx,%r13,8), %rax                           #189.17
..LN1781:
	.loc    1  193  is_stmt 1
        lea       2192(%rsp), %rsi                              #193.14
..LN1782:
	.loc    1  190  is_stmt 1
        movq      8(%rbx,%r13,8), %rcx                          #190.17
..LN1783:
	.loc    1  193  is_stmt 1
        movl      $4, %edx                                      #193.14
..LN1784:
	.loc    1  191  is_stmt 1
        movq      16(%r12,%r13,8), %r8                          #191.17
..LN1785:
	.loc    1  192  is_stmt 1
        movq      8(%r12,%r13,8), %r9                           #192.17
..LN1786:
	.loc    1  193  is_stmt 1
        vmovsd    536(%rsi), %xmm0                              #193.14
..LN1787:
	.loc    1  189  is_stmt 1
        movq      %rax, -1232(%rsi)                             #189.7
..LN1788:
	.loc    1  190  is_stmt 1
        movq      %rcx, -1224(%rsi)                             #190.7
..LN1789:
	.loc    1  191  is_stmt 1
        movq      %r8, -1216(%rsi)                              #191.7
..LN1790:
	.loc    1  192  is_stmt 1
        movq      %r9, -1208(%rsi)                              #192.7
..___tag_value_create_xgrid_1dx2d_order1.224:
..LN1791:
	.loc    1  193  is_stmt 1
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #193.14
..___tag_value_create_xgrid_1dx2d_order1.225:
..LN1792:
                                # LOE rbx r12 r13 r14 r15 eax
..B7.96:                        # Preds ..B7.95                 # Infreq
..LN1793:
	.loc    1  195  is_stmt 1
        lea       960(%rsp), %rdi                               #195.21
..LN1794:
        vmovsd    1776(%rdi), %xmm0                             #195.21
..LN1795:
        lea       2192(%rsp), %rsi                              #195.21
..LN1796:
        vmovsd    568(%rsi), %xmm1                              #195.21
..LN1797:
        lea       1360(%rsp), %rcx                              #195.21
..LN1798:
        vmovsd    1360(%rcx), %xmm2                             #195.21
..LN1799:
        lea       1760(%rsp), %r8                               #195.21
..LN1800:
        vmovsd    1384(%rcx), %xmm3                             #195.21
..LN1801:
        movl      %eax, %edx                                    #195.21
..___tag_value_create_xgrid_1dx2d_order1.226:
..LN1802:
#       clip(const double *, const double *, int, double, double, double, double, double *, double *)
        call      clip                                          #195.21
..___tag_value_create_xgrid_1dx2d_order1.227:
..LN1803:
                                # LOE rbx r12 r13 r14 r15 eax
..B7.97:                        # Preds ..B7.96                 # Infreq
..LN1804:
        testl     %eax, %eax                                    #195.96
..LN1805:
        jle       ..B7.101      # Prob 40%                      #195.96
..LN1806:
                                # LOE rbx r12 r13 r14 r15 eax
..B7.98:                        # Preds ..B7.97                 # Infreq
..LN1807:
	.loc    1  196  is_stmt 1
        movl      %eax, %edx                                    #196.10
..LN1808:
        lea       1360(%rsp), %rdi                              #196.10
..LN1809:
        lea       1760(%rsp), %rsi                              #196.10
..___tag_value_create_xgrid_1dx2d_order1.228:
..LN1810:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #196.10
..___tag_value_create_xgrid_1dx2d_order1.229:
..LN1811:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B7.99:                        # Preds ..B7.98                 # Infreq
..LN1812:
        movq      2696(%rsp), %rax                              #196.45
..LN1813:
        movq      2712(%rsp), %rcx                              #196.45
..LN1814:
	.loc    1  197  is_stmt 1
        movq      2688(%rsp), %rdx                              #197.13
..LN1815:
	.loc    1  198  is_stmt 1
        movq      2704(%rsp), %rsi                              #198.2
..LN1816:
	.loc    1  196  is_stmt 1
        vmulsd    (%rax,%rcx,8), %xmm0, %xmm2                   #196.45
..LN1817:
	.loc    1  197  is_stmt 1
        vmovsd    (%rdx,%rcx,8), %xmm0                          #197.13
..LN1818:
	.loc    1  198  is_stmt 1
        vminsd    (%rsi,%r13,8), %xmm0, %xmm0                   #198.2
..LN1819:
        vdivsd    %xmm0, %xmm2, %xmm1                           #198.12
..LN1820:
        vcomisd   .L_2il0floatpacket.2(%rip), %xmm1             #198.23
..LN1821:
        jbe       ..B7.101      # Prob 50%                      #198.23
..LN1822:
                                # LOE rbx r12 r13 r14 r15 xmm2
..B7.100:                       # Preds ..B7.99                 # Infreq
..LN1823:
	.loc    1  199  is_stmt 1
        movq      2624(%rsp), %r11                              #199.10
..LN1824:
	.loc    1  200  is_stmt 1
        movq      40(%rbp), %rcx                                #200.4
..LN1825:
	.loc    1  201  is_stmt 1
        movq      48(%rbp), %rdi                                #201.4
..LN1826:
	.loc    1  202  is_stmt 1
        movq      56(%rbp), %r8                                 #202.4
..LN1827:
	.loc    1  199  is_stmt 1
        movq      72(%rbp), %rax                                #199.10
..LN1828:
	.loc    1  203  is_stmt 1
        movq      64(%rbp), %r10                                #203.4
..LN1829:
	.loc    1  200  is_stmt 1
        movq      2712(%rsp), %rdx                              #200.4
..LN1830:
	.loc    1  201  is_stmt 1
        movl      2632(%rsp), %esi                              #201.4
..LN1831:
	.loc    1  203  is_stmt 1
        movl      2680(%rsp), %r9d                              #203.4
..LN1832:
	.loc    1  200  is_stmt 1
        movl      %edx, (%rcx,%r11,4)                           #200.4
..LN1833:
	.loc    1  201  is_stmt 1
        movl      %esi, (%rdi,%r11,4)                           #201.4
..LN1834:
	.loc    1  202  is_stmt 1
        movl      %r13d, (%r8,%r11,4)                           #202.4
..LN1835:
	.loc    1  199  is_stmt 1
        vmovsd    %xmm2, (%rax,%r11,8)                          #199.10
..LN1836:
	.loc    1  203  is_stmt 1
        movl      %r9d, (%r10,%r11,4)                           #203.4
..LN1837:
	.loc    1  204  is_stmt 1
        incq      %r11                                          #204.6
..LN1838:
        movq      %r11, 2624(%rsp)                              #204.6
..LN1839:
	.loc    1  205  is_stmt 1
        cmpq      $10000000, %r11                               #205.16
..LN1840:
        jg        ..B7.104      # Prob 0%                       #205.16
..LN1841:
                                # LOE rbx r12 r13 r14 r15
..B7.101:                       # Preds ..B7.94 ..B7.90 ..B7.104 ..B7.100 ..B7.99
                                #       ..B7.97                 # Infreq
..LN1842:
	.loc    1  176  is_stmt 1
        incq      %r13                                          #176.47
..LN1843:
        cmpq      2752(%rsp), %r13                              #176.42
..LN1844:
        jl        ..B7.87       # Prob 82%                      #176.42
..LN1845:
                                # LOE rbx r12 r13 r14 r15
..B7.102:                       # Preds ..B7.101                # Infreq
..LN1846:
        movl      2680(%rsp), %ecx                              #
..LN1847:
        incl      %ecx                                          #176.23
..LN1848:
        movq      2672(%rsp), %r10                              #
..LN1849:
        movq      2752(%rsp), %rsi                              #
..LN1850:
        addq      %rsi, %r10                                    #176.23
..LN1851:
        movl      2664(%rsp), %edx                              #
..LN1852:
        movl      2648(%rsp), %eax                              #
..LN1853:
        lea       1(%rdx,%rax), %edx                            #176.23
..LN1854:
        movq      2656(%rsp), %rdi                              #
..LN1855:
        movq      24(%rbp), %r9                                 #
..LN1856:
        movq      16(%rbp), %r8                                 #
..LN1857:
        cmpl      2640(%rsp), %ecx                              #176.18
..LN1858:
        jl        ..B7.85       # Prob 82%                      #176.18
..LN1859:
                                # LOE rsi rdi r8 r9 r10 eax edx ecx esi edi sil dil
..B7.103:                       # Preds ..B7.102                # Infreq
..LN1860:
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm0             #
..LN1861:
        movq      2696(%rsp), %rbx                              #
..LN1862:
        movq      2712(%rsp), %r12                              #
..LN1863:
        movq      2616(%rsp), %rax                              #
..LN1864:
        movl      2640(%rsp), %r13d                             #
..LN1865:
        movq      2608(%rsp), %r11                              #
..LN1866:
        movq      2600(%rsp), %r15                              #
..LN1867:
        movq      2592(%rsp), %r14                              #
..LN1868:
        jmp       ..B7.81       # Prob 100%                     #
..LN1869:
                                # LOE rax rbx rsi rdi r8 r9 r11 r12 r14 r15 r13d xmm0
..B7.104:                       # Preds ..B7.100                # Infreq
..LN1870:
	.loc    1  205  is_stmt 1
        movl      $.L_2__STRING.0, %edi                         #205.26
..___tag_value_create_xgrid_1dx2d_order1.230:
..LN1871:
#       error_handler(const char *)
        call      error_handler                                 #205.26
..___tag_value_create_xgrid_1dx2d_order1.231:
..LN1872:
        jmp       ..B7.101      # Prob 100%                     #205.26
..LN1873:
                                # LOE rbx r12 r13 r14 r15
..B7.105:                       # Preds ..B7.85                 # Infreq
..LN1874:
	.loc    1  176  is_stmt 1
        incl      %ecx                                          #176.23
..LN1875:
        addq      %rsi, %r10                                    #176.23
..LN1876:
        lea       1(%rdx,%rax), %edx                            #176.23
..LN1877:
        cmpl      2640(%rsp), %ecx                              #176.18
..LN1878:
        jl        ..B7.85       # Prob 82%                      #176.18
..LN1879:
                                # LOE rsi rdi r8 r9 r10 eax edx ecx
..B7.106:                       # Preds ..B7.105                # Infreq
..LN1880:
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm0             #
..LN1881:
        movq      2696(%rsp), %rbx                              #
..LN1882:
        movq      2712(%rsp), %r12                              #
..LN1883:
        movq      2616(%rsp), %rax                              #
..LN1884:
        movl      2640(%rsp), %r13d                             #
..LN1885:
        movq      2608(%rsp), %r11                              #
..LN1886:
        movq      2600(%rsp), %r15                              #
..LN1887:
        movq      2592(%rsp), %r14                              #
..LN1888:
        jmp       ..B7.81       # Prob 100%                     #
..LN1889:
                                # LOE rax rbx rsi rdi r8 r9 r11 r12 r14 r15 r13d xmm0
..B7.107:                       # Preds ..B7.111 ..B7.82        # Infreq
..LN1890:
        movq      %rdi, %r14                                    #
..LN1891:
                                # LOE r14
..B7.108:                       # Preds ..B7.107 ..B7.76        # Infreq
..LN1892:
	.loc    1  211  is_stmt 1
        movq      2160(%rsp), %rdi                              #211.3
..LN1893:
#       free(void *)
        call      free                                          #211.3
..LN1894:
                                # LOE r14
..B7.109:                       # Preds ..B7.108                # Infreq
..LN1895:
	.loc    1  212  is_stmt 1
        movq      %r14, %rdi                                    #212.3
..LN1896:
#       free(void *)
        call      free                                          #212.3
..LN1897:
                                # LOE
..B7.110:                       # Preds ..B7.109                # Infreq
..LN1898:
	.loc    1  214  is_stmt 1
        movq      2624(%rsp), %rax                              #214.10
..LN1899:
	.loc    1  214  epilogue_begin  is_stmt 1
        addq      $2776, %rsp                                   #214.10
	.cfi_restore 3
..LN1900:
        popq      %rbx                                          #214.10
	.cfi_restore 15
..LN1901:
        popq      %r15                                          #214.10
	.cfi_restore 14
..LN1902:
        popq      %r14                                          #214.10
	.cfi_restore 13
..LN1903:
        popq      %r13                                          #214.10
	.cfi_restore 12
..LN1904:
        popq      %r12                                          #214.10
..LN1905:
        movq      %rbp, %rsp                                    #214.10
..LN1906:
        popq      %rbp                                          #214.10
	.cfi_def_cfa 7, 8
	.cfi_restore 6
..LN1907:
        ret                                                     #214.10
	.cfi_def_cfa 6, 16
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_offset 6, -16
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN1908:
                                # LOE
..B7.111:                       # Preds ..B7.78                 # Infreq
..LN1909:
	.loc    1  172  is_stmt 1
        incl      %ecx                                          #172.21
..LN1910:
        addq      %r11, %rdx                                    #172.21
..LN1911:
        incq      %rax                                          #172.21
..LN1912:
        cmpl      %r15d, %ecx                                   #172.16
..LN1913:
        jl        ..B7.78       # Prob 82%                      #172.16
..LN1914:
        jmp       ..B7.107      # Prob 100%                     #172.16
..LN1915:
                                # LOE rax rdx rsi rdi r8 r9 r11 r13 ecx r14d r15d xmm0
..B7.113:                       # Preds ..B7.67                 # Infreq
..LN1916:
	.loc    1  75  is_stmt 1
        incl      %r9d                                          #75.18
..LN1917:
        addq      %r8, %r10                                     #75.18
..LN1918:
        lea       1(%rsi,%rax), %esi                            #75.18
..LN1919:
        cmpl      984(%rsp), %r9d                               #75.14
..LN1920:
        jl        ..B7.67       # Prob 82%                      #75.14
..LN1921:
        jmp       ..B7.73       # Prob 100%                     #75.14
..LN1922:
                                # LOE rdx rcx rdi r8 r10 eax esi r9d
..B7.115:                       # Preds ..B7.51                 # Infreq
..LN1923:
        incl      %ecx                                          #75.18
..LN1924:
        addq      %rsi, %rdx                                    #75.18
..LN1925:
        lea       1(%rax,%r8), %eax                             #75.18
..LN1926:
        cmpl      328(%rsp), %ecx                               #75.14
..LN1927:
        jl        ..B7.51       # Prob 82%                      #75.14
..LN1928:
        jmp       ..B7.64       # Prob 100%                     #75.14
..LN1929:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B7.117:                       # Preds ..B7.59                 # Infreq
..LN1930:
	.loc    1  100  is_stmt 1
        incl      %ecx                                          #100.18
..LN1931:
        addq      %rsi, %rdx                                    #100.18
..LN1932:
        lea       1(%rax,%r8), %eax                             #100.18
..LN1933:
        cmpl      8(%rsp), %ecx                                 #100.14
..LN1934:
        jl        ..B7.59       # Prob 82%                      #100.14
..LN1935:
        jmp       ..B7.64       # Prob 100%                     #100.14
..LN1936:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B7.120:                       # Preds ..B7.38                 # Infreq
..LN1937:
	.loc    1  158  is_stmt 1
        xorl      %r12d, %r12d                                  #158.28
..LN1938:
        jmp       ..B7.42       # Prob 100%                     #158.28
..LN1939:
                                # LOE rax rdx rcx r9 r10 r11 r12 r13 ebx esi r8d r14d
..B7.121:                       # Preds ..B7.25 ..B7.27 ..B7.29 # Infreq
..LN1940:
        xorl      %r14d, %r14d                                  #158.28
..LN1941:
        jmp       ..B7.37       # Prob 100%                     #158.28
..LN1942:
                                # LOE rax rdx rcx r9 r10 r11 ebx esi r8d r14d
..B7.124:                       # Preds ..B7.8 ..B7.11 ..B7.13  # Infreq
..LN1943:
        xorl      %r14d, %r14d                                  #158.28
..LN1944:
        jmp       ..B7.21       # Prob 100%                     #158.28
..LN1945:
                                # LOE rax rdx rcx r9 r10 r11 r14 ebx esi r8d
..B7.126:                       # Preds ..B7.9                  # Infreq
..LN1946:
        movq      (%rsp), %r14                                  #158.28
..LN1947:
        xorl      %r12d, %r12d                                  #158.28
..LN1948:
        jmp       ..B7.18       # Prob 100%                     #158.28
..LN1949:
        .align    16,0x90
	.cfi_endproc
..LN1950:
                                # LOE rax rdx rcx r9 r10 r11 r12 r13 r14 ebx esi r8d
..LN1951:
# mark_end;
	.type	create_xgrid_1dx2d_order1,@function
	.size	create_xgrid_1dx2d_order1,.-create_xgrid_1dx2d_order1
..LNcreate_xgrid_1dx2d_order1.1952:
.LNcreate_xgrid_1dx2d_order1:
	.data
# -- End  create_xgrid_1dx2d_order1
	.text
.L_2__routine_start_clip_7:
# -- Begin  clip
	.text
# mark_begin;
       .align    16,0x90
	.globl clip
# --- clip(const double *, const double *, int, double, double, double, double, double *, double *)
clip:
# parameter 1(lon_in): %rdi
# parameter 2(lat_in): %rsi
# parameter 3(n_in): %edx
# parameter 4(ll_lon): %xmm0
# parameter 5(ll_lat): %xmm1
# parameter 6(ur_lon): %xmm2
# parameter 7(ur_lat): %xmm3
# parameter 8(lon_out): %rcx
# parameter 9(lat_out): %r8
..B8.1:                         # Preds ..B8.0
	.cfi_startproc
..___tag_value_clip.251:
..L252:
                                                        #745.1
..LN1953:
	.loc    1  745  is_stmt 1
        subq      $808, %rsp                                    #745.1
	.cfi_def_cfa_offset 816
..LN1954:
        movq      %rdi, %r10                                    #745.1
..LN1955:
        movslq    %edx, %r9                                     #745.1
..LN1956:
        vmovapd   %xmm0, %xmm5                                  #745.1
..LN1957:
	.loc    1  753  prologue_end  is_stmt 1
        xorl      %edx, %edx                                    #753.8
..LN1958:
        xorl      %eax, %eax                                    #753.15
..LN1959:
	.loc    1  750  is_stmt 1
        vmovsd    -8(%r10,%r9,8), %xmm4                         #750.12
..LN1960:
	.loc    1  751  is_stmt 1
        vmovsd    -8(%rsi,%r9,8), %xmm0                         #751.12
..LN1961:
	.loc    1  752  is_stmt 1
        vcmpgesd  %xmm5, %xmm4, %xmm6                           #752.3
..LN1962:
        vmovd     %xmm6, %edi                                   #752.3
..LN1963:
        negl      %edi                                          #752.3
..LN1964:
	.loc    1  753  is_stmt 1
        testq     %r9, %r9                                      #753.28
..LN1965:
        jle       ..B8.12       # Prob 10%                      #753.28
..LN1966:
                                # LOE rax rdx rcx rbx rbp rsi r8 r9 r10 r12 r13 r14 r15 edi xmm0 xmm1 xmm2 xmm3 xmm4 xmm5
..B8.3:                         # Preds ..B8.1 ..B8.10
..L255:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN1967:
	.loc    1  756  is_stmt 1
        vmovsd    (%r10,%rdx,8), %xmm10                         #756.18
..LN1968:
        vcomisd   %xmm5, %xmm10                                 #756.34
..LN1969:
        jb        ..B8.6        # Prob 50%                      #756.34
..LN1970:
                                # LOE rax rdx rcx rbx rbp rsi r8 r9 r10 r12 r13 r14 r15 edi xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm10
..B8.4:                         # Preds ..B8.3
..LN1971:
        cmpl      $1, %edi                                      #756.44
..LN1972:
        movl      $1, %edi                                      #756.10
..LN1973:
        jne       ..B8.7        # Prob 50%                      #756.44
..LN1974:
                                # LOE rax rdx rcx rbx rbp rsi r8 r9 r10 r12 r13 r14 r15 edi xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm10
..B8.5:                         # Preds ..B8.4
..LN1975:
	.loc    1  764  is_stmt 1
        vmovsd    (%rsi,%rdx,8), %xmm11                         #764.24
..LN1976:
        jmp       ..B8.8        # Prob 100%                     #764.24
..LN1977:
                                # LOE rax rdx rcx rbx rbp rsi r8 r9 r10 r12 r13 r14 r15 edi xmm1 xmm2 xmm3 xmm5 xmm10 xmm11
..B8.6:                         # Preds ..B8.3
..LN1978:
	.loc    1  756  is_stmt 1
        testl     %edi, %edi                                    #756.44
..LN1979:
        movl      $0, %edi                                      #756.10
..LN1980:
        je        ..B8.9        # Prob 50%                      #756.44
..LN1981:
                                # LOE rax rdx rcx rbx rbp rsi r8 r9 r10 r12 r13 r14 r15 edi xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm10
..B8.7:                         # Preds ..B8.4 ..B8.6
..LN1982:
	.loc    1  758  is_stmt 1
        vmovsd    (%rsi,%rdx,8), %xmm11                         #758.54
..LN1983:
        vsubsd    %xmm4, %xmm5, %xmm6                           #758.43
..LN1984:
        vsubsd    %xmm0, %xmm11, %xmm7                          #758.69
..LN1985:
        vsubsd    %xmm4, %xmm10, %xmm4                          #758.95
..LN1986:
        vmulsd    %xmm7, %xmm6, %xmm8                           #758.69
..LN1987:
        vdivsd    %xmm4, %xmm8, %xmm9                           #758.95
..LN1988:
	.loc    1  757  is_stmt 1
        vmovsd    %xmm5, 400(%rsp,%rax,8)                       #757.7
..LN1989:
	.loc    1  758  is_stmt 1
        vaddsd    %xmm9, %xmm0, %xmm0                           #758.95
..LN1990:
        vmovsd    %xmm0, (%rsp,%rax,8)                          #758.7
..LN1991:
        incq      %rax                                          #758.13
..LN1992:
	.loc    1  762  is_stmt 1
        testl     %edi, %edi                                    #762.9
..LN1993:
        je        ..B8.10       # Prob 50%                      #762.9
..LN1994:
                                # LOE rax rdx rcx rbx rbp rsi r8 r9 r10 r12 r13 r14 r15 edi xmm1 xmm2 xmm3 xmm5 xmm10 xmm11
..B8.8:                         # Preds ..B8.5 ..B8.7
..LN1995:
	.loc    1  763  is_stmt 1
        vmovsd    %xmm10, 400(%rsp,%rax,8)                      #763.7
..LN1996:
	.loc    1  764  is_stmt 1
        vmovsd    %xmm11, (%rsp,%rax,8)                         #764.7
..LN1997:
        incq      %rax                                          #764.13
..LN1998:
        jmp       ..B8.10       # Prob 100%                     #764.13
..LN1999:
                                # LOE rax rdx rcx rbx rbp rsi r8 r9 r10 r12 r13 r14 r15 edi xmm1 xmm2 xmm3 xmm5 xmm10 xmm11
..B8.9:                         # Preds ..B8.6
..LN2000:
	.loc    1  767  is_stmt 1
        vmovsd    (%rsi,%rdx,8), %xmm11                         #767.14
..LN2001:
                                # LOE rax rdx rcx rbx rbp rsi r8 r9 r10 r12 r13 r14 r15 edi xmm1 xmm2 xmm3 xmm5 xmm10 xmm11
..B8.10:                        # Preds ..B8.7 ..B8.9 ..B8.8
..LN2002:
	.loc    1  753  is_stmt 1
        incq      %rdx                                          #753.33
..LN2003:
	.loc    1  766  is_stmt 1
        vmovapd   %xmm10, %xmm4                                 #766.5
..LN2004:
	.loc    1  767  is_stmt 1
        vmovapd   %xmm11, %xmm0                                 #767.5
..LN2005:
	.loc    1  753  is_stmt 1
        cmpq      %r9, %rdx                                     #753.28
..LN2006:
        jl        ..B8.3        # Prob 82%                      #753.28
..LN2007:
                                # LOE rax rdx rcx rbx rbp rsi r8 r9 r10 r12 r13 r14 r15 edi xmm0 xmm1 xmm2 xmm3 xmm4 xmm5
..B8.12:                        # Preds ..B8.10 ..B8.1
..LN2008:
	.loc    1  770  is_stmt 1
        movslq    %eax, %rdi                                    #770.9
..LN2009:
        testq     %rax, %rax                                    #770.9
..LN2010:
        je        ..B8.49       # Prob 28%                      #770.9
..LN2011:
                                # LOE rax rcx rbx rbp rdi r8 r12 r13 r14 r15 xmm1 xmm2 xmm3
..B8.13:                        # Preds ..B8.12
..LN2012:
	.loc    1  773  is_stmt 1
        vmovsd    392(%rsp,%rax,8), %xmm4                       #773.12
..LN2013:
	.loc    1  776  is_stmt 1
        xorl      %edx, %edx                                    #776.8
..LN2014:
        xorl      %r9d, %r9d                                    #776.15
..LN2015:
	.loc    1  775  is_stmt 1
        vcmpgesd  %xmm4, %xmm2, %xmm5                           #775.3
..LN2016:
        vmovd     %xmm5, %esi                                   #775.3
..LN2017:
	.loc    1  774  is_stmt 1
        vmovsd    -8(%rsp,%rax,8), %xmm0                        #774.12
..LN2018:
	.loc    1  775  is_stmt 1
        negl      %esi                                          #775.3
..LN2019:
	.loc    1  776  is_stmt 1
        xorl      %eax, %eax                                    #776.15
..LN2020:
        testq     %rdi, %rdi                                    #776.28
..LN2021:
        jle       ..B8.24       # Prob 10%                      #776.28
..LN2022:
                                # LOE rax rdx rcx rbx rbp rdi r8 r9 r12 r13 r14 r15 esi xmm0 xmm1 xmm2 xmm3 xmm4
..B8.15:                        # Preds ..B8.13 ..B8.22
..L256:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN2023:
	.loc    1  779  is_stmt 1
        vmovsd    400(%rsp,%rdx,8), %xmm9                       #779.18
..LN2024:
        vcomisd   %xmm9, %xmm2                                  #779.33
..LN2025:
        jb        ..B8.18       # Prob 50%                      #779.33
..LN2026:
                                # LOE rax rdx rcx rbx rbp rdi r8 r9 r12 r13 r14 r15 esi xmm0 xmm1 xmm2 xmm3 xmm4 xmm9
..B8.16:                        # Preds ..B8.15
..LN2027:
        movl      $1, %r10d                                     #779.10
..LN2028:
        cmpl      $1, %esi                                      #779.43
..LN2029:
        jne       ..B8.19       # Prob 50%                      #779.43
..LN2030:
                                # LOE rax rdx rcx rbx rbp rdi r8 r9 r12 r13 r14 r15 r10d xmm0 xmm1 xmm2 xmm3 xmm4 xmm9
..B8.17:                        # Preds ..B8.16
..LN2031:
	.loc    1  788  is_stmt 1
        vmovsd    (%rsp,%rdx,8), %xmm10                         #788.26
..LN2032:
        jmp       ..B8.20       # Prob 100%                     #788.26
..LN2033:
                                # LOE rax rdx rcx rbx rbp rdi r8 r9 r12 r13 r14 r15 r10d xmm1 xmm2 xmm3 xmm9 xmm10
..B8.18:                        # Preds ..B8.15
..LN2034:
	.loc    1  779  is_stmt 1
        xorl      %r10d, %r10d                                  #779.10
..LN2035:
        testl     %esi, %esi                                    #779.43
..LN2036:
        je        ..B8.21       # Prob 50%                      #779.43
..LN2037:
                                # LOE rax rdx rcx rbx rbp rdi r8 r9 r12 r13 r14 r15 r10d xmm0 xmm1 xmm2 xmm3 xmm4 xmm9
..B8.19:                        # Preds ..B8.16 ..B8.18
..LN2038:
	.loc    1  781  is_stmt 1
        vmovsd    (%rsp,%rdx,8), %xmm10                         #781.56
..LN2039:
        incq      %r9                                           #781.15
..LN2040:
	.loc    1  780  is_stmt 1
        vmovsd    %xmm2, (%rax,%rcx)                            #780.7
..LN2041:
	.loc    1  781  is_stmt 1
        vsubsd    %xmm4, %xmm2, %xmm5                           #781.45
..LN2042:
        vsubsd    %xmm0, %xmm10, %xmm6                          #781.70
..LN2043:
	.loc    1  782  is_stmt 1
        vsubsd    %xmm4, %xmm9, %xmm4                           #782.67
..LN2044:
	.loc    1  781  is_stmt 1
        vmulsd    %xmm6, %xmm5, %xmm7                           #781.70
..LN2045:
	.loc    1  782  is_stmt 1
        vdivsd    %xmm4, %xmm7, %xmm8                           #782.67
..LN2046:
        vaddsd    %xmm8, %xmm0, %xmm0                           #782.67
..LN2047:
	.loc    1  781  is_stmt 1
        vmovsd    %xmm0, (%rax,%r8)                             #781.7
..LN2048:
        addq      $8, %rax                                      #781.15
..LN2049:
	.loc    1  786  is_stmt 1
        testl     %r10d, %r10d                                  #786.9
..LN2050:
        je        ..B8.22       # Prob 50%                      #786.9
..LN2051:
                                # LOE rax rdx rcx rbx rbp rdi r8 r9 r12 r13 r14 r15 r10d xmm1 xmm2 xmm3 xmm9 xmm10
..B8.20:                        # Preds ..B8.17 ..B8.19
..LN2052:
	.loc    1  787  is_stmt 1
        vmovsd    %xmm9, (%rax,%rcx)                            #787.7
..LN2053:
	.loc    1  788  is_stmt 1
        incq      %r9                                           #788.15
..LN2054:
        vmovsd    %xmm10, (%rax,%r8)                            #788.7
..LN2055:
        addq      $8, %rax                                      #788.15
..LN2056:
        jmp       ..B8.22       # Prob 100%                     #788.15
..LN2057:
                                # LOE rax rdx rcx rbx rbp rdi r8 r9 r12 r13 r14 r15 r10d xmm1 xmm2 xmm3 xmm9 xmm10
..B8.21:                        # Preds ..B8.18
..LN2058:
	.loc    1  792  is_stmt 1
        vmovsd    (%rsp,%rdx,8), %xmm10                         #792.14
..LN2059:
                                # LOE rax rdx rcx rbx rbp rdi r8 r9 r12 r13 r14 r15 r10d xmm1 xmm2 xmm3 xmm9 xmm10
..B8.22:                        # Preds ..B8.19 ..B8.21 ..B8.20
..LN2060:
	.loc    1  776  is_stmt 1
        incq      %rdx                                          #776.34
..LN2061:
	.loc    1  793  is_stmt 1
        movl      %r10d, %esi                                   #793.5
..LN2062:
	.loc    1  791  is_stmt 1
        vmovapd   %xmm9, %xmm4                                  #791.5
..LN2063:
	.loc    1  792  is_stmt 1
        vmovapd   %xmm10, %xmm0                                 #792.5
..LN2064:
	.loc    1  776  is_stmt 1
        cmpq      %rdi, %rdx                                    #776.28
..LN2065:
        jl        ..B8.15       # Prob 98%                      #776.28
..LN2066:
                                # LOE rax rdx rcx rbx rbp rdi r8 r9 r12 r13 r14 r15 esi xmm0 xmm1 xmm2 xmm3 xmm4
..B8.24:                        # Preds ..B8.22 ..B8.13
..LN2067:
	.loc    1  795  is_stmt 1
        movslq    %r9d, %rsi                                    #795.9
..LN2068:
        testq     %r9, %r9                                      #795.9
..LN2069:
        je        ..B8.49       # Prob 28%                      #795.9
..LN2070:
                                # LOE rcx rbx rbp rsi r8 r9 r12 r13 r14 r15 xmm1 xmm3
..B8.25:                        # Preds ..B8.24
..LN2071:
	.loc    1  799  is_stmt 1
        vmovsd    -8(%r8,%r9,8), %xmm0                          #799.12
..LN2072:
	.loc    1  801  is_stmt 1
        xorl      %eax, %eax                                    #801.8
..LN2073:
	.loc    1  798  is_stmt 1
        vmovsd    -8(%rcx,%r9,8), %xmm2                         #798.12
..LN2074:
	.loc    1  801  is_stmt 1
        xorl      %edi, %edi                                    #801.15
..LN2075:
	.loc    1  800  is_stmt 1
        vcmpgesd  %xmm1, %xmm0, %xmm4                           #800.3
..LN2076:
        vmovd     %xmm4, %edx                                   #800.3
..LN2077:
        negl      %edx                                          #800.3
..LN2078:
	.loc    1  801  is_stmt 1
        testq     %rsi, %rsi                                    #801.28
..LN2079:
        jle       ..B8.36       # Prob 10%                      #801.28
..LN2080:
                                # LOE rax rcx rbx rbp rsi rdi r8 r12 r13 r14 r15 edx xmm0 xmm1 xmm2 xmm3
..B8.27:                        # Preds ..B8.25 ..B8.34
..L257:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN2081:
	.loc    1  804  is_stmt 1
        vmovsd    (%r8,%rax,8), %xmm9                           #804.18
..LN2082:
        vcomisd   %xmm1, %xmm9                                  #804.35
..LN2083:
        jb        ..B8.30       # Prob 50%                      #804.35
..LN2084:
                                # LOE rax rcx rbx rbp rsi rdi r8 r12 r13 r14 r15 edx xmm0 xmm1 xmm2 xmm3 xmm9
..B8.28:                        # Preds ..B8.27
..LN2085:
        movl      $1, %r9d                                      #804.10
..LN2086:
        cmpl      $1, %edx                                      #804.45
..LN2087:
        jne       ..B8.31       # Prob 50%                      #804.45
..LN2088:
                                # LOE rax rcx rbx rbp rsi rdi r8 r12 r13 r14 r15 r9d xmm0 xmm1 xmm2 xmm3 xmm9
..B8.29:                        # Preds ..B8.28
..LN2089:
	.loc    1  811  is_stmt 1
        vmovsd    (%rcx,%rax,8), %xmm8                          #811.24
..LN2090:
        jmp       ..B8.32       # Prob 100%                     #811.24
..LN2091:
                                # LOE rax rcx rbx rbp rsi rdi r8 r12 r13 r14 r15 r9d xmm1 xmm3 xmm8 xmm9
..B8.30:                        # Preds ..B8.27
..LN2092:
	.loc    1  804  is_stmt 1
        xorl      %r9d, %r9d                                    #804.10
..LN2093:
        testl     %edx, %edx                                    #804.45
..LN2094:
        je        ..B8.33       # Prob 50%                      #804.45
..LN2095:
                                # LOE rax rcx rbx rbp rsi rdi r8 r12 r13 r14 r15 r9d xmm0 xmm1 xmm2 xmm3 xmm9
..B8.31:                        # Preds ..B8.28 ..B8.30
..LN2096:
	.loc    1  806  is_stmt 1
        vmovsd    (%rcx,%rax,8), %xmm8                          #806.54
..LN2097:
        vsubsd    %xmm0, %xmm1, %xmm5                           #806.43
..LN2098:
        vsubsd    %xmm2, %xmm8, %xmm4                           #806.70
..LN2099:
        vsubsd    %xmm0, %xmm9, %xmm0                           #806.97
..LN2100:
        vmulsd    %xmm5, %xmm4, %xmm6                           #806.70
..LN2101:
        vdivsd    %xmm0, %xmm6, %xmm7                           #806.97
..LN2102:
	.loc    1  805  is_stmt 1
        vmovsd    %xmm1, (%rsp,%rdi,8)                          #805.7
..LN2103:
	.loc    1  806  is_stmt 1
        vaddsd    %xmm7, %xmm2, %xmm2                           #806.97
..LN2104:
        vmovsd    %xmm2, 400(%rsp,%rdi,8)                       #806.7
..LN2105:
        incq      %rdi                                          #806.13
..LN2106:
	.loc    1  810  is_stmt 1
        testl     %r9d, %r9d                                    #810.9
..LN2107:
        je        ..B8.34       # Prob 50%                      #810.9
..LN2108:
                                # LOE rax rcx rbx rbp rsi rdi r8 r12 r13 r14 r15 r9d xmm1 xmm3 xmm8 xmm9
..B8.32:                        # Preds ..B8.29 ..B8.31
..LN2109:
	.loc    1  811  is_stmt 1
        vmovsd    %xmm8, 400(%rsp,%rdi,8)                       #811.7
..LN2110:
	.loc    1  812  is_stmt 1
        vmovsd    %xmm9, (%rsp,%rdi,8)                          #812.7
..LN2111:
        incq      %rdi                                          #812.13
..LN2112:
        jmp       ..B8.34       # Prob 100%                     #812.13
..LN2113:
                                # LOE rax rcx rbx rbp rsi rdi r8 r12 r13 r14 r15 r9d xmm1 xmm3 xmm8 xmm9
..B8.33:                        # Preds ..B8.30
..LN2114:
	.loc    1  814  is_stmt 1
        vmovsd    (%rcx,%rax,8), %xmm8                          #814.14
..LN2115:
                                # LOE rax rcx rbx rbp rsi rdi r8 r12 r13 r14 r15 r9d xmm1 xmm3 xmm8 xmm9
..B8.34:                        # Preds ..B8.31 ..B8.33 ..B8.32
..LN2116:
	.loc    1  801  is_stmt 1
        incq      %rax                                          #801.34
..LN2117:
	.loc    1  816  is_stmt 1
        movl      %r9d, %edx                                    #816.5
..LN2118:
	.loc    1  814  is_stmt 1
        vmovapd   %xmm8, %xmm2                                  #814.5
..LN2119:
	.loc    1  815  is_stmt 1
        vmovapd   %xmm9, %xmm0                                  #815.5
..LN2120:
	.loc    1  801  is_stmt 1
        cmpq      %rsi, %rax                                    #801.28
..LN2121:
        jl        ..B8.27       # Prob 82%                      #801.28
..LN2122:
                                # LOE rax rcx rbx rbp rsi rdi r8 r12 r13 r14 r15 edx xmm0 xmm1 xmm2 xmm3
..B8.36:                        # Preds ..B8.34 ..B8.25
..LN2123:
	.loc    1  818  is_stmt 1
        movslq    %edi, %r9                                     #818.9
..LN2124:
        testq     %rdi, %rdi                                    #818.9
..LN2125:
        je        ..B8.49       # Prob 28%                      #818.9
..LN2126:
                                # LOE rcx rbx rbp rdi r8 r9 r12 r13 r14 r15 xmm3
..B8.37:                        # Preds ..B8.36
..LN2127:
	.loc    1  822  is_stmt 1
        vmovsd    -8(%rsp,%rdi,8), %xmm0                        #822.12
..LN2128:
	.loc    1  824  is_stmt 1
        xorl      %esi, %esi                                    #824.8
..LN2129:
	.loc    1  821  is_stmt 1
        vmovsd    392(%rsp,%rdi,8), %xmm1                       #821.12
..LN2130:
	.loc    1  824  is_stmt 1
        xorl      %eax, %eax                                    #824.15
..LN2131:
        xorl      %edx, %edx                                    #824.15
..LN2132:
	.loc    1  823  is_stmt 1
        vcmpgesd  %xmm0, %xmm3, %xmm2                           #823.3
..LN2133:
        vmovd     %xmm2, %edi                                   #823.3
..LN2134:
        negl      %edi                                          #823.3
..LN2135:
	.loc    1  824  is_stmt 1
        testq     %r9, %r9                                      #824.28
..LN2136:
        jle       ..B8.48       # Prob 10%                      #824.28
..LN2137:
                                # LOE rdx rcx rbx rbp rsi r8 r9 r12 r13 r14 r15 eax edi xmm0 xmm1 xmm3
..B8.39:                        # Preds ..B8.37 ..B8.46
..L258:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN2138:
	.loc    1  827  is_stmt 1
        vmovsd    (%rsp,%rsi,8), %xmm8                          #827.18
..LN2139:
        vcomisd   %xmm8, %xmm3                                  #827.33
..LN2140:
        jb        ..B8.42       # Prob 50%                      #827.33
..LN2141:
                                # LOE rdx rcx rbx rbp rsi r8 r9 r12 r13 r14 r15 eax edi xmm0 xmm1 xmm3 xmm8
..B8.40:                        # Preds ..B8.39
..LN2142:
        movl      $1, %r10d                                     #827.10
..LN2143:
        cmpl      $1, %edi                                      #827.43
..LN2144:
        jne       ..B8.43       # Prob 50%                      #827.43
..LN2145:
                                # LOE rdx rcx rbx rbp rsi r8 r9 r12 r13 r14 r15 eax r10d xmm0 xmm1 xmm3 xmm8
..B8.41:                        # Preds ..B8.40
..LN2146:
	.loc    1  834  is_stmt 1
        vmovsd    400(%rsp,%rsi,8), %xmm7                       #834.26
..LN2147:
        jmp       ..B8.44       # Prob 100%                     #834.26
..LN2148:
                                # LOE rdx rcx rbx rbp rsi r8 r9 r12 r13 r14 r15 eax r10d xmm3 xmm7 xmm8
..B8.42:                        # Preds ..B8.39
..LN2149:
	.loc    1  827  is_stmt 1
        xorl      %r10d, %r10d                                  #827.10
..LN2150:
        testl     %edi, %edi                                    #827.43
..LN2151:
        je        ..B8.45       # Prob 50%                      #827.43
..LN2152:
                                # LOE rdx rcx rbx rbp rsi r8 r9 r12 r13 r14 r15 eax r10d xmm0 xmm1 xmm3 xmm8
..B8.43:                        # Preds ..B8.40 ..B8.42
..LN2153:
	.loc    1  829  is_stmt 1
        vmovsd    400(%rsp,%rsi,8), %xmm7                       #829.56
..LN2154:
        incl      %eax                                          #829.15
..LN2155:
	.loc    1  828  is_stmt 1
        vmovsd    %xmm3, (%rdx,%r8)                             #828.7
..LN2156:
	.loc    1  829  is_stmt 1
        vsubsd    %xmm1, %xmm7, %xmm2                           #829.70
..LN2157:
        vsubsd    %xmm0, %xmm3, %xmm4                           #829.45
..LN2158:
        vsubsd    %xmm0, %xmm8, %xmm0                           #829.95
..LN2159:
        vmulsd    %xmm4, %xmm2, %xmm5                           #829.70
..LN2160:
        vdivsd    %xmm0, %xmm5, %xmm6                           #829.95
..LN2161:
        vaddsd    %xmm6, %xmm1, %xmm1                           #829.95
..LN2162:
        vmovsd    %xmm1, (%rdx,%rcx)                            #829.7
..LN2163:
        addq      $8, %rdx                                      #829.15
..LN2164:
	.loc    1  833  is_stmt 1
        testl     %r10d, %r10d                                  #833.9
..LN2165:
        je        ..B8.46       # Prob 50%                      #833.9
..LN2166:
                                # LOE rdx rcx rbx rbp rsi r8 r9 r12 r13 r14 r15 eax r10d xmm3 xmm7 xmm8
..B8.44:                        # Preds ..B8.41 ..B8.43
..LN2167:
	.loc    1  834  is_stmt 1
        vmovsd    %xmm7, (%rdx,%rcx)                            #834.7
..LN2168:
	.loc    1  835  is_stmt 1
        incl      %eax                                          #835.15
..LN2169:
        vmovsd    %xmm8, (%rdx,%r8)                             #835.7
..LN2170:
        addq      $8, %rdx                                      #835.15
..LN2171:
        jmp       ..B8.46       # Prob 100%                     #835.15
..LN2172:
                                # LOE rdx rcx rbx rbp rsi r8 r9 r12 r13 r14 r15 eax r10d xmm3 xmm7 xmm8
..B8.45:                        # Preds ..B8.42
..LN2173:
	.loc    1  837  is_stmt 1
        vmovsd    400(%rsp,%rsi,8), %xmm7                       #837.14
..LN2174:
                                # LOE rdx rcx rbx rbp rsi r8 r9 r12 r13 r14 r15 eax r10d xmm3 xmm7 xmm8
..B8.46:                        # Preds ..B8.43 ..B8.45 ..B8.44
..LN2175:
	.loc    1  824  is_stmt 1
        incq      %rsi                                          #824.34
..LN2176:
	.loc    1  839  is_stmt 1
        movl      %r10d, %edi                                   #839.5
..LN2177:
	.loc    1  837  is_stmt 1
        vmovapd   %xmm7, %xmm1                                  #837.5
..LN2178:
	.loc    1  838  is_stmt 1
        vmovapd   %xmm8, %xmm0                                  #838.5
..LN2179:
	.loc    1  824  is_stmt 1
        cmpq      %r9, %rsi                                     #824.28
..LN2180:
        jl        ..B8.39       # Prob 98%                      #824.28
..LN2181:
                                # LOE rdx rcx rbx rbp rsi r8 r9 r12 r13 r14 r15 eax edi xmm0 xmm1 xmm3
..B8.48:                        # Preds ..B8.46 ..B8.37
..LN2182:
	.loc    1  841  epilogue_begin  is_stmt 1
        addq      $808, %rsp                                    #841.9
	.cfi_def_cfa_offset 8
..LN2183:
        ret                                                     #841.9
	.cfi_def_cfa_offset 816
..LN2184:
                                # LOE
..B8.49:                        # Preds ..B8.12 ..B8.24 ..B8.36
..LN2185:
	.loc    1  818  is_stmt 1
        xorl      %eax, %eax                                    #818.29
..LN2186:
	.loc    1  818  epilogue_begin  is_stmt 1
        addq      $808, %rsp                                    #818.29
	.cfi_def_cfa_offset 8
..LN2187:
        ret                                                     #818.29
..LN2188:
        .align    16,0x90
	.cfi_endproc
..LN2189:
                                # LOE
..LN2190:
# mark_end;
	.type	clip,@function
	.size	clip,.-clip
..LNclip.2191:
.LNclip:
	.data
# -- End  clip
	.text
.L_2__routine_start_create_xgrid_1dx2d_order2__8:
# -- Begin  create_xgrid_1dx2d_order2_
	.text
# mark_begin;
       .align    16,0x90
	.globl create_xgrid_1dx2d_order2_
# --- create_xgrid_1dx2d_order2_(const int *, const int *, const int *, const int *, const double *, const double *, const double *, const double *, const double *, int *, int *, int *, int *, double *, double *, double *)
create_xgrid_1dx2d_order2_:
# parameter 1(nlon_in): %rdi
# parameter 2(nlat_in): %rsi
# parameter 3(nlon_out): %rdx
# parameter 4(nlat_out): %rcx
# parameter 5(lon_in): %r8
# parameter 6(lat_in): %r9
# parameter 7(lon_out): 16 + %rbp
# parameter 8(lat_out): 24 + %rbp
# parameter 9(mask_in): 32 + %rbp
# parameter 10(i_in): 40 + %rbp
# parameter 11(j_in): 48 + %rbp
# parameter 12(i_out): 56 + %rbp
# parameter 13(j_out): 64 + %rbp
# parameter 14(xgrid_area): 72 + %rbp
# parameter 15(xgrid_clon): 80 + %rbp
# parameter 16(xgrid_clat): 88 + %rbp
..B9.1:                         # Preds ..B9.0
	.cfi_startproc
..___tag_value_create_xgrid_1dx2d_order2_.268:
..L269:
                                                        #229.1
..LN2192:
	.loc    1  229  is_stmt 1
        pushq     %rbp                                          #229.1
	.cfi_def_cfa_offset 16
..LN2193:
        movq      %rsp, %rbp                                    #229.1
	.cfi_def_cfa 6, 16
	.cfi_offset 6, -16
..LN2194:
        andq      $-32, %rsp                                    #229.1
..LN2195:
        pushq     %r12                                          #229.1
..LN2196:
        pushq     %r13                                          #229.1
..LN2197:
        pushq     %r14                                          #229.1
..LN2198:
        pushq     %r15                                          #229.1
..LN2199:
        pushq     %rbx                                          #229.1
..LN2200:
        subq      $3512, %rsp                                   #229.1
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN2201:
        movq      %rdi, %r12                                    #229.1
..LN2202:
        movq      %rsi, %r13                                    #229.1
..LN2203:
        movq      %rdx, %r14                                    #229.1
..LN2204:
        movq      %rcx, %r15                                    #229.1
..LN2205:
        movq      %r9, 3120(%rsp)                               #229.1
..LN2206:
	.loc    1  248  prologue_end  is_stmt 1
        movl      (%r12), %edi                                  #248.10
..LN2207:
        movl      %edi, 2384(%rsp)                              #248.10
..LN2208:
	.loc    1  270  is_stmt 1
        movslq    %edi, %rdi                                    #270.31
..LN2209:
        movq      %rdi, 3128(%rsp)                              #270.31
..LN2210:
	.loc    1  249  is_stmt 1
        movl      (%r13), %r11d                                 #249.10
..LN2211:
	.loc    1  257  is_stmt 1
        imull     %r11d, %edi                                   #257.28
..LN2212:
        movslq    %edi, %rdi                                    #257.28
..LN2213:
	.loc    1  250  is_stmt 1
        movl      (%r14), %eax                                  #250.10
..LN2214:
	.loc    1  251  is_stmt 1
        movl      (%r15), %r10d                                 #251.10
..LN2215:
	.loc    1  257  is_stmt 1
        shlq      $3, %rdi                                      #257.28
..LN2216:
	.loc    1  250  is_stmt 1
        movl      %eax, 3272(%rsp)                              #250.10
..LN2217:
	.loc    1  274  is_stmt 1
        movslq    %eax, %rax                                    #274.33
..LN2218:
	.loc    1  229  is_stmt 1
        movq      %r8, 2392(%rsp)                               #229.1
..LN2219:
	.loc    1  249  is_stmt 1
        movl      %r11d, 656(%rsp)                              #249.10
..LN2220:
	.loc    1  274  is_stmt 1
        movq      %rax, 3488(%rsp)                              #274.33
..LN2221:
	.loc    1  251  is_stmt 1
        movl      %r10d, 3264(%rsp)                             #251.10
..LN2222:
	.loc    1  253  is_stmt 1
        movq      $0, 3160(%rsp)                                #253.3
..LN2223:
	.loc    1  257  is_stmt 1
#       malloc(size_t)
        call      malloc                                        #257.28
..LN2224:
                                # LOE rax r12 r13 r14 r15
..B9.159:                       # Preds ..B9.1
..LN2225:
        movq      %rax, 664(%rsp)                               #257.28
..LN2226:
                                # LOE r12 r13 r14 r15
..B9.2:                         # Preds ..B9.159
..LN2227:
	.loc    1  258  is_stmt 1
        movl      3272(%rsp), %edi                              #258.28
..LN2228:
        imull     3264(%rsp), %edi                              #258.28
..LN2229:
        movslq    %edi, %rdi                                    #258.28
..LN2230:
        shlq      $3, %rdi                                      #258.28
..LN2231:
#       malloc(size_t)
        call      malloc                                        #258.28
..LN2232:
                                # LOE rax r12 r13 r14 r15
..B9.160:                       # Preds ..B9.2
..LN2233:
        movq      %rax, %rbx                                    #258.28
..LN2234:
                                # LOE rbx r12 r13 r14 r15
..B9.3:                         # Preds ..B9.160
..LN2235:
	.loc    1  259  is_stmt 1
        movl      2384(%rsp), %eax                              #259.32
..LN2236:
        movl      656(%rsp), %edx                               #259.40
..LN2237:
        lea       1(%rax), %edi                                 #259.32
..LN2238:
        movl      %edi, 48(%rsp)                                #259.32
..LN2239:
        lea       1(%rdx), %ecx                                 #259.40
..LN2240:
	.loc    1  261  is_stmt 1
        movslq    %edi, %rdi                                    #261.32
..LN2241:
        movq      %rdi, 40(%rsp)                                #261.32
..LN2242:
	.loc    1  259  is_stmt 1
        imull     %ecx, %edi                                    #259.40
..LN2243:
        movslq    %edi, %rdi                                    #259.40
..LN2244:
        shlq      $3, %rdi                                      #259.43
..LN2245:
        movl      %ecx, 56(%rsp)                                #259.40
..LN2246:
        movq      %rdi, (%rsp)                                  #259.43
..LN2247:
#       malloc(size_t)
        call      malloc                                        #259.20
..LN2248:
                                # LOE rax rbx r12 r13 r14 r15
..B9.161:                       # Preds ..B9.3
..LN2249:
        movq      %rax, 672(%rsp)                               #259.20
..LN2250:
                                # LOE rbx r12 r13 r14 r15
..B9.4:                         # Preds ..B9.161
..LN2251:
	.loc    1  260  is_stmt 1
        movq      (%rsp), %rdi                                  #260.20
..LN2252:
#       malloc(size_t)
        call      malloc                                        #260.20
..LN2253:
                                # LOE rax rbx r12 r13 r14 r15
..B9.162:                       # Preds ..B9.4
..LN2254:
        movq      %rax, 680(%rsp)                               #260.20
..LN2255:
                                # LOE rax rbx r12 r13 r14 r15 eax al ah
..B9.5:                         # Preds ..B9.162
..LN2256:
	.loc    1  261  is_stmt 1
        movq      %rax, %r10                                    #261.32
..LN2257:
        xorl      %r11d, %r11d                                  #261.3
..LN2258:
        movq      672(%rsp), %r9                                #261.32
..LN2259:
        xorl      %r8d, %r8d                                    #261.32
..LN2260:
        cmpl      $0, 656(%rsp)                                 #261.17
..LN2261:
        jl        ..B9.48       # Prob 9%                       #261.17
..LN2262:
                                # LOE rbx r8 r9 r10 r12 r13 r14 r15 r9d r10d r11d r9b r10b
..B9.6:                         # Preds ..B9.5
..LN2263:
        movq      3128(%rsp), %rsi                              #261.28
..LN2264:
        movq      40(%rsp), %rdx                                #261.28
..LN2265:
        movq      3120(%rsp), %rcx                              #261.28
..LN2266:
        movq      %rbx, 3280(%rsp)                              #261.28
..LN2267:
        lea       1(%rsi), %rdi                                 #261.28
..LN2268:
        movl      %edi, %esi                                    #261.28
..LN2269:
        movl      %esi, %eax                                    #261.28
..LN2270:
        andl      $-4, %eax                                     #261.28
..LN2271:
        movslq    %eax, %rax                                    #261.28
..LN2272:
        movq      %rax, 16(%rsp)                                #261.28
..LN2273:
        movq      %r12, 24(%rsp)                                #261.28
..LN2274:
        movq      %r13, 32(%rsp)                                #261.28
..LN2275:
        movq      %r14, 8(%rsp)                                 #261.28
..LN2276:
        movq      %r15, (%rsp)                                  #261.28
..LN2277:
        movl      48(%rsp), %eax                                #261.28
..LN2278:
                                # LOE rdx rcx rdi r8 r9 r10 eax esi r11d
..B9.7:                         # Preds ..B9.46 ..B9.6
..L279:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN2279:
        cmpl      $0, 2384(%rsp)                                #261.42
..LN2280:
        jl        ..B9.46       # Prob 50%                      #261.42
..LN2281:
                                # LOE rdx rcx rdi r8 r9 r10 eax esi r11d
..B9.8:                         # Preds ..B9.7
..LN2282:
        cmpq      $4, %rdi                                      #261.28
..LN2283:
        jl        ..B9.153      # Prob 10%                      #261.28
..LN2284:
                                # LOE rdx rcx rdi r8 r9 r10 eax esi r11d
..B9.9:                         # Preds ..B9.8
..LN2285:
        cmpq      $95, %rdi                                     #261.28
..LN2286:
        jl        ..B9.155      # Prob 10%                      #261.28
..LN2287:
                                # LOE rdx rcx rdi r8 r9 r10 eax esi r11d
..B9.10:                        # Preds ..B9.9
..LN2288:
        movq      %r9, %rbx                                     #261.28
..LN2289:
        andq      $31, %rbx                                     #261.28
..LN2290:
        testl     %ebx, %ebx                                    #261.28
..LN2291:
        je        ..B9.13       # Prob 50%                      #261.28
..LN2292:
                                # LOE rdx rcx rdi r8 r9 r10 eax ebx esi r11d
..B9.11:                        # Preds ..B9.10
..LN2293:
        testb     $7, %bl                                       #261.28
..LN2294:
        jne       ..B9.153      # Prob 10%                      #261.28
..LN2295:
                                # LOE rdx rcx rdi r8 r9 r10 eax ebx esi r11d
..B9.12:                        # Preds ..B9.11
..LN2296:
        negl      %ebx                                          #261.28
..LN2297:
        addl      $32, %ebx                                     #261.28
..LN2298:
        shrl      $3, %ebx                                      #261.28
..LN2299:
                                # LOE rdx rcx rdi r8 r9 r10 eax ebx esi r11d
..B9.13:                        # Preds ..B9.12 ..B9.10
..LN2300:
        movl      %ebx, %r12d                                   #261.28
..LN2301:
        lea       4(%r12), %r13                                 #261.28
..LN2302:
        cmpq      %r13, %rdi                                    #261.28
..LN2303:
        jl        ..B9.153      # Prob 10%                      #261.28
..LN2304:
                                # LOE rdx rcx rdi r8 r9 r10 r12 eax ebx esi r11d
..B9.14:                        # Preds ..B9.13
..LN2305:
        negl      %ebx                                          #261.28
..LN2306:
        xorl      %r13d, %r13d                                  #261.28
..LN2307:
        addl      %esi, %ebx                                    #261.28
..LN2308:
        andl      $3, %ebx                                      #261.28
..LN2309:
        negl      %ebx                                          #261.28
..LN2310:
        addl      %esi, %ebx                                    #261.28
..LN2311:
        movslq    %ebx, %rbx                                    #261.28
..LN2312:
        testq     %r12, %r12                                    #261.28
..LN2313:
        jbe       ..B9.18       # Prob 10%                      #261.28
..LN2314:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 eax esi r11d
..B9.15:                        # Preds ..B9.14
..LN2315:
        movq      2392(%rsp), %r15                              #
..LN2316:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 r15 eax esi r11d
..B9.16:                        # Preds ..B9.16 ..B9.15
..L280:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # PEELED LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
..LN2317:
	.loc    1  262  is_stmt 1
        movq      (%r15,%r13,8), %r14                           #262.24
..LN2318:
        movq      %r14, (%r9,%r13,8)                            #262.5
..LN2319:
	.loc    1  261  is_stmt 1
        incq      %r13                                          #261.28
..LN2320:
        cmpq      %r12, %r13                                    #261.28
..LN2321:
        jb        ..B9.16       # Prob 82%                      #261.28
..LN2322:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 r15 eax esi r11d
..B9.18:                        # Preds ..B9.16 ..B9.14 ..B9.155
..LN2323:
        movq      2392(%rsp), %r13                              #
..LN2324:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 eax esi r11d
..B9.19:                        # Preds ..B9.19 ..B9.18
..L281:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS VECTORIZED
                # VECTORIZATION HAS UNALIGNED MEMORY REFERENCES
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN2325:
	.loc    1  262  is_stmt 1
        vmovupd   (%r13,%r12,8), %ymm0                          #262.24
..LN2326:
        vmovupd   %ymm0, (%r9,%r12,8)                           #262.5
..LN2327:
	.loc    1  261  is_stmt 1
        addq      $4, %r12                                      #261.28
..LN2328:
        cmpq      %rbx, %r12                                    #261.28
..LN2329:
        jb        ..B9.19       # Prob 82%                      #261.28
..LN2330:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 eax esi r11d
..B9.21:                        # Preds ..B9.19 ..B9.153
..LN2331:
        cmpq      %rdi, %rbx                                    #261.28
..LN2332:
        jae       ..B9.25       # Prob 10%                      #261.28
..LN2333:
                                # LOE rdx rcx rbx rdi r8 r9 r10 eax esi r11d
..B9.22:                        # Preds ..B9.21
..LN2334:
        movq      2392(%rsp), %r13                              #
..LN2335:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r13 eax esi r11d
..B9.23:                        # Preds ..B9.23 ..B9.22
..L282:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
..LN2336:
	.loc    1  262  is_stmt 1
        movq      (%r13,%rbx,8), %r12                           #262.24
..LN2337:
        movq      %r12, (%r9,%rbx,8)                            #262.5
..LN2338:
	.loc    1  261  is_stmt 1
        incq      %rbx                                          #261.28
..LN2339:
        cmpq      %rdi, %rbx                                    #261.28
..LN2340:
        jb        ..B9.23       # Prob 82%                      #261.28
..LN2341:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r13 eax esi r11d
..B9.25:                        # Preds ..B9.23 ..B9.21
..LN2342:
        cmpl      $16, %eax                                     #261.28
..LN2343:
        jl        ..B9.150      # Prob 10%                      #261.28
..LN2344:
                                # LOE rdx rcx rdi r8 r9 r10 eax esi r11d
..B9.26:                        # Preds ..B9.25
..LN2345:
        movq      %r10, %r12                                    #261.28
..LN2346:
        andq      $31, %r12                                     #261.28
..LN2347:
        movl      %r12d, %r12d                                  #261.28
..LN2348:
        testl     %r12d, %r12d                                  #261.28
..LN2349:
        je        ..B9.29       # Prob 50%                      #261.28
..LN2350:
                                # LOE rdx rcx rdi r8 r9 r10 r12 eax esi r11d
..B9.27:                        # Preds ..B9.26
..LN2351:
        testl     $7, %r12d                                     #261.28
..LN2352:
        jne       ..B9.150      # Prob 10%                      #261.28
..LN2353:
                                # LOE rdx rcx rdi r8 r9 r10 r12 eax esi r11d
..B9.28:                        # Preds ..B9.27
..LN2354:
        negl      %r12d                                         #261.28
..LN2355:
        addl      $32, %r12d                                    #261.28
..LN2356:
        shrl      $3, %r12d                                     #261.28
..LN2357:
                                # LOE rdx rcx rdi r8 r9 r10 r12 eax esi r11d
..B9.29:                        # Preds ..B9.28 ..B9.26
..LN2358:
        lea       16(%r12), %ebx                                #261.28
..LN2359:
        cmpl      %ebx, %eax                                    #261.28
..LN2360:
        jl        ..B9.150      # Prob 10%                      #261.28
..LN2361:
                                # LOE rdx rcx rdi r8 r9 r10 r12 eax esi r11d
..B9.30:                        # Preds ..B9.29
..LN2362:
        movl      %eax, %r14d                                   #261.28
..LN2363:
        xorl      %ebx, %ebx                                    #261.28
..LN2364:
        subl      %r12d, %r14d                                  #261.28
..LN2365:
        andl      $15, %r14d                                    #261.28
..LN2366:
        negl      %r14d                                         #261.28
..LN2367:
        addl      %eax, %r14d                                   #261.28
..LN2368:
	.loc    1  263  is_stmt 1
        vmovsd    (%rcx,%r8,8), %xmm0                           #263.24
..LN2369:
	.loc    1  261  is_stmt 1
        testq     %r12, %r12                                    #261.28
..LN2370:
        jbe       ..B9.34       # Prob 10%                      #261.28
..LN2371:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 eax esi r11d r14d xmm0
..B9.32:                        # Preds ..B9.30 ..B9.32
..L283:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 4
                # PEELED LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.648438
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.937500
..LN2372:
	.loc    1  263  is_stmt 1
        vmovsd    %xmm0, (%r10,%rbx,8)                          #263.5
..LN2373:
	.loc    1  261  is_stmt 1
        incq      %rbx                                          #261.28
..LN2374:
        cmpq      %r12, %rbx                                    #261.28
..LN2375:
        jb        ..B9.32       # Prob 82%                      #261.28
..LN2376:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 eax esi r11d r14d xmm0
..B9.34:                        # Preds ..B9.32 ..B9.30
..LN2377:
        movslq    %r14d, %rbx                                   #261.28
..LN2378:
        lea       (%r10,%r12,8), %r13                           #261.28
..LN2379:
	.loc    1  263  is_stmt 1
        vbroadcastsd %xmm0, %ymm0                               #263.24
..LN2380:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 eax esi r11d r14d ymm0
..B9.35:                        # Preds ..B9.35 ..B9.34
..L284:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 4
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 8.648438
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.937500
                # MAIN VECTOR TYPE: 64-bits floating point
..LN2381:
	.loc    1  261  is_stmt 1
        addq      $16, %r12                                     #261.28
..LN2382:
	.loc    1  263  is_stmt 1
        vmovupd   %ymm0, (%r13)                                 #263.5
..LN2383:
        vmovupd   %ymm0, 32(%r13)                               #263.5
..LN2384:
        vmovupd   %ymm0, 64(%r13)                               #263.5
..LN2385:
        vmovupd   %ymm0, 96(%r13)                               #263.5
..LN2386:
	.loc    1  261  is_stmt 1
        addq      $128, %r13                                    #261.28
..LN2387:
        cmpq      %rbx, %r12                                    #261.28
..LN2388:
        jb        ..B9.35       # Prob 82%                      #261.28
..LN2389:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 eax esi r11d r14d ymm0
..B9.37:                        # Preds ..B9.35 ..B9.150
..LN2390:
        lea       1(%r14), %ebx                                 #261.28
..LN2391:
        cmpl      %ebx, %eax                                    #261.28
..LN2392:
        jb        ..B9.46       # Prob 50%                      #261.28
..LN2393:
                                # LOE rdx rcx rdi r8 r9 r10 eax esi r11d r14d
..B9.38:                        # Preds ..B9.37
..LN2394:
        movslq    %r14d, %r13                                   #261.28
..LN2395:
        negq      %r13                                          #261.28
..LN2396:
        addq      %rdx, %r13                                    #261.28
..LN2397:
        cmpq      $4, %r13                                      #261.28
..LN2398:
        jl        ..B9.149      # Prob 10%                      #261.28
..LN2399:
                                # LOE rdx rcx rdi r8 r9 r10 r13 eax esi r11d r14d
..B9.39:                        # Preds ..B9.38
..LN2400:
	.loc    1  263  is_stmt 1
        movslq    %r14d, %r14                                   #263.5
..LN2401:
	.loc    1  261  is_stmt 1
        movl      %r13d, %r12d                                  #261.28
..LN2402:
        andl      $-4, %r12d                                    #261.28
..LN2403:
        xorl      %ebx, %ebx                                    #261.28
..LN2404:
        movslq    %r12d, %r12                                   #261.28
..LN2405:
	.loc    1  263  is_stmt 1
        vbroadcastsd (%rcx,%r8,8), %ymm0                        #263.24
..LN2406:
        lea       (%r10,%r14,8), %r15                           #263.5
..LN2407:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 r15 eax esi r11d r14d ymm0
..B9.40:                        # Preds ..B9.40 ..B9.39
..L285:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS VECTORIZED
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION HAS UNALIGNED MEMORY REFERENCES
                # VECTORIZATION SPEEDUP COEFFECIENT 2.542969
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 2.750000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN2408:
        vmovupd   %ymm0, (%r15,%rbx,8)                          #263.5
..LN2409:
	.loc    1  261  is_stmt 1
        addq      $4, %rbx                                      #261.28
..LN2410:
        cmpq      %r12, %rbx                                    #261.28
..LN2411:
        jb        ..B9.40       # Prob 82%                      #261.28
..LN2412:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 r15 eax esi r11d r14d ymm0
..B9.42:                        # Preds ..B9.40 ..B9.149
..LN2413:
        cmpq      %r13, %r12                                    #261.28
..LN2414:
        jae       ..B9.46       # Prob 10%                      #261.28
..LN2415:
                                # LOE rdx rcx rdi r8 r9 r10 r12 r13 eax esi r11d r14d
..B9.43:                        # Preds ..B9.42
..LN2416:
	.loc    1  263  is_stmt 1
        movslq    %r14d, %r14                                   #263.5
..LN2417:
        lea       (%r10,%r14,8), %rbx                           #263.5
..LN2418:
        movq      (%rcx,%r8,8), %r14                            #263.24
..LN2419:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 r14 eax esi r11d
..B9.44:                        # Preds ..B9.44 ..B9.43
..L286:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 2.542969
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 2.750000
..LN2420:
        movq      %r14, (%rbx,%r12,8)                           #263.5
..LN2421:
	.loc    1  261  is_stmt 1
        incq      %r12                                          #261.28
..LN2422:
        cmpq      %r13, %r12                                    #261.28
..LN2423:
        jb        ..B9.44       # Prob 82%                      #261.28
..LN2424:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 r14 eax esi r11d
..B9.46:                        # Preds ..B9.44 ..B9.7 ..B9.37 ..B9.42
..LN2425:
        incl      %r11d                                         #261.3
..LN2426:
        incq      %r8                                           #261.3
..LN2427:
        lea       (%r10,%rdx,8), %r10                           #261.3
..LN2428:
        lea       (%r9,%rdx,8), %r9                             #261.3
..LN2429:
        cmpl      56(%rsp), %r11d                               #261.3
..LN2430:
        jb        ..B9.7        # Prob 82%                      #261.3
..LN2431:
                                # LOE rdx rcx rdi r8 r9 r10 eax esi r11d
..B9.47:                        # Preds ..B9.46
..LN2432:
        movq      3280(%rsp), %rbx                              #
..LN2433:
        movq      24(%rsp), %r12                                #
..LN2434:
        movq      32(%rsp), %r13                                #
..LN2435:
        movq      8(%rsp), %r14                                 #
..LN2436:
        movq      (%rsp), %r15                                  #
..LN2437:
                                # LOE rbx r12 r13 r14 r15
..B9.48:                        # Preds ..B9.5 ..B9.47
..LN2438:
	.loc    1  72  is_stmt 1
        movl      (%r13), %r9d                                  #72.9
..LN2439:
	.loc    1  75  is_stmt 1
        xorl      %ecx, %ecx                                    #75.7
..LN2440:
	.loc    1  71  is_stmt 1
        movl      (%r12), %r8d                                  #71.9
..LN2441:
	.loc    1  75  is_stmt 1
        xorl      %edx, %edx                                    #75.9
..LN2442:
        movslq    %r8d, %rsi                                    #75.18
..LN2443:
        testl     %r9d, %r9d                                    #75.14
..LN2444:
        jle       ..B9.57       # Prob 10%                      #75.14
..LN2445:
                                # LOE rdx rbx rsi r14 r15 ecx r8d r9d
..B9.49:                        # Preds ..B9.48
..LN2446:
        movl      %r9d, 344(%rsp)                               #75.9
..LN2447:
        xorl      %eax, %eax                                    #75.9
..LN2448:
        movq      %rbx, 3280(%rsp)                              #75.9
..LN2449:
        movq      %r14, 8(%rsp)                                 #75.9
..LN2450:
        movq      %r15, (%rsp)                                  #75.9
..LN2451:
        movq      680(%rsp), %r10                               #75.9
..LN2452:
        movq      672(%rsp), %rdi                               #75.9
..LN2453:
        movq      664(%rsp), %r9                                #75.9
..LN2454:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B9.50:                        # Preds ..B9.55 ..B9.147 ..B9.49
..L287:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN2455:
        xorl      %r13d, %r13d                                  #75.27
..LN2456:
        testl     %r8d, %r8d                                    #75.36
..LN2457:
        jle       ..B9.147      # Prob 10%                      #75.36
..LN2458:
                                # LOE rdx rsi rdi r9 r10 r13 eax ecx r8d
..B9.51:                        # Preds ..B9.50
..LN2459:
	.loc    1  85  is_stmt 1
        movq      %rdx, 360(%rsp)                               #85.5
..LN2460:
	.loc    1  78  is_stmt 1
        lea       (%r8,%rax), %ebx                              #78.25
..LN2461:
        movslq    %ebx, %rbx                                    #78.15
..LN2462:
	.loc    1  85  is_stmt 1
        lea       (%r9,%rdx,8), %r11                            #85.5
..LN2463:
	.loc    1  76  is_stmt 1
        movslq    %eax, %rax                                    #76.15
..LN2464:
	.loc    1  85  is_stmt 1
        movq      %r11, 384(%rsp)                               #85.5
..LN2465:
        movl      %eax, 368(%rsp)                               #85.5
..LN2466:
        movl      %ecx, 352(%rsp)                               #85.5
..LN2467:
	.loc    1  78  is_stmt 1
        lea       (%rdi,%rbx,8), %r12                           #78.15
..LN2468:
	.loc    1  85  is_stmt 1
        movq      %rsi, 376(%rsp)                               #85.5
..LN2469:
	.loc    1  82  is_stmt 1
        lea       (%r10,%rbx,8), %rbx                           #82.15
..LN2470:
	.loc    1  85  is_stmt 1
        movl      %r8d, 336(%rsp)                               #85.5
..LN2471:
	.loc    1  80  is_stmt 1
        lea       (%r10,%rax,8), %r14                           #80.15
..LN2472:
	.loc    1  76  is_stmt 1
        lea       (%rdi,%rax,8), %r15                           #76.15
..LN2473:
                                # LOE rbx r12 r13 r14 r15
..B9.52:                        # Preds ..B9.54 ..B9.51
..L288:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN2474:
	.loc    1  84  is_stmt 1
        lea       16(%rsp), %rdi                                #84.12
..LN2475:
	.loc    1  76  is_stmt 1
        movq      (%r15,%r13,8), %rax                           #76.15
..LN2476:
	.loc    1  84  is_stmt 1
        lea       176(%rsp), %rsi                               #84.12
..LN2477:
	.loc    1  83  is_stmt 1
        movq      8(%rbx,%r13,8), %rdx                          #83.15
..LN2478:
	.loc    1  76  is_stmt 1
        movq      %rax, (%rdi)                                  #76.5
..LN2479:
	.loc    1  77  is_stmt 1
        movq      8(%r15,%r13,8), %rcx                          #77.15
..LN2480:
	.loc    1  78  is_stmt 1
        movq      16(%r12,%r13,8), %r8                          #78.15
..LN2481:
	.loc    1  79  is_stmt 1
        movq      8(%r12,%r13,8), %r9                           #79.15
..LN2482:
	.loc    1  80  is_stmt 1
        movq      (%r14,%r13,8), %r10                           #80.15
..LN2483:
	.loc    1  81  is_stmt 1
        movq      8(%r14,%r13,8), %r11                          #81.15
..LN2484:
	.loc    1  82  is_stmt 1
        movq      16(%rbx,%r13,8), %rax                         #82.15
..LN2485:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN2486:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN2487:
	.loc    1  77  is_stmt 1
        movq      %rcx, 8(%rdi)                                 #77.5
..LN2488:
	.loc    1  78  is_stmt 1
        movq      %r8, 16(%rdi)                                 #78.5
..LN2489:
	.loc    1  79  is_stmt 1
        movq      %r9, 24(%rdi)                                 #79.5
..LN2490:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN2491:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN2492:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN2493:
	.loc    1  84  is_stmt 1
        vzeroupper                                              #84.12
..LN2494:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_1dx2d_order2_.289:
..LN2495:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_1dx2d_order2_.290:
..LN2496:
                                # LOE rbx r12 r13 r14 r15 eax
..B9.53:                        # Preds ..B9.52
..LN2497:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN2498:
        lea       16(%rsp), %rdi                                #85.20
..LN2499:
        lea       176(%rsp), %rsi                               #85.20
..___tag_value_create_xgrid_1dx2d_order2_.291:
..LN2500:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_1dx2d_order2_.292:
..LN2501:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B9.54:                        # Preds ..B9.53
..LN2502:
        movq      384(%rsp), %rax                               #85.5
..LN2503:
        vmovsd    %xmm0, (%rax,%r13,8)                          #85.5
..LN2504:
	.loc    1  75  is_stmt 1
        incq      %r13                                          #75.40
..LN2505:
        cmpq      376(%rsp), %r13                               #75.36
..LN2506:
        jl        ..B9.52       # Prob 82%                      #75.36
..LN2507:
                                # LOE rbx r12 r13 r14 r15
..B9.55:                        # Preds ..B9.54
..LN2508:
        movl      352(%rsp), %ecx                               #
..LN2509:
        incl      %ecx                                          #75.18
..LN2510:
        movq      360(%rsp), %rdx                               #
..LN2511:
        movq      376(%rsp), %rsi                               #
..LN2512:
        addq      %rsi, %rdx                                    #75.18
..LN2513:
        movl      368(%rsp), %eax                               #
..LN2514:
        movl      336(%rsp), %r8d                               #
..LN2515:
        lea       1(%rax,%r8), %eax                             #75.18
..LN2516:
        movq      680(%rsp), %r10                               #
..LN2517:
        movq      672(%rsp), %rdi                               #
..LN2518:
        movq      664(%rsp), %r9                                #
..LN2519:
        cmpl      344(%rsp), %ecx                               #75.14
..LN2520:
        jl        ..B9.50       # Prob 82%                      #75.14
..LN2521:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B9.56:                        # Preds ..B9.147 ..B9.55        # Infreq
..LN2522:
        movq      3280(%rsp), %rbx                              #
..LN2523:
        movq      8(%rsp), %r14                                 #
..LN2524:
        movq      (%rsp), %r15                                  #
..LN2525:
                                # LOE rbx r14 r15
..B9.57:                        # Preds ..B9.56 ..B9.48         # Infreq
..LN2526:
	.loc    1  71  is_stmt 1
        movl      (%r14), %r8d                                  #71.9
..LN2527:
	.loc    1  75  is_stmt 1
        xorl      %esi, %esi                                    #75.7
..LN2528:
	.loc    1  72  is_stmt 1
        movl      (%r15), %r11d                                 #72.9
..LN2529:
	.loc    1  75  is_stmt 1
        xorl      %ecx, %ecx                                    #75.9
..LN2530:
	.loc    1  229  is_stmt 1
        movq      16(%rbp), %r13                                #229.1
..LN2531:
        movq      24(%rbp), %r12                                #229.1
..LN2532:
	.loc    1  75  is_stmt 1
        movslq    %r8d, %rax                                    #75.18
..LN2533:
        testl     %r11d, %r11d                                  #75.14
..LN2534:
        jle       ..B9.66       # Prob 10%                      #75.14
..LN2535:
                                # LOE rax rcx rbx r12 r13 esi r8d r11d
..B9.58:                        # Preds ..B9.57                 # Infreq
..LN2536:
        movl      %r11d, 8(%rsp)                                #75.9
..LN2537:
        xorl      %edx, %edx                                    #75.9
..LN2538:
        movq      %rbx, %r10                                    #75.9
..LN2539:
        movq      %r12, %rdi                                    #75.9
..LN2540:
        movq      %r13, %r9                                     #75.9
..LN2541:
                                # LOE rax rcx rdi r9 r10 edx esi r8d
..B9.59:                        # Preds ..B9.64 ..B9.145 ..B9.58 # Infreq
..L293:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN2542:
        xorl      %r15d, %r15d                                  #75.27
..LN2543:
        testl     %r8d, %r8d                                    #75.36
..LN2544:
        jle       ..B9.145      # Prob 10%                      #75.36
..LN2545:
                                # LOE rax rcx rdi r9 r10 r15 edx esi r8d
..B9.60:                        # Preds ..B9.59                 # Infreq
..LN2546:
	.loc    1  85  is_stmt 1
        movq      %rcx, 696(%rsp)                               #85.5
..LN2547:
	.loc    1  78  is_stmt 1
        lea       (%r8,%rdx), %r11d                             #78.25
..LN2548:
        movslq    %r11d, %r11                                   #78.15
..LN2549:
	.loc    1  76  is_stmt 1
        movslq    %edx, %rdx                                    #76.15
..LN2550:
	.loc    1  85  is_stmt 1
        movl      %edx, 704(%rsp)                               #85.5
..LN2551:
        movl      %esi, 688(%rsp)                               #85.5
..LN2552:
        movq      %rax, 712(%rsp)                               #85.5
..LN2553:
	.loc    1  78  is_stmt 1
        lea       (%r9,%r11,8), %r14                            #78.15
..LN2554:
	.loc    1  85  is_stmt 1
        movl      %r8d, (%rsp)                                  #85.5
..LN2555:
	.loc    1  82  is_stmt 1
        lea       (%rdi,%r11,8), %rbx                           #82.15
..LN2556:
	.loc    1  85  is_stmt 1
        movq      %r10, 3280(%rsp)                              #85.5
..LN2557:
        lea       (%r10,%rcx,8), %r11                           #85.5
..LN2558:
        movq      %r11, 720(%rsp)                               #85.5
..LN2559:
	.loc    1  80  is_stmt 1
        lea       (%rdi,%rdx,8), %r12                           #80.15
..LN2560:
	.loc    1  76  is_stmt 1
        lea       (%r9,%rdx,8), %r13                            #76.15
..LN2561:
                                # LOE rbx r12 r13 r14 r15
..B9.61:                        # Preds ..B9.63 ..B9.60         # Infreq
..L294:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN2562:
	.loc    1  84  is_stmt 1
        lea       336(%rsp), %rdi                               #84.12
..LN2563:
	.loc    1  76  is_stmt 1
        movq      (%r13,%r15,8), %rax                           #76.15
..LN2564:
	.loc    1  84  is_stmt 1
        lea       496(%rsp), %rsi                               #84.12
..LN2565:
	.loc    1  83  is_stmt 1
        movq      8(%rbx,%r15,8), %rdx                          #83.15
..LN2566:
	.loc    1  76  is_stmt 1
        movq      %rax, -160(%rsi)                              #76.5
..LN2567:
	.loc    1  77  is_stmt 1
        movq      8(%r13,%r15,8), %rcx                          #77.15
..LN2568:
	.loc    1  78  is_stmt 1
        movq      16(%r14,%r15,8), %r8                          #78.15
..LN2569:
	.loc    1  79  is_stmt 1
        movq      8(%r14,%r15,8), %r9                           #79.15
..LN2570:
	.loc    1  80  is_stmt 1
        movq      (%r12,%r15,8), %r10                           #80.15
..LN2571:
	.loc    1  81  is_stmt 1
        movq      8(%r12,%r15,8), %r11                          #81.15
..LN2572:
	.loc    1  82  is_stmt 1
        movq      16(%rbx,%r15,8), %rax                         #82.15
..LN2573:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN2574:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN2575:
	.loc    1  77  is_stmt 1
        movq      %rcx, -152(%rsi)                              #77.5
..LN2576:
	.loc    1  78  is_stmt 1
        movq      %r8, -144(%rsi)                               #78.5
..LN2577:
	.loc    1  79  is_stmt 1
        movq      %r9, -136(%rsi)                               #79.5
..LN2578:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN2579:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN2580:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN2581:
	.loc    1  84  is_stmt 1
        vzeroupper                                              #84.12
..LN2582:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_1dx2d_order2_.295:
..LN2583:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_1dx2d_order2_.296:
..LN2584:
                                # LOE rbx r12 r13 r14 r15 eax
..B9.62:                        # Preds ..B9.61                 # Infreq
..LN2585:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN2586:
        lea       336(%rsp), %rdi                               #85.20
..LN2587:
        lea       496(%rsp), %rsi                               #85.20
..___tag_value_create_xgrid_1dx2d_order2_.297:
..LN2588:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_1dx2d_order2_.298:
..LN2589:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B9.63:                        # Preds ..B9.62                 # Infreq
..LN2590:
        movq      720(%rsp), %rax                               #85.5
..LN2591:
        vmovsd    %xmm0, (%rax,%r15,8)                          #85.5
..LN2592:
	.loc    1  75  is_stmt 1
        incq      %r15                                          #75.40
..LN2593:
        cmpq      712(%rsp), %r15                               #75.36
..LN2594:
        jl        ..B9.61       # Prob 82%                      #75.36
..LN2595:
                                # LOE rbx r12 r13 r14 r15
..B9.64:                        # Preds ..B9.63                 # Infreq
..LN2596:
        movl      688(%rsp), %esi                               #
..LN2597:
        incl      %esi                                          #75.18
..LN2598:
        movq      696(%rsp), %rcx                               #
..LN2599:
        movq      712(%rsp), %rax                               #
..LN2600:
        addq      %rax, %rcx                                    #75.18
..LN2601:
        movl      704(%rsp), %edx                               #
..LN2602:
        movl      (%rsp), %r8d                                  #
..LN2603:
        lea       1(%rdx,%r8), %edx                             #75.18
..LN2604:
        movq      3280(%rsp), %r10                              #
..LN2605:
        movq      24(%rbp), %rdi                                #
..LN2606:
        movq      16(%rbp), %r9                                 #
..LN2607:
        cmpl      8(%rsp), %esi                                 #75.14
..LN2608:
        jl        ..B9.59       # Prob 82%                      #75.14
..LN2609:
                                # LOE rax rcx rdi r9 r10 edx esi r8d r10d r10b
..B9.65:                        # Preds ..B9.145 ..B9.64        # Infreq
..LN2610:
        movq      %rdi, %r12                                    #
..LN2611:
        movq      %r9, %r13                                     #
..LN2612:
        movq      %r10, %rbx                                    #
..LN2613:
                                # LOE rbx r12 r13
..B9.66:                        # Preds ..B9.65 ..B9.57         # Infreq
..LN2614:
	.loc    1  267  is_stmt 1
        vzeroupper                                              #267.3
..LN2615:
        movq      672(%rsp), %rdi                               #267.3
..LN2616:
#       free(void *)
        call      free                                          #267.3
..LN2617:
                                # LOE rbx r12 r13
..B9.67:                        # Preds ..B9.66                 # Infreq
..LN2618:
	.loc    1  268  is_stmt 1
        movq      680(%rsp), %rdi                               #268.3
..LN2619:
#       free(void *)
        call      free                                          #268.3
..LN2620:
                                # LOE rbx r12 r13
..B9.68:                        # Preds ..B9.67                 # Infreq
..LN2621:
	.loc    1  270  is_stmt 1
        xorl      %eax, %eax                                    #270.31
..LN2622:
        xorl      %r14d, %r14d                                  #270.3
..LN2623:
        xorl      %esi, %esi                                    #270.31
..LN2624:
        cmpl      $0, 656(%rsp)                                 #270.16
..LN2625:
        jle       ..B9.135      # Prob 10%                      #270.16
..LN2626:
                                # LOE rax rbx rsi r12 r13 r14d
..B9.69:                        # Preds ..B9.68                 # Infreq
..LN2627:
	.loc    1  929  is_stmt 1
        movl      $8, %r8d                                      #929.17
..LN2628:
	.loc    1  255  is_stmt 1
        movl      3272(%rsp), %r11d                             #255.16
..LN2629:
	.loc    1  956  is_stmt 1
        vxorpd    %xmm7, %xmm7, %xmm7                           #956.17
..LN2630:
	.loc    1  289  is_stmt 1
        movq      3488(%rsp), %rdi                              #289.17
..LN2631:
	.loc    1  929  is_stmt 1
        vmovd     %r8d, %xmm1                                   #929.17
..LN2632:
	.loc    1  255  is_stmt 1
        lea       1(%r11), %r11d                                #255.16
..LN2633:
	.loc    1  274  is_stmt 1
        movslq    %r11d, %r11                                   #274.33
..LN2634:
	.loc    1  289  is_stmt 1
        lea       (%r13,%rdi,8), %r9                            #289.17
..LN2635:
	.loc    1  929  is_stmt 1
        vpbroadcastd %xmm1, %ymm1                               #929.17
..LN2636:
	.loc    1  280  is_stmt 1
        lea       (%r12,%rdi,8), %rdi                           #280.17
..LN2637:
	.loc    1  929  is_stmt 1
        movq      %rdi, 3296(%rsp)                              #929.17
..LN2638:
        movq      %r13, %r8                                     #929.17
..LN2639:
	.loc    1  270  is_stmt 1
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm0             #270.76
..LN2640:
	.loc    1  297  is_stmt 1
        vmovsd    .L_2il0floatpacket.2(%rip), %xmm8             #297.22
..LN2641:
	.loc    1  939  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm6             #939.13
..LN2642:
	.loc    1  940  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm5             #940.13
..LN2643:
	.loc    1  939  is_stmt 1
        vmovsd    .L_2il0floatpacket.4(%rip), %xmm4             #939.30
..LN2644:
	.loc    1  1000  is_stmt 1
        vmovsd    .L_2il0floatpacket.5(%rip), %xmm3             #1000.18
..LN2645:
	.loc    1  942  is_stmt 1
        vmovsd    .L_2il0floatpacket.6(%rip), %xmm2             #942.21
..LN2646:
	.loc    1  229  is_stmt 1
        movq      32(%rbp), %r15                                #229.1
..LN2647:
        movq      48(%rbp), %rdx                                #229.1
..LN2648:
	.loc    1  929  is_stmt 1
        vmovdqu   %ymm1, 2656(%rsp)                             #929.17
..LN2649:
        movq      %r11, 3288(%rsp)                              #929.17
..LN2650:
        movq      %rbx, 3280(%rsp)                              #929.17
..LN2651:
        movq      664(%rsp), %rcx                               #929.17
..LN2652:
        movl      656(%rsp), %edi                               #929.17
..LN2653:
        movq      3128(%rsp), %r10                              #929.17
..LN2654:
        movl      2384(%rsp), %r13d                             #929.17
..LN2655:
                                # LOE rax rcx rsi r8 r9 r10 r12 r15 edi r13d r14d xmm0
..B9.70:                        # Preds ..B9.74 ..B9.143 ..B9.69 # Infreq
..L299:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN2656:
	.loc    1  270  is_stmt 1
        xorl      %r11d, %r11d                                  #270.27
..LN2657:
        testl     %r13d, %r13d                                  #270.40
..LN2658:
        jle       ..B9.143      # Prob 10%                      #270.40
..LN2659:
                                # LOE rax rcx rsi r8 r9 r10 r11 r12 r15 edi r13d r14d xmm0
..B9.71:                        # Preds ..B9.70                 # Infreq
..LN2660:
	.loc    1  296  is_stmt 1
        movq      %rsi, (%rsp)                                  #296.20
..LN2661:
        lea       (%rcx,%rsi,8), %rdx                           #296.20
..LN2662:
        movl      %r14d, 3168(%rsp)                             #296.20
..LN2663:
	.loc    1  270  is_stmt 1
        lea       (%r15,%rsi,8), %rbx                           #270.55
..LN2664:
	.loc    1  296  is_stmt 1
        movq      %rdx, 3352(%rsp)                              #296.20
..LN2665:
        movq      3280(%rsp), %rsi                              #296.20
..LN2666:
        movl      3264(%rsp), %r14d                             #296.20
..LN2667:
        movq      2392(%rsp), %r15                              #296.20
..LN2668:
        movq      3120(%rsp), %r13                              #296.20
..LN2669:
                                # LOE rax rbx rsi r8 r9 r10 r11 r12 r13 r15 r14d xmm0
..B9.72:                        # Preds ..B9.73 ..B9.71         # Infreq
..L300:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN2670:
	.loc    1  270  is_stmt 1
        vmovsd    (%rbx,%r11,8), %xmm1                          #270.55
..LN2671:
        vcomisd   %xmm0, %xmm1                                  #270.76
..LN2672:
        ja        ..B9.75       # Prob 50%                      #270.76
..LN2673:
                                # LOE rax rbx rsi r8 r9 r10 r11 r12 r13 r15 r14d xmm0
..B9.73:                        # Preds ..B9.132 ..B9.141 ..B9.75 ..B9.72 # Infreq
..LN2674:
        incq      %r11                                          #270.27
..LN2675:
        cmpq      %r10, %r11                                    #270.27
..LN2676:
        jb        ..B9.72       # Prob 81%                      #270.27
..LN2677:
                                # LOE rax rbx rsi r8 r9 r10 r11 r12 r13 r15 r14d xmm0
..B9.74:                        # Preds ..B9.73                 # Infreq
..LN2678:
        movl      3168(%rsp), %r14d                             #
..LN2679:
        incq      %rax                                          #270.3
..LN2680:
        incl      %r14d                                         #270.3
..LN2681:
        movq      (%rsp), %rsi                                  #
..LN2682:
        movl      656(%rsp), %edi                               #
..LN2683:
        addq      %r10, %rsi                                    #270.3
..LN2684:
        movq      664(%rsp), %rcx                               #
..LN2685:
        movl      2384(%rsp), %r13d                             #
..LN2686:
        movq      32(%rbp), %r15                                #
..LN2687:
        cmpl      %edi, %r14d                                   #270.3
..LN2688:
        jb        ..B9.70       # Prob 81%                      #270.3
..LN2689:
        jmp       ..B9.134      # Prob 100%                     #270.3
..LN2690:
                                # LOE rax rcx rsi r8 r9 r10 r12 r15 edi r13d r14d xmm0
..B9.75:                        # Preds ..B9.72                 # Infreq
..LN2691:
	.loc    1  274  is_stmt 1
        xorl      %edx, %edx                                    #274.33
..LN2692:
        xorl      %ecx, %ecx                                    #274.5
..LN2693:
	.loc    1  272  is_stmt 1
        vmovsd    (%r15,%r11,8), %xmm5                          #272.14
..LN2694:
	.loc    1  274  is_stmt 1
        xorl      %edi, %edi                                    #274.33
..LN2695:
	.loc    1  273  is_stmt 1
        vmovsd    8(%r15,%r11,8), %xmm3                         #273.14
..LN2696:
	.loc    1  272  is_stmt 1
        vmovsd    (%r13,%rax,8), %xmm4                          #272.37
..LN2697:
	.loc    1  273  is_stmt 1
        vmovsd    8(%r13,%rax,8), %xmm2                         #273.37
..LN2698:
	.loc    1  274  is_stmt 1
        testl     %r14d, %r14d                                  #274.18
..LN2699:
        jle       ..B9.73       # Prob 10%                      #274.18
..LN2700:
                                # LOE rax rdx rbx rsi rdi r8 r9 r10 r11 r12 r13 r15 ecx r14d xmm0 xmm2 xmm3 xmm4 xmm5
..B9.76:                        # Preds ..B9.75                 # Infreq
..LN2701:
	.loc    1  291  is_stmt 1
        movq      %rax, 8(%rsp)                                 #291.53
..LN2702:
        vaddsd    %xmm3, %xmm5, %xmm1                           #291.45
..LN2703:
        vmulsd    %xmm1, %xmm0, %xmm1                           #291.53
..LN2704:
        vmovsd    %xmm1, 3464(%rsp)                             #291.53
..LN2705:
        vmovsd    %xmm2, 3480(%rsp)                             #291.53
..LN2706:
        vmovsd    %xmm3, 3456(%rsp)                             #291.53
..LN2707:
        vmovsd    %xmm4, 3504(%rsp)                             #291.53
..LN2708:
        vmovsd    %xmm5, 3448(%rsp)                             #291.53
..LN2709:
        movq      %rbx, 3368(%rsp)                              #291.53
..LN2710:
        movq      %r11, 3360(%rsp)                              #291.53
..LN2711:
        movl      3272(%rsp), %eax                              #291.53
..LN2712:
                                # LOE rdx rsi rdi r8 r9 r12 eax ecx
..B9.77:                        # Preds ..B9.131 ..B9.140 ..B9.76 # Infreq
..L301:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN2713:
	.loc    1  274  is_stmt 1
        xorl      %r14d, %r14d                                  #274.29
..LN2714:
        testl     %eax, %eax                                    #274.42
..LN2715:
        jle       ..B9.140      # Prob 10%                      #274.42
..LN2716:
                                # LOE rdx rsi rdi r8 r9 r12 r14 eax ecx
..B9.78:                        # Preds ..B9.77                 # Infreq
..LN2717:
	.loc    1  280  is_stmt 1
        movq      3296(%rsp), %r10                              #280.17
..LN2718:
	.loc    1  287  is_stmt 1
        lea       (%r8,%rdx,8), %r13                            #287.17
..LN2719:
	.loc    1  296  is_stmt 1
        movq      %rdi, 3328(%rsp)                              #296.20
..LN2720:
	.loc    1  278  is_stmt 1
        lea       (%r12,%rdx,8), %rbx                           #278.17
..LN2721:
	.loc    1  296  is_stmt 1
        movq      %rdx, 3320(%rsp)                              #296.20
..LN2722:
	.loc    1  289  is_stmt 1
        lea       (%r9,%rdx,8), %r15                            #289.17
..LN2723:
	.loc    1  296  is_stmt 1
        movl      %ecx, 3312(%rsp)                              #296.20
..LN2724:
	.loc    1  280  is_stmt 1
        lea       (%r10,%rdx,8), %r11                           #280.17
..LN2725:
	.loc    1  296  is_stmt 1
        movq      %r11, 3496(%rsp)                              #296.20
..LN2726:
        lea       (%rsi,%rdi,8), %r10                           #296.20
..LN2727:
        movq      %r10, 3376(%rsp)                              #296.20
..LN2728:
        movq      %r9, 3304(%rsp)                               #296.20
..LN2729:
                                # LOE rbx r13 r14 r15
..B9.79:                        # Preds ..B9.130 ..B9.78        # Infreq
..L302:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN2730:
	.loc    1  280  is_stmt 1
        movq      3496(%rsp), %rax                              #280.17
..LN2731:
	.loc    1  282  is_stmt 1
        vmovsd    3504(%rsp), %xmm0                             #282.23
..LN2732:
	.loc    1  278  is_stmt 1
        vmovsd    (%rbx,%r14,8), %xmm1                          #278.17
..LN2733:
	.loc    1  279  is_stmt 1
        vmovsd    8(%rbx,%r14,8), %xmm2                         #279.17
..LN2734:
	.loc    1  280  is_stmt 1
        vmovsd    16(%rax,%r14,8), %xmm3                        #280.17
..LN2735:
	.loc    1  281  is_stmt 1
        vmovsd    8(%rax,%r14,8), %xmm4                         #281.17
..LN2736:
	.loc    1  278  is_stmt 1
        vmovsd    %xmm1, 2720(%rsp)                             #278.7
..LN2737:
	.loc    1  279  is_stmt 1
        vmovsd    %xmm2, 2728(%rsp)                             #279.7
..LN2738:
	.loc    1  280  is_stmt 1
        vmovsd    %xmm3, 2736(%rsp)                             #280.7
..LN2739:
	.loc    1  281  is_stmt 1
        vmovsd    %xmm4, 2744(%rsp)                             #281.7
..LN2740:
	.loc    1  282  is_stmt 1
        vcomisd   %xmm1, %xmm0                                  #282.23
..LN2741:
        jb        ..B9.83       # Prob 50%                      #282.23
..LN2742:
                                # LOE rbx r13 r14 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B9.80:                        # Preds ..B9.79                 # Infreq
..LN2743:
        vcomisd   %xmm2, %xmm0                                  #282.44
..LN2744:
        jb        ..B9.83       # Prob 50%                      #282.44
..LN2745:
                                # LOE rbx r13 r14 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B9.81:                        # Preds ..B9.80                 # Infreq
..LN2746:
	.loc    1  283  is_stmt 1
        vcomisd   %xmm3, %xmm0                                  #283.19
..LN2747:
        jb        ..B9.83       # Prob 50%                      #283.19
..LN2748:
                                # LOE rbx r13 r14 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B9.82:                        # Preds ..B9.81                 # Infreq
..LN2749:
        vcomisd   %xmm4, %xmm0                                  #283.40
..LN2750:
        jae       ..B9.130      # Prob 50%                      #283.40
..LN2751:
                                # LOE rbx r13 r14 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B9.83:                        # Preds ..B9.79 ..B9.80 ..B9.81 ..B9.82 # Infreq
..LN2752:
	.loc    1  284  is_stmt 1
        vcomisd   3480(%rsp), %xmm1                             #284.23
..LN2753:
        jb        ..B9.87       # Prob 22%                      #284.23
..LN2754:
                                # LOE rbx r13 r14 r15 xmm0 xmm2 xmm3 xmm4 ymm0 zmm0
..B9.84:                        # Preds ..B9.83                 # Infreq
..LN2755:
        vcomisd   3480(%rsp), %xmm2                             #284.44
..LN2756:
        jb        ..B9.87       # Prob 22%                      #284.44
..LN2757:
                                # LOE rbx r13 r14 r15 xmm0 xmm3 xmm4 ymm0 zmm0
..B9.85:                        # Preds ..B9.84                 # Infreq
..LN2758:
	.loc    1  285  is_stmt 1
        vcomisd   3480(%rsp), %xmm3                             #285.19
..LN2759:
        jb        ..B9.87       # Prob 22%                      #285.19
..LN2760:
                                # LOE rbx r13 r14 r15 xmm0 xmm4 ymm0 zmm0
..B9.86:                        # Preds ..B9.85                 # Infreq
..LN2761:
        vcomisd   3480(%rsp), %xmm4                             #285.40
..LN2762:
        jae       ..B9.130      # Prob 78%                      #285.40
..LN2763:
                                # LOE rbx r13 r14 r15 xmm0 ymm0 zmm0
..B9.87:                        # Preds ..B9.83 ..B9.84 ..B9.85 ..B9.86 # Infreq
..LN2764:
	.loc    1  291  is_stmt 1
        vzeroupper                                              #291.14
..LN2765:
        lea       1184(%rsp), %rdi                              #291.14
..LN2766:
	.loc    1  287  is_stmt 1
        movq      (%r13,%r14,8), %rax                           #287.17
..LN2767:
	.loc    1  291  is_stmt 1
        lea       2720(%rsp), %rsi                              #291.14
..LN2768:
	.loc    1  288  is_stmt 1
        movq      8(%r13,%r14,8), %rcx                          #288.17
..LN2769:
	.loc    1  291  is_stmt 1
        movl      $4, %edx                                      #291.14
..LN2770:
	.loc    1  289  is_stmt 1
        movq      16(%r15,%r14,8), %r8                          #289.17
..LN2771:
	.loc    1  290  is_stmt 1
        movq      8(%r15,%r14,8), %r9                           #290.17
..LN2772:
	.loc    1  291  is_stmt 1
        vmovsd    744(%rsi), %xmm0                              #291.14
..LN2773:
	.loc    1  287  is_stmt 1
        movq      %rax, -1536(%rsi)                             #287.7
..LN2774:
	.loc    1  288  is_stmt 1
        movq      %rcx, -1528(%rsi)                             #288.7
..LN2775:
	.loc    1  289  is_stmt 1
        movq      %r8, -1520(%rsi)                              #289.7
..LN2776:
	.loc    1  290  is_stmt 1
        movq      %r9, -1512(%rsi)                              #290.7
..___tag_value_create_xgrid_1dx2d_order2_.303:
..LN2777:
	.loc    1  291  is_stmt 1
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #291.14
..___tag_value_create_xgrid_1dx2d_order2_.304:
..LN2778:
                                # LOE rbx r13 r14 r15 eax
..B9.167:                       # Preds ..B9.87                 # Infreq
..LN2779:
        movl      %eax, %r12d                                   #291.14
..LN2780:
                                # LOE rbx r13 r14 r15 r12d
..B9.88:                        # Preds ..B9.167                # Infreq
..LN2781:
	.loc    1  292  is_stmt 1
        movl      %r12d, %edi                                   #292.20
..LN2782:
        lea       1184(%rsp), %rsi                              #292.20
..___tag_value_create_xgrid_1dx2d_order2_.305:
..LN2783:
#       avgval_double(int, const double *)
        call      avgval_double                                 #292.20
..___tag_value_create_xgrid_1dx2d_order2_.306:
..LN2784:
                                # LOE rbx r13 r14 r15 r12d xmm0
..B9.168:                       # Preds ..B9.88                 # Infreq
..LN2785:
        vmovsd    %xmm0, 3472(%rsp)                             #292.20
..LN2786:
                                # LOE rbx r13 r14 r15 r12d
..B9.89:                        # Preds ..B9.168                # Infreq
..LN2787:
	.loc    1  294  is_stmt 1
        lea       1184(%rsp), %rdi                              #294.22
..LN2788:
        vmovsd    2264(%rdi), %xmm0                             #294.22
..LN2789:
        lea       2720(%rsp), %rsi                              #294.22
..LN2790:
        vmovsd    784(%rsi), %xmm1                              #294.22
..LN2791:
        lea       1584(%rsp), %rcx                              #294.22
..LN2792:
        vmovsd    1872(%rcx), %xmm2                             #294.22
..LN2793:
        lea       1984(%rsp), %r8                               #294.22
..LN2794:
        vmovsd    1896(%rcx), %xmm3                             #294.22
..LN2795:
        movl      %r12d, %edx                                   #294.22
..___tag_value_create_xgrid_1dx2d_order2_.307:
..LN2796:
#       clip(const double *, const double *, int, double, double, double, double, double *, double *)
        call      clip                                          #294.22
..___tag_value_create_xgrid_1dx2d_order2_.308:
..LN2797:
                                # LOE rbx r13 r14 r15 eax
..B9.169:                       # Preds ..B9.89                 # Infreq
..LN2798:
        movl      %eax, %r12d                                   #294.22
..LN2799:
                                # LOE rbx r13 r14 r15 r12d
..B9.90:                        # Preds ..B9.169                # Infreq
..LN2800:
        testl     %r12d, %r12d                                  #294.97
..LN2801:
        jle       ..B9.130      # Prob 40%                      #294.97
..LN2802:
                                # LOE rbx r13 r14 r15 r12d
..B9.91:                        # Preds ..B9.90                 # Infreq
..LN2803:
	.loc    1  295  is_stmt 1
        movl      %r12d, %edx                                   #295.10
..LN2804:
        lea       1584(%rsp), %rdi                              #295.10
..LN2805:
        lea       1984(%rsp), %rsi                              #295.10
..___tag_value_create_xgrid_1dx2d_order2_.309:
..LN2806:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #295.10
..___tag_value_create_xgrid_1dx2d_order2_.310:
..LN2807:
                                # LOE rbx r13 r14 r15 r12d xmm0
..B9.92:                        # Preds ..B9.91                 # Infreq
..LN2808:
        movq      3368(%rsp), %rax                              #295.45
..LN2809:
        movq      3360(%rsp), %rdi                              #295.45
..LN2810:
	.loc    1  296  is_stmt 1
        movq      3352(%rsp), %rsi                              #296.20
..LN2811:
	.loc    1  297  is_stmt 1
        movq      3376(%rsp), %r8                               #297.2
..LN2812:
	.loc    1  295  is_stmt 1
        vmulsd    (%rax,%rdi,8), %xmm0, %xmm2                   #295.45
..LN2813:
	.loc    1  296  is_stmt 1
        vmovsd    (%rsi,%rdi,8), %xmm0                          #296.20
..LN2814:
	.loc    1  297  is_stmt 1
        vminsd    (%r8,%r14,8), %xmm0, %xmm0                    #297.2
..LN2815:
        vdivsd    %xmm0, %xmm2, %xmm1                           #297.11
..LN2816:
        vcomisd   .L_2il0floatpacket.2(%rip), %xmm1             #297.22
..LN2817:
        jbe       ..B9.130      # Prob 78%                      #297.22
..LN2818:
                                # LOE rbx r13 r14 r15 r12d xmm2
..B9.93:                        # Preds ..B9.92                 # Infreq
..LN2819:
	.loc    1  298  is_stmt 1
        movq      72(%rbp), %rax                                #298.4
..LN2820:
        movq      3160(%rsp), %rsi                              #298.4
..LN2821:
	.loc    1  956  is_stmt 1
        vxorpd    %xmm0, %xmm0, %xmm0                           #956.17
..LN2822:
	.loc    1  960  is_stmt 1
        movslq    %r12d, %rdx                                   #960.3
..LN2823:
        vmovsd    %xmm0, 3256(%rsp)                             #960.3
..LN2824:
	.loc    1  298  is_stmt 1
        vmovsd    %xmm2, (%rax,%rsi,8)                          #298.4
..LN2825:
	.loc    1  960  is_stmt 1
        xorl      %eax, %eax                                    #960.3
..LN2826:
        movq      %r13, 3184(%rsp)                              #960.3
..LN2827:
        movq      %rax, %r13                                    #960.3
..LN2828:
        movq      %r14, 3176(%rsp)                              #960.3
..LN2829:
        movq      %rdx, %r14                                    #960.3
..LN2830:
                                # LOE rbx r13 r14 r15 r12d
..B9.94:                        # Preds ..B9.93 ..B9.98         # Infreq
..L311:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN2831:
	.loc    1  961  is_stmt 1
        movl      %r13d, %eax                                   #961.22
..LN2832:
        incl      %eax                                          #961.17
..LN2833:
        cltd                                                    #961.22
..LN2834:
        idivl     %r12d                                         #961.22
..LN2835:
	.loc    1  299  is_stmt 1
        vmovsd    1584(%rsp,%r13,8), %xmm3                      #299.37
..LN2836:
	.loc    1  970  is_stmt 1
        vxorpd    %xmm5, %xmm5, %xmm5                           #970.20
..LN2837:
	.loc    1  961  is_stmt 1
        movslq    %edx, %rdx                                    #961.22
..LN2838:
	.loc    1  299  is_stmt 1
        vmovsd    1984(%rsp,%r13,8), %xmm1                      #299.44
..LN2839:
        vmovsd    %xmm3, 3408(%rsp)                             #299.37
..LN2840:
        vmovsd    %xmm1, 3424(%rsp)                             #299.44
..LN2841:
        vmovsd    1584(%rsp,%rdx,8), %xmm2                      #299.37
..LN2842:
        vmovsd    1984(%rsp,%rdx,8), %xmm0                      #299.44
..LN2843:
	.loc    1  968  is_stmt 1
        vsubsd    %xmm3, %xmm2, %xmm4                           #968.21
..LN2844:
	.loc    1  299  is_stmt 1
        vmovsd    %xmm2, 3416(%rsp)                             #299.37
..LN2845:
        vmovsd    %xmm0, 3432(%rsp)                             #299.44
..LN2846:
	.loc    1  968  is_stmt 1
        vmovsd    %xmm4, 3440(%rsp)                             #968.21
..LN2847:
	.loc    1  970  is_stmt 1
        vucomisd  %xmm5, %xmm4                                  #970.20
..LN2848:
        jp        ..B9.95       # Prob 0%                       #970.20
..LN2849:
        je        ..B9.98       # Prob 16%                      #970.20
..LN2850:
                                # LOE rbx r13 r14 r15 r12d xmm0 ymm0 zmm0
..B9.95:                        # Preds ..B9.94                 # Infreq
..LN2851:
	.loc    1  972  is_stmt 1
        call      __libm_sse2_sincos                            #972.5
..LN2852:
                                # LOE rbx r13 r14 r15 r12d xmm0 xmm1
..B9.172:                       # Preds ..B9.95                 # Infreq
..LN2853:
        vfmadd213sd 3432(%rsp), %xmm0, %xmm1                    #972.5
..LN2854:
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm1, %xmm2      #972.35
..LN2855:
        vmovsd    %xmm2, 3344(%rsp)                             #972.35
..LN2856:
	.loc    1  973  is_stmt 1
        vmovsd    3424(%rsp), %xmm0                             #973.5
..LN2857:
        call      __libm_sse2_sincos                            #973.5
..LN2858:
                                # LOE rbx r13 r14 r15 r12d xmm0 xmm1
..B9.171:                       # Preds ..B9.172                # Infreq
..LN2859:
	.loc    1  977  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm10            #977.22
..LN2860:
        vmovsd    3440(%rsp), %xmm6                             #977.22
..LN2861:
        vcomisd   %xmm10, %xmm6                                 #977.22
..LN2862:
	.loc    1  973  is_stmt 1
        vfmadd213sd 3424(%rsp), %xmm0, %xmm1                    #973.5
..LN2863:
	.loc    1  977  is_stmt 1
        vmovsd    .L_2il0floatpacket.4(%rip), %xmm13            #977.36
..LN2864:
	.loc    1  978  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm12            #978.22
..LN2865:
	.loc    1  977  is_stmt 1
        vsubsd    %xmm13, %xmm6, %xmm7                          #977.36
..LN2866:
	.loc    1  973  is_stmt 1
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm1, %xmm2      #973.35
..LN2867:
	.loc    1  977  is_stmt 1
        ja        ..L312        # Prob 50%                      #977.22
..LN2868:
        vmovaps   %xmm6, %xmm7                                  #977.22
..L312:                                                         #
..LN2869:
	.loc    1  978  is_stmt 1
        vcomisd   %xmm7, %xmm12                                 #978.22
..LN2870:
	.loc    1  979  is_stmt 1
        vmovsd    3472(%rsp), %xmm5                             #979.20
..LN2871:
        vmovsd    3416(%rsp), %xmm4                             #979.20
..LN2872:
	.loc    1  982  is_stmt 1
        vmovsd    3408(%rsp), %xmm3                             #982.19
..LN2873:
	.loc    1  979  is_stmt 1
        vsubsd    %xmm5, %xmm4, %xmm8                           #979.20
..LN2874:
	.loc    1  978  is_stmt 1
        vaddsd    %xmm13, %xmm7, %xmm4                          #978.36
..LN2875:
	.loc    1  982  is_stmt 1
        vsubsd    %xmm5, %xmm3, %xmm11                          #982.19
..LN2876:
	.loc    1  980  is_stmt 1
        vsubsd    %xmm13, %xmm8, %xmm9                          #980.23
..LN2877:
	.loc    1  983  is_stmt 1
        vsubsd    %xmm13, %xmm11, %xmm14                        #983.23
..LN2878:
	.loc    1  978  is_stmt 1
        ja        ..L313        # Prob 50%                      #978.22
..LN2879:
        vmovaps   %xmm7, %xmm4                                  #978.22
..L313:                                                         #
..LN2880:
	.loc    1  980  is_stmt 1
        vcomisd   %xmm10, %xmm8                                 #980.23
..LN2881:
        ja        ..L314        # Prob 50%                      #980.23
..LN2882:
        vmovaps   %xmm8, %xmm9                                  #980.23
..L314:                                                         #
..LN2883:
	.loc    1  981  is_stmt 1
        vcomisd   %xmm9, %xmm12                                 #981.23
..LN2884:
        vaddsd    %xmm13, %xmm9, %xmm1                          #981.23
..LN2885:
        ja        ..L315        # Prob 50%                      #981.23
..LN2886:
        vmovaps   %xmm9, %xmm1                                  #981.23
..L315:                                                         #
..LN2887:
	.loc    1  983  is_stmt 1
        vcomisd   %xmm10, %xmm11                                #983.23
..LN2888:
        ja        ..L316        # Prob 50%                      #983.23
..LN2889:
        vmovaps   %xmm11, %xmm14                                #983.23
..L316:                                                         #
..LN2890:
	.loc    1  984  is_stmt 1
        vcomisd   %xmm14, %xmm12                                #984.23
..LN2891:
        vaddsd    %xmm13, %xmm14, %xmm8                         #984.23
..LN2892:
        ja        ..L317        # Prob 50%                      #984.23
..LN2893:
        vmovaps   %xmm14, %xmm8                                 #984.23
..L317:                                                         #
..LN2894:
	.loc    1  986  is_stmt 1
        vsubsd    %xmm1, %xmm8, %xmm15                          #986.19
..LN2895:
        vcvttsd2si %xmm15, %edi                                 #986.19
..LN2896:
        movl      %edi, %esi                                    #986.8
..LN2897:
        sarl      $31, %esi                                     #986.8
..LN2898:
        xorl      %esi, %edi                                    #986.8
..LN2899:
        subl      %esi, %edi                                    #986.8
..LN2900:
        cmpl      $3, %edi                                      #986.28
..LN2901:
        jg        ..B9.97       # Prob 50%                      #986.28
..LN2902:
                                # LOE rbx r13 r14 r15 r12d xmm1 xmm2 xmm4 xmm8
..B9.96:                        # Preds ..B9.171                # Infreq
..LN2903:
	.loc    1  987  is_stmt 1
        vmulsd    3344(%rsp), %xmm1, %xmm0                      #987.7
..LN2904:
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm4, %xmm1      #987.7
..LN2905:
        vfmadd213sd %xmm0, %xmm8, %xmm2                         #987.7
..LN2906:
        vmovsd    3256(%rsp), %xmm3                             #987.7
..LN2907:
        vfnmadd231sd %xmm2, %xmm1, %xmm3                        #987.7
..LN2908:
        vmovsd    %xmm3, 3256(%rsp)                             #987.7
..LN2909:
        jmp       ..B9.98       # Prob 100%                     #987.7
..LN2910:
                                # LOE rbx r13 r14 r15 r12d
..B9.97:                        # Preds ..B9.171                # Infreq
..LN2911:
	.loc    1  994  is_stmt 1
        vcvttsd2si %xmm4, %edi                                  #994.43
..LN2912:
	.loc    1  996  is_stmt 1
        vaddsd    %xmm8, %xmm1, %xmm7                           #996.19
..LN2913:
	.loc    1  993  is_stmt 1
        vxorpd    %xmm5, %xmm5, %xmm5                           #993.2
..LN2914:
	.loc    1  994  is_stmt 1
        movl      %edi, %esi                                    #994.39
..LN2915:
	.loc    1  993  is_stmt 1
        vcomisd   %xmm5, %xmm1                                  #993.2
..LN2916:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm6             #993.2
..LN2917:
	.loc    1  994  is_stmt 1
        vxorpd    %xmm4, %xmm4, %xmm4                           #994.39
..LN2918:
	.loc    1  993  is_stmt 1
        ja        ..L318        # Prob 50%                      #993.2
..LN2919:
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm6             #993.2
..L318:                                                         #
..LN2920:
	.loc    1  995  is_stmt 1
        vmovsd    3344(%rsp), %xmm0                             #995.34
..LN2921:
        vsubsd    %xmm6, %xmm1, %xmm11                          #995.34
..LN2922:
        vmulsd    %xmm1, %xmm0, %xmm1                           #995.34
..LN2923:
        vaddsd    %xmm6, %xmm8, %xmm9                           #995.61
..LN2924:
        vmulsd    %xmm8, %xmm2, %xmm8                           #995.61
..LN2925:
	.loc    1  994  is_stmt 1
        vsubsd    %xmm0, %xmm2, %xmm2                           #994.23
..LN2926:
	.loc    1  996  is_stmt 1
        vmulsd    %xmm6, %xmm7, %xmm3                           #996.19
..LN2927:
	.loc    1  995  is_stmt 1
        vmulsd    %xmm11, %xmm2, %xmm12                         #995.7
..LN2928:
        vmulsd    %xmm9, %xmm8, %xmm10                          #995.66
..LN2929:
	.loc    1  994  is_stmt 1
        sarl      $31, %esi                                     #994.39
..LN2930:
        xorl      %esi, %edi                                    #994.39
..LN2931:
        subl      %esi, %edi                                    #994.39
..LN2932:
        vcvtsi2sd %edi, %xmm4, %xmm4                            #994.39
..LN2933:
	.loc    1  995  is_stmt 1
        vfnmadd213sd %xmm10, %xmm11, %xmm1                      #995.7
..LN2934:
        vxorpd    .L_2il0floatpacket.8(%rip), %xmm12, %xmm13    #995.7
..LN2935:
	.loc    1  994  is_stmt 1
        vdivsd    %xmm4, %xmm13, %xmm14                         #994.39
..LN2936:
        vaddsd    %xmm14, %xmm0, %xmm15                         #994.39
..LN2937:
	.loc    1  995  is_stmt 1
        vmovsd    3256(%rsp), %xmm0                             #995.7
..LN2938:
        vfnmadd213sd %xmm1, %xmm15, %xmm3                       #995.7
..LN2939:
        vfmadd231sd .L_2il0floatpacket.1(%rip), %xmm3, %xmm0    #995.7
..LN2940:
        vmovsd    %xmm0, 3256(%rsp)                             #995.7
..LN2941:
                                # LOE rbx r13 r14 r15 r12d
..B9.98:                        # Preds ..B9.96 ..B9.97 ..B9.94 # Infreq
..LN2942:
	.loc    1  960  is_stmt 1
        incq      %r13                                          #960.3
..LN2943:
        cmpq      %r14, %r13                                    #960.3
..LN2944:
        jb        ..B9.94       # Prob 82%                      #960.3
..LN2945:
                                # LOE rbx r13 r14 r15 r12d
..B9.99:                        # Preds ..B9.98                 # Infreq
..LN2946:
        vmovsd    3256(%rsp), %xmm0                             #
..LN2947:
	.loc    1  294  is_stmt 1
        vmovd     %r12d, %xmm1                                  #294.22
..LN2948:
	.loc    1  1000  is_stmt 1
        vmulsd    .L_2il0floatpacket.5(%rip), %xmm0, %xmm0      #1000.25
..LN2949:
	.loc    1  928  is_stmt 1
        lea       63(%r12), %r8d                                #928.3
..LN2950:
	.loc    1  299  is_stmt 1
        movq      80(%rbp), %rax                                #299.4
..LN2951:
	.loc    1  925  is_stmt 1
        vxorpd    %xmm2, %xmm2, %xmm2                           #925.17
..LN2952:
	.loc    1  299  is_stmt 1
        movq      3160(%rsp), %rsi                              #299.4
..LN2953:
	.loc    1  929  is_stmt 1
        movl      %r12d, %ecx                                   #929.22
..LN2954:
        movq      3184(%rsp), %r13                              #
..LN2955:
	.loc    1  299  is_stmt 1
        vmovsd    %xmm0, (%rax,%rsi,8)                          #299.4
..LN2956:
	.loc    1  928  is_stmt 1
        xorl      %eax, %eax                                    #928.3
..LN2957:
	.loc    1  294  is_stmt 1
        vpbroadcastd %xmm1, %ymm0                               #294.22
..LN2958:
	.loc    1  928  is_stmt 1
        shrl      $6, %r8d                                      #928.3
..LN2959:
	.loc    1  929  is_stmt 1
        xorl      %esi, %esi                                    #929.22
..LN2960:
        vmovdqu   %ymm0, 2688(%rsp)                             #929.22
..LN2961:
        movl      %eax, %r12d                                   #929.22
..LN2962:
        vmovsd    %xmm2, 3248(%rsp)                             #929.22
..LN2963:
        movq      %r15, 3200(%rsp)                              #929.22
..LN2964:
        movl      %eax, %r15d                                   #929.22
..LN2965:
        movq      %rbx, 3192(%rsp)                              #929.22
..LN2966:
                                # LOE ecx esi r8d r12d r15d
..B9.100:                       # Preds ..B9.99 ..B9.128        # Infreq
..L319:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # %s was not vectorized: inner loop was already vectorized
..LN2967:
	.loc    1  928  is_stmt 1
        lea       64(%r15), %r14d                               #928.3
..LN2968:
        cmpl      %r14d, %ecx                                   #928.3
..LN2969:
        cmovl     %ecx, %r14d                                   #928.3
..LN2970:
        movslq    %r14d, %rbx                                   #928.3
..LN2971:
        addl      %esi, %r14d                                   #928.3
..LN2972:
        cmpl      $16, %r14d                                    #928.3
..LN2973:
        jl        ..B9.139      # Prob 10%                      #928.3
..LN2974:
                                # LOE rbx ecx esi r8d r12d r14d r15d
..B9.101:                       # Preds ..B9.100                # Infreq
..LN2975:
        movl      %r14d, %eax                                   #928.3
..LN2976:
        xorl      %r10d, %r10d                                  #928.3
..LN2977:
        andl      $-16, %eax                                    #928.3
..LN2978:
	.loc    1  934  is_stmt 1
        movslq    %r15d, %r9                                    #934.12
..LN2979:
	.loc    1  928  is_stmt 1
        movslq    %eax, %rdi                                    #928.3
..LN2980:
        .align    16,0x90
..LN2981:
                                # LOE rbx rdi r9 r10 eax ecx esi r8d r12d r14d r15d
..B9.102:                       # Preds ..B9.102 ..B9.101       # Infreq
..L320:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 4
                # LOOP WAS STRIPMINED BY 64
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 3.958984
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.042969
                # MAIN VECTOR TYPE: 64-bits floating point
..LN2982:
	.loc    1  300  is_stmt 1
        vmovupd   1984(%rsp,%r9,8), %ymm0                       #300.45
..LN2983:
        vmovupd   2016(%rsp,%r9,8), %ymm1                       #300.45
..LN2984:
        vmovupd   2048(%rsp,%r9,8), %ymm2                       #300.45
..LN2985:
        vmovupd   2080(%rsp,%r9,8), %ymm3                       #300.45
..LN2986:
	.loc    1  934  is_stmt 1
        vmovupd   %ymm0, 672(%rsp,%r10,8)                       #934.5
..LN2987:
        vmovupd   %ymm1, 704(%rsp,%r10,8)                       #934.5
..LN2988:
        vmovupd   %ymm2, 736(%rsp,%r10,8)                       #934.5
..LN2989:
        vmovupd   %ymm3, 768(%rsp,%r10,8)                       #934.5
..LN2990:
	.loc    1  928  is_stmt 1
        addq      $16, %r10                                     #928.3
..LN2991:
        addq      $16, %r9                                      #928.3
..LN2992:
        cmpq      %rdi, %r10                                    #928.3
..LN2993:
        jb        ..B9.102      # Prob 82%                      #928.3
..LN2994:
                                # LOE rbx rdi r9 r10 eax ecx esi r8d r12d r14d r15d
..B9.103:                       # Preds ..B9.102                # Infreq
..LN2995:
        lea       1(%rax), %edi                                 #928.3
..LN2996:
        cmpl      %edi, %r14d                                   #928.3
..LN2997:
        jb        ..B9.113      # Prob 50%                      #928.3
..LN2998:
                                # LOE rbx eax ecx esi r8d r12d r14d r15d
..B9.104:                       # Preds ..B9.103 ..B9.139       # Infreq
..LN2999:
        movslq    %eax, %r10                                    #928.3
..LN3000:
        movslq    %r14d, %rdx                                   #928.3
..LN3001:
        subq      %r10, %rdx                                    #928.3
..LN3002:
        cmpq      $4, %rdx                                      #928.3
..LN3003:
        jl        ..B9.133      # Prob 10%                      #928.3
..LN3004:
                                # LOE rdx rbx r10 eax ecx esi r8d r12d r14d r15d
..B9.105:                       # Preds ..B9.104                # Infreq
..LN3005:
	.loc    1  934  is_stmt 1
        movslq    %r15d, %r9                                    #934.12
..LN3006:
	.loc    1  928  is_stmt 1
        movl      %edx, %edi                                    #928.3
..LN3007:
	.loc    1  934  is_stmt 1
        movslq    %eax, %rax                                    #934.12
..LN3008:
	.loc    1  928  is_stmt 1
        andl      $-4, %edi                                     #928.3
..LN3009:
	.loc    1  934  is_stmt 1
        addq      %rax, %r9                                     #934.12
..LN3010:
	.loc    1  928  is_stmt 1
        xorl      %r11d, %r11d                                  #928.3
..LN3011:
        movslq    %edi, %rdi                                    #928.3
..LN3012:
        lea       672(%rsp,%r10,8), %r13                        #
..LN3013:
	.loc    1  300  is_stmt 1
        lea       1984(%rsp,%r9,8), %r9                         #300.45
..LN3014:
                                # LOE rdx rbx rdi r9 r10 r11 r13 eax ecx esi r8d r12d r14d r15d
..B9.106:                       # Preds ..B9.106 ..B9.105       # Infreq
..L321:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS STRIPMINED BY 64
                # LOOP WAS VECTORIZED
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 1.915039
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 1.875000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN3015:
        vmovupd   (%r9,%r11,8), %ymm0                           #300.45
..LN3016:
	.loc    1  934  is_stmt 1
        vmovupd   %ymm0, (%r13,%r11,8)                          #934.5
..LN3017:
	.loc    1  928  is_stmt 1
        addq      $4, %r11                                      #928.3
..LN3018:
        cmpq      %rdi, %r11                                    #928.3
..LN3019:
        jb        ..B9.106      # Prob 82%                      #928.3
..LN3020:
                                # LOE rdx rbx rdi r9 r10 r11 r13 eax ecx esi r8d r12d r14d r15d
..B9.108:                       # Preds ..B9.106 ..B9.133       # Infreq
..LN3021:
        cmpq      %rdx, %rdi                                    #928.3
..LN3022:
        jae       ..B9.112      # Prob 10%                      #928.3
..LN3023:
                                # LOE rdx rbx rdi r10 eax ecx esi r8d r12d r14d r15d
..B9.109:                       # Preds ..B9.108                # Infreq
..LN3024:
	.loc    1  934  is_stmt 1
        movslq    %eax, %rax                                    #934.12
..LN3025:
        lea       672(%rsp,%r10,8), %r9                         #
..LN3026:
        movslq    %r15d, %r10                                   #934.12
..LN3027:
        addq      %rax, %r10                                    #934.12
..LN3028:
	.loc    1  300  is_stmt 1
        lea       1984(%rsp,%r10,8), %r10                       #300.45
..LN3029:
                                # LOE rdx rbx rdi r9 r10 ecx esi r8d r12d r14d r15d
..B9.110:                       # Preds ..B9.110 ..B9.109       # Infreq
..L322:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS STRIPMINED BY 64
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 1.915039
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 1.875000
..LN3030:
        movq      (%r10,%rdi,8), %r11                           #300.45
..LN3031:
	.loc    1  934  is_stmt 1
        movq      %r11, (%r9,%rdi,8)                            #934.5
..LN3032:
	.loc    1  928  is_stmt 1
        incq      %rdi                                          #928.3
..LN3033:
        cmpq      %rdx, %rdi                                    #928.3
..LN3034:
        jb        ..B9.110      # Prob 82%                      #928.3
..LN3035:
                                # LOE rdx rbx rdi r9 r10 ecx esi r8d r12d r14d r15d
..B9.112:                       # Preds ..B9.110 ..B9.139 ..B9.108 # Infreq
..LN3036:
        cmpl      $8, %r14d                                     #928.3
..LN3037:
        jl        ..B9.142      # Prob 10%                      #928.3
..LN3038:
                                # LOE rbx ecx esi r8d r12d r14d r15d
..B9.113:                       # Preds ..B9.103 ..B9.112       # Infreq
..LN3039:
        movl      %r14d, %r13d                                  #928.3
..LN3040:
	.loc    1  929  is_stmt 1
        lea       1(%r15), %edi                                 #929.17
..LN3041:
	.loc    1  928  is_stmt 1
        andl      $-8, %r13d                                    #928.3
..LN3042:
        movslq    %r13d, %r13                                   #928.3
..LN3043:
        movl      %r8d, 3136(%rsp)                              #928.3
..LN3044:
	.loc    1  929  is_stmt 1
        vmovd     %edi, %xmm0                                   #929.17
..LN3045:
	.loc    1  928  is_stmt 1
        xorl      %edi, %edi                                    #928.3
..LN3046:
	.loc    1  929  is_stmt 1
        vpbroadcastd %xmm0, %ymm1                               #929.17
..LN3047:
        vpaddd    .L_2il0floatpacket.7(%rip), %ymm1, %ymm8      #929.17
..LN3048:
	.loc    1  928  is_stmt 1
        vmovdqu   2688(%rsp), %ymm9                             #928.3
..LN3049:
        vmovdqu   2656(%rsp), %ymm10                            #928.3
..LN3050:
        movl      %ecx, 3144(%rsp)                              #928.3
..LN3051:
                                # LOE rbx rdi r13 esi r12d r14d r15d ymm8 ymm9 ymm10
..B9.114:                       # Preds ..B9.173 ..B9.113       # Infreq
..L323:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS STRIPMINED BY 64
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 1.774414
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 8
                # NORMALIZED VECTORIZATION OVERHEAD 0.017578
                # MAIN VECTOR TYPE: 32-bits integer
..LN3052:
	.loc    1  929  is_stmt 1
        vmovdqa   %ymm8, %ymm0                                  #929.22
..LN3053:
        vmovdqa   %ymm9, %ymm1                                  #929.22
..LN3054:
        call      __svml_irem8                                  #929.12
..LN3055:
                                # LOE rbx rdi r13 esi r12d r14d r15d ymm0 ymm8 ymm9 ymm10
..B9.173:                       # Preds ..B9.114                # Infreq
..LN3056:
        vmovdqu   %ymm0, 2400(%rsp,%rdi,4)                      #929.12
..LN3057:
	.loc    1  928  is_stmt 1
        addq      $8, %rdi                                      #928.3
..LN3058:
	.loc    1  929  is_stmt 1
        vpaddd    %ymm10, %ymm8, %ymm8                          #929.17
..LN3059:
	.loc    1  928  is_stmt 1
        cmpq      %r13, %rdi                                    #928.3
..LN3060:
        jb        ..B9.114      # Prob 82%                      #928.3
..LN3061:
                                # LOE rbx rdi r13 esi r12d r14d r15d ymm8 ymm9 ymm10
..B9.115:                       # Preds ..B9.173                # Infreq
..LN3062:
        movl      3136(%rsp), %r8d                              #
..LN3063:
        movl      3144(%rsp), %ecx                              #
..LN3064:
                                # LOE rbx r13 ecx esi r8d r12d r14d r15d
..B9.116:                       # Preds ..B9.115 ..B9.142       # Infreq
..LN3065:
        movl      %r13d, %r9d                                   #928.3
..LN3066:
	.loc    1  929  is_stmt 1
        lea       1(%r15,%r9), %edi                             #929.17
..LN3067:
	.loc    1  928  is_stmt 1
        cmpl      %r14d, %r9d                                   #928.3
..LN3068:
        jae       ..B9.120      # Prob 10%                      #928.3
..LN3069:
                                # LOE rbx r13 ecx esi edi r8d r9d r12d r14d r15d
..B9.118:                       # Preds ..B9.116 ..B9.118       # Infreq
..L324:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS STRIPMINED BY 64
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 1.774414
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 8
                # NORMALIZED VECTORIZATION OVERHEAD 0.017578
..LN3070:
	.loc    1  929  is_stmt 1
        movl      %edi, %eax                                    #929.22
..LN3071:
        cltd                                                    #929.22
..LN3072:
        idivl     %ecx                                          #929.22
..LN3073:
	.loc    1  928  is_stmt 1
        incl      %r9d                                          #928.3
..LN3074:
        incl      %edi                                          #928.3
..LN3075:
	.loc    1  929  is_stmt 1
        movl      %edx, 2400(%rsp,%r13,4)                       #929.22
..LN3076:
	.loc    1  928  is_stmt 1
        incq      %r13                                          #928.3
..LN3077:
        cmpl      %r14d, %r9d                                   #928.3
..LN3078:
        jb        ..B9.118      # Prob 82%                      #928.3
..LN3079:
                                # LOE rbx r13 ecx esi edi r8d r9d r12d r14d r15d
..B9.120:                       # Preds ..B9.118 ..B9.116       # Infreq
..LN3080:
        movslq    %r12d, %r13                                   #928.3
..LN3081:
        xorl      %r14d, %r14d                                  #928.3
..LN3082:
        shlq      $6, %r13                                      #928.3
..LN3083:
        negq      %r13                                          #928.3
..LN3084:
        addq      %rbx, %r13                                    #928.3
..LN3085:
        je        ..B9.128      # Prob 10%                      #928.3
..LN3086:
                                # LOE r13 r14 ecx esi r8d r12d r15d
..B9.121:                       # Preds ..B9.120                # Infreq
..LN3087:
	.loc    1  930  is_stmt 1
        movslq    %r15d, %r15                                   #930.24
..LN3088:
	.loc    1  300  is_stmt 1
        movl      %esi, 3152(%rsp)                              #300.38
..LN3089:
        movl      %r8d, 3136(%rsp)                              #300.38
..LN3090:
        movl      %ecx, 3144(%rsp)                              #300.38
..LN3091:
        lea       1584(%rsp,%r15,8), %rbx                       #300.38
..LN3092:
                                # LOE rbx r13 r14 r12d r15d
..B9.122:                       # Preds ..B9.126 ..B9.121       # Infreq
..L325:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 3
                # LOOP WAS STRIPMINED BY 64
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN3093:
	.loc    1  933  is_stmt 1
        movslq    2400(%rsp,%r14,4), %rcx                       #933.5
..LN3094:
	.loc    1  938  is_stmt 1
        vxorpd    %xmm7, %xmm7, %xmm7                           #938.18
..LN3095:
	.loc    1  937  is_stmt 1
        vmovsd    672(%rsp,%r14,8), %xmm1                       #937.5
..LN3096:
        vmovsd    %xmm1, 3400(%rsp)                             #937.5
..LN3097:
	.loc    1  300  is_stmt 1
        vmovsd    1984(%rsp,%rcx,8), %xmm2                      #300.45
..LN3098:
        vmovsd    1584(%rsp,%rcx,8), %xmm6                      #300.38
..LN3099:
	.loc    1  935  is_stmt 1
        vsubsd    %xmm2, %xmm1, %xmm4                           #935.17
..LN3100:
	.loc    1  937  is_stmt 1
        vaddsd    %xmm1, %xmm2, %xmm0                           #937.19
..LN3101:
	.loc    1  930  is_stmt 1
        vsubsd    (%rbx,%r14,8), %xmm6, %xmm1                   #930.24
..LN3102:
	.loc    1  937  is_stmt 1
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm3             #937.25
..LN3103:
	.loc    1  936  is_stmt 1
        vmulsd    %xmm4, %xmm3, %xmm5                           #936.14
..LN3104:
	.loc    1  938  is_stmt 1
        vucomisd  %xmm7, %xmm1                                  #938.18
..LN3105:
	.loc    1  937  is_stmt 1
        vmulsd    %xmm0, %xmm3, %xmm0                           #937.25
..LN3106:
	.loc    1  300  is_stmt 1
        vmovsd    %xmm2, 3384(%rsp)                             #300.45
..LN3107:
	.loc    1  936  is_stmt 1
        vmovsd    %xmm5, 3392(%rsp)                             #936.14
..LN3108:
	.loc    1  938  is_stmt 1
        jp        ..B9.123      # Prob 0%                       #938.18
..LN3109:
        je        ..B9.126      # Prob 16%                      #938.18
..LN3110:
                                # LOE rbx r13 r14 r12d r15d xmm0 xmm1 xmm5 ymm5 zmm5
..B9.123:                       # Preds ..B9.122                # Infreq
..LN3111:
	.loc    1  939  is_stmt 1
        vcomisd   .L_2il0floatpacket.0(%rip), %xmm1             #939.20
..LN3112:
        vmovsd    .L_2il0floatpacket.4(%rip), %xmm2             #939.30
..LN3113:
        vsubsd    %xmm2, %xmm1, %xmm3                           #939.30
..LN3114:
        ja        ..L326        # Prob 50%                      #939.20
..LN3115:
        vmovaps   %xmm1, %xmm3                                  #939.20
..L326:                                                         #
..LN3116:
	.loc    1  940  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm1             #940.20
..LN3117:
        vaddsd    %xmm2, %xmm3, %xmm4                           #940.30
..LN3118:
        vcomisd   %xmm3, %xmm1                                  #940.20
..LN3119:
	.loc    1  942  is_stmt 1
        vandpd    .L_2il0floatpacket.9(%rip), %xmm5, %xmm7      #942.10
..LN3120:
        vmovsd    .L_2il0floatpacket.6(%rip), %xmm6             #942.21
..LN3121:
	.loc    1  940  is_stmt 1
        ja        ..L327        # Prob 50%                      #940.20
..LN3122:
        vmovaps   %xmm3, %xmm4                                  #940.20
..L327:                                                         #
..LN3123:
        vmovsd    %xmm4, 3336(%rsp)                             #940.20
..LN3124:
	.loc    1  942  is_stmt 1
        vcomisd   %xmm7, %xmm6                                  #942.21
..LN3125:
        jbe       ..B9.125      # Prob 50%                      #942.21
..LN3126:
                                # LOE rbx r13 r14 r12d r15d xmm0 xmm4 xmm5 ymm4 ymm5 zmm4 zmm5
..B9.124:                       # Preds ..B9.123                # Infreq
..LN3127:
	.loc    1  943  is_stmt 1
        vzeroupper                                              #943.23
..LN3128:
        call      __libm_sse2_sincos                            #943.23
..LN3129:
                                # LOE rbx r13 r14 r12d r15d xmm0 xmm1
..B9.175:                       # Preds ..B9.124                # Infreq
..LN3130:
        vmovsd    %xmm0, 3224(%rsp)                             #943.23
..LN3131:
        vmovsd    %xmm1, 3240(%rsp)                             #943.23
..LN3132:
        vmovsd    3384(%rsp), %xmm0                             #943.54
..LN3133:
        call      cos                                           #943.54
..LN3134:
                                # LOE rbx r13 r14 r12d r15d xmm0
..B9.174:                       # Preds ..B9.175                # Infreq
..LN3135:
        vmovsd    3400(%rsp), %xmm2                             #943.7
..LN3136:
        vmovapd   %xmm0, %xmm1                                  #943.54
..LN3137:
        vmovsd    3240(%rsp), %xmm0                             #943.7
..LN3138:
        vfmadd132sd 3224(%rsp), %xmm0, %xmm2                    #943.7
..LN3139:
        vsubsd    %xmm1, %xmm0, %xmm3                           #943.7
..LN3140:
        vmovsd    3248(%rsp), %xmm5                             #943.7
..LN3141:
        vaddsd    %xmm3, %xmm2, %xmm4                           #943.7
..LN3142:
        vfnmadd231sd 3336(%rsp), %xmm4, %xmm5                   #943.7
..LN3143:
        vmovsd    %xmm5, 3248(%rsp)                             #943.7
..LN3144:
        jmp       ..B9.126      # Prob 100%                     #943.7
..LN3145:
                                # LOE rbx r13 r14 r12d r15d
..B9.125:                       # Preds ..B9.123                # Infreq
..LN3146:
	.loc    1  945  is_stmt 1
        vzeroupper                                              #945.40
..LN3147:
        call      __libm_sse2_sincos                            #945.40
..LN3148:
                                # LOE rbx r13 r14 r12d r15d xmm0 xmm1
..B9.178:                       # Preds ..B9.125                # Infreq
..LN3149:
        vmovsd    %xmm0, 3208(%rsp)                             #945.40
..LN3150:
        vmovsd    %xmm1, 3232(%rsp)                             #945.40
..LN3151:
        vmovsd    3392(%rsp), %xmm0                             #945.23
..LN3152:
        call      sin                                           #945.23
..LN3153:
                                # LOE rbx r13 r14 r12d r15d xmm0
..B9.177:                       # Preds ..B9.178                # Infreq
..LN3154:
        vmovsd    %xmm0, 3216(%rsp)                             #945.23
..LN3155:
        vmovsd    3384(%rsp), %xmm0                             #945.72
..LN3156:
        call      cos                                           #945.72
..LN3157:
                                # LOE rbx r13 r14 r12d r15d xmm0
..B9.176:                       # Preds ..B9.177                # Infreq
..LN3158:
        vmovapd   %xmm0, %xmm1                                  #945.72
..LN3159:
        vmovsd    3216(%rsp), %xmm0                             #945.32
..LN3160:
        vdivsd    3392(%rsp), %xmm0, %xmm2                      #945.32
..LN3161:
        vmovsd    3232(%rsp), %xmm3                             #945.7
..LN3162:
        vmovsd    3400(%rsp), %xmm4                             #945.7
..LN3163:
        vfmadd132sd 3208(%rsp), %xmm3, %xmm4                    #945.7
..LN3164:
        vfmsub213sd %xmm1, %xmm2, %xmm3                         #945.7
..LN3165:
        vmovsd    3248(%rsp), %xmm5                             #945.7
..LN3166:
        vfmadd213sd %xmm3, %xmm2, %xmm4                         #945.7
..LN3167:
        vfnmadd231sd 3336(%rsp), %xmm4, %xmm5                   #945.7
..LN3168:
        vmovsd    %xmm5, 3248(%rsp)                             #945.7
..LN3169:
                                # LOE rbx r13 r14 r12d r15d
..B9.126:                       # Preds ..B9.174 ..B9.176 ..B9.122 # Infreq
..LN3170:
	.loc    1  928  is_stmt 1
        incq      %r14                                          #928.3
..LN3171:
        cmpq      %r13, %r14                                    #928.3
..LN3172:
        jb        ..B9.122      # Prob 82%                      #928.3
..LN3173:
                                # LOE rbx r13 r14 r12d r15d
..B9.127:                       # Preds ..B9.126                # Infreq
..LN3174:
        movl      3152(%rsp), %esi                              #
..LN3175:
        movl      3136(%rsp), %r8d                              #
..LN3176:
        movl      3144(%rsp), %ecx                              #
..LN3177:
                                # LOE ecx esi r8d r12d r15d
..B9.128:                       # Preds ..B9.127 ..B9.120       # Infreq
..LN3178:
        incl      %r12d                                         #928.3
..LN3179:
        addl      $64, %r15d                                    #928.3
..LN3180:
        addl      $-64, %esi                                    #928.3
..LN3181:
        cmpl      %r8d, %r12d                                   #928.3
..LN3182:
        jb        ..B9.100      # Prob 82%                      #928.3
..LN3183:
                                # LOE ecx esi r8d r12d r15d
..B9.129:                       # Preds ..B9.128                # Infreq
..LN3184:
        vmovsd    3248(%rsp), %xmm2                             #
..LN3185:
	.loc    1  947  is_stmt 1
        vmulsd    .L_2il0floatpacket.5(%rip), %xmm2, %xmm0      #947.25
..LN3186:
	.loc    1  300  is_stmt 1
        movq      3160(%rsp), %r11                              #300.4
..LN3187:
	.loc    1  301  is_stmt 1
        movq      40(%rbp), %rcx                                #301.4
..LN3188:
	.loc    1  302  is_stmt 1
        movq      48(%rbp), %rdi                                #302.4
..LN3189:
	.loc    1  303  is_stmt 1
        movq      56(%rbp), %r8                                 #303.4
..LN3190:
	.loc    1  300  is_stmt 1
        movq      88(%rbp), %rax                                #300.4
..LN3191:
	.loc    1  304  is_stmt 1
        movq      64(%rbp), %r10                                #304.4
..LN3192:
	.loc    1  301  is_stmt 1
        movq      3360(%rsp), %rdx                              #301.4
..LN3193:
	.loc    1  302  is_stmt 1
        movl      3168(%rsp), %esi                              #302.4
..LN3194:
        movq      3176(%rsp), %r14                              #
..LN3195:
	.loc    1  304  is_stmt 1
        movl      3312(%rsp), %r9d                              #304.4
..LN3196:
	.loc    1  301  is_stmt 1
        movl      %edx, (%rcx,%r11,4)                           #301.4
..LN3197:
	.loc    1  302  is_stmt 1
        movl      %esi, (%rdi,%r11,4)                           #302.4
..LN3198:
	.loc    1  303  is_stmt 1
        movl      %r14d, (%r8,%r11,4)                           #303.4
..LN3199:
	.loc    1  300  is_stmt 1
        vmovsd    %xmm0, (%rax,%r11,8)                          #300.4
..LN3200:
	.loc    1  304  is_stmt 1
        movl      %r9d, (%r10,%r11,4)                           #304.4
..LN3201:
	.loc    1  305  is_stmt 1
        incq      %r11                                          #305.6
..LN3202:
        movq      3200(%rsp), %r15                              #
..LN3203:
        movq      3192(%rsp), %rbx                              #
..LN3204:
        movq      3184(%rsp), %r13                              #
..LN3205:
        movq      %r11, 3160(%rsp)                              #305.6
..LN3206:
	.loc    1  306  is_stmt 1
        cmpq      $10000000, %r11                               #306.16
..LN3207:
        jg        ..B9.138      # Prob 0%                       #306.16
..LN3208:
                                # LOE rbx r13 r14 r15 ebx r13d r14d r15d bl bh r13b r14b r15b xmm2 ymm2 zmm2
..B9.130:                       # Preds ..B9.86 ..B9.82 ..B9.138 ..B9.129 ..B9.92
                                #       ..B9.90                 # Infreq
..LN3209:
	.loc    1  274  is_stmt 1
        incq      %r14                                          #274.29
..LN3210:
        cmpq      3488(%rsp), %r14                              #274.29
..LN3211:
        jb        ..B9.79       # Prob 81%                      #274.29
..LN3212:
                                # LOE rbx r13 r14 r15
..B9.131:                       # Preds ..B9.130                # Infreq
..LN3213:
        movq      3328(%rsp), %rdi                              #
..LN3214:
        movq      3320(%rsp), %rdx                              #
..LN3215:
        movl      3312(%rsp), %ecx                              #
..LN3216:
        incl      %ecx                                          #274.5
..LN3217:
        addq      3288(%rsp), %rdx                              #274.5
..LN3218:
        addq      3488(%rsp), %rdi                              #274.5
..LN3219:
        movq      3304(%rsp), %r9                               #
..LN3220:
        movq      3280(%rsp), %rsi                              #
..LN3221:
        movl      3272(%rsp), %eax                              #
..LN3222:
        movq      24(%rbp), %r12                                #
..LN3223:
        movq      16(%rbp), %r8                                 #
..LN3224:
        cmpl      3264(%rsp), %ecx                              #274.5
..LN3225:
        jb        ..B9.77       # Prob 81%                      #274.5
..LN3226:
                                # LOE rdx rsi rdi r8 r9 r12 eax ecx esi r9d sil r9b
..B9.132:                       # Preds ..B9.131                # Infreq
..LN3227:
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm0             #
..LN3228:
        movq      3368(%rsp), %rbx                              #
..LN3229:
        movq      3360(%rsp), %r11                              #
..LN3230:
        movq      8(%rsp), %rax                                 #
..LN3231:
        movl      3264(%rsp), %r14d                             #
..LN3232:
        movq      3128(%rsp), %r10                              #
..LN3233:
        movq      2392(%rsp), %r15                              #
..LN3234:
        movq      3120(%rsp), %r13                              #
..LN3235:
        jmp       ..B9.73       # Prob 100%                     #
..LN3236:
                                # LOE rax rbx rsi r8 r9 r10 r11 r12 r13 r15 r14d xmm0
..B9.133:                       # Preds ..B9.104                # Infreq
..LN3237:
	.loc    1  928  is_stmt 1
        xorl      %edi, %edi                                    #928.3
..LN3238:
        jmp       ..B9.108      # Prob 100%                     #928.3
..LN3239:
                                # LOE rdx rbx rdi r10 eax ecx esi r8d r12d r14d r15d
..B9.134:                       # Preds ..B9.143 ..B9.74        # Infreq
..LN3240:
        movq      3280(%rsp), %rbx                              #
..LN3241:
                                # LOE rbx
..B9.135:                       # Preds ..B9.134 ..B9.68        # Infreq
..LN3242:
	.loc    1  311  is_stmt 1
        vzeroupper                                              #311.3
..LN3243:
        movq      664(%rsp), %rdi                               #311.3
..LN3244:
#       free(void *)
        call      free                                          #311.3
..LN3245:
                                # LOE rbx
..B9.136:                       # Preds ..B9.135                # Infreq
..LN3246:
	.loc    1  312  is_stmt 1
        movq      %rbx, %rdi                                    #312.3
..LN3247:
#       free(void *)
        call      free                                          #312.3
..LN3248:
                                # LOE
..B9.137:                       # Preds ..B9.136                # Infreq
..LN3249:
	.loc    1  233  is_stmt 1
        movq      3160(%rsp), %rax                              #233.10
..LN3250:
	.loc    1  233  epilogue_begin  is_stmt 1
        addq      $3512, %rsp                                   #233.10
	.cfi_restore 3
..LN3251:
        popq      %rbx                                          #233.10
	.cfi_restore 15
..LN3252:
        popq      %r15                                          #233.10
	.cfi_restore 14
..LN3253:
        popq      %r14                                          #233.10
	.cfi_restore 13
..LN3254:
        popq      %r13                                          #233.10
	.cfi_restore 12
..LN3255:
        popq      %r12                                          #233.10
..LN3256:
        movq      %rbp, %rsp                                    #233.10
..LN3257:
        popq      %rbp                                          #233.10
	.cfi_def_cfa 7, 8
	.cfi_restore 6
..LN3258:
        ret                                                     #233.10
	.cfi_def_cfa 6, 16
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_offset 6, -16
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN3259:
                                # LOE
..B9.138:                       # Preds ..B9.129                # Infreq
..LN3260:
	.loc    1  306  is_stmt 1
        movl      $.L_2__STRING.0, %edi                         #306.26
..LN3261:
        vzeroupper                                              #306.26
..___tag_value_create_xgrid_1dx2d_order2_.343:
..LN3262:
#       error_handler(const char *)
        call      error_handler                                 #306.26
..___tag_value_create_xgrid_1dx2d_order2_.344:
..LN3263:
        jmp       ..B9.130      # Prob 100%                     #306.26
..LN3264:
                                # LOE rbx r13 r14 r15
..B9.139:                       # Preds ..B9.100                # Infreq
..LN3265:
	.loc    1  928  is_stmt 1
        xorl      %eax, %eax                                    #928.3
..LN3266:
        cmpl      $1, %r14d                                     #928.3
..LN3267:
        jae       ..B9.104      # Prob 50%                      #928.3
..LN3268:
        jmp       ..B9.112      # Prob 100%                     #928.3
..LN3269:
                                # LOE rbx eax ecx esi r8d r12d r14d r15d
..B9.140:                       # Preds ..B9.77                 # Infreq
..LN3270:
	.loc    1  274  is_stmt 1
        incl      %ecx                                          #274.5
..LN3271:
        addq      3288(%rsp), %rdx                              #274.5
..LN3272:
        addq      3488(%rsp), %rdi                              #274.5
..LN3273:
        cmpl      3264(%rsp), %ecx                              #274.5
..LN3274:
        jb        ..B9.77       # Prob 81%                      #274.5
..LN3275:
                                # LOE rdx rsi rdi r8 r9 r12 eax ecx
..B9.141:                       # Preds ..B9.140                # Infreq
..LN3276:
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm0             #
..LN3277:
        movq      3368(%rsp), %rbx                              #
..LN3278:
        movq      3360(%rsp), %r11                              #
..LN3279:
        movq      8(%rsp), %rax                                 #
..LN3280:
        movl      3264(%rsp), %r14d                             #
..LN3281:
        movq      3128(%rsp), %r10                              #
..LN3282:
        movq      2392(%rsp), %r15                              #
..LN3283:
        movq      3120(%rsp), %r13                              #
..LN3284:
        jmp       ..B9.73       # Prob 100%                     #
..LN3285:
                                # LOE rax rbx rsi r8 r9 r10 r11 r12 r13 r15 r14d xmm0
..B9.142:                       # Preds ..B9.112                # Infreq
..LN3286:
	.loc    1  928  is_stmt 1
        xorl      %r13d, %r13d                                  #928.3
..LN3287:
        jmp       ..B9.116      # Prob 100%                     #928.3
..LN3288:
                                # LOE rbx r13 ecx esi r8d r12d r14d r15d
..B9.143:                       # Preds ..B9.70                 # Infreq
..LN3289:
	.loc    1  270  is_stmt 1
        incl      %r14d                                         #270.3
..LN3290:
        addq      %r10, %rsi                                    #270.3
..LN3291:
        incq      %rax                                          #270.3
..LN3292:
        cmpl      %edi, %r14d                                   #270.3
..LN3293:
        jb        ..B9.70       # Prob 81%                      #270.3
..LN3294:
        jmp       ..B9.134      # Prob 100%                     #270.3
..LN3295:
                                # LOE rax rcx rsi r8 r9 r10 r12 r15 edi r13d r14d xmm0
..B9.145:                       # Preds ..B9.59                 # Infreq
..LN3296:
	.loc    1  75  is_stmt 1
        incl      %esi                                          #75.18
..LN3297:
        addq      %rax, %rcx                                    #75.18
..LN3298:
        lea       1(%rdx,%r8), %edx                             #75.18
..LN3299:
        cmpl      8(%rsp), %esi                                 #75.14
..LN3300:
        jl        ..B9.59       # Prob 82%                      #75.14
..LN3301:
        jmp       ..B9.65       # Prob 100%                     #75.14
..LN3302:
                                # LOE rax rcx rdi r9 r10 edx esi r8d
..B9.147:                       # Preds ..B9.50                 # Infreq
..LN3303:
        incl      %ecx                                          #75.18
..LN3304:
        addq      %rsi, %rdx                                    #75.18
..LN3305:
        lea       1(%rax,%r8), %eax                             #75.18
..LN3306:
        cmpl      344(%rsp), %ecx                               #75.14
..LN3307:
        jl        ..B9.50       # Prob 82%                      #75.14
..LN3308:
        jmp       ..B9.56       # Prob 100%                     #75.14
..LN3309:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B9.149:                       # Preds ..B9.38                 # Infreq
..LN3310:
	.loc    1  261  is_stmt 1
        xorl      %r12d, %r12d                                  #261.28
..LN3311:
        jmp       ..B9.42       # Prob 100%                     #261.28
..LN3312:
                                # LOE rdx rcx rdi r8 r9 r10 r12 r13 eax esi r11d r14d
..B9.150:                       # Preds ..B9.25 ..B9.27 ..B9.29 # Infreq
..LN3313:
        xorl      %r14d, %r14d                                  #261.28
..LN3314:
        jmp       ..B9.37       # Prob 100%                     #261.28
..LN3315:
                                # LOE rdx rcx rdi r8 r9 r10 eax esi r11d r14d
..B9.153:                       # Preds ..B9.8 ..B9.11 ..B9.13  # Infreq
..LN3316:
        xorl      %ebx, %ebx                                    #261.28
..LN3317:
        jmp       ..B9.21       # Prob 100%                     #261.28
..LN3318:
                                # LOE rdx rcx rbx rdi r8 r9 r10 eax esi r11d
..B9.155:                       # Preds ..B9.9                  # Infreq
..LN3319:
        movq      16(%rsp), %rbx                                #261.28
..LN3320:
        xorl      %r12d, %r12d                                  #261.28
..LN3321:
        jmp       ..B9.18       # Prob 100%                     #261.28
..LN3322:
        .align    16,0x90
	.cfi_endproc
..LN3323:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 eax esi r11d
..LN3324:
# mark_end;
	.type	create_xgrid_1dx2d_order2_,@function
	.size	create_xgrid_1dx2d_order2_,.-create_xgrid_1dx2d_order2_
..LNcreate_xgrid_1dx2d_order2_.3325:
.LNcreate_xgrid_1dx2d_order2_:
	.data
# -- End  create_xgrid_1dx2d_order2_
	.text
.L_2__routine_start_create_xgrid_1dx2d_order2_9:
# -- Begin  create_xgrid_1dx2d_order2
	.text
# mark_begin;
       .align    16,0x90
	.globl create_xgrid_1dx2d_order2
# --- create_xgrid_1dx2d_order2(const int *, const int *, const int *, const int *, const double *, const double *, const double *, const double *, const double *, int *, int *, int *, int *, double *, double *, double *)
create_xgrid_1dx2d_order2:
# parameter 1(nlon_in): %rdi
# parameter 2(nlat_in): %rsi
# parameter 3(nlon_out): %rdx
# parameter 4(nlat_out): %rcx
# parameter 5(lon_in): %r8
# parameter 6(lat_in): %r9
# parameter 7(lon_out): 16 + %rbp
# parameter 8(lat_out): 24 + %rbp
# parameter 9(mask_in): 32 + %rbp
# parameter 10(i_in): 40 + %rbp
# parameter 11(j_in): 48 + %rbp
# parameter 12(i_out): 56 + %rbp
# parameter 13(j_out): 64 + %rbp
# parameter 14(xgrid_area): 72 + %rbp
# parameter 15(xgrid_clon): 80 + %rbp
# parameter 16(xgrid_clat): 88 + %rbp
..B10.1:                        # Preds ..B10.0
	.cfi_startproc
..___tag_value_create_xgrid_1dx2d_order2.349:
..L350:
                                                        #240.1
..LN3326:
	.loc    1  240  is_stmt 1
        pushq     %rbp                                          #240.1
	.cfi_def_cfa_offset 16
..LN3327:
        movq      %rsp, %rbp                                    #240.1
	.cfi_def_cfa 6, 16
	.cfi_offset 6, -16
..LN3328:
        andq      $-32, %rsp                                    #240.1
..LN3329:
        pushq     %r12                                          #240.1
..LN3330:
        pushq     %r13                                          #240.1
..LN3331:
        pushq     %r14                                          #240.1
..LN3332:
        pushq     %r15                                          #240.1
..LN3333:
        pushq     %rbx                                          #240.1
..LN3334:
        subq      $3512, %rsp                                   #240.1
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN3335:
        movq      %rdi, %r12                                    #240.1
..LN3336:
        movq      %rsi, %r13                                    #240.1
..LN3337:
        movq      %rdx, %r14                                    #240.1
..LN3338:
        movq      %rcx, %r15                                    #240.1
..LN3339:
        movq      %r9, 3120(%rsp)                               #240.1
..LN3340:
	.loc    1  248  prologue_end  is_stmt 1
        movl      (%r12), %edi                                  #248.10
..LN3341:
        movl      %edi, 2384(%rsp)                              #248.10
..LN3342:
	.loc    1  270  is_stmt 1
        movslq    %edi, %rdi                                    #270.31
..LN3343:
        movq      %rdi, 3128(%rsp)                              #270.31
..LN3344:
	.loc    1  249  is_stmt 1
        movl      (%r13), %r11d                                 #249.10
..LN3345:
	.loc    1  257  is_stmt 1
        imull     %r11d, %edi                                   #257.28
..LN3346:
        movslq    %edi, %rdi                                    #257.28
..LN3347:
	.loc    1  250  is_stmt 1
        movl      (%r14), %eax                                  #250.10
..LN3348:
	.loc    1  251  is_stmt 1
        movl      (%r15), %r10d                                 #251.10
..LN3349:
	.loc    1  257  is_stmt 1
        shlq      $3, %rdi                                      #257.28
..LN3350:
	.loc    1  250  is_stmt 1
        movl      %eax, 3272(%rsp)                              #250.10
..LN3351:
	.loc    1  274  is_stmt 1
        movslq    %eax, %rax                                    #274.33
..LN3352:
	.loc    1  240  is_stmt 1
        movq      %r8, 2392(%rsp)                               #240.1
..LN3353:
	.loc    1  249  is_stmt 1
        movl      %r11d, 656(%rsp)                              #249.10
..LN3354:
	.loc    1  274  is_stmt 1
        movq      %rax, 3488(%rsp)                              #274.33
..LN3355:
	.loc    1  251  is_stmt 1
        movl      %r10d, 3264(%rsp)                             #251.10
..LN3356:
	.loc    1  253  is_stmt 1
        movq      $0, 3160(%rsp)                                #253.3
..LN3357:
	.loc    1  257  is_stmt 1
#       malloc(size_t)
        call      malloc                                        #257.28
..LN3358:
                                # LOE rax r12 r13 r14 r15
..B10.159:                      # Preds ..B10.1
..LN3359:
        movq      %rax, 664(%rsp)                               #257.28
..LN3360:
                                # LOE r12 r13 r14 r15
..B10.2:                        # Preds ..B10.159
..LN3361:
	.loc    1  258  is_stmt 1
        movl      3272(%rsp), %edi                              #258.28
..LN3362:
        imull     3264(%rsp), %edi                              #258.28
..LN3363:
        movslq    %edi, %rdi                                    #258.28
..LN3364:
        shlq      $3, %rdi                                      #258.28
..LN3365:
#       malloc(size_t)
        call      malloc                                        #258.28
..LN3366:
                                # LOE rax r12 r13 r14 r15
..B10.160:                      # Preds ..B10.2
..LN3367:
        movq      %rax, %rbx                                    #258.28
..LN3368:
                                # LOE rbx r12 r13 r14 r15
..B10.3:                        # Preds ..B10.160
..LN3369:
	.loc    1  259  is_stmt 1
        movl      2384(%rsp), %eax                              #259.32
..LN3370:
        movl      656(%rsp), %edx                               #259.40
..LN3371:
        lea       1(%rax), %edi                                 #259.32
..LN3372:
        movl      %edi, 48(%rsp)                                #259.32
..LN3373:
        lea       1(%rdx), %ecx                                 #259.40
..LN3374:
	.loc    1  261  is_stmt 1
        movslq    %edi, %rdi                                    #261.32
..LN3375:
        movq      %rdi, 40(%rsp)                                #261.32
..LN3376:
	.loc    1  259  is_stmt 1
        imull     %ecx, %edi                                    #259.40
..LN3377:
        movslq    %edi, %rdi                                    #259.40
..LN3378:
        shlq      $3, %rdi                                      #259.43
..LN3379:
        movl      %ecx, 56(%rsp)                                #259.40
..LN3380:
        movq      %rdi, (%rsp)                                  #259.43
..LN3381:
#       malloc(size_t)
        call      malloc                                        #259.20
..LN3382:
                                # LOE rax rbx r12 r13 r14 r15
..B10.161:                      # Preds ..B10.3
..LN3383:
        movq      %rax, 672(%rsp)                               #259.20
..LN3384:
                                # LOE rbx r12 r13 r14 r15
..B10.4:                        # Preds ..B10.161
..LN3385:
	.loc    1  260  is_stmt 1
        movq      (%rsp), %rdi                                  #260.20
..LN3386:
#       malloc(size_t)
        call      malloc                                        #260.20
..LN3387:
                                # LOE rax rbx r12 r13 r14 r15
..B10.162:                      # Preds ..B10.4
..LN3388:
        movq      %rax, 680(%rsp)                               #260.20
..LN3389:
                                # LOE rax rbx r12 r13 r14 r15 eax al ah
..B10.5:                        # Preds ..B10.162
..LN3390:
	.loc    1  261  is_stmt 1
        movq      %rax, %r10                                    #261.32
..LN3391:
        xorl      %r11d, %r11d                                  #261.3
..LN3392:
        movq      672(%rsp), %r9                                #261.32
..LN3393:
        xorl      %r8d, %r8d                                    #261.32
..LN3394:
        cmpl      $0, 656(%rsp)                                 #261.17
..LN3395:
        jl        ..B10.48      # Prob 9%                       #261.17
..LN3396:
                                # LOE rbx r8 r9 r10 r12 r13 r14 r15 r9d r10d r11d r9b r10b
..B10.6:                        # Preds ..B10.5
..LN3397:
        movq      3128(%rsp), %rsi                              #261.28
..LN3398:
        movq      40(%rsp), %rdx                                #261.28
..LN3399:
        movq      3120(%rsp), %rcx                              #261.28
..LN3400:
        movq      %rbx, 3280(%rsp)                              #261.28
..LN3401:
        lea       1(%rsi), %rdi                                 #261.28
..LN3402:
        movl      %edi, %esi                                    #261.28
..LN3403:
        movl      %esi, %eax                                    #261.28
..LN3404:
        andl      $-4, %eax                                     #261.28
..LN3405:
        movslq    %eax, %rax                                    #261.28
..LN3406:
        movq      %rax, 16(%rsp)                                #261.28
..LN3407:
        movq      %r12, 24(%rsp)                                #261.28
..LN3408:
        movq      %r13, 32(%rsp)                                #261.28
..LN3409:
        movq      %r14, 8(%rsp)                                 #261.28
..LN3410:
        movq      %r15, (%rsp)                                  #261.28
..LN3411:
        movl      48(%rsp), %eax                                #261.28
..LN3412:
                                # LOE rdx rcx rdi r8 r9 r10 eax esi r11d
..B10.7:                        # Preds ..B10.46 ..B10.6
..L360:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN3413:
        cmpl      $0, 2384(%rsp)                                #261.42
..LN3414:
        jl        ..B10.46      # Prob 50%                      #261.42
..LN3415:
                                # LOE rdx rcx rdi r8 r9 r10 eax esi r11d
..B10.8:                        # Preds ..B10.7
..LN3416:
        cmpq      $4, %rdi                                      #261.28
..LN3417:
        jl        ..B10.153     # Prob 10%                      #261.28
..LN3418:
                                # LOE rdx rcx rdi r8 r9 r10 eax esi r11d
..B10.9:                        # Preds ..B10.8
..LN3419:
        cmpq      $95, %rdi                                     #261.28
..LN3420:
        jl        ..B10.155     # Prob 10%                      #261.28
..LN3421:
                                # LOE rdx rcx rdi r8 r9 r10 eax esi r11d
..B10.10:                       # Preds ..B10.9
..LN3422:
        movq      %r9, %rbx                                     #261.28
..LN3423:
        andq      $31, %rbx                                     #261.28
..LN3424:
        testl     %ebx, %ebx                                    #261.28
..LN3425:
        je        ..B10.13      # Prob 50%                      #261.28
..LN3426:
                                # LOE rdx rcx rdi r8 r9 r10 eax ebx esi r11d
..B10.11:                       # Preds ..B10.10
..LN3427:
        testb     $7, %bl                                       #261.28
..LN3428:
        jne       ..B10.153     # Prob 10%                      #261.28
..LN3429:
                                # LOE rdx rcx rdi r8 r9 r10 eax ebx esi r11d
..B10.12:                       # Preds ..B10.11
..LN3430:
        negl      %ebx                                          #261.28
..LN3431:
        addl      $32, %ebx                                     #261.28
..LN3432:
        shrl      $3, %ebx                                      #261.28
..LN3433:
                                # LOE rdx rcx rdi r8 r9 r10 eax ebx esi r11d
..B10.13:                       # Preds ..B10.12 ..B10.10
..LN3434:
        movl      %ebx, %r12d                                   #261.28
..LN3435:
        lea       4(%r12), %r13                                 #261.28
..LN3436:
        cmpq      %r13, %rdi                                    #261.28
..LN3437:
        jl        ..B10.153     # Prob 10%                      #261.28
..LN3438:
                                # LOE rdx rcx rdi r8 r9 r10 r12 eax ebx esi r11d
..B10.14:                       # Preds ..B10.13
..LN3439:
        negl      %ebx                                          #261.28
..LN3440:
        xorl      %r13d, %r13d                                  #261.28
..LN3441:
        addl      %esi, %ebx                                    #261.28
..LN3442:
        andl      $3, %ebx                                      #261.28
..LN3443:
        negl      %ebx                                          #261.28
..LN3444:
        addl      %esi, %ebx                                    #261.28
..LN3445:
        movslq    %ebx, %rbx                                    #261.28
..LN3446:
        testq     %r12, %r12                                    #261.28
..LN3447:
        jbe       ..B10.18      # Prob 10%                      #261.28
..LN3448:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 eax esi r11d
..B10.15:                       # Preds ..B10.14
..LN3449:
        movq      2392(%rsp), %r15                              #
..LN3450:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 r15 eax esi r11d
..B10.16:                       # Preds ..B10.16 ..B10.15
..L361:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # PEELED LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
..LN3451:
	.loc    1  262  is_stmt 1
        movq      (%r15,%r13,8), %r14                           #262.24
..LN3452:
        movq      %r14, (%r9,%r13,8)                            #262.5
..LN3453:
	.loc    1  261  is_stmt 1
        incq      %r13                                          #261.28
..LN3454:
        cmpq      %r12, %r13                                    #261.28
..LN3455:
        jb        ..B10.16      # Prob 82%                      #261.28
..LN3456:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 r15 eax esi r11d
..B10.18:                       # Preds ..B10.16 ..B10.14 ..B10.155
..LN3457:
        movq      2392(%rsp), %r13                              #
..LN3458:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 eax esi r11d
..B10.19:                       # Preds ..B10.19 ..B10.18
..L362:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS VECTORIZED
                # VECTORIZATION HAS UNALIGNED MEMORY REFERENCES
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN3459:
	.loc    1  262  is_stmt 1
        vmovupd   (%r13,%r12,8), %ymm0                          #262.24
..LN3460:
        vmovupd   %ymm0, (%r9,%r12,8)                           #262.5
..LN3461:
	.loc    1  261  is_stmt 1
        addq      $4, %r12                                      #261.28
..LN3462:
        cmpq      %rbx, %r12                                    #261.28
..LN3463:
        jb        ..B10.19      # Prob 82%                      #261.28
..LN3464:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 eax esi r11d
..B10.21:                       # Preds ..B10.19 ..B10.153
..LN3465:
        cmpq      %rdi, %rbx                                    #261.28
..LN3466:
        jae       ..B10.25      # Prob 10%                      #261.28
..LN3467:
                                # LOE rdx rcx rbx rdi r8 r9 r10 eax esi r11d
..B10.22:                       # Preds ..B10.21
..LN3468:
        movq      2392(%rsp), %r13                              #
..LN3469:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r13 eax esi r11d
..B10.23:                       # Preds ..B10.23 ..B10.22
..L363:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
..LN3470:
	.loc    1  262  is_stmt 1
        movq      (%r13,%rbx,8), %r12                           #262.24
..LN3471:
        movq      %r12, (%r9,%rbx,8)                            #262.5
..LN3472:
	.loc    1  261  is_stmt 1
        incq      %rbx                                          #261.28
..LN3473:
        cmpq      %rdi, %rbx                                    #261.28
..LN3474:
        jb        ..B10.23      # Prob 82%                      #261.28
..LN3475:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r13 eax esi r11d
..B10.25:                       # Preds ..B10.23 ..B10.21
..LN3476:
        cmpl      $16, %eax                                     #261.28
..LN3477:
        jl        ..B10.150     # Prob 10%                      #261.28
..LN3478:
                                # LOE rdx rcx rdi r8 r9 r10 eax esi r11d
..B10.26:                       # Preds ..B10.25
..LN3479:
        movq      %r10, %r12                                    #261.28
..LN3480:
        andq      $31, %r12                                     #261.28
..LN3481:
        movl      %r12d, %r12d                                  #261.28
..LN3482:
        testl     %r12d, %r12d                                  #261.28
..LN3483:
        je        ..B10.29      # Prob 50%                      #261.28
..LN3484:
                                # LOE rdx rcx rdi r8 r9 r10 r12 eax esi r11d
..B10.27:                       # Preds ..B10.26
..LN3485:
        testl     $7, %r12d                                     #261.28
..LN3486:
        jne       ..B10.150     # Prob 10%                      #261.28
..LN3487:
                                # LOE rdx rcx rdi r8 r9 r10 r12 eax esi r11d
..B10.28:                       # Preds ..B10.27
..LN3488:
        negl      %r12d                                         #261.28
..LN3489:
        addl      $32, %r12d                                    #261.28
..LN3490:
        shrl      $3, %r12d                                     #261.28
..LN3491:
                                # LOE rdx rcx rdi r8 r9 r10 r12 eax esi r11d
..B10.29:                       # Preds ..B10.28 ..B10.26
..LN3492:
        lea       16(%r12), %ebx                                #261.28
..LN3493:
        cmpl      %ebx, %eax                                    #261.28
..LN3494:
        jl        ..B10.150     # Prob 10%                      #261.28
..LN3495:
                                # LOE rdx rcx rdi r8 r9 r10 r12 eax esi r11d
..B10.30:                       # Preds ..B10.29
..LN3496:
        movl      %eax, %r14d                                   #261.28
..LN3497:
        xorl      %ebx, %ebx                                    #261.28
..LN3498:
        subl      %r12d, %r14d                                  #261.28
..LN3499:
        andl      $15, %r14d                                    #261.28
..LN3500:
        negl      %r14d                                         #261.28
..LN3501:
        addl      %eax, %r14d                                   #261.28
..LN3502:
	.loc    1  263  is_stmt 1
        vmovsd    (%rcx,%r8,8), %xmm0                           #263.24
..LN3503:
	.loc    1  261  is_stmt 1
        testq     %r12, %r12                                    #261.28
..LN3504:
        jbe       ..B10.34      # Prob 10%                      #261.28
..LN3505:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 eax esi r11d r14d xmm0
..B10.32:                       # Preds ..B10.30 ..B10.32
..L364:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 4
                # PEELED LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.648438
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.937500
..LN3506:
	.loc    1  263  is_stmt 1
        vmovsd    %xmm0, (%r10,%rbx,8)                          #263.5
..LN3507:
	.loc    1  261  is_stmt 1
        incq      %rbx                                          #261.28
..LN3508:
        cmpq      %r12, %rbx                                    #261.28
..LN3509:
        jb        ..B10.32      # Prob 82%                      #261.28
..LN3510:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 eax esi r11d r14d xmm0
..B10.34:                       # Preds ..B10.32 ..B10.30
..LN3511:
        movslq    %r14d, %rbx                                   #261.28
..LN3512:
        lea       (%r10,%r12,8), %r13                           #261.28
..LN3513:
	.loc    1  263  is_stmt 1
        vbroadcastsd %xmm0, %ymm0                               #263.24
..LN3514:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 eax esi r11d r14d ymm0
..B10.35:                       # Preds ..B10.35 ..B10.34
..L365:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 4
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 8.648438
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.937500
                # MAIN VECTOR TYPE: 64-bits floating point
..LN3515:
	.loc    1  261  is_stmt 1
        addq      $16, %r12                                     #261.28
..LN3516:
	.loc    1  263  is_stmt 1
        vmovupd   %ymm0, (%r13)                                 #263.5
..LN3517:
        vmovupd   %ymm0, 32(%r13)                               #263.5
..LN3518:
        vmovupd   %ymm0, 64(%r13)                               #263.5
..LN3519:
        vmovupd   %ymm0, 96(%r13)                               #263.5
..LN3520:
	.loc    1  261  is_stmt 1
        addq      $128, %r13                                    #261.28
..LN3521:
        cmpq      %rbx, %r12                                    #261.28
..LN3522:
        jb        ..B10.35      # Prob 82%                      #261.28
..LN3523:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 eax esi r11d r14d ymm0
..B10.37:                       # Preds ..B10.35 ..B10.150
..LN3524:
        lea       1(%r14), %ebx                                 #261.28
..LN3525:
        cmpl      %ebx, %eax                                    #261.28
..LN3526:
        jb        ..B10.46      # Prob 50%                      #261.28
..LN3527:
                                # LOE rdx rcx rdi r8 r9 r10 eax esi r11d r14d
..B10.38:                       # Preds ..B10.37
..LN3528:
        movslq    %r14d, %r13                                   #261.28
..LN3529:
        negq      %r13                                          #261.28
..LN3530:
        addq      %rdx, %r13                                    #261.28
..LN3531:
        cmpq      $4, %r13                                      #261.28
..LN3532:
        jl        ..B10.149     # Prob 10%                      #261.28
..LN3533:
                                # LOE rdx rcx rdi r8 r9 r10 r13 eax esi r11d r14d
..B10.39:                       # Preds ..B10.38
..LN3534:
	.loc    1  263  is_stmt 1
        movslq    %r14d, %r14                                   #263.5
..LN3535:
	.loc    1  261  is_stmt 1
        movl      %r13d, %r12d                                  #261.28
..LN3536:
        andl      $-4, %r12d                                    #261.28
..LN3537:
        xorl      %ebx, %ebx                                    #261.28
..LN3538:
        movslq    %r12d, %r12                                   #261.28
..LN3539:
	.loc    1  263  is_stmt 1
        vbroadcastsd (%rcx,%r8,8), %ymm0                        #263.24
..LN3540:
        lea       (%r10,%r14,8), %r15                           #263.5
..LN3541:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 r15 eax esi r11d r14d ymm0
..B10.40:                       # Preds ..B10.40 ..B10.39
..L366:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS VECTORIZED
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION HAS UNALIGNED MEMORY REFERENCES
                # VECTORIZATION SPEEDUP COEFFECIENT 2.542969
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 2.750000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN3542:
        vmovupd   %ymm0, (%r15,%rbx,8)                          #263.5
..LN3543:
	.loc    1  261  is_stmt 1
        addq      $4, %rbx                                      #261.28
..LN3544:
        cmpq      %r12, %rbx                                    #261.28
..LN3545:
        jb        ..B10.40      # Prob 82%                      #261.28
..LN3546:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 r15 eax esi r11d r14d ymm0
..B10.42:                       # Preds ..B10.40 ..B10.149
..LN3547:
        cmpq      %r13, %r12                                    #261.28
..LN3548:
        jae       ..B10.46      # Prob 10%                      #261.28
..LN3549:
                                # LOE rdx rcx rdi r8 r9 r10 r12 r13 eax esi r11d r14d
..B10.43:                       # Preds ..B10.42
..LN3550:
	.loc    1  263  is_stmt 1
        movslq    %r14d, %r14                                   #263.5
..LN3551:
        lea       (%r10,%r14,8), %rbx                           #263.5
..LN3552:
        movq      (%rcx,%r8,8), %r14                            #263.24
..LN3553:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 r14 eax esi r11d
..B10.44:                       # Preds ..B10.44 ..B10.43
..L367:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 2.542969
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 2.750000
..LN3554:
        movq      %r14, (%rbx,%r12,8)                           #263.5
..LN3555:
	.loc    1  261  is_stmt 1
        incq      %r12                                          #261.28
..LN3556:
        cmpq      %r13, %r12                                    #261.28
..LN3557:
        jb        ..B10.44      # Prob 82%                      #261.28
..LN3558:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 r13 r14 eax esi r11d
..B10.46:                       # Preds ..B10.44 ..B10.7 ..B10.37 ..B10.42
..LN3559:
        incl      %r11d                                         #261.3
..LN3560:
        incq      %r8                                           #261.3
..LN3561:
        lea       (%r10,%rdx,8), %r10                           #261.3
..LN3562:
        lea       (%r9,%rdx,8), %r9                             #261.3
..LN3563:
        cmpl      56(%rsp), %r11d                               #261.3
..LN3564:
        jb        ..B10.7       # Prob 82%                      #261.3
..LN3565:
                                # LOE rdx rcx rdi r8 r9 r10 eax esi r11d
..B10.47:                       # Preds ..B10.46
..LN3566:
        movq      3280(%rsp), %rbx                              #
..LN3567:
        movq      24(%rsp), %r12                                #
..LN3568:
        movq      32(%rsp), %r13                                #
..LN3569:
        movq      8(%rsp), %r14                                 #
..LN3570:
        movq      (%rsp), %r15                                  #
..LN3571:
                                # LOE rbx r12 r13 r14 r15
..B10.48:                       # Preds ..B10.5 ..B10.47
..LN3572:
	.loc    1  72  is_stmt 1
        movl      (%r13), %r9d                                  #72.9
..LN3573:
	.loc    1  75  is_stmt 1
        xorl      %ecx, %ecx                                    #75.7
..LN3574:
	.loc    1  71  is_stmt 1
        movl      (%r12), %r8d                                  #71.9
..LN3575:
	.loc    1  75  is_stmt 1
        xorl      %edx, %edx                                    #75.9
..LN3576:
        movslq    %r8d, %rsi                                    #75.18
..LN3577:
        testl     %r9d, %r9d                                    #75.14
..LN3578:
        jle       ..B10.57      # Prob 10%                      #75.14
..LN3579:
                                # LOE rdx rbx rsi r14 r15 ecx r8d r9d
..B10.49:                       # Preds ..B10.48
..LN3580:
        movl      %r9d, 344(%rsp)                               #75.9
..LN3581:
        xorl      %eax, %eax                                    #75.9
..LN3582:
        movq      %rbx, 3280(%rsp)                              #75.9
..LN3583:
        movq      %r14, 8(%rsp)                                 #75.9
..LN3584:
        movq      %r15, (%rsp)                                  #75.9
..LN3585:
        movq      680(%rsp), %r10                               #75.9
..LN3586:
        movq      672(%rsp), %rdi                               #75.9
..LN3587:
        movq      664(%rsp), %r9                                #75.9
..LN3588:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B10.50:                       # Preds ..B10.55 ..B10.147 ..B10.49
..L368:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN3589:
        xorl      %r13d, %r13d                                  #75.27
..LN3590:
        testl     %r8d, %r8d                                    #75.36
..LN3591:
        jle       ..B10.147     # Prob 10%                      #75.36
..LN3592:
                                # LOE rdx rsi rdi r9 r10 r13 eax ecx r8d
..B10.51:                       # Preds ..B10.50
..LN3593:
	.loc    1  85  is_stmt 1
        movq      %rdx, 360(%rsp)                               #85.5
..LN3594:
	.loc    1  78  is_stmt 1
        lea       (%r8,%rax), %ebx                              #78.25
..LN3595:
        movslq    %ebx, %rbx                                    #78.15
..LN3596:
	.loc    1  85  is_stmt 1
        lea       (%r9,%rdx,8), %r11                            #85.5
..LN3597:
	.loc    1  76  is_stmt 1
        movslq    %eax, %rax                                    #76.15
..LN3598:
	.loc    1  85  is_stmt 1
        movq      %r11, 384(%rsp)                               #85.5
..LN3599:
        movl      %eax, 368(%rsp)                               #85.5
..LN3600:
        movl      %ecx, 352(%rsp)                               #85.5
..LN3601:
	.loc    1  78  is_stmt 1
        lea       (%rdi,%rbx,8), %r12                           #78.15
..LN3602:
	.loc    1  85  is_stmt 1
        movq      %rsi, 376(%rsp)                               #85.5
..LN3603:
	.loc    1  82  is_stmt 1
        lea       (%r10,%rbx,8), %rbx                           #82.15
..LN3604:
	.loc    1  85  is_stmt 1
        movl      %r8d, 336(%rsp)                               #85.5
..LN3605:
	.loc    1  80  is_stmt 1
        lea       (%r10,%rax,8), %r14                           #80.15
..LN3606:
	.loc    1  76  is_stmt 1
        lea       (%rdi,%rax,8), %r15                           #76.15
..LN3607:
                                # LOE rbx r12 r13 r14 r15
..B10.52:                       # Preds ..B10.54 ..B10.51
..L369:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN3608:
	.loc    1  84  is_stmt 1
        lea       16(%rsp), %rdi                                #84.12
..LN3609:
	.loc    1  76  is_stmt 1
        movq      (%r15,%r13,8), %rax                           #76.15
..LN3610:
	.loc    1  84  is_stmt 1
        lea       176(%rsp), %rsi                               #84.12
..LN3611:
	.loc    1  83  is_stmt 1
        movq      8(%rbx,%r13,8), %rdx                          #83.15
..LN3612:
	.loc    1  76  is_stmt 1
        movq      %rax, (%rdi)                                  #76.5
..LN3613:
	.loc    1  77  is_stmt 1
        movq      8(%r15,%r13,8), %rcx                          #77.15
..LN3614:
	.loc    1  78  is_stmt 1
        movq      16(%r12,%r13,8), %r8                          #78.15
..LN3615:
	.loc    1  79  is_stmt 1
        movq      8(%r12,%r13,8), %r9                           #79.15
..LN3616:
	.loc    1  80  is_stmt 1
        movq      (%r14,%r13,8), %r10                           #80.15
..LN3617:
	.loc    1  81  is_stmt 1
        movq      8(%r14,%r13,8), %r11                          #81.15
..LN3618:
	.loc    1  82  is_stmt 1
        movq      16(%rbx,%r13,8), %rax                         #82.15
..LN3619:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN3620:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN3621:
	.loc    1  77  is_stmt 1
        movq      %rcx, 8(%rdi)                                 #77.5
..LN3622:
	.loc    1  78  is_stmt 1
        movq      %r8, 16(%rdi)                                 #78.5
..LN3623:
	.loc    1  79  is_stmt 1
        movq      %r9, 24(%rdi)                                 #79.5
..LN3624:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN3625:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN3626:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN3627:
	.loc    1  84  is_stmt 1
        vzeroupper                                              #84.12
..LN3628:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_1dx2d_order2.370:
..LN3629:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_1dx2d_order2.371:
..LN3630:
                                # LOE rbx r12 r13 r14 r15 eax
..B10.53:                       # Preds ..B10.52
..LN3631:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN3632:
        lea       16(%rsp), %rdi                                #85.20
..LN3633:
        lea       176(%rsp), %rsi                               #85.20
..___tag_value_create_xgrid_1dx2d_order2.372:
..LN3634:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_1dx2d_order2.373:
..LN3635:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B10.54:                       # Preds ..B10.53
..LN3636:
        movq      384(%rsp), %rax                               #85.5
..LN3637:
        vmovsd    %xmm0, (%rax,%r13,8)                          #85.5
..LN3638:
	.loc    1  75  is_stmt 1
        incq      %r13                                          #75.40
..LN3639:
        cmpq      376(%rsp), %r13                               #75.36
..LN3640:
        jl        ..B10.52      # Prob 82%                      #75.36
..LN3641:
                                # LOE rbx r12 r13 r14 r15
..B10.55:                       # Preds ..B10.54
..LN3642:
        movl      352(%rsp), %ecx                               #
..LN3643:
        incl      %ecx                                          #75.18
..LN3644:
        movq      360(%rsp), %rdx                               #
..LN3645:
        movq      376(%rsp), %rsi                               #
..LN3646:
        addq      %rsi, %rdx                                    #75.18
..LN3647:
        movl      368(%rsp), %eax                               #
..LN3648:
        movl      336(%rsp), %r8d                               #
..LN3649:
        lea       1(%rax,%r8), %eax                             #75.18
..LN3650:
        movq      680(%rsp), %r10                               #
..LN3651:
        movq      672(%rsp), %rdi                               #
..LN3652:
        movq      664(%rsp), %r9                                #
..LN3653:
        cmpl      344(%rsp), %ecx                               #75.14
..LN3654:
        jl        ..B10.50      # Prob 82%                      #75.14
..LN3655:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B10.56:                       # Preds ..B10.147 ..B10.55      # Infreq
..LN3656:
        movq      3280(%rsp), %rbx                              #
..LN3657:
        movq      8(%rsp), %r14                                 #
..LN3658:
        movq      (%rsp), %r15                                  #
..LN3659:
                                # LOE rbx r14 r15
..B10.57:                       # Preds ..B10.56 ..B10.48       # Infreq
..LN3660:
	.loc    1  71  is_stmt 1
        movl      (%r14), %r8d                                  #71.9
..LN3661:
	.loc    1  75  is_stmt 1
        xorl      %esi, %esi                                    #75.7
..LN3662:
	.loc    1  72  is_stmt 1
        movl      (%r15), %r11d                                 #72.9
..LN3663:
	.loc    1  75  is_stmt 1
        xorl      %ecx, %ecx                                    #75.9
..LN3664:
	.loc    1  240  is_stmt 1
        movq      16(%rbp), %r13                                #240.1
..LN3665:
        movq      24(%rbp), %r12                                #240.1
..LN3666:
	.loc    1  75  is_stmt 1
        movslq    %r8d, %rax                                    #75.18
..LN3667:
        testl     %r11d, %r11d                                  #75.14
..LN3668:
        jle       ..B10.66      # Prob 10%                      #75.14
..LN3669:
                                # LOE rax rcx rbx r12 r13 esi r8d r11d
..B10.58:                       # Preds ..B10.57                # Infreq
..LN3670:
        movl      %r11d, 8(%rsp)                                #75.9
..LN3671:
        xorl      %edx, %edx                                    #75.9
..LN3672:
        movq      %rbx, %r10                                    #75.9
..LN3673:
        movq      %r12, %rdi                                    #75.9
..LN3674:
        movq      %r13, %r9                                     #75.9
..LN3675:
                                # LOE rax rcx rdi r9 r10 edx esi r8d
..B10.59:                       # Preds ..B10.64 ..B10.145 ..B10.58 # Infreq
..L374:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN3676:
        xorl      %r15d, %r15d                                  #75.27
..LN3677:
        testl     %r8d, %r8d                                    #75.36
..LN3678:
        jle       ..B10.145     # Prob 10%                      #75.36
..LN3679:
                                # LOE rax rcx rdi r9 r10 r15 edx esi r8d
..B10.60:                       # Preds ..B10.59                # Infreq
..LN3680:
	.loc    1  85  is_stmt 1
        movq      %rcx, 696(%rsp)                               #85.5
..LN3681:
	.loc    1  78  is_stmt 1
        lea       (%r8,%rdx), %r11d                             #78.25
..LN3682:
        movslq    %r11d, %r11                                   #78.15
..LN3683:
	.loc    1  76  is_stmt 1
        movslq    %edx, %rdx                                    #76.15
..LN3684:
	.loc    1  85  is_stmt 1
        movl      %edx, 704(%rsp)                               #85.5
..LN3685:
        movl      %esi, 688(%rsp)                               #85.5
..LN3686:
        movq      %rax, 712(%rsp)                               #85.5
..LN3687:
	.loc    1  78  is_stmt 1
        lea       (%r9,%r11,8), %r14                            #78.15
..LN3688:
	.loc    1  85  is_stmt 1
        movl      %r8d, (%rsp)                                  #85.5
..LN3689:
	.loc    1  82  is_stmt 1
        lea       (%rdi,%r11,8), %rbx                           #82.15
..LN3690:
	.loc    1  85  is_stmt 1
        movq      %r10, 3280(%rsp)                              #85.5
..LN3691:
        lea       (%r10,%rcx,8), %r11                           #85.5
..LN3692:
        movq      %r11, 720(%rsp)                               #85.5
..LN3693:
	.loc    1  80  is_stmt 1
        lea       (%rdi,%rdx,8), %r12                           #80.15
..LN3694:
	.loc    1  76  is_stmt 1
        lea       (%r9,%rdx,8), %r13                            #76.15
..LN3695:
                                # LOE rbx r12 r13 r14 r15
..B10.61:                       # Preds ..B10.63 ..B10.60       # Infreq
..L375:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN3696:
	.loc    1  84  is_stmt 1
        lea       336(%rsp), %rdi                               #84.12
..LN3697:
	.loc    1  76  is_stmt 1
        movq      (%r13,%r15,8), %rax                           #76.15
..LN3698:
	.loc    1  84  is_stmt 1
        lea       496(%rsp), %rsi                               #84.12
..LN3699:
	.loc    1  83  is_stmt 1
        movq      8(%rbx,%r15,8), %rdx                          #83.15
..LN3700:
	.loc    1  76  is_stmt 1
        movq      %rax, -160(%rsi)                              #76.5
..LN3701:
	.loc    1  77  is_stmt 1
        movq      8(%r13,%r15,8), %rcx                          #77.15
..LN3702:
	.loc    1  78  is_stmt 1
        movq      16(%r14,%r15,8), %r8                          #78.15
..LN3703:
	.loc    1  79  is_stmt 1
        movq      8(%r14,%r15,8), %r9                           #79.15
..LN3704:
	.loc    1  80  is_stmt 1
        movq      (%r12,%r15,8), %r10                           #80.15
..LN3705:
	.loc    1  81  is_stmt 1
        movq      8(%r12,%r15,8), %r11                          #81.15
..LN3706:
	.loc    1  82  is_stmt 1
        movq      16(%rbx,%r15,8), %rax                         #82.15
..LN3707:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN3708:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN3709:
	.loc    1  77  is_stmt 1
        movq      %rcx, -152(%rsi)                              #77.5
..LN3710:
	.loc    1  78  is_stmt 1
        movq      %r8, -144(%rsi)                               #78.5
..LN3711:
	.loc    1  79  is_stmt 1
        movq      %r9, -136(%rsi)                               #79.5
..LN3712:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN3713:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN3714:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN3715:
	.loc    1  84  is_stmt 1
        vzeroupper                                              #84.12
..LN3716:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_1dx2d_order2.376:
..LN3717:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_1dx2d_order2.377:
..LN3718:
                                # LOE rbx r12 r13 r14 r15 eax
..B10.62:                       # Preds ..B10.61                # Infreq
..LN3719:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN3720:
        lea       336(%rsp), %rdi                               #85.20
..LN3721:
        lea       496(%rsp), %rsi                               #85.20
..___tag_value_create_xgrid_1dx2d_order2.378:
..LN3722:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_1dx2d_order2.379:
..LN3723:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B10.63:                       # Preds ..B10.62                # Infreq
..LN3724:
        movq      720(%rsp), %rax                               #85.5
..LN3725:
        vmovsd    %xmm0, (%rax,%r15,8)                          #85.5
..LN3726:
	.loc    1  75  is_stmt 1
        incq      %r15                                          #75.40
..LN3727:
        cmpq      712(%rsp), %r15                               #75.36
..LN3728:
        jl        ..B10.61      # Prob 82%                      #75.36
..LN3729:
                                # LOE rbx r12 r13 r14 r15
..B10.64:                       # Preds ..B10.63                # Infreq
..LN3730:
        movl      688(%rsp), %esi                               #
..LN3731:
        incl      %esi                                          #75.18
..LN3732:
        movq      696(%rsp), %rcx                               #
..LN3733:
        movq      712(%rsp), %rax                               #
..LN3734:
        addq      %rax, %rcx                                    #75.18
..LN3735:
        movl      704(%rsp), %edx                               #
..LN3736:
        movl      (%rsp), %r8d                                  #
..LN3737:
        lea       1(%rdx,%r8), %edx                             #75.18
..LN3738:
        movq      3280(%rsp), %r10                              #
..LN3739:
        movq      24(%rbp), %rdi                                #
..LN3740:
        movq      16(%rbp), %r9                                 #
..LN3741:
        cmpl      8(%rsp), %esi                                 #75.14
..LN3742:
        jl        ..B10.59      # Prob 82%                      #75.14
..LN3743:
                                # LOE rax rcx rdi r9 r10 edx esi r8d r10d r10b
..B10.65:                       # Preds ..B10.145 ..B10.64      # Infreq
..LN3744:
        movq      %rdi, %r12                                    #
..LN3745:
        movq      %r9, %r13                                     #
..LN3746:
        movq      %r10, %rbx                                    #
..LN3747:
                                # LOE rbx r12 r13
..B10.66:                       # Preds ..B10.65 ..B10.57       # Infreq
..LN3748:
	.loc    1  267  is_stmt 1
        vzeroupper                                              #267.3
..LN3749:
        movq      672(%rsp), %rdi                               #267.3
..LN3750:
#       free(void *)
        call      free                                          #267.3
..LN3751:
                                # LOE rbx r12 r13
..B10.67:                       # Preds ..B10.66                # Infreq
..LN3752:
	.loc    1  268  is_stmt 1
        movq      680(%rsp), %rdi                               #268.3
..LN3753:
#       free(void *)
        call      free                                          #268.3
..LN3754:
                                # LOE rbx r12 r13
..B10.68:                       # Preds ..B10.67                # Infreq
..LN3755:
	.loc    1  270  is_stmt 1
        xorl      %eax, %eax                                    #270.31
..LN3756:
        xorl      %r14d, %r14d                                  #270.3
..LN3757:
        xorl      %esi, %esi                                    #270.31
..LN3758:
        cmpl      $0, 656(%rsp)                                 #270.16
..LN3759:
        jle       ..B10.135     # Prob 10%                      #270.16
..LN3760:
                                # LOE rax rbx rsi r12 r13 r14d
..B10.69:                       # Preds ..B10.68                # Infreq
..LN3761:
	.loc    1  929  is_stmt 1
        movl      $8, %r8d                                      #929.17
..LN3762:
	.loc    1  255  is_stmt 1
        movl      3272(%rsp), %r11d                             #255.16
..LN3763:
	.loc    1  956  is_stmt 1
        vxorpd    %xmm7, %xmm7, %xmm7                           #956.17
..LN3764:
	.loc    1  289  is_stmt 1
        movq      3488(%rsp), %rdi                              #289.17
..LN3765:
	.loc    1  929  is_stmt 1
        vmovd     %r8d, %xmm1                                   #929.17
..LN3766:
	.loc    1  255  is_stmt 1
        lea       1(%r11), %r11d                                #255.16
..LN3767:
	.loc    1  274  is_stmt 1
        movslq    %r11d, %r11                                   #274.33
..LN3768:
	.loc    1  289  is_stmt 1
        lea       (%r13,%rdi,8), %r9                            #289.17
..LN3769:
	.loc    1  929  is_stmt 1
        vpbroadcastd %xmm1, %ymm1                               #929.17
..LN3770:
	.loc    1  280  is_stmt 1
        lea       (%r12,%rdi,8), %rdi                           #280.17
..LN3771:
	.loc    1  929  is_stmt 1
        movq      %rdi, 3296(%rsp)                              #929.17
..LN3772:
        movq      %r13, %r8                                     #929.17
..LN3773:
	.loc    1  270  is_stmt 1
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm0             #270.76
..LN3774:
	.loc    1  297  is_stmt 1
        vmovsd    .L_2il0floatpacket.2(%rip), %xmm8             #297.22
..LN3775:
	.loc    1  939  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm6             #939.13
..LN3776:
	.loc    1  940  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm5             #940.13
..LN3777:
	.loc    1  939  is_stmt 1
        vmovsd    .L_2il0floatpacket.4(%rip), %xmm4             #939.30
..LN3778:
	.loc    1  1000  is_stmt 1
        vmovsd    .L_2il0floatpacket.5(%rip), %xmm3             #1000.18
..LN3779:
	.loc    1  942  is_stmt 1
        vmovsd    .L_2il0floatpacket.6(%rip), %xmm2             #942.21
..LN3780:
	.loc    1  240  is_stmt 1
        movq      32(%rbp), %r15                                #240.1
..LN3781:
        movq      48(%rbp), %rdx                                #240.1
..LN3782:
	.loc    1  929  is_stmt 1
        vmovdqu   %ymm1, 2656(%rsp)                             #929.17
..LN3783:
        movq      %r11, 3288(%rsp)                              #929.17
..LN3784:
        movq      %rbx, 3280(%rsp)                              #929.17
..LN3785:
        movq      664(%rsp), %rcx                               #929.17
..LN3786:
        movl      656(%rsp), %edi                               #929.17
..LN3787:
        movq      3128(%rsp), %r10                              #929.17
..LN3788:
        movl      2384(%rsp), %r13d                             #929.17
..LN3789:
                                # LOE rax rcx rsi r8 r9 r10 r12 r15 edi r13d r14d xmm0
..B10.70:                       # Preds ..B10.74 ..B10.143 ..B10.69 # Infreq
..L380:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN3790:
	.loc    1  270  is_stmt 1
        xorl      %r11d, %r11d                                  #270.27
..LN3791:
        testl     %r13d, %r13d                                  #270.40
..LN3792:
        jle       ..B10.143     # Prob 10%                      #270.40
..LN3793:
                                # LOE rax rcx rsi r8 r9 r10 r11 r12 r15 edi r13d r14d xmm0
..B10.71:                       # Preds ..B10.70                # Infreq
..LN3794:
	.loc    1  296  is_stmt 1
        movq      %rsi, (%rsp)                                  #296.20
..LN3795:
        lea       (%rcx,%rsi,8), %rdx                           #296.20
..LN3796:
        movl      %r14d, 3168(%rsp)                             #296.20
..LN3797:
	.loc    1  270  is_stmt 1
        lea       (%r15,%rsi,8), %rbx                           #270.55
..LN3798:
	.loc    1  296  is_stmt 1
        movq      %rdx, 3352(%rsp)                              #296.20
..LN3799:
        movq      3280(%rsp), %rsi                              #296.20
..LN3800:
        movl      3264(%rsp), %r14d                             #296.20
..LN3801:
        movq      2392(%rsp), %r15                              #296.20
..LN3802:
        movq      3120(%rsp), %r13                              #296.20
..LN3803:
                                # LOE rax rbx rsi r8 r9 r10 r11 r12 r13 r15 r14d xmm0
..B10.72:                       # Preds ..B10.73 ..B10.71       # Infreq
..L381:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN3804:
	.loc    1  270  is_stmt 1
        vmovsd    (%rbx,%r11,8), %xmm1                          #270.55
..LN3805:
        vcomisd   %xmm0, %xmm1                                  #270.76
..LN3806:
        ja        ..B10.75      # Prob 50%                      #270.76
..LN3807:
                                # LOE rax rbx rsi r8 r9 r10 r11 r12 r13 r15 r14d xmm0
..B10.73:                       # Preds ..B10.132 ..B10.141 ..B10.75 ..B10.72 # Infreq
..LN3808:
        incq      %r11                                          #270.27
..LN3809:
        cmpq      %r10, %r11                                    #270.27
..LN3810:
        jb        ..B10.72      # Prob 81%                      #270.27
..LN3811:
                                # LOE rax rbx rsi r8 r9 r10 r11 r12 r13 r15 r14d xmm0
..B10.74:                       # Preds ..B10.73                # Infreq
..LN3812:
        movl      3168(%rsp), %r14d                             #
..LN3813:
        incq      %rax                                          #270.3
..LN3814:
        incl      %r14d                                         #270.3
..LN3815:
        movq      (%rsp), %rsi                                  #
..LN3816:
        movl      656(%rsp), %edi                               #
..LN3817:
        addq      %r10, %rsi                                    #270.3
..LN3818:
        movq      664(%rsp), %rcx                               #
..LN3819:
        movl      2384(%rsp), %r13d                             #
..LN3820:
        movq      32(%rbp), %r15                                #
..LN3821:
        cmpl      %edi, %r14d                                   #270.3
..LN3822:
        jb        ..B10.70      # Prob 81%                      #270.3
..LN3823:
        jmp       ..B10.134     # Prob 100%                     #270.3
..LN3824:
                                # LOE rax rcx rsi r8 r9 r10 r12 r15 edi r13d r14d xmm0
..B10.75:                       # Preds ..B10.72                # Infreq
..LN3825:
	.loc    1  274  is_stmt 1
        xorl      %edx, %edx                                    #274.33
..LN3826:
        xorl      %ecx, %ecx                                    #274.5
..LN3827:
	.loc    1  272  is_stmt 1
        vmovsd    (%r15,%r11,8), %xmm5                          #272.14
..LN3828:
	.loc    1  274  is_stmt 1
        xorl      %edi, %edi                                    #274.33
..LN3829:
	.loc    1  273  is_stmt 1
        vmovsd    8(%r15,%r11,8), %xmm3                         #273.14
..LN3830:
	.loc    1  272  is_stmt 1
        vmovsd    (%r13,%rax,8), %xmm4                          #272.37
..LN3831:
	.loc    1  273  is_stmt 1
        vmovsd    8(%r13,%rax,8), %xmm2                         #273.37
..LN3832:
	.loc    1  274  is_stmt 1
        testl     %r14d, %r14d                                  #274.18
..LN3833:
        jle       ..B10.73      # Prob 10%                      #274.18
..LN3834:
                                # LOE rax rdx rbx rsi rdi r8 r9 r10 r11 r12 r13 r15 ecx r14d xmm0 xmm2 xmm3 xmm4 xmm5
..B10.76:                       # Preds ..B10.75                # Infreq
..LN3835:
	.loc    1  291  is_stmt 1
        movq      %rax, 8(%rsp)                                 #291.53
..LN3836:
        vaddsd    %xmm3, %xmm5, %xmm1                           #291.45
..LN3837:
        vmulsd    %xmm1, %xmm0, %xmm1                           #291.53
..LN3838:
        vmovsd    %xmm1, 3464(%rsp)                             #291.53
..LN3839:
        vmovsd    %xmm2, 3480(%rsp)                             #291.53
..LN3840:
        vmovsd    %xmm3, 3456(%rsp)                             #291.53
..LN3841:
        vmovsd    %xmm4, 3504(%rsp)                             #291.53
..LN3842:
        vmovsd    %xmm5, 3448(%rsp)                             #291.53
..LN3843:
        movq      %rbx, 3368(%rsp)                              #291.53
..LN3844:
        movq      %r11, 3360(%rsp)                              #291.53
..LN3845:
        movl      3272(%rsp), %eax                              #291.53
..LN3846:
                                # LOE rdx rsi rdi r8 r9 r12 eax ecx
..B10.77:                       # Preds ..B10.131 ..B10.140 ..B10.76 # Infreq
..L382:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN3847:
	.loc    1  274  is_stmt 1
        xorl      %r14d, %r14d                                  #274.29
..LN3848:
        testl     %eax, %eax                                    #274.42
..LN3849:
        jle       ..B10.140     # Prob 10%                      #274.42
..LN3850:
                                # LOE rdx rsi rdi r8 r9 r12 r14 eax ecx
..B10.78:                       # Preds ..B10.77                # Infreq
..LN3851:
	.loc    1  280  is_stmt 1
        movq      3296(%rsp), %r10                              #280.17
..LN3852:
	.loc    1  287  is_stmt 1
        lea       (%r8,%rdx,8), %r13                            #287.17
..LN3853:
	.loc    1  296  is_stmt 1
        movq      %rdi, 3328(%rsp)                              #296.20
..LN3854:
	.loc    1  278  is_stmt 1
        lea       (%r12,%rdx,8), %rbx                           #278.17
..LN3855:
	.loc    1  296  is_stmt 1
        movq      %rdx, 3320(%rsp)                              #296.20
..LN3856:
	.loc    1  289  is_stmt 1
        lea       (%r9,%rdx,8), %r15                            #289.17
..LN3857:
	.loc    1  296  is_stmt 1
        movl      %ecx, 3312(%rsp)                              #296.20
..LN3858:
	.loc    1  280  is_stmt 1
        lea       (%r10,%rdx,8), %r11                           #280.17
..LN3859:
	.loc    1  296  is_stmt 1
        movq      %r11, 3496(%rsp)                              #296.20
..LN3860:
        lea       (%rsi,%rdi,8), %r10                           #296.20
..LN3861:
        movq      %r10, 3376(%rsp)                              #296.20
..LN3862:
        movq      %r9, 3304(%rsp)                               #296.20
..LN3863:
                                # LOE rbx r13 r14 r15
..B10.79:                       # Preds ..B10.130 ..B10.78      # Infreq
..L383:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN3864:
	.loc    1  280  is_stmt 1
        movq      3496(%rsp), %rax                              #280.17
..LN3865:
	.loc    1  282  is_stmt 1
        vmovsd    3504(%rsp), %xmm0                             #282.23
..LN3866:
	.loc    1  278  is_stmt 1
        vmovsd    (%rbx,%r14,8), %xmm1                          #278.17
..LN3867:
	.loc    1  279  is_stmt 1
        vmovsd    8(%rbx,%r14,8), %xmm2                         #279.17
..LN3868:
	.loc    1  280  is_stmt 1
        vmovsd    16(%rax,%r14,8), %xmm3                        #280.17
..LN3869:
	.loc    1  281  is_stmt 1
        vmovsd    8(%rax,%r14,8), %xmm4                         #281.17
..LN3870:
	.loc    1  278  is_stmt 1
        vmovsd    %xmm1, 2720(%rsp)                             #278.7
..LN3871:
	.loc    1  279  is_stmt 1
        vmovsd    %xmm2, 2728(%rsp)                             #279.7
..LN3872:
	.loc    1  280  is_stmt 1
        vmovsd    %xmm3, 2736(%rsp)                             #280.7
..LN3873:
	.loc    1  281  is_stmt 1
        vmovsd    %xmm4, 2744(%rsp)                             #281.7
..LN3874:
	.loc    1  282  is_stmt 1
        vcomisd   %xmm1, %xmm0                                  #282.23
..LN3875:
        jb        ..B10.83      # Prob 50%                      #282.23
..LN3876:
                                # LOE rbx r13 r14 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B10.80:                       # Preds ..B10.79                # Infreq
..LN3877:
        vcomisd   %xmm2, %xmm0                                  #282.44
..LN3878:
        jb        ..B10.83      # Prob 50%                      #282.44
..LN3879:
                                # LOE rbx r13 r14 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B10.81:                       # Preds ..B10.80                # Infreq
..LN3880:
	.loc    1  283  is_stmt 1
        vcomisd   %xmm3, %xmm0                                  #283.19
..LN3881:
        jb        ..B10.83      # Prob 50%                      #283.19
..LN3882:
                                # LOE rbx r13 r14 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B10.82:                       # Preds ..B10.81                # Infreq
..LN3883:
        vcomisd   %xmm4, %xmm0                                  #283.40
..LN3884:
        jae       ..B10.130     # Prob 50%                      #283.40
..LN3885:
                                # LOE rbx r13 r14 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B10.83:                       # Preds ..B10.79 ..B10.80 ..B10.81 ..B10.82 # Infreq
..LN3886:
	.loc    1  284  is_stmt 1
        vcomisd   3480(%rsp), %xmm1                             #284.23
..LN3887:
        jb        ..B10.87      # Prob 22%                      #284.23
..LN3888:
                                # LOE rbx r13 r14 r15 xmm0 xmm2 xmm3 xmm4 ymm0 zmm0
..B10.84:                       # Preds ..B10.83                # Infreq
..LN3889:
        vcomisd   3480(%rsp), %xmm2                             #284.44
..LN3890:
        jb        ..B10.87      # Prob 22%                      #284.44
..LN3891:
                                # LOE rbx r13 r14 r15 xmm0 xmm3 xmm4 ymm0 zmm0
..B10.85:                       # Preds ..B10.84                # Infreq
..LN3892:
	.loc    1  285  is_stmt 1
        vcomisd   3480(%rsp), %xmm3                             #285.19
..LN3893:
        jb        ..B10.87      # Prob 22%                      #285.19
..LN3894:
                                # LOE rbx r13 r14 r15 xmm0 xmm4 ymm0 zmm0
..B10.86:                       # Preds ..B10.85                # Infreq
..LN3895:
        vcomisd   3480(%rsp), %xmm4                             #285.40
..LN3896:
        jae       ..B10.130     # Prob 78%                      #285.40
..LN3897:
                                # LOE rbx r13 r14 r15 xmm0 ymm0 zmm0
..B10.87:                       # Preds ..B10.83 ..B10.84 ..B10.85 ..B10.86 # Infreq
..LN3898:
	.loc    1  291  is_stmt 1
        vzeroupper                                              #291.14
..LN3899:
        lea       1184(%rsp), %rdi                              #291.14
..LN3900:
	.loc    1  287  is_stmt 1
        movq      (%r13,%r14,8), %rax                           #287.17
..LN3901:
	.loc    1  291  is_stmt 1
        lea       2720(%rsp), %rsi                              #291.14
..LN3902:
	.loc    1  288  is_stmt 1
        movq      8(%r13,%r14,8), %rcx                          #288.17
..LN3903:
	.loc    1  291  is_stmt 1
        movl      $4, %edx                                      #291.14
..LN3904:
	.loc    1  289  is_stmt 1
        movq      16(%r15,%r14,8), %r8                          #289.17
..LN3905:
	.loc    1  290  is_stmt 1
        movq      8(%r15,%r14,8), %r9                           #290.17
..LN3906:
	.loc    1  291  is_stmt 1
        vmovsd    744(%rsi), %xmm0                              #291.14
..LN3907:
	.loc    1  287  is_stmt 1
        movq      %rax, -1536(%rsi)                             #287.7
..LN3908:
	.loc    1  288  is_stmt 1
        movq      %rcx, -1528(%rsi)                             #288.7
..LN3909:
	.loc    1  289  is_stmt 1
        movq      %r8, -1520(%rsi)                              #289.7
..LN3910:
	.loc    1  290  is_stmt 1
        movq      %r9, -1512(%rsi)                              #290.7
..___tag_value_create_xgrid_1dx2d_order2.384:
..LN3911:
	.loc    1  291  is_stmt 1
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #291.14
..___tag_value_create_xgrid_1dx2d_order2.385:
..LN3912:
                                # LOE rbx r13 r14 r15 eax
..B10.167:                      # Preds ..B10.87                # Infreq
..LN3913:
        movl      %eax, %r12d                                   #291.14
..LN3914:
                                # LOE rbx r13 r14 r15 r12d
..B10.88:                       # Preds ..B10.167               # Infreq
..LN3915:
	.loc    1  292  is_stmt 1
        movl      %r12d, %edi                                   #292.20
..LN3916:
        lea       1184(%rsp), %rsi                              #292.20
..___tag_value_create_xgrid_1dx2d_order2.386:
..LN3917:
#       avgval_double(int, const double *)
        call      avgval_double                                 #292.20
..___tag_value_create_xgrid_1dx2d_order2.387:
..LN3918:
                                # LOE rbx r13 r14 r15 r12d xmm0
..B10.168:                      # Preds ..B10.88                # Infreq
..LN3919:
        vmovsd    %xmm0, 3472(%rsp)                             #292.20
..LN3920:
                                # LOE rbx r13 r14 r15 r12d
..B10.89:                       # Preds ..B10.168               # Infreq
..LN3921:
	.loc    1  294  is_stmt 1
        lea       1184(%rsp), %rdi                              #294.22
..LN3922:
        vmovsd    2264(%rdi), %xmm0                             #294.22
..LN3923:
        lea       2720(%rsp), %rsi                              #294.22
..LN3924:
        vmovsd    784(%rsi), %xmm1                              #294.22
..LN3925:
        lea       1584(%rsp), %rcx                              #294.22
..LN3926:
        vmovsd    1872(%rcx), %xmm2                             #294.22
..LN3927:
        lea       1984(%rsp), %r8                               #294.22
..LN3928:
        vmovsd    1896(%rcx), %xmm3                             #294.22
..LN3929:
        movl      %r12d, %edx                                   #294.22
..___tag_value_create_xgrid_1dx2d_order2.388:
..LN3930:
#       clip(const double *, const double *, int, double, double, double, double, double *, double *)
        call      clip                                          #294.22
..___tag_value_create_xgrid_1dx2d_order2.389:
..LN3931:
                                # LOE rbx r13 r14 r15 eax
..B10.169:                      # Preds ..B10.89                # Infreq
..LN3932:
        movl      %eax, %r12d                                   #294.22
..LN3933:
                                # LOE rbx r13 r14 r15 r12d
..B10.90:                       # Preds ..B10.169               # Infreq
..LN3934:
        testl     %r12d, %r12d                                  #294.97
..LN3935:
        jle       ..B10.130     # Prob 40%                      #294.97
..LN3936:
                                # LOE rbx r13 r14 r15 r12d
..B10.91:                       # Preds ..B10.90                # Infreq
..LN3937:
	.loc    1  295  is_stmt 1
        movl      %r12d, %edx                                   #295.10
..LN3938:
        lea       1584(%rsp), %rdi                              #295.10
..LN3939:
        lea       1984(%rsp), %rsi                              #295.10
..___tag_value_create_xgrid_1dx2d_order2.390:
..LN3940:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #295.10
..___tag_value_create_xgrid_1dx2d_order2.391:
..LN3941:
                                # LOE rbx r13 r14 r15 r12d xmm0
..B10.92:                       # Preds ..B10.91                # Infreq
..LN3942:
        movq      3368(%rsp), %rax                              #295.45
..LN3943:
        movq      3360(%rsp), %rdi                              #295.45
..LN3944:
	.loc    1  296  is_stmt 1
        movq      3352(%rsp), %rsi                              #296.20
..LN3945:
	.loc    1  297  is_stmt 1
        movq      3376(%rsp), %r8                               #297.2
..LN3946:
	.loc    1  295  is_stmt 1
        vmulsd    (%rax,%rdi,8), %xmm0, %xmm2                   #295.45
..LN3947:
	.loc    1  296  is_stmt 1
        vmovsd    (%rsi,%rdi,8), %xmm0                          #296.20
..LN3948:
	.loc    1  297  is_stmt 1
        vminsd    (%r8,%r14,8), %xmm0, %xmm0                    #297.2
..LN3949:
        vdivsd    %xmm0, %xmm2, %xmm1                           #297.11
..LN3950:
        vcomisd   .L_2il0floatpacket.2(%rip), %xmm1             #297.22
..LN3951:
        jbe       ..B10.130     # Prob 78%                      #297.22
..LN3952:
                                # LOE rbx r13 r14 r15 r12d xmm2
..B10.93:                       # Preds ..B10.92                # Infreq
..LN3953:
	.loc    1  298  is_stmt 1
        movq      72(%rbp), %rax                                #298.4
..LN3954:
        movq      3160(%rsp), %rsi                              #298.4
..LN3955:
	.loc    1  956  is_stmt 1
        vxorpd    %xmm0, %xmm0, %xmm0                           #956.17
..LN3956:
	.loc    1  960  is_stmt 1
        movslq    %r12d, %rdx                                   #960.3
..LN3957:
        vmovsd    %xmm0, 3256(%rsp)                             #960.3
..LN3958:
	.loc    1  298  is_stmt 1
        vmovsd    %xmm2, (%rax,%rsi,8)                          #298.4
..LN3959:
	.loc    1  960  is_stmt 1
        xorl      %eax, %eax                                    #960.3
..LN3960:
        movq      %r13, 3184(%rsp)                              #960.3
..LN3961:
        movq      %rax, %r13                                    #960.3
..LN3962:
        movq      %r14, 3176(%rsp)                              #960.3
..LN3963:
        movq      %rdx, %r14                                    #960.3
..LN3964:
                                # LOE rbx r13 r14 r15 r12d
..B10.94:                       # Preds ..B10.93 ..B10.98       # Infreq
..L392:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN3965:
	.loc    1  961  is_stmt 1
        movl      %r13d, %eax                                   #961.22
..LN3966:
        incl      %eax                                          #961.17
..LN3967:
        cltd                                                    #961.22
..LN3968:
        idivl     %r12d                                         #961.22
..LN3969:
	.loc    1  299  is_stmt 1
        vmovsd    1584(%rsp,%r13,8), %xmm3                      #299.37
..LN3970:
	.loc    1  970  is_stmt 1
        vxorpd    %xmm5, %xmm5, %xmm5                           #970.20
..LN3971:
	.loc    1  961  is_stmt 1
        movslq    %edx, %rdx                                    #961.22
..LN3972:
	.loc    1  299  is_stmt 1
        vmovsd    1984(%rsp,%r13,8), %xmm1                      #299.44
..LN3973:
        vmovsd    %xmm3, 3408(%rsp)                             #299.37
..LN3974:
        vmovsd    %xmm1, 3424(%rsp)                             #299.44
..LN3975:
        vmovsd    1584(%rsp,%rdx,8), %xmm2                      #299.37
..LN3976:
        vmovsd    1984(%rsp,%rdx,8), %xmm0                      #299.44
..LN3977:
	.loc    1  968  is_stmt 1
        vsubsd    %xmm3, %xmm2, %xmm4                           #968.21
..LN3978:
	.loc    1  299  is_stmt 1
        vmovsd    %xmm2, 3416(%rsp)                             #299.37
..LN3979:
        vmovsd    %xmm0, 3432(%rsp)                             #299.44
..LN3980:
	.loc    1  968  is_stmt 1
        vmovsd    %xmm4, 3440(%rsp)                             #968.21
..LN3981:
	.loc    1  970  is_stmt 1
        vucomisd  %xmm5, %xmm4                                  #970.20
..LN3982:
        jp        ..B10.95      # Prob 0%                       #970.20
..LN3983:
        je        ..B10.98      # Prob 16%                      #970.20
..LN3984:
                                # LOE rbx r13 r14 r15 r12d xmm0 ymm0 zmm0
..B10.95:                       # Preds ..B10.94                # Infreq
..LN3985:
	.loc    1  972  is_stmt 1
        call      __libm_sse2_sincos                            #972.5
..LN3986:
                                # LOE rbx r13 r14 r15 r12d xmm0 xmm1
..B10.172:                      # Preds ..B10.95                # Infreq
..LN3987:
        vfmadd213sd 3432(%rsp), %xmm0, %xmm1                    #972.5
..LN3988:
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm1, %xmm2      #972.35
..LN3989:
        vmovsd    %xmm2, 3344(%rsp)                             #972.35
..LN3990:
	.loc    1  973  is_stmt 1
        vmovsd    3424(%rsp), %xmm0                             #973.5
..LN3991:
        call      __libm_sse2_sincos                            #973.5
..LN3992:
                                # LOE rbx r13 r14 r15 r12d xmm0 xmm1
..B10.171:                      # Preds ..B10.172               # Infreq
..LN3993:
	.loc    1  977  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm10            #977.22
..LN3994:
        vmovsd    3440(%rsp), %xmm6                             #977.22
..LN3995:
        vcomisd   %xmm10, %xmm6                                 #977.22
..LN3996:
	.loc    1  973  is_stmt 1
        vfmadd213sd 3424(%rsp), %xmm0, %xmm1                    #973.5
..LN3997:
	.loc    1  977  is_stmt 1
        vmovsd    .L_2il0floatpacket.4(%rip), %xmm13            #977.36
..LN3998:
	.loc    1  978  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm12            #978.22
..LN3999:
	.loc    1  977  is_stmt 1
        vsubsd    %xmm13, %xmm6, %xmm7                          #977.36
..LN4000:
	.loc    1  973  is_stmt 1
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm1, %xmm2      #973.35
..LN4001:
	.loc    1  977  is_stmt 1
        ja        ..L393        # Prob 50%                      #977.22
..LN4002:
        vmovaps   %xmm6, %xmm7                                  #977.22
..L393:                                                         #
..LN4003:
	.loc    1  978  is_stmt 1
        vcomisd   %xmm7, %xmm12                                 #978.22
..LN4004:
	.loc    1  979  is_stmt 1
        vmovsd    3472(%rsp), %xmm5                             #979.20
..LN4005:
        vmovsd    3416(%rsp), %xmm4                             #979.20
..LN4006:
	.loc    1  982  is_stmt 1
        vmovsd    3408(%rsp), %xmm3                             #982.19
..LN4007:
	.loc    1  979  is_stmt 1
        vsubsd    %xmm5, %xmm4, %xmm8                           #979.20
..LN4008:
	.loc    1  978  is_stmt 1
        vaddsd    %xmm13, %xmm7, %xmm4                          #978.36
..LN4009:
	.loc    1  982  is_stmt 1
        vsubsd    %xmm5, %xmm3, %xmm11                          #982.19
..LN4010:
	.loc    1  980  is_stmt 1
        vsubsd    %xmm13, %xmm8, %xmm9                          #980.23
..LN4011:
	.loc    1  983  is_stmt 1
        vsubsd    %xmm13, %xmm11, %xmm14                        #983.23
..LN4012:
	.loc    1  978  is_stmt 1
        ja        ..L394        # Prob 50%                      #978.22
..LN4013:
        vmovaps   %xmm7, %xmm4                                  #978.22
..L394:                                                         #
..LN4014:
	.loc    1  980  is_stmt 1
        vcomisd   %xmm10, %xmm8                                 #980.23
..LN4015:
        ja        ..L395        # Prob 50%                      #980.23
..LN4016:
        vmovaps   %xmm8, %xmm9                                  #980.23
..L395:                                                         #
..LN4017:
	.loc    1  981  is_stmt 1
        vcomisd   %xmm9, %xmm12                                 #981.23
..LN4018:
        vaddsd    %xmm13, %xmm9, %xmm1                          #981.23
..LN4019:
        ja        ..L396        # Prob 50%                      #981.23
..LN4020:
        vmovaps   %xmm9, %xmm1                                  #981.23
..L396:                                                         #
..LN4021:
	.loc    1  983  is_stmt 1
        vcomisd   %xmm10, %xmm11                                #983.23
..LN4022:
        ja        ..L397        # Prob 50%                      #983.23
..LN4023:
        vmovaps   %xmm11, %xmm14                                #983.23
..L397:                                                         #
..LN4024:
	.loc    1  984  is_stmt 1
        vcomisd   %xmm14, %xmm12                                #984.23
..LN4025:
        vaddsd    %xmm13, %xmm14, %xmm8                         #984.23
..LN4026:
        ja        ..L398        # Prob 50%                      #984.23
..LN4027:
        vmovaps   %xmm14, %xmm8                                 #984.23
..L398:                                                         #
..LN4028:
	.loc    1  986  is_stmt 1
        vsubsd    %xmm1, %xmm8, %xmm15                          #986.19
..LN4029:
        vcvttsd2si %xmm15, %edi                                 #986.19
..LN4030:
        movl      %edi, %esi                                    #986.8
..LN4031:
        sarl      $31, %esi                                     #986.8
..LN4032:
        xorl      %esi, %edi                                    #986.8
..LN4033:
        subl      %esi, %edi                                    #986.8
..LN4034:
        cmpl      $3, %edi                                      #986.28
..LN4035:
        jg        ..B10.97      # Prob 50%                      #986.28
..LN4036:
                                # LOE rbx r13 r14 r15 r12d xmm1 xmm2 xmm4 xmm8
..B10.96:                       # Preds ..B10.171               # Infreq
..LN4037:
	.loc    1  987  is_stmt 1
        vmulsd    3344(%rsp), %xmm1, %xmm0                      #987.7
..LN4038:
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm4, %xmm1      #987.7
..LN4039:
        vfmadd213sd %xmm0, %xmm8, %xmm2                         #987.7
..LN4040:
        vmovsd    3256(%rsp), %xmm3                             #987.7
..LN4041:
        vfnmadd231sd %xmm2, %xmm1, %xmm3                        #987.7
..LN4042:
        vmovsd    %xmm3, 3256(%rsp)                             #987.7
..LN4043:
        jmp       ..B10.98      # Prob 100%                     #987.7
..LN4044:
                                # LOE rbx r13 r14 r15 r12d
..B10.97:                       # Preds ..B10.171               # Infreq
..LN4045:
	.loc    1  994  is_stmt 1
        vcvttsd2si %xmm4, %edi                                  #994.43
..LN4046:
	.loc    1  996  is_stmt 1
        vaddsd    %xmm8, %xmm1, %xmm7                           #996.19
..LN4047:
	.loc    1  993  is_stmt 1
        vxorpd    %xmm5, %xmm5, %xmm5                           #993.2
..LN4048:
	.loc    1  994  is_stmt 1
        movl      %edi, %esi                                    #994.39
..LN4049:
	.loc    1  993  is_stmt 1
        vcomisd   %xmm5, %xmm1                                  #993.2
..LN4050:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm6             #993.2
..LN4051:
	.loc    1  994  is_stmt 1
        vxorpd    %xmm4, %xmm4, %xmm4                           #994.39
..LN4052:
	.loc    1  993  is_stmt 1
        ja        ..L399        # Prob 50%                      #993.2
..LN4053:
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm6             #993.2
..L399:                                                         #
..LN4054:
	.loc    1  995  is_stmt 1
        vmovsd    3344(%rsp), %xmm0                             #995.34
..LN4055:
        vsubsd    %xmm6, %xmm1, %xmm11                          #995.34
..LN4056:
        vmulsd    %xmm1, %xmm0, %xmm1                           #995.34
..LN4057:
        vaddsd    %xmm6, %xmm8, %xmm9                           #995.61
..LN4058:
        vmulsd    %xmm8, %xmm2, %xmm8                           #995.61
..LN4059:
	.loc    1  994  is_stmt 1
        vsubsd    %xmm0, %xmm2, %xmm2                           #994.23
..LN4060:
	.loc    1  996  is_stmt 1
        vmulsd    %xmm6, %xmm7, %xmm3                           #996.19
..LN4061:
	.loc    1  995  is_stmt 1
        vmulsd    %xmm11, %xmm2, %xmm12                         #995.7
..LN4062:
        vmulsd    %xmm9, %xmm8, %xmm10                          #995.66
..LN4063:
	.loc    1  994  is_stmt 1
        sarl      $31, %esi                                     #994.39
..LN4064:
        xorl      %esi, %edi                                    #994.39
..LN4065:
        subl      %esi, %edi                                    #994.39
..LN4066:
        vcvtsi2sd %edi, %xmm4, %xmm4                            #994.39
..LN4067:
	.loc    1  995  is_stmt 1
        vfnmadd213sd %xmm10, %xmm11, %xmm1                      #995.7
..LN4068:
        vxorpd    .L_2il0floatpacket.8(%rip), %xmm12, %xmm13    #995.7
..LN4069:
	.loc    1  994  is_stmt 1
        vdivsd    %xmm4, %xmm13, %xmm14                         #994.39
..LN4070:
        vaddsd    %xmm14, %xmm0, %xmm15                         #994.39
..LN4071:
	.loc    1  995  is_stmt 1
        vmovsd    3256(%rsp), %xmm0                             #995.7
..LN4072:
        vfnmadd213sd %xmm1, %xmm15, %xmm3                       #995.7
..LN4073:
        vfmadd231sd .L_2il0floatpacket.1(%rip), %xmm3, %xmm0    #995.7
..LN4074:
        vmovsd    %xmm0, 3256(%rsp)                             #995.7
..LN4075:
                                # LOE rbx r13 r14 r15 r12d
..B10.98:                       # Preds ..B10.96 ..B10.97 ..B10.94 # Infreq
..LN4076:
	.loc    1  960  is_stmt 1
        incq      %r13                                          #960.3
..LN4077:
        cmpq      %r14, %r13                                    #960.3
..LN4078:
        jb        ..B10.94      # Prob 82%                      #960.3
..LN4079:
                                # LOE rbx r13 r14 r15 r12d
..B10.99:                       # Preds ..B10.98                # Infreq
..LN4080:
        vmovsd    3256(%rsp), %xmm0                             #
..LN4081:
	.loc    1  294  is_stmt 1
        vmovd     %r12d, %xmm1                                  #294.22
..LN4082:
	.loc    1  1000  is_stmt 1
        vmulsd    .L_2il0floatpacket.5(%rip), %xmm0, %xmm0      #1000.25
..LN4083:
	.loc    1  928  is_stmt 1
        lea       63(%r12), %r8d                                #928.3
..LN4084:
	.loc    1  299  is_stmt 1
        movq      80(%rbp), %rax                                #299.4
..LN4085:
	.loc    1  925  is_stmt 1
        vxorpd    %xmm2, %xmm2, %xmm2                           #925.17
..LN4086:
	.loc    1  299  is_stmt 1
        movq      3160(%rsp), %rsi                              #299.4
..LN4087:
	.loc    1  929  is_stmt 1
        movl      %r12d, %ecx                                   #929.22
..LN4088:
        movq      3184(%rsp), %r13                              #
..LN4089:
	.loc    1  299  is_stmt 1
        vmovsd    %xmm0, (%rax,%rsi,8)                          #299.4
..LN4090:
	.loc    1  928  is_stmt 1
        xorl      %eax, %eax                                    #928.3
..LN4091:
	.loc    1  294  is_stmt 1
        vpbroadcastd %xmm1, %ymm0                               #294.22
..LN4092:
	.loc    1  928  is_stmt 1
        shrl      $6, %r8d                                      #928.3
..LN4093:
	.loc    1  929  is_stmt 1
        xorl      %esi, %esi                                    #929.22
..LN4094:
        vmovdqu   %ymm0, 2688(%rsp)                             #929.22
..LN4095:
        movl      %eax, %r12d                                   #929.22
..LN4096:
        vmovsd    %xmm2, 3248(%rsp)                             #929.22
..LN4097:
        movq      %r15, 3200(%rsp)                              #929.22
..LN4098:
        movl      %eax, %r15d                                   #929.22
..LN4099:
        movq      %rbx, 3192(%rsp)                              #929.22
..LN4100:
                                # LOE ecx esi r8d r12d r15d
..B10.100:                      # Preds ..B10.99 ..B10.128      # Infreq
..L400:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # %s was not vectorized: inner loop was already vectorized
..LN4101:
	.loc    1  928  is_stmt 1
        lea       64(%r15), %r14d                               #928.3
..LN4102:
        cmpl      %r14d, %ecx                                   #928.3
..LN4103:
        cmovl     %ecx, %r14d                                   #928.3
..LN4104:
        movslq    %r14d, %rbx                                   #928.3
..LN4105:
        addl      %esi, %r14d                                   #928.3
..LN4106:
        cmpl      $16, %r14d                                    #928.3
..LN4107:
        jl        ..B10.139     # Prob 10%                      #928.3
..LN4108:
                                # LOE rbx ecx esi r8d r12d r14d r15d
..B10.101:                      # Preds ..B10.100               # Infreq
..LN4109:
        movl      %r14d, %eax                                   #928.3
..LN4110:
        xorl      %r10d, %r10d                                  #928.3
..LN4111:
        andl      $-16, %eax                                    #928.3
..LN4112:
	.loc    1  934  is_stmt 1
        movslq    %r15d, %r9                                    #934.12
..LN4113:
	.loc    1  928  is_stmt 1
        movslq    %eax, %rdi                                    #928.3
..LN4114:
        .align    16,0x90
..LN4115:
                                # LOE rbx rdi r9 r10 eax ecx esi r8d r12d r14d r15d
..B10.102:                      # Preds ..B10.102 ..B10.101     # Infreq
..L401:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 4
                # LOOP WAS STRIPMINED BY 64
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 3.958984
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.042969
                # MAIN VECTOR TYPE: 64-bits floating point
..LN4116:
	.loc    1  300  is_stmt 1
        vmovupd   1984(%rsp,%r9,8), %ymm0                       #300.45
..LN4117:
        vmovupd   2016(%rsp,%r9,8), %ymm1                       #300.45
..LN4118:
        vmovupd   2048(%rsp,%r9,8), %ymm2                       #300.45
..LN4119:
        vmovupd   2080(%rsp,%r9,8), %ymm3                       #300.45
..LN4120:
	.loc    1  934  is_stmt 1
        vmovupd   %ymm0, 672(%rsp,%r10,8)                       #934.5
..LN4121:
        vmovupd   %ymm1, 704(%rsp,%r10,8)                       #934.5
..LN4122:
        vmovupd   %ymm2, 736(%rsp,%r10,8)                       #934.5
..LN4123:
        vmovupd   %ymm3, 768(%rsp,%r10,8)                       #934.5
..LN4124:
	.loc    1  928  is_stmt 1
        addq      $16, %r10                                     #928.3
..LN4125:
        addq      $16, %r9                                      #928.3
..LN4126:
        cmpq      %rdi, %r10                                    #928.3
..LN4127:
        jb        ..B10.102     # Prob 82%                      #928.3
..LN4128:
                                # LOE rbx rdi r9 r10 eax ecx esi r8d r12d r14d r15d
..B10.103:                      # Preds ..B10.102               # Infreq
..LN4129:
        lea       1(%rax), %edi                                 #928.3
..LN4130:
        cmpl      %edi, %r14d                                   #928.3
..LN4131:
        jb        ..B10.113     # Prob 50%                      #928.3
..LN4132:
                                # LOE rbx eax ecx esi r8d r12d r14d r15d
..B10.104:                      # Preds ..B10.103 ..B10.139     # Infreq
..LN4133:
        movslq    %eax, %r10                                    #928.3
..LN4134:
        movslq    %r14d, %rdx                                   #928.3
..LN4135:
        subq      %r10, %rdx                                    #928.3
..LN4136:
        cmpq      $4, %rdx                                      #928.3
..LN4137:
        jl        ..B10.133     # Prob 10%                      #928.3
..LN4138:
                                # LOE rdx rbx r10 eax ecx esi r8d r12d r14d r15d
..B10.105:                      # Preds ..B10.104               # Infreq
..LN4139:
	.loc    1  934  is_stmt 1
        movslq    %r15d, %r9                                    #934.12
..LN4140:
	.loc    1  928  is_stmt 1
        movl      %edx, %edi                                    #928.3
..LN4141:
	.loc    1  934  is_stmt 1
        movslq    %eax, %rax                                    #934.12
..LN4142:
	.loc    1  928  is_stmt 1
        andl      $-4, %edi                                     #928.3
..LN4143:
	.loc    1  934  is_stmt 1
        addq      %rax, %r9                                     #934.12
..LN4144:
	.loc    1  928  is_stmt 1
        xorl      %r11d, %r11d                                  #928.3
..LN4145:
        movslq    %edi, %rdi                                    #928.3
..LN4146:
        lea       672(%rsp,%r10,8), %r13                        #
..LN4147:
	.loc    1  300  is_stmt 1
        lea       1984(%rsp,%r9,8), %r9                         #300.45
..LN4148:
                                # LOE rdx rbx rdi r9 r10 r11 r13 eax ecx esi r8d r12d r14d r15d
..B10.106:                      # Preds ..B10.106 ..B10.105     # Infreq
..L402:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS STRIPMINED BY 64
                # LOOP WAS VECTORIZED
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 1.915039
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 1.875000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN4149:
        vmovupd   (%r9,%r11,8), %ymm0                           #300.45
..LN4150:
	.loc    1  934  is_stmt 1
        vmovupd   %ymm0, (%r13,%r11,8)                          #934.5
..LN4151:
	.loc    1  928  is_stmt 1
        addq      $4, %r11                                      #928.3
..LN4152:
        cmpq      %rdi, %r11                                    #928.3
..LN4153:
        jb        ..B10.106     # Prob 82%                      #928.3
..LN4154:
                                # LOE rdx rbx rdi r9 r10 r11 r13 eax ecx esi r8d r12d r14d r15d
..B10.108:                      # Preds ..B10.106 ..B10.133     # Infreq
..LN4155:
        cmpq      %rdx, %rdi                                    #928.3
..LN4156:
        jae       ..B10.112     # Prob 10%                      #928.3
..LN4157:
                                # LOE rdx rbx rdi r10 eax ecx esi r8d r12d r14d r15d
..B10.109:                      # Preds ..B10.108               # Infreq
..LN4158:
	.loc    1  934  is_stmt 1
        movslq    %eax, %rax                                    #934.12
..LN4159:
        lea       672(%rsp,%r10,8), %r9                         #
..LN4160:
        movslq    %r15d, %r10                                   #934.12
..LN4161:
        addq      %rax, %r10                                    #934.12
..LN4162:
	.loc    1  300  is_stmt 1
        lea       1984(%rsp,%r10,8), %r10                       #300.45
..LN4163:
                                # LOE rdx rbx rdi r9 r10 ecx esi r8d r12d r14d r15d
..B10.110:                      # Preds ..B10.110 ..B10.109     # Infreq
..L403:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS STRIPMINED BY 64
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 1.915039
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 1.875000
..LN4164:
        movq      (%r10,%rdi,8), %r11                           #300.45
..LN4165:
	.loc    1  934  is_stmt 1
        movq      %r11, (%r9,%rdi,8)                            #934.5
..LN4166:
	.loc    1  928  is_stmt 1
        incq      %rdi                                          #928.3
..LN4167:
        cmpq      %rdx, %rdi                                    #928.3
..LN4168:
        jb        ..B10.110     # Prob 82%                      #928.3
..LN4169:
                                # LOE rdx rbx rdi r9 r10 ecx esi r8d r12d r14d r15d
..B10.112:                      # Preds ..B10.110 ..B10.139 ..B10.108 # Infreq
..LN4170:
        cmpl      $8, %r14d                                     #928.3
..LN4171:
        jl        ..B10.142     # Prob 10%                      #928.3
..LN4172:
                                # LOE rbx ecx esi r8d r12d r14d r15d
..B10.113:                      # Preds ..B10.103 ..B10.112     # Infreq
..LN4173:
        movl      %r14d, %r13d                                  #928.3
..LN4174:
	.loc    1  929  is_stmt 1
        lea       1(%r15), %edi                                 #929.17
..LN4175:
	.loc    1  928  is_stmt 1
        andl      $-8, %r13d                                    #928.3
..LN4176:
        movslq    %r13d, %r13                                   #928.3
..LN4177:
        movl      %r8d, 3136(%rsp)                              #928.3
..LN4178:
	.loc    1  929  is_stmt 1
        vmovd     %edi, %xmm0                                   #929.17
..LN4179:
	.loc    1  928  is_stmt 1
        xorl      %edi, %edi                                    #928.3
..LN4180:
	.loc    1  929  is_stmt 1
        vpbroadcastd %xmm0, %ymm1                               #929.17
..LN4181:
        vpaddd    .L_2il0floatpacket.7(%rip), %ymm1, %ymm8      #929.17
..LN4182:
	.loc    1  928  is_stmt 1
        vmovdqu   2688(%rsp), %ymm9                             #928.3
..LN4183:
        vmovdqu   2656(%rsp), %ymm10                            #928.3
..LN4184:
        movl      %ecx, 3144(%rsp)                              #928.3
..LN4185:
                                # LOE rbx rdi r13 esi r12d r14d r15d ymm8 ymm9 ymm10
..B10.114:                      # Preds ..B10.173 ..B10.113     # Infreq
..L404:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS STRIPMINED BY 64
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 1.774414
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 8
                # NORMALIZED VECTORIZATION OVERHEAD 0.017578
                # MAIN VECTOR TYPE: 32-bits integer
..LN4186:
	.loc    1  929  is_stmt 1
        vmovdqa   %ymm8, %ymm0                                  #929.22
..LN4187:
        vmovdqa   %ymm9, %ymm1                                  #929.22
..LN4188:
        call      __svml_irem8                                  #929.12
..LN4189:
                                # LOE rbx rdi r13 esi r12d r14d r15d ymm0 ymm8 ymm9 ymm10
..B10.173:                      # Preds ..B10.114               # Infreq
..LN4190:
        vmovdqu   %ymm0, 2400(%rsp,%rdi,4)                      #929.12
..LN4191:
	.loc    1  928  is_stmt 1
        addq      $8, %rdi                                      #928.3
..LN4192:
	.loc    1  929  is_stmt 1
        vpaddd    %ymm10, %ymm8, %ymm8                          #929.17
..LN4193:
	.loc    1  928  is_stmt 1
        cmpq      %r13, %rdi                                    #928.3
..LN4194:
        jb        ..B10.114     # Prob 82%                      #928.3
..LN4195:
                                # LOE rbx rdi r13 esi r12d r14d r15d ymm8 ymm9 ymm10
..B10.115:                      # Preds ..B10.173               # Infreq
..LN4196:
        movl      3136(%rsp), %r8d                              #
..LN4197:
        movl      3144(%rsp), %ecx                              #
..LN4198:
                                # LOE rbx r13 ecx esi r8d r12d r14d r15d
..B10.116:                      # Preds ..B10.115 ..B10.142     # Infreq
..LN4199:
        movl      %r13d, %r9d                                   #928.3
..LN4200:
	.loc    1  929  is_stmt 1
        lea       1(%r15,%r9), %edi                             #929.17
..LN4201:
	.loc    1  928  is_stmt 1
        cmpl      %r14d, %r9d                                   #928.3
..LN4202:
        jae       ..B10.120     # Prob 10%                      #928.3
..LN4203:
                                # LOE rbx r13 ecx esi edi r8d r9d r12d r14d r15d
..B10.118:                      # Preds ..B10.116 ..B10.118     # Infreq
..L405:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS STRIPMINED BY 64
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 1.774414
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 8
                # NORMALIZED VECTORIZATION OVERHEAD 0.017578
..LN4204:
	.loc    1  929  is_stmt 1
        movl      %edi, %eax                                    #929.22
..LN4205:
        cltd                                                    #929.22
..LN4206:
        idivl     %ecx                                          #929.22
..LN4207:
	.loc    1  928  is_stmt 1
        incl      %r9d                                          #928.3
..LN4208:
        incl      %edi                                          #928.3
..LN4209:
	.loc    1  929  is_stmt 1
        movl      %edx, 2400(%rsp,%r13,4)                       #929.22
..LN4210:
	.loc    1  928  is_stmt 1
        incq      %r13                                          #928.3
..LN4211:
        cmpl      %r14d, %r9d                                   #928.3
..LN4212:
        jb        ..B10.118     # Prob 82%                      #928.3
..LN4213:
                                # LOE rbx r13 ecx esi edi r8d r9d r12d r14d r15d
..B10.120:                      # Preds ..B10.118 ..B10.116     # Infreq
..LN4214:
        movslq    %r12d, %r13                                   #928.3
..LN4215:
        xorl      %r14d, %r14d                                  #928.3
..LN4216:
        shlq      $6, %r13                                      #928.3
..LN4217:
        negq      %r13                                          #928.3
..LN4218:
        addq      %rbx, %r13                                    #928.3
..LN4219:
        je        ..B10.128     # Prob 10%                      #928.3
..LN4220:
                                # LOE r13 r14 ecx esi r8d r12d r15d
..B10.121:                      # Preds ..B10.120               # Infreq
..LN4221:
	.loc    1  930  is_stmt 1
        movslq    %r15d, %r15                                   #930.24
..LN4222:
	.loc    1  300  is_stmt 1
        movl      %esi, 3152(%rsp)                              #300.38
..LN4223:
        movl      %r8d, 3136(%rsp)                              #300.38
..LN4224:
        movl      %ecx, 3144(%rsp)                              #300.38
..LN4225:
        lea       1584(%rsp,%r15,8), %rbx                       #300.38
..LN4226:
                                # LOE rbx r13 r14 r12d r15d
..B10.122:                      # Preds ..B10.126 ..B10.121     # Infreq
..L406:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 3
                # LOOP WAS STRIPMINED BY 64
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN4227:
	.loc    1  933  is_stmt 1
        movslq    2400(%rsp,%r14,4), %rcx                       #933.5
..LN4228:
	.loc    1  938  is_stmt 1
        vxorpd    %xmm7, %xmm7, %xmm7                           #938.18
..LN4229:
	.loc    1  937  is_stmt 1
        vmovsd    672(%rsp,%r14,8), %xmm1                       #937.5
..LN4230:
        vmovsd    %xmm1, 3400(%rsp)                             #937.5
..LN4231:
	.loc    1  300  is_stmt 1
        vmovsd    1984(%rsp,%rcx,8), %xmm2                      #300.45
..LN4232:
        vmovsd    1584(%rsp,%rcx,8), %xmm6                      #300.38
..LN4233:
	.loc    1  935  is_stmt 1
        vsubsd    %xmm2, %xmm1, %xmm4                           #935.17
..LN4234:
	.loc    1  937  is_stmt 1
        vaddsd    %xmm1, %xmm2, %xmm0                           #937.19
..LN4235:
	.loc    1  930  is_stmt 1
        vsubsd    (%rbx,%r14,8), %xmm6, %xmm1                   #930.24
..LN4236:
	.loc    1  937  is_stmt 1
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm3             #937.25
..LN4237:
	.loc    1  936  is_stmt 1
        vmulsd    %xmm4, %xmm3, %xmm5                           #936.14
..LN4238:
	.loc    1  938  is_stmt 1
        vucomisd  %xmm7, %xmm1                                  #938.18
..LN4239:
	.loc    1  937  is_stmt 1
        vmulsd    %xmm0, %xmm3, %xmm0                           #937.25
..LN4240:
	.loc    1  300  is_stmt 1
        vmovsd    %xmm2, 3384(%rsp)                             #300.45
..LN4241:
	.loc    1  936  is_stmt 1
        vmovsd    %xmm5, 3392(%rsp)                             #936.14
..LN4242:
	.loc    1  938  is_stmt 1
        jp        ..B10.123     # Prob 0%                       #938.18
..LN4243:
        je        ..B10.126     # Prob 16%                      #938.18
..LN4244:
                                # LOE rbx r13 r14 r12d r15d xmm0 xmm1 xmm5 ymm5 zmm5
..B10.123:                      # Preds ..B10.122               # Infreq
..LN4245:
	.loc    1  939  is_stmt 1
        vcomisd   .L_2il0floatpacket.0(%rip), %xmm1             #939.20
..LN4246:
        vmovsd    .L_2il0floatpacket.4(%rip), %xmm2             #939.30
..LN4247:
        vsubsd    %xmm2, %xmm1, %xmm3                           #939.30
..LN4248:
        ja        ..L407        # Prob 50%                      #939.20
..LN4249:
        vmovaps   %xmm1, %xmm3                                  #939.20
..L407:                                                         #
..LN4250:
	.loc    1  940  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm1             #940.20
..LN4251:
        vaddsd    %xmm2, %xmm3, %xmm4                           #940.30
..LN4252:
        vcomisd   %xmm3, %xmm1                                  #940.20
..LN4253:
	.loc    1  942  is_stmt 1
        vandpd    .L_2il0floatpacket.9(%rip), %xmm5, %xmm7      #942.10
..LN4254:
        vmovsd    .L_2il0floatpacket.6(%rip), %xmm6             #942.21
..LN4255:
	.loc    1  940  is_stmt 1
        ja        ..L408        # Prob 50%                      #940.20
..LN4256:
        vmovaps   %xmm3, %xmm4                                  #940.20
..L408:                                                         #
..LN4257:
        vmovsd    %xmm4, 3336(%rsp)                             #940.20
..LN4258:
	.loc    1  942  is_stmt 1
        vcomisd   %xmm7, %xmm6                                  #942.21
..LN4259:
        jbe       ..B10.125     # Prob 50%                      #942.21
..LN4260:
                                # LOE rbx r13 r14 r12d r15d xmm0 xmm4 xmm5 ymm4 ymm5 zmm4 zmm5
..B10.124:                      # Preds ..B10.123               # Infreq
..LN4261:
	.loc    1  943  is_stmt 1
        vzeroupper                                              #943.23
..LN4262:
        call      __libm_sse2_sincos                            #943.23
..LN4263:
                                # LOE rbx r13 r14 r12d r15d xmm0 xmm1
..B10.175:                      # Preds ..B10.124               # Infreq
..LN4264:
        vmovsd    %xmm0, 3224(%rsp)                             #943.23
..LN4265:
        vmovsd    %xmm1, 3240(%rsp)                             #943.23
..LN4266:
        vmovsd    3384(%rsp), %xmm0                             #943.54
..LN4267:
        call      cos                                           #943.54
..LN4268:
                                # LOE rbx r13 r14 r12d r15d xmm0
..B10.174:                      # Preds ..B10.175               # Infreq
..LN4269:
        vmovsd    3400(%rsp), %xmm2                             #943.7
..LN4270:
        vmovapd   %xmm0, %xmm1                                  #943.54
..LN4271:
        vmovsd    3240(%rsp), %xmm0                             #943.7
..LN4272:
        vfmadd132sd 3224(%rsp), %xmm0, %xmm2                    #943.7
..LN4273:
        vsubsd    %xmm1, %xmm0, %xmm3                           #943.7
..LN4274:
        vmovsd    3248(%rsp), %xmm5                             #943.7
..LN4275:
        vaddsd    %xmm3, %xmm2, %xmm4                           #943.7
..LN4276:
        vfnmadd231sd 3336(%rsp), %xmm4, %xmm5                   #943.7
..LN4277:
        vmovsd    %xmm5, 3248(%rsp)                             #943.7
..LN4278:
        jmp       ..B10.126     # Prob 100%                     #943.7
..LN4279:
                                # LOE rbx r13 r14 r12d r15d
..B10.125:                      # Preds ..B10.123               # Infreq
..LN4280:
	.loc    1  945  is_stmt 1
        vzeroupper                                              #945.40
..LN4281:
        call      __libm_sse2_sincos                            #945.40
..LN4282:
                                # LOE rbx r13 r14 r12d r15d xmm0 xmm1
..B10.178:                      # Preds ..B10.125               # Infreq
..LN4283:
        vmovsd    %xmm0, 3208(%rsp)                             #945.40
..LN4284:
        vmovsd    %xmm1, 3232(%rsp)                             #945.40
..LN4285:
        vmovsd    3392(%rsp), %xmm0                             #945.23
..LN4286:
        call      sin                                           #945.23
..LN4287:
                                # LOE rbx r13 r14 r12d r15d xmm0
..B10.177:                      # Preds ..B10.178               # Infreq
..LN4288:
        vmovsd    %xmm0, 3216(%rsp)                             #945.23
..LN4289:
        vmovsd    3384(%rsp), %xmm0                             #945.72
..LN4290:
        call      cos                                           #945.72
..LN4291:
                                # LOE rbx r13 r14 r12d r15d xmm0
..B10.176:                      # Preds ..B10.177               # Infreq
..LN4292:
        vmovapd   %xmm0, %xmm1                                  #945.72
..LN4293:
        vmovsd    3216(%rsp), %xmm0                             #945.32
..LN4294:
        vdivsd    3392(%rsp), %xmm0, %xmm2                      #945.32
..LN4295:
        vmovsd    3232(%rsp), %xmm3                             #945.7
..LN4296:
        vmovsd    3400(%rsp), %xmm4                             #945.7
..LN4297:
        vfmadd132sd 3208(%rsp), %xmm3, %xmm4                    #945.7
..LN4298:
        vfmsub213sd %xmm1, %xmm2, %xmm3                         #945.7
..LN4299:
        vmovsd    3248(%rsp), %xmm5                             #945.7
..LN4300:
        vfmadd213sd %xmm3, %xmm2, %xmm4                         #945.7
..LN4301:
        vfnmadd231sd 3336(%rsp), %xmm4, %xmm5                   #945.7
..LN4302:
        vmovsd    %xmm5, 3248(%rsp)                             #945.7
..LN4303:
                                # LOE rbx r13 r14 r12d r15d
..B10.126:                      # Preds ..B10.174 ..B10.176 ..B10.122 # Infreq
..LN4304:
	.loc    1  928  is_stmt 1
        incq      %r14                                          #928.3
..LN4305:
        cmpq      %r13, %r14                                    #928.3
..LN4306:
        jb        ..B10.122     # Prob 82%                      #928.3
..LN4307:
                                # LOE rbx r13 r14 r12d r15d
..B10.127:                      # Preds ..B10.126               # Infreq
..LN4308:
        movl      3152(%rsp), %esi                              #
..LN4309:
        movl      3136(%rsp), %r8d                              #
..LN4310:
        movl      3144(%rsp), %ecx                              #
..LN4311:
                                # LOE ecx esi r8d r12d r15d
..B10.128:                      # Preds ..B10.127 ..B10.120     # Infreq
..LN4312:
        incl      %r12d                                         #928.3
..LN4313:
        addl      $64, %r15d                                    #928.3
..LN4314:
        addl      $-64, %esi                                    #928.3
..LN4315:
        cmpl      %r8d, %r12d                                   #928.3
..LN4316:
        jb        ..B10.100     # Prob 82%                      #928.3
..LN4317:
                                # LOE ecx esi r8d r12d r15d
..B10.129:                      # Preds ..B10.128               # Infreq
..LN4318:
        vmovsd    3248(%rsp), %xmm2                             #
..LN4319:
	.loc    1  947  is_stmt 1
        vmulsd    .L_2il0floatpacket.5(%rip), %xmm2, %xmm0      #947.25
..LN4320:
	.loc    1  300  is_stmt 1
        movq      3160(%rsp), %r11                              #300.4
..LN4321:
	.loc    1  301  is_stmt 1
        movq      40(%rbp), %rcx                                #301.4
..LN4322:
	.loc    1  302  is_stmt 1
        movq      48(%rbp), %rdi                                #302.4
..LN4323:
	.loc    1  303  is_stmt 1
        movq      56(%rbp), %r8                                 #303.4
..LN4324:
	.loc    1  300  is_stmt 1
        movq      88(%rbp), %rax                                #300.4
..LN4325:
	.loc    1  304  is_stmt 1
        movq      64(%rbp), %r10                                #304.4
..LN4326:
	.loc    1  301  is_stmt 1
        movq      3360(%rsp), %rdx                              #301.4
..LN4327:
	.loc    1  302  is_stmt 1
        movl      3168(%rsp), %esi                              #302.4
..LN4328:
        movq      3176(%rsp), %r14                              #
..LN4329:
	.loc    1  304  is_stmt 1
        movl      3312(%rsp), %r9d                              #304.4
..LN4330:
	.loc    1  301  is_stmt 1
        movl      %edx, (%rcx,%r11,4)                           #301.4
..LN4331:
	.loc    1  302  is_stmt 1
        movl      %esi, (%rdi,%r11,4)                           #302.4
..LN4332:
	.loc    1  303  is_stmt 1
        movl      %r14d, (%r8,%r11,4)                           #303.4
..LN4333:
	.loc    1  300  is_stmt 1
        vmovsd    %xmm0, (%rax,%r11,8)                          #300.4
..LN4334:
	.loc    1  304  is_stmt 1
        movl      %r9d, (%r10,%r11,4)                           #304.4
..LN4335:
	.loc    1  305  is_stmt 1
        incq      %r11                                          #305.6
..LN4336:
        movq      3200(%rsp), %r15                              #
..LN4337:
        movq      3192(%rsp), %rbx                              #
..LN4338:
        movq      3184(%rsp), %r13                              #
..LN4339:
        movq      %r11, 3160(%rsp)                              #305.6
..LN4340:
	.loc    1  306  is_stmt 1
        cmpq      $10000000, %r11                               #306.16
..LN4341:
        jg        ..B10.138     # Prob 0%                       #306.16
..LN4342:
                                # LOE rbx r13 r14 r15 ebx r13d r14d r15d bl bh r13b r14b r15b xmm2 ymm2 zmm2
..B10.130:                      # Preds ..B10.86 ..B10.82 ..B10.138 ..B10.129 ..B10.92
                                #       ..B10.90                # Infreq
..LN4343:
	.loc    1  274  is_stmt 1
        incq      %r14                                          #274.29
..LN4344:
        cmpq      3488(%rsp), %r14                              #274.29
..LN4345:
        jb        ..B10.79      # Prob 81%                      #274.29
..LN4346:
                                # LOE rbx r13 r14 r15
..B10.131:                      # Preds ..B10.130               # Infreq
..LN4347:
        movq      3328(%rsp), %rdi                              #
..LN4348:
        movq      3320(%rsp), %rdx                              #
..LN4349:
        movl      3312(%rsp), %ecx                              #
..LN4350:
        incl      %ecx                                          #274.5
..LN4351:
        addq      3288(%rsp), %rdx                              #274.5
..LN4352:
        addq      3488(%rsp), %rdi                              #274.5
..LN4353:
        movq      3304(%rsp), %r9                               #
..LN4354:
        movq      3280(%rsp), %rsi                              #
..LN4355:
        movl      3272(%rsp), %eax                              #
..LN4356:
        movq      24(%rbp), %r12                                #
..LN4357:
        movq      16(%rbp), %r8                                 #
..LN4358:
        cmpl      3264(%rsp), %ecx                              #274.5
..LN4359:
        jb        ..B10.77      # Prob 81%                      #274.5
..LN4360:
                                # LOE rdx rsi rdi r8 r9 r12 eax ecx esi r9d sil r9b
..B10.132:                      # Preds ..B10.131               # Infreq
..LN4361:
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm0             #
..LN4362:
        movq      3368(%rsp), %rbx                              #
..LN4363:
        movq      3360(%rsp), %r11                              #
..LN4364:
        movq      8(%rsp), %rax                                 #
..LN4365:
        movl      3264(%rsp), %r14d                             #
..LN4366:
        movq      3128(%rsp), %r10                              #
..LN4367:
        movq      2392(%rsp), %r15                              #
..LN4368:
        movq      3120(%rsp), %r13                              #
..LN4369:
        jmp       ..B10.73      # Prob 100%                     #
..LN4370:
                                # LOE rax rbx rsi r8 r9 r10 r11 r12 r13 r15 r14d xmm0
..B10.133:                      # Preds ..B10.104               # Infreq
..LN4371:
	.loc    1  928  is_stmt 1
        xorl      %edi, %edi                                    #928.3
..LN4372:
        jmp       ..B10.108     # Prob 100%                     #928.3
..LN4373:
                                # LOE rdx rbx rdi r10 eax ecx esi r8d r12d r14d r15d
..B10.134:                      # Preds ..B10.143 ..B10.74      # Infreq
..LN4374:
        movq      3280(%rsp), %rbx                              #
..LN4375:
                                # LOE rbx
..B10.135:                      # Preds ..B10.134 ..B10.68      # Infreq
..LN4376:
	.loc    1  311  is_stmt 1
        vzeroupper                                              #311.3
..LN4377:
        movq      664(%rsp), %rdi                               #311.3
..LN4378:
#       free(void *)
        call      free                                          #311.3
..LN4379:
                                # LOE rbx
..B10.136:                      # Preds ..B10.135               # Infreq
..LN4380:
	.loc    1  312  is_stmt 1
        movq      %rbx, %rdi                                    #312.3
..LN4381:
#       free(void *)
        call      free                                          #312.3
..LN4382:
                                # LOE
..B10.137:                      # Preds ..B10.136               # Infreq
..LN4383:
	.loc    1  314  is_stmt 1
        movq      3160(%rsp), %rax                              #314.10
..LN4384:
	.loc    1  314  epilogue_begin  is_stmt 1
        addq      $3512, %rsp                                   #314.10
	.cfi_restore 3
..LN4385:
        popq      %rbx                                          #314.10
	.cfi_restore 15
..LN4386:
        popq      %r15                                          #314.10
	.cfi_restore 14
..LN4387:
        popq      %r14                                          #314.10
	.cfi_restore 13
..LN4388:
        popq      %r13                                          #314.10
	.cfi_restore 12
..LN4389:
        popq      %r12                                          #314.10
..LN4390:
        movq      %rbp, %rsp                                    #314.10
..LN4391:
        popq      %rbp                                          #314.10
	.cfi_def_cfa 7, 8
	.cfi_restore 6
..LN4392:
        ret                                                     #314.10
	.cfi_def_cfa 6, 16
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_offset 6, -16
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN4393:
                                # LOE
..B10.138:                      # Preds ..B10.129               # Infreq
..LN4394:
	.loc    1  306  is_stmt 1
        movl      $.L_2__STRING.0, %edi                         #306.26
..LN4395:
        vzeroupper                                              #306.26
..___tag_value_create_xgrid_1dx2d_order2.424:
..LN4396:
#       error_handler(const char *)
        call      error_handler                                 #306.26
..___tag_value_create_xgrid_1dx2d_order2.425:
..LN4397:
        jmp       ..B10.130     # Prob 100%                     #306.26
..LN4398:
                                # LOE rbx r13 r14 r15
..B10.139:                      # Preds ..B10.100               # Infreq
..LN4399:
	.loc    1  928  is_stmt 1
        xorl      %eax, %eax                                    #928.3
..LN4400:
        cmpl      $1, %r14d                                     #928.3
..LN4401:
        jae       ..B10.104     # Prob 50%                      #928.3
..LN4402:
        jmp       ..B10.112     # Prob 100%                     #928.3
..LN4403:
                                # LOE rbx eax ecx esi r8d r12d r14d r15d
..B10.140:                      # Preds ..B10.77                # Infreq
..LN4404:
	.loc    1  274  is_stmt 1
        incl      %ecx                                          #274.5
..LN4405:
        addq      3288(%rsp), %rdx                              #274.5
..LN4406:
        addq      3488(%rsp), %rdi                              #274.5
..LN4407:
        cmpl      3264(%rsp), %ecx                              #274.5
..LN4408:
        jb        ..B10.77      # Prob 81%                      #274.5
..LN4409:
                                # LOE rdx rsi rdi r8 r9 r12 eax ecx
..B10.141:                      # Preds ..B10.140               # Infreq
..LN4410:
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm0             #
..LN4411:
        movq      3368(%rsp), %rbx                              #
..LN4412:
        movq      3360(%rsp), %r11                              #
..LN4413:
        movq      8(%rsp), %rax                                 #
..LN4414:
        movl      3264(%rsp), %r14d                             #
..LN4415:
        movq      3128(%rsp), %r10                              #
..LN4416:
        movq      2392(%rsp), %r15                              #
..LN4417:
        movq      3120(%rsp), %r13                              #
..LN4418:
        jmp       ..B10.73      # Prob 100%                     #
..LN4419:
                                # LOE rax rbx rsi r8 r9 r10 r11 r12 r13 r15 r14d xmm0
..B10.142:                      # Preds ..B10.112               # Infreq
..LN4420:
	.loc    1  928  is_stmt 1
        xorl      %r13d, %r13d                                  #928.3
..LN4421:
        jmp       ..B10.116     # Prob 100%                     #928.3
..LN4422:
                                # LOE rbx r13 ecx esi r8d r12d r14d r15d
..B10.143:                      # Preds ..B10.70                # Infreq
..LN4423:
	.loc    1  270  is_stmt 1
        incl      %r14d                                         #270.3
..LN4424:
        addq      %r10, %rsi                                    #270.3
..LN4425:
        incq      %rax                                          #270.3
..LN4426:
        cmpl      %edi, %r14d                                   #270.3
..LN4427:
        jb        ..B10.70      # Prob 81%                      #270.3
..LN4428:
        jmp       ..B10.134     # Prob 100%                     #270.3
..LN4429:
                                # LOE rax rcx rsi r8 r9 r10 r12 r15 edi r13d r14d xmm0
..B10.145:                      # Preds ..B10.59                # Infreq
..LN4430:
	.loc    1  75  is_stmt 1
        incl      %esi                                          #75.18
..LN4431:
        addq      %rax, %rcx                                    #75.18
..LN4432:
        lea       1(%rdx,%r8), %edx                             #75.18
..LN4433:
        cmpl      8(%rsp), %esi                                 #75.14
..LN4434:
        jl        ..B10.59      # Prob 82%                      #75.14
..LN4435:
        jmp       ..B10.65      # Prob 100%                     #75.14
..LN4436:
                                # LOE rax rcx rdi r9 r10 edx esi r8d
..B10.147:                      # Preds ..B10.50                # Infreq
..LN4437:
        incl      %ecx                                          #75.18
..LN4438:
        addq      %rsi, %rdx                                    #75.18
..LN4439:
        lea       1(%rax,%r8), %eax                             #75.18
..LN4440:
        cmpl      344(%rsp), %ecx                               #75.14
..LN4441:
        jl        ..B10.50      # Prob 82%                      #75.14
..LN4442:
        jmp       ..B10.56      # Prob 100%                     #75.14
..LN4443:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B10.149:                      # Preds ..B10.38                # Infreq
..LN4444:
	.loc    1  261  is_stmt 1
        xorl      %r12d, %r12d                                  #261.28
..LN4445:
        jmp       ..B10.42      # Prob 100%                     #261.28
..LN4446:
                                # LOE rdx rcx rdi r8 r9 r10 r12 r13 eax esi r11d r14d
..B10.150:                      # Preds ..B10.25 ..B10.27 ..B10.29 # Infreq
..LN4447:
        xorl      %r14d, %r14d                                  #261.28
..LN4448:
        jmp       ..B10.37      # Prob 100%                     #261.28
..LN4449:
                                # LOE rdx rcx rdi r8 r9 r10 eax esi r11d r14d
..B10.153:                      # Preds ..B10.8 ..B10.11 ..B10.13 # Infreq
..LN4450:
        xorl      %ebx, %ebx                                    #261.28
..LN4451:
        jmp       ..B10.21      # Prob 100%                     #261.28
..LN4452:
                                # LOE rdx rcx rbx rdi r8 r9 r10 eax esi r11d
..B10.155:                      # Preds ..B10.9                 # Infreq
..LN4453:
        movq      16(%rsp), %rbx                                #261.28
..LN4454:
        xorl      %r12d, %r12d                                  #261.28
..LN4455:
        jmp       ..B10.18      # Prob 100%                     #261.28
..LN4456:
        .align    16,0x90
	.cfi_endproc
..LN4457:
                                # LOE rdx rcx rbx rdi r8 r9 r10 r12 eax esi r11d
..LN4458:
# mark_end;
	.type	create_xgrid_1dx2d_order2,@function
	.size	create_xgrid_1dx2d_order2,.-create_xgrid_1dx2d_order2
..LNcreate_xgrid_1dx2d_order2.4459:
.LNcreate_xgrid_1dx2d_order2:
	.data
# -- End  create_xgrid_1dx2d_order2
	.text
.L_2__routine_start_create_xgrid_2dx1d_order1__10:
# -- Begin  create_xgrid_2dx1d_order1_
	.text
# mark_begin;
       .align    16,0x90
	.globl create_xgrid_2dx1d_order1_
# --- create_xgrid_2dx1d_order1_(const int *, const int *, const int *, const int *, const double *, const double *, const double *, const double *, const double *, int *, int *, int *, int *, double *)
create_xgrid_2dx1d_order1_:
# parameter 1(nlon_in): %rdi
# parameter 2(nlat_in): %rsi
# parameter 3(nlon_out): %rdx
# parameter 4(nlat_out): %rcx
# parameter 5(lon_in): %r8
# parameter 6(lat_in): %r9
# parameter 7(lon_out): 16 + %rbp
# parameter 8(lat_out): 24 + %rbp
# parameter 9(mask_in): 32 + %rbp
# parameter 10(i_in): 40 + %rbp
# parameter 11(j_in): 48 + %rbp
# parameter 12(i_out): 56 + %rbp
# parameter 13(j_out): 64 + %rbp
# parameter 14(xgrid_area): 72 + %rbp
..B11.1:                        # Preds ..B11.0
	.cfi_startproc
..___tag_value_create_xgrid_2dx1d_order1_.430:
..L431:
                                                        #329.1
..LN4460:
	.loc    1  329  is_stmt 1
        pushq     %rbp                                          #329.1
	.cfi_def_cfa_offset 16
..LN4461:
        movq      %rsp, %rbp                                    #329.1
	.cfi_def_cfa 6, 16
	.cfi_offset 6, -16
..LN4462:
        andq      $-32, %rsp                                    #329.1
..LN4463:
        pushq     %r12                                          #329.1
..LN4464:
        pushq     %r13                                          #329.1
..LN4465:
        pushq     %r14                                          #329.1
..LN4466:
        pushq     %r15                                          #329.1
..LN4467:
        pushq     %rbx                                          #329.1
..LN4468:
        subq      $2456, %rsp                                   #329.1
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN4469:
        movq      %rsi, %r13                                    #329.1
..LN4470:
        movq      %rdi, 56(%rsp)                                #329.1
..LN4471:
        movq      %rdx, %r14                                    #329.1
..LN4472:
	.loc    1  349  prologue_end  is_stmt 1
        movl      (%rdi), %edi                                  #349.10
..LN4473:
	.loc    1  329  is_stmt 1
        movq      %rcx, %r15                                    #329.1
..LN4474:
	.loc    1  349  is_stmt 1
        movl      %edi, 2352(%rsp)                              #349.10
..LN4475:
	.loc    1  350  is_stmt 1
        movl      (%r13), %eax                                  #350.10
..LN4476:
	.loc    1  357  is_stmt 1
        imull     %eax, %edi                                    #357.23
..LN4477:
        movslq    %edi, %rdi                                    #357.23
..LN4478:
	.loc    1  351  is_stmt 1
        movl      (%r14), %r12d                                 #351.10
..LN4479:
	.loc    1  357  is_stmt 1
        shlq      $3, %rdi                                      #357.23
..LN4480:
	.loc    1  329  is_stmt 1
        movq      %r9, 2328(%rsp)                               #329.1
..LN4481:
        movq      %r8, 2336(%rsp)                               #329.1
..LN4482:
	.loc    1  350  is_stmt 1
        movl      %eax, 2344(%rsp)                              #350.10
..LN4483:
	.loc    1  351  is_stmt 1
        movl      %r12d, 32(%rsp)                               #351.10
..LN4484:
	.loc    1  371  is_stmt 1
        movslq    %r12d, %r12                                   #371.21
..LN4485:
	.loc    1  352  is_stmt 1
        movl      (%r15), %ebx                                  #352.10
..LN4486:
	.loc    1  354  is_stmt 1
        movq      $0, 2304(%rsp)                                #354.3
..LN4487:
	.loc    1  357  is_stmt 1
#       malloc(size_t)
        call      malloc                                        #357.23
..LN4488:
                                # LOE rax r12 r13 r14 r15 ebx
..B11.124:                      # Preds ..B11.1
..LN4489:
        movq      %rax, 2312(%rsp)                              #357.23
..LN4490:
                                # LOE r12 r13 r14 r15 ebx
..B11.2:                        # Preds ..B11.124
..LN4491:
	.loc    1  358  is_stmt 1
        movl      32(%rsp), %edi                                #358.24
..LN4492:
        imull     %ebx, %edi                                    #358.24
..LN4493:
        movslq    %edi, %rdi                                    #358.24
..LN4494:
        shlq      $3, %rdi                                      #358.24
..LN4495:
#       malloc(size_t)
        call      malloc                                        #358.24
..LN4496:
                                # LOE rax r12 r13 r14 r15 ebx
..B11.125:                      # Preds ..B11.2
..LN4497:
        movq      %rax, 2280(%rsp)                              #358.24
..LN4498:
                                # LOE r12 r13 r14 r15 ebx
..B11.3:                        # Preds ..B11.125
..LN4499:
	.loc    1  359  is_stmt 1
        movl      32(%rsp), %eax                                #359.32
..LN4500:
        lea       1(%rbx), %edx                                 #359.40
..LN4501:
        movl      %edx, 64(%rsp)                                #359.40
..LN4502:
        lea       1(%rax), %edi                                 #359.32
..LN4503:
        movl      %edi, 48(%rsp)                                #359.32
..LN4504:
	.loc    1  361  is_stmt 1
        movslq    %edi, %rdi                                    #361.32
..LN4505:
        movq      %rdi, 40(%rsp)                                #361.32
..LN4506:
	.loc    1  359  is_stmt 1
        imull     %edx, %edi                                    #359.40
..LN4507:
        movslq    %edi, %rdi                                    #359.40
..LN4508:
        shlq      $3, %rdi                                      #359.43
..LN4509:
        movq      %rdi, (%rsp)                                  #359.43
..LN4510:
#       malloc(size_t)
        call      malloc                                        #359.20
..LN4511:
                                # LOE rax r12 r13 r14 r15 ebx
..B11.126:                      # Preds ..B11.3
..LN4512:
        movq      %rax, 680(%rsp)                               #359.20
..LN4513:
                                # LOE r12 r13 r14 r15 ebx
..B11.4:                        # Preds ..B11.126
..LN4514:
	.loc    1  360  is_stmt 1
        movq      (%rsp), %rdi                                  #360.20
..LN4515:
#       malloc(size_t)
        call      malloc                                        #360.20
..LN4516:
                                # LOE rax r12 r13 r14 r15 ebx
..B11.127:                      # Preds ..B11.4
..LN4517:
        movq      %rax, 688(%rsp)                               #360.20
..LN4518:
                                # LOE rax r12 r13 r14 r15 eax ebx al ah
..B11.5:                        # Preds ..B11.127
..LN4519:
	.loc    1  361  is_stmt 1
        movq      24(%rbp), %rdi                                #361.32
..LN4520:
        xorl      %r10d, %r10d                                  #361.3
..LN4521:
        movq      %rax, %r8                                     #361.32
..LN4522:
        movq      680(%rsp), %r9                                #361.32
..LN4523:
        testl     %ebx, %ebx                                    #361.17
..LN4524:
        jl        ..B11.48      # Prob 9%                       #361.17
..LN4525:
                                # LOE rdi r8 r9 r12 r13 r14 r15 ebx r8d r9d r10d r8b r9b
..B11.6:                        # Preds ..B11.5
..LN4526:
        movl      %ebx, 2296(%rsp)                              #361.28
..LN4527:
        lea       1(%r12), %r11                                 #361.28
..LN4528:
        movl      %r11d, %esi                                   #361.28
..LN4529:
        movl      %esi, %eax                                    #361.28
..LN4530:
        andl      $-4, %eax                                     #361.28
..LN4531:
        movslq    %eax, %rax                                    #361.28
..LN4532:
        movq      %rax, 16(%rsp)                                #361.28
..LN4533:
        movq      %r12, 2288(%rsp)                              #361.28
..LN4534:
        movq      %r13, 24(%rsp)                                #361.28
..LN4535:
        movq      %r14, 8(%rsp)                                 #361.28
..LN4536:
        movq      %r15, (%rsp)                                  #361.28
..LN4537:
        movq      40(%rsp), %rdx                                #361.28
..LN4538:
        movl      48(%rsp), %eax                                #361.28
..LN4539:
        movl      32(%rsp), %ecx                                #361.28
..LN4540:
                                # LOE rdx rdi r8 r9 r11 eax ecx esi r10d
..B11.7:                        # Preds ..B11.46 ..B11.6
..L441:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN4541:
        testl     %ecx, %ecx                                    #361.42
..LN4542:
        jl        ..B11.46      # Prob 50%                      #361.42
..LN4543:
                                # LOE rdx rdi r8 r9 r11 eax ecx esi r10d
..B11.8:                        # Preds ..B11.7
..LN4544:
        cmpq      $4, %r11                                      #361.28
..LN4545:
        jl        ..B11.118     # Prob 10%                      #361.28
..LN4546:
                                # LOE rdx rdi r8 r9 r11 eax ecx esi r10d
..B11.9:                        # Preds ..B11.8
..LN4547:
        cmpq      $95, %r11                                     #361.28
..LN4548:
        jl        ..B11.120     # Prob 10%                      #361.28
..LN4549:
                                # LOE rdx rdi r8 r9 r11 eax ecx esi r10d
..B11.10:                       # Preds ..B11.9
..LN4550:
        movq      %r9, %rbx                                     #361.28
..LN4551:
        andq      $31, %rbx                                     #361.28
..LN4552:
        testl     %ebx, %ebx                                    #361.28
..LN4553:
        je        ..B11.13      # Prob 50%                      #361.28
..LN4554:
                                # LOE rdx rdi r8 r9 r11 eax ecx ebx esi r10d
..B11.11:                       # Preds ..B11.10
..LN4555:
        testb     $7, %bl                                       #361.28
..LN4556:
        jne       ..B11.118     # Prob 10%                      #361.28
..LN4557:
                                # LOE rdx rdi r8 r9 r11 eax ecx ebx esi r10d
..B11.12:                       # Preds ..B11.11
..LN4558:
        negl      %ebx                                          #361.28
..LN4559:
        addl      $32, %ebx                                     #361.28
..LN4560:
        shrl      $3, %ebx                                      #361.28
..LN4561:
                                # LOE rdx rdi r8 r9 r11 eax ecx ebx esi r10d
..B11.13:                       # Preds ..B11.12 ..B11.10
..LN4562:
        movl      %ebx, %r12d                                   #361.28
..LN4563:
        lea       4(%r12), %r13                                 #361.28
..LN4564:
        cmpq      %r13, %r11                                    #361.28
..LN4565:
        jl        ..B11.118     # Prob 10%                      #361.28
..LN4566:
                                # LOE rdx rdi r8 r9 r11 r12 eax ecx ebx esi r10d
..B11.14:                       # Preds ..B11.13
..LN4567:
        negl      %ebx                                          #361.28
..LN4568:
        xorl      %r13d, %r13d                                  #361.28
..LN4569:
        addl      %esi, %ebx                                    #361.28
..LN4570:
        andl      $3, %ebx                                      #361.28
..LN4571:
        negl      %ebx                                          #361.28
..LN4572:
        addl      %esi, %ebx                                    #361.28
..LN4573:
        movslq    %ebx, %rbx                                    #361.28
..LN4574:
        testq     %r12, %r12                                    #361.28
..LN4575:
        jbe       ..B11.18      # Prob 10%                      #361.28
..LN4576:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 eax ecx esi r10d
..B11.15:                       # Preds ..B11.14
..LN4577:
        movq      16(%rbp), %r15                                #
..LN4578:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 r15 eax ecx esi r10d
..B11.16:                       # Preds ..B11.16 ..B11.15
..L442:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # PEELED LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
..LN4579:
	.loc    1  362  is_stmt 1
        movq      (%r15,%r13,8), %r14                           #362.24
..LN4580:
        movq      %r14, (%r9,%r13,8)                            #362.5
..LN4581:
	.loc    1  361  is_stmt 1
        incq      %r13                                          #361.28
..LN4582:
        cmpq      %r12, %r13                                    #361.28
..LN4583:
        jb        ..B11.16      # Prob 82%                      #361.28
..LN4584:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 r15 eax ecx esi r10d
..B11.18:                       # Preds ..B11.16 ..B11.14 ..B11.120
..LN4585:
        movq      16(%rbp), %r13                                #
..LN4586:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 eax ecx esi r10d
..B11.19:                       # Preds ..B11.19 ..B11.18
..L443:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS VECTORIZED
                # VECTORIZATION HAS UNALIGNED MEMORY REFERENCES
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN4587:
	.loc    1  362  is_stmt 1
        vmovupd   (%r13,%r12,8), %ymm0                          #362.24
..LN4588:
        vmovupd   %ymm0, (%r9,%r12,8)                           #362.5
..LN4589:
	.loc    1  361  is_stmt 1
        addq      $4, %r12                                      #361.28
..LN4590:
        cmpq      %rbx, %r12                                    #361.28
..LN4591:
        jb        ..B11.19      # Prob 82%                      #361.28
..LN4592:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 eax ecx esi r10d
..B11.21:                       # Preds ..B11.19 ..B11.118
..LN4593:
        cmpq      %r11, %rbx                                    #361.28
..LN4594:
        jae       ..B11.25      # Prob 10%                      #361.28
..LN4595:
                                # LOE rdx rbx rdi r8 r9 r11 eax ecx esi r10d
..B11.22:                       # Preds ..B11.21
..LN4596:
        movq      16(%rbp), %r13                                #
..LN4597:
                                # LOE rdx rbx rdi r8 r9 r11 r13 eax ecx esi r10d
..B11.23:                       # Preds ..B11.23 ..B11.22
..L444:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
..LN4598:
	.loc    1  362  is_stmt 1
        movq      (%r13,%rbx,8), %r12                           #362.24
..LN4599:
        movq      %r12, (%r9,%rbx,8)                            #362.5
..LN4600:
	.loc    1  361  is_stmt 1
        incq      %rbx                                          #361.28
..LN4601:
        cmpq      %r11, %rbx                                    #361.28
..LN4602:
        jb        ..B11.23      # Prob 82%                      #361.28
..LN4603:
                                # LOE rdx rbx rdi r8 r9 r11 r13 eax ecx esi r10d
..B11.25:                       # Preds ..B11.23 ..B11.21
..LN4604:
        cmpl      $16, %eax                                     #361.28
..LN4605:
        jl        ..B11.115     # Prob 10%                      #361.28
..LN4606:
                                # LOE rdx rdi r8 r9 r11 eax ecx esi r10d
..B11.26:                       # Preds ..B11.25
..LN4607:
        movq      %r8, %r12                                     #361.28
..LN4608:
        andq      $31, %r12                                     #361.28
..LN4609:
        movl      %r12d, %r12d                                  #361.28
..LN4610:
        testl     %r12d, %r12d                                  #361.28
..LN4611:
        je        ..B11.29      # Prob 50%                      #361.28
..LN4612:
                                # LOE rdx rdi r8 r9 r11 r12 eax ecx esi r10d
..B11.27:                       # Preds ..B11.26
..LN4613:
        testl     $7, %r12d                                     #361.28
..LN4614:
        jne       ..B11.115     # Prob 10%                      #361.28
..LN4615:
                                # LOE rdx rdi r8 r9 r11 r12 eax ecx esi r10d
..B11.28:                       # Preds ..B11.27
..LN4616:
        negl      %r12d                                         #361.28
..LN4617:
        addl      $32, %r12d                                    #361.28
..LN4618:
        shrl      $3, %r12d                                     #361.28
..LN4619:
                                # LOE rdx rdi r8 r9 r11 r12 eax ecx esi r10d
..B11.29:                       # Preds ..B11.28 ..B11.26
..LN4620:
        lea       16(%r12), %ebx                                #361.28
..LN4621:
        cmpl      %ebx, %eax                                    #361.28
..LN4622:
        jl        ..B11.115     # Prob 10%                      #361.28
..LN4623:
                                # LOE rdx rdi r8 r9 r11 r12 eax ecx esi r10d
..B11.30:                       # Preds ..B11.29
..LN4624:
        movl      %eax, %r14d                                   #361.28
..LN4625:
        xorl      %ebx, %ebx                                    #361.28
..LN4626:
        subl      %r12d, %r14d                                  #361.28
..LN4627:
        andl      $15, %r14d                                    #361.28
..LN4628:
        negl      %r14d                                         #361.28
..LN4629:
        addl      %eax, %r14d                                   #361.28
..LN4630:
	.loc    1  363  is_stmt 1
        vmovsd    (%rdi), %xmm0                                 #363.24
..LN4631:
	.loc    1  361  is_stmt 1
        testq     %r12, %r12                                    #361.28
..LN4632:
        jbe       ..B11.34      # Prob 10%                      #361.28
..LN4633:
                                # LOE rdx rbx rdi r8 r9 r11 r12 eax ecx esi r10d r14d xmm0
..B11.32:                       # Preds ..B11.30 ..B11.32
..L445:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 4
                # PEELED LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.648438
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.937500
..LN4634:
	.loc    1  363  is_stmt 1
        vmovsd    %xmm0, (%r8,%rbx,8)                           #363.5
..LN4635:
	.loc    1  361  is_stmt 1
        incq      %rbx                                          #361.28
..LN4636:
        cmpq      %r12, %rbx                                    #361.28
..LN4637:
        jb        ..B11.32      # Prob 82%                      #361.28
..LN4638:
                                # LOE rdx rbx rdi r8 r9 r11 r12 eax ecx esi r10d r14d xmm0
..B11.34:                       # Preds ..B11.32 ..B11.30
..LN4639:
        movslq    %r14d, %rbx                                   #361.28
..LN4640:
        lea       (%r8,%r12,8), %r13                            #361.28
..LN4641:
	.loc    1  363  is_stmt 1
        vbroadcastsd %xmm0, %ymm0                               #363.24
..LN4642:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 eax ecx esi r10d r14d ymm0
..B11.35:                       # Preds ..B11.35 ..B11.34
..L446:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 4
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 8.648438
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.937500
                # MAIN VECTOR TYPE: 64-bits floating point
..LN4643:
	.loc    1  361  is_stmt 1
        addq      $16, %r12                                     #361.28
..LN4644:
	.loc    1  363  is_stmt 1
        vmovupd   %ymm0, (%r13)                                 #363.5
..LN4645:
        vmovupd   %ymm0, 32(%r13)                               #363.5
..LN4646:
        vmovupd   %ymm0, 64(%r13)                               #363.5
..LN4647:
        vmovupd   %ymm0, 96(%r13)                               #363.5
..LN4648:
	.loc    1  361  is_stmt 1
        addq      $128, %r13                                    #361.28
..LN4649:
        cmpq      %rbx, %r12                                    #361.28
..LN4650:
        jb        ..B11.35      # Prob 82%                      #361.28
..LN4651:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 eax ecx esi r10d r14d ymm0
..B11.37:                       # Preds ..B11.35 ..B11.115
..LN4652:
        lea       1(%r14), %ebx                                 #361.28
..LN4653:
        cmpl      %ebx, %eax                                    #361.28
..LN4654:
        jb        ..B11.46      # Prob 50%                      #361.28
..LN4655:
                                # LOE rdx rdi r8 r9 r11 eax ecx esi r10d r14d
..B11.38:                       # Preds ..B11.37
..LN4656:
        movslq    %r14d, %r13                                   #361.28
..LN4657:
        negq      %r13                                          #361.28
..LN4658:
        addq      %rdx, %r13                                    #361.28
..LN4659:
        cmpq      $4, %r13                                      #361.28
..LN4660:
        jl        ..B11.114     # Prob 10%                      #361.28
..LN4661:
                                # LOE rdx rdi r8 r9 r11 r13 eax ecx esi r10d r14d
..B11.39:                       # Preds ..B11.38
..LN4662:
	.loc    1  363  is_stmt 1
        movslq    %r14d, %r14                                   #363.5
..LN4663:
	.loc    1  361  is_stmt 1
        movl      %r13d, %r12d                                  #361.28
..LN4664:
        andl      $-4, %r12d                                    #361.28
..LN4665:
        xorl      %ebx, %ebx                                    #361.28
..LN4666:
        movslq    %r12d, %r12                                   #361.28
..LN4667:
	.loc    1  363  is_stmt 1
        vbroadcastsd (%rdi), %ymm0                              #363.24
..LN4668:
        lea       (%r8,%r14,8), %r15                            #363.5
..LN4669:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 r15 eax ecx esi r10d r14d ymm0
..B11.40:                       # Preds ..B11.40 ..B11.39
..L447:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS VECTORIZED
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION HAS UNALIGNED MEMORY REFERENCES
                # VECTORIZATION SPEEDUP COEFFECIENT 2.542969
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 2.750000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN4670:
        vmovupd   %ymm0, (%r15,%rbx,8)                          #363.5
..LN4671:
	.loc    1  361  is_stmt 1
        addq      $4, %rbx                                      #361.28
..LN4672:
        cmpq      %r12, %rbx                                    #361.28
..LN4673:
        jb        ..B11.40      # Prob 82%                      #361.28
..LN4674:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 r15 eax ecx esi r10d r14d ymm0
..B11.42:                       # Preds ..B11.40 ..B11.114
..LN4675:
        cmpq      %r13, %r12                                    #361.28
..LN4676:
        jae       ..B11.46      # Prob 10%                      #361.28
..LN4677:
                                # LOE rdx rdi r8 r9 r11 r12 r13 eax ecx esi r10d r14d
..B11.43:                       # Preds ..B11.42
..LN4678:
	.loc    1  363  is_stmt 1
        movslq    %r14d, %r14                                   #363.5
..LN4679:
        lea       (%r8,%r14,8), %rbx                            #363.5
..LN4680:
        movq      (%rdi), %r14                                  #363.24
..LN4681:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 r14 eax ecx esi r10d
..B11.44:                       # Preds ..B11.44 ..B11.43
..L448:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 2.542969
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 2.750000
..LN4682:
        movq      %r14, (%rbx,%r12,8)                           #363.5
..LN4683:
	.loc    1  361  is_stmt 1
        incq      %r12                                          #361.28
..LN4684:
        cmpq      %r13, %r12                                    #361.28
..LN4685:
        jb        ..B11.44      # Prob 82%                      #361.28
..LN4686:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 r14 eax ecx esi r10d
..B11.46:                       # Preds ..B11.44 ..B11.7 ..B11.37 ..B11.42
..LN4687:
        incl      %r10d                                         #361.3
..LN4688:
        addq      $8, %rdi                                      #361.3
..LN4689:
        lea       (%r8,%rdx,8), %r8                             #361.3
..LN4690:
        lea       (%r9,%rdx,8), %r9                             #361.3
..LN4691:
        cmpl      64(%rsp), %r10d                               #361.3
..LN4692:
        jb        ..B11.7       # Prob 82%                      #361.3
..LN4693:
                                # LOE rdx rdi r8 r9 r11 eax ecx esi r10d
..B11.47:                       # Preds ..B11.46
..LN4694:
        movl      2296(%rsp), %ebx                              #
..LN4695:
        movq      2288(%rsp), %r12                              #
..LN4696:
        movq      24(%rsp), %r13                                #
..LN4697:
        movq      8(%rsp), %r14                                 #
..LN4698:
        movq      (%rsp), %r15                                  #
..LN4699:
                                # LOE r12 r13 r14 r15 ebx
..B11.48:                       # Preds ..B11.5 ..B11.47
..LN4700:
	.loc    1  71  is_stmt 1
        movq      56(%rsp), %rax                                #71.9
..LN4701:
	.loc    1  75  is_stmt 1
        xorl      %esi, %esi                                    #75.7
..LN4702:
	.loc    1  72  is_stmt 1
        movl      (%r13), %r8d                                  #72.9
..LN4703:
	.loc    1  75  is_stmt 1
        xorl      %ecx, %ecx                                    #75.9
..LN4704:
	.loc    1  71  is_stmt 1
        movl      (%rax), %eax                                  #71.9
..LN4705:
	.loc    1  75  is_stmt 1
        movslq    %eax, %rdi                                    #75.18
..LN4706:
        testl     %r8d, %r8d                                    #75.14
..LN4707:
        jle       ..B11.57      # Prob 10%                      #75.14
..LN4708:
                                # LOE rcx rdi r12 r14 r15 eax ebx esi r8d
..B11.49:                       # Preds ..B11.48
..LN4709:
        movl      %r8d, 24(%rsp)                                #75.9
..LN4710:
        xorl      %edx, %edx                                    #75.9
..LN4711:
        movl      %ebx, 2296(%rsp)                              #75.9
..LN4712:
        movq      %r12, 2288(%rsp)                              #75.9
..LN4713:
        movq      %r14, 8(%rsp)                                 #75.9
..LN4714:
        movq      %r15, (%rsp)                                  #75.9
..LN4715:
        movq      2312(%rsp), %r10                              #75.9
..LN4716:
        movq      2336(%rsp), %r8                               #75.9
..LN4717:
        movq      2328(%rsp), %r9                               #75.9
..LN4718:
                                # LOE rcx rdi r8 r9 r10 eax edx esi
..B11.50:                       # Preds ..B11.55 ..B11.112 ..B11.49
..L449:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN4719:
        xorl      %r12d, %r12d                                  #75.27
..LN4720:
        testl     %eax, %eax                                    #75.36
..LN4721:
        jle       ..B11.112     # Prob 10%                      #75.36
..LN4722:
                                # LOE rcx rdi r8 r9 r10 r12 eax edx esi
..B11.51:                       # Preds ..B11.50
..LN4723:
	.loc    1  85  is_stmt 1
        movq      %rcx, 368(%rsp)                               #85.5
..LN4724:
	.loc    1  78  is_stmt 1
        lea       (%rax,%rdx), %r13d                            #78.25
..LN4725:
        movslq    %r13d, %r13                                   #78.15
..LN4726:
	.loc    1  85  is_stmt 1
        lea       (%r10,%rcx,8), %r11                           #85.5
..LN4727:
	.loc    1  76  is_stmt 1
        movslq    %edx, %rdx                                    #76.15
..LN4728:
	.loc    1  85  is_stmt 1
        movq      %r11, 392(%rsp)                               #85.5
..LN4729:
        movl      %edx, 376(%rsp)                               #85.5
..LN4730:
        movl      %esi, 360(%rsp)                               #85.5
..LN4731:
	.loc    1  78  is_stmt 1
        lea       (%r8,%r13,8), %rbx                            #78.15
..LN4732:
	.loc    1  85  is_stmt 1
        movq      %rdi, 384(%rsp)                               #85.5
..LN4733:
	.loc    1  82  is_stmt 1
        lea       (%r9,%r13,8), %r13                            #82.15
..LN4734:
	.loc    1  85  is_stmt 1
        movl      %eax, 16(%rsp)                                #85.5
..LN4735:
	.loc    1  80  is_stmt 1
        lea       (%r9,%rdx,8), %r14                            #80.15
..LN4736:
	.loc    1  76  is_stmt 1
        lea       (%r8,%rdx,8), %r15                            #76.15
..LN4737:
                                # LOE rbx r12 r13 r14 r15
..B11.52:                       # Preds ..B11.54 ..B11.51
..L450:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN4738:
	.loc    1  84  is_stmt 1
        lea       40(%rsp), %rdi                                #84.12
..LN4739:
	.loc    1  76  is_stmt 1
        movq      (%r15,%r12,8), %rax                           #76.15
..LN4740:
	.loc    1  84  is_stmt 1
        lea       200(%rsp), %rsi                               #84.12
..LN4741:
	.loc    1  83  is_stmt 1
        movq      8(%r13,%r12,8), %rdx                          #83.15
..LN4742:
	.loc    1  76  is_stmt 1
        movq      %rax, (%rdi)                                  #76.5
..LN4743:
	.loc    1  77  is_stmt 1
        movq      8(%r15,%r12,8), %rcx                          #77.15
..LN4744:
	.loc    1  78  is_stmt 1
        movq      16(%rbx,%r12,8), %r8                          #78.15
..LN4745:
	.loc    1  79  is_stmt 1
        movq      8(%rbx,%r12,8), %r9                           #79.15
..LN4746:
	.loc    1  80  is_stmt 1
        movq      (%r14,%r12,8), %r10                           #80.15
..LN4747:
	.loc    1  81  is_stmt 1
        movq      8(%r14,%r12,8), %r11                          #81.15
..LN4748:
	.loc    1  82  is_stmt 1
        movq      16(%r13,%r12,8), %rax                         #82.15
..LN4749:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN4750:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN4751:
	.loc    1  77  is_stmt 1
        movq      %rcx, 8(%rdi)                                 #77.5
..LN4752:
	.loc    1  78  is_stmt 1
        movq      %r8, 16(%rdi)                                 #78.5
..LN4753:
	.loc    1  79  is_stmt 1
        movq      %r9, 24(%rdi)                                 #79.5
..LN4754:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN4755:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN4756:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN4757:
	.loc    1  84  is_stmt 1
        vzeroupper                                              #84.12
..LN4758:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_2dx1d_order1_.451:
..LN4759:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_2dx1d_order1_.452:
..LN4760:
                                # LOE rbx r12 r13 r14 r15 eax
..B11.53:                       # Preds ..B11.52
..LN4761:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN4762:
        lea       40(%rsp), %rdi                                #85.20
..LN4763:
        lea       200(%rsp), %rsi                               #85.20
..___tag_value_create_xgrid_2dx1d_order1_.453:
..LN4764:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_2dx1d_order1_.454:
..LN4765:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B11.54:                       # Preds ..B11.53
..LN4766:
        movq      392(%rsp), %rax                               #85.5
..LN4767:
        vmovsd    %xmm0, (%rax,%r12,8)                          #85.5
..LN4768:
	.loc    1  75  is_stmt 1
        incq      %r12                                          #75.40
..LN4769:
        cmpq      384(%rsp), %r12                               #75.36
..LN4770:
        jl        ..B11.52      # Prob 82%                      #75.36
..LN4771:
                                # LOE rbx r12 r13 r14 r15
..B11.55:                       # Preds ..B11.54
..LN4772:
        movl      360(%rsp), %esi                               #
..LN4773:
        incl      %esi                                          #75.18
..LN4774:
        movq      368(%rsp), %rcx                               #
..LN4775:
        movq      384(%rsp), %rdi                               #
..LN4776:
        addq      %rdi, %rcx                                    #75.18
..LN4777:
        movl      376(%rsp), %edx                               #
..LN4778:
        movl      16(%rsp), %eax                                #
..LN4779:
        lea       1(%rdx,%rax), %edx                            #75.18
..LN4780:
        movq      2312(%rsp), %r10                              #
..LN4781:
        movq      2336(%rsp), %r8                               #
..LN4782:
        movq      2328(%rsp), %r9                               #
..LN4783:
        cmpl      24(%rsp), %esi                                #75.14
..LN4784:
        jl        ..B11.50      # Prob 82%                      #75.14
..LN4785:
                                # LOE rcx rdi r8 r9 r10 eax edx esi
..B11.56:                       # Preds ..B11.112 ..B11.55      # Infreq
..LN4786:
        movl      2296(%rsp), %ebx                              #
..LN4787:
        movq      2288(%rsp), %r12                              #
..LN4788:
        movq      8(%rsp), %r14                                 #
..LN4789:
        movq      (%rsp), %r15                                  #
..LN4790:
                                # LOE r12 r14 r15 ebx
..B11.57:                       # Preds ..B11.56 ..B11.48       # Infreq
..LN4791:
	.loc    1  71  is_stmt 1
        movl      (%r14), %edi                                  #71.9
..LN4792:
	.loc    1  75  is_stmt 1
        xorl      %ecx, %ecx                                    #75.7
..LN4793:
	.loc    1  72  is_stmt 1
        movl      (%r15), %r8d                                  #72.9
..LN4794:
	.loc    1  75  is_stmt 1
        xorl      %edx, %edx                                    #75.9
..LN4795:
        movslq    %edi, %rsi                                    #75.18
..LN4796:
        testl     %r8d, %r8d                                    #75.14
..LN4797:
        jle       ..B11.66      # Prob 10%                      #75.14
..LN4798:
                                # LOE rdx rsi r12 ecx ebx edi r8d
..B11.58:                       # Preds ..B11.57                # Infreq
..LN4799:
        movl      %r8d, 8(%rsp)                                 #75.9
..LN4800:
        xorl      %eax, %eax                                    #75.9
..LN4801:
        movl      %ebx, 2296(%rsp)                              #75.9
..LN4802:
        movq      %r12, 2288(%rsp)                              #75.9
..LN4803:
        movq      688(%rsp), %r10                               #75.9
..LN4804:
        movq      680(%rsp), %r8                                #75.9
..LN4805:
        movq      2280(%rsp), %r9                               #75.9
..LN4806:
                                # LOE rdx rsi r8 r9 r10 eax ecx edi
..B11.59:                       # Preds ..B11.64 ..B11.110 ..B11.58 # Infreq
..L455:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN4807:
        xorl      %r13d, %r13d                                  #75.27
..LN4808:
        testl     %edi, %edi                                    #75.36
..LN4809:
        jle       ..B11.110     # Prob 10%                      #75.36
..LN4810:
                                # LOE rdx rsi r8 r9 r10 r13 eax ecx edi
..B11.60:                       # Preds ..B11.59                # Infreq
..LN4811:
	.loc    1  85  is_stmt 1
        movq      %rdx, 24(%rsp)                                #85.5
..LN4812:
	.loc    1  78  is_stmt 1
        lea       (%rdi,%rax), %ebx                             #78.25
..LN4813:
        movslq    %ebx, %rbx                                    #78.15
..LN4814:
	.loc    1  85  is_stmt 1
        lea       (%r9,%rdx,8), %r11                            #85.5
..LN4815:
	.loc    1  76  is_stmt 1
        movslq    %eax, %rax                                    #76.15
..LN4816:
	.loc    1  85  is_stmt 1
        movq      %r11, 712(%rsp)                               #85.5
..LN4817:
        movl      %eax, 696(%rsp)                               #85.5
..LN4818:
        movl      %ecx, 16(%rsp)                                #85.5
..LN4819:
	.loc    1  78  is_stmt 1
        lea       (%r8,%rbx,8), %r12                            #78.15
..LN4820:
	.loc    1  85  is_stmt 1
        movq      %rsi, 704(%rsp)                               #85.5
..LN4821:
	.loc    1  82  is_stmt 1
        lea       (%r10,%rbx,8), %rbx                           #82.15
..LN4822:
	.loc    1  85  is_stmt 1
        movl      %edi, (%rsp)                                  #85.5
..LN4823:
	.loc    1  80  is_stmt 1
        lea       (%r10,%rax,8), %r14                           #80.15
..LN4824:
	.loc    1  76  is_stmt 1
        lea       (%r8,%rax,8), %r15                            #76.15
..LN4825:
                                # LOE rbx r12 r13 r14 r15
..B11.61:                       # Preds ..B11.63 ..B11.60       # Infreq
..L456:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN4826:
	.loc    1  84  is_stmt 1
        lea       360(%rsp), %rdi                               #84.12
..LN4827:
	.loc    1  76  is_stmt 1
        movq      (%r15,%r13,8), %rax                           #76.15
..LN4828:
	.loc    1  84  is_stmt 1
        lea       520(%rsp), %rsi                               #84.12
..LN4829:
	.loc    1  83  is_stmt 1
        movq      8(%rbx,%r13,8), %rdx                          #83.15
..LN4830:
	.loc    1  76  is_stmt 1
        movq      %rax, -160(%rsi)                              #76.5
..LN4831:
	.loc    1  77  is_stmt 1
        movq      8(%r15,%r13,8), %rcx                          #77.15
..LN4832:
	.loc    1  78  is_stmt 1
        movq      16(%r12,%r13,8), %r8                          #78.15
..LN4833:
	.loc    1  79  is_stmt 1
        movq      8(%r12,%r13,8), %r9                           #79.15
..LN4834:
	.loc    1  80  is_stmt 1
        movq      (%r14,%r13,8), %r10                           #80.15
..LN4835:
	.loc    1  81  is_stmt 1
        movq      8(%r14,%r13,8), %r11                          #81.15
..LN4836:
	.loc    1  82  is_stmt 1
        movq      16(%rbx,%r13,8), %rax                         #82.15
..LN4837:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN4838:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN4839:
	.loc    1  77  is_stmt 1
        movq      %rcx, -152(%rsi)                              #77.5
..LN4840:
	.loc    1  78  is_stmt 1
        movq      %r8, -144(%rsi)                               #78.5
..LN4841:
	.loc    1  79  is_stmt 1
        movq      %r9, -136(%rsi)                               #79.5
..LN4842:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN4843:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN4844:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN4845:
	.loc    1  84  is_stmt 1
        vzeroupper                                              #84.12
..LN4846:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_2dx1d_order1_.457:
..LN4847:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_2dx1d_order1_.458:
..LN4848:
                                # LOE rbx r12 r13 r14 r15 eax
..B11.62:                       # Preds ..B11.61                # Infreq
..LN4849:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN4850:
        lea       360(%rsp), %rdi                               #85.20
..LN4851:
        lea       520(%rsp), %rsi                               #85.20
..___tag_value_create_xgrid_2dx1d_order1_.459:
..LN4852:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_2dx1d_order1_.460:
..LN4853:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B11.63:                       # Preds ..B11.62                # Infreq
..LN4854:
        movq      712(%rsp), %rax                               #85.5
..LN4855:
        vmovsd    %xmm0, (%rax,%r13,8)                          #85.5
..LN4856:
	.loc    1  75  is_stmt 1
        incq      %r13                                          #75.40
..LN4857:
        cmpq      704(%rsp), %r13                               #75.36
..LN4858:
        jl        ..B11.61      # Prob 82%                      #75.36
..LN4859:
                                # LOE rbx r12 r13 r14 r15
..B11.64:                       # Preds ..B11.63                # Infreq
..LN4860:
        movl      16(%rsp), %ecx                                #
..LN4861:
        incl      %ecx                                          #75.18
..LN4862:
        movq      24(%rsp), %rdx                                #
..LN4863:
        movq      704(%rsp), %rsi                               #
..LN4864:
        addq      %rsi, %rdx                                    #75.18
..LN4865:
        movl      696(%rsp), %eax                               #
..LN4866:
        movl      (%rsp), %edi                                  #
..LN4867:
        lea       1(%rax,%rdi), %eax                            #75.18
..LN4868:
        movq      688(%rsp), %r10                               #
..LN4869:
        movq      680(%rsp), %r8                                #
..LN4870:
        movq      2280(%rsp), %r9                               #
..LN4871:
        cmpl      8(%rsp), %ecx                                 #75.14
..LN4872:
        jl        ..B11.59      # Prob 82%                      #75.14
..LN4873:
                                # LOE rdx rsi r8 r9 r10 eax ecx edi
..B11.65:                       # Preds ..B11.110 ..B11.64      # Infreq
..LN4874:
        movl      2296(%rsp), %ebx                              #
..LN4875:
        movq      2288(%rsp), %r12                              #
..LN4876:
                                # LOE r12 ebx
..B11.66:                       # Preds ..B11.65 ..B11.57       # Infreq
..LN4877:
	.loc    1  368  is_stmt 1
        vzeroupper                                              #368.3
..LN4878:
        movq      680(%rsp), %rdi                               #368.3
..LN4879:
#       free(void *)
        call      free                                          #368.3
..LN4880:
                                # LOE r12 ebx
..B11.67:                       # Preds ..B11.66                # Infreq
..LN4881:
	.loc    1  369  is_stmt 1
        movq      688(%rsp), %rdi                               #369.3
..LN4882:
#       free(void *)
        call      free                                          #369.3
..LN4883:
                                # LOE r12 ebx
..B11.68:                       # Preds ..B11.67                # Infreq
..LN4884:
	.loc    1  371  is_stmt 1
        xorl      %edi, %edi                                    #371.10
..LN4885:
        xorl      %r8d, %r8d                                    #371.7
..LN4886:
        xorl      %r9d, %r9d                                    #371.10
..LN4887:
        testl     %ebx, %ebx                                    #371.16
..LN4888:
        jle       ..B11.98      # Prob 10%                      #371.16
..LN4889:
                                # LOE rdi r9 r12 ebx r8d
..B11.69:                       # Preds ..B11.68                # Infreq
..LN4890:
	.loc    1  375  is_stmt 1
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm0             #375.78
..LN4891:
	.loc    1  398  is_stmt 1
        vmovsd    .L_2il0floatpacket.2(%rip), %xmm1             #398.23
..LN4892:
	.loc    1  375  is_stmt 1
        movslq    2352(%rsp), %rax                              #375.29
..LN4893:
        movl      32(%rsp), %edx                                #375.29
..LN4894:
                                # LOE rax rdi r9 r12 edx ebx r8d xmm0 xmm1
..B11.70:                       # Preds ..B11.108 ..B11.69      # Infreq
..L461:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN4895:
	.loc    1  371  is_stmt 1
        xorl      %esi, %esi                                    #371.31
..LN4896:
        testl     %edx, %edx                                    #371.40
..LN4897:
        jle       ..B11.108     # Prob 10%                      #371.40
..LN4898:
                                # LOE rax rsi rdi r9 r12 edx ebx r8d xmm0 xmm1
..B11.71:                       # Preds ..B11.70                # Infreq
..LN4899:
	.loc    1  329  is_stmt 1
        movq      56(%rbp), %r10                                #329.1
..LN4900:
        movq      24(%rbp), %r11                                #329.1
..LN4901:
        movq      16(%rbp), %r13                                #329.1
..LN4902:
        movq      %rax, 2432(%rsp)                              #329.1
..LN4903:
        movq      2280(%rsp), %r14                              #329.1
..LN4904:
        movl      2344(%rsp), %r15d                             #329.1
..LN4905:
                                # LOE rsi rdi r9 r11 r12 r13 r14 ebx r8d r15d xmm0
..B11.72:                       # Preds ..B11.106 ..B11.104 ..B11.94 ..B11.71 # Infreq
..L462:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN4906:
	.loc    1  375  is_stmt 1
        xorl      %edx, %edx                                    #375.9
..LN4907:
        xorl      %ecx, %ecx                                    #375.12
..LN4908:
	.loc    1  373  is_stmt 1
        vmovsd    (%r13,%rsi,8), %xmm5                          #373.14
..LN4909:
	.loc    1  375  is_stmt 1
        xorl      %eax, %eax                                    #375.12
..LN4910:
	.loc    1  374  is_stmt 1
        vmovsd    8(%r13,%rsi,8), %xmm3                         #374.14
..LN4911:
	.loc    1  373  is_stmt 1
        vmovsd    (%r11,%rdi,8), %xmm4                          #373.38
..LN4912:
	.loc    1  374  is_stmt 1
        vmovsd    8(%r11,%rdi,8), %xmm2                         #374.38
..LN4913:
	.loc    1  375  is_stmt 1
        testl     %r15d, %r15d                                  #375.18
..LN4914:
        jle       ..B11.104     # Prob 10%                      #375.18
..LN4915:
                                # LOE rsi rdi r9 r11 r12 r13 r14 eax edx ecx ebx r8d r15d xmm0 xmm2 xmm3 xmm4 xmm5
..B11.73:                       # Preds ..B11.72                # Infreq
..LN4916:
	.loc    1  397  is_stmt 1
        movq      %r9, 8(%rsp)                                  #397.13
..LN4917:
        lea       (%r14,%r9,8), %r10                            #397.13
..LN4918:
        movq      %r10, 24(%rsp)                                #397.13
..LN4919:
	.loc    1  393  is_stmt 1
        vaddsd    %xmm3, %xmm5, %xmm1                           #393.45
..LN4920:
        vmulsd    %xmm1, %xmm0, %xmm1                           #393.53
..LN4921:
	.loc    1  397  is_stmt 1
        movl      %r8d, 16(%rsp)                                #397.13
..LN4922:
        vmovsd    %xmm1, 2392(%rsp)                             #397.13
..LN4923:
        vmovsd    %xmm2, 2408(%rsp)                             #397.13
..LN4924:
        vmovsd    %xmm3, 2400(%rsp)                             #397.13
..LN4925:
        vmovsd    %xmm4, 2424(%rsp)                             #397.13
..LN4926:
        vmovsd    %xmm5, 2384(%rsp)                             #397.13
..LN4927:
        movq      %rsi, 32(%rsp)                                #397.13
..LN4928:
        movq      %rdi, (%rsp)                                  #397.13
..LN4929:
        movl      %ebx, 2296(%rsp)                              #397.13
..LN4930:
        movq      %r12, 2288(%rsp)                              #397.13
..LN4931:
        movq      32(%rbp), %r11                                #397.13
..LN4932:
        movl      2352(%rsp), %r8d                              #397.13
..LN4933:
        movq      2336(%rsp), %r9                               #397.13
..LN4934:
        movq      2328(%rsp), %r10                              #397.13
..LN4935:
                                # LOE r9 r10 r11 eax edx ecx r8d
..B11.74:                       # Preds ..B11.92 ..B11.102 ..B11.73 # Infreq
..L463:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN4936:
	.loc    1  375  is_stmt 1
        xorl      %r14d, %r14d                                  #375.33
..LN4937:
        testl     %r8d, %r8d                                    #375.42
..LN4938:
        jle       ..B11.102     # Prob 10%                      #375.42
..LN4939:
                                # LOE r9 r10 r11 r14 eax edx ecx r8d
..B11.75:                       # Preds ..B11.74                # Infreq
..LN4940:
        movslq    %ecx, %rcx                                    #375.57
..LN4941:
	.loc    1  381  is_stmt 1
        lea       (%r8,%rax), %r12d                             #381.31
..LN4942:
        movslq    %r12d, %r12                                   #381.17
..LN4943:
	.loc    1  397  is_stmt 1
        movq      2312(%rsp), %rdi                              #397.13
..LN4944:
	.loc    1  379  is_stmt 1
        movslq    %eax, %rax                                    #379.17
..LN4945:
        movl      %eax, 2368(%rsp)                              #379.17
..LN4946:
	.loc    1  375  is_stmt 1
        lea       (%r11,%rcx,8), %rbx                           #375.57
..LN4947:
	.loc    1  379  is_stmt 1
        movl      %ecx, 2360(%rsp)                              #379.17
..LN4948:
	.loc    1  397  is_stmt 1
        lea       (%rdi,%rcx,8), %rdi                           #397.13
..LN4949:
	.loc    1  379  is_stmt 1
        movq      %rdi, 2320(%rsp)                              #379.17
..LN4950:
	.loc    1  381  is_stmt 1
        lea       (%r10,%r12,8), %rsi                           #381.17
..LN4951:
	.loc    1  379  is_stmt 1
        movq      %rsi, 2416(%rsp)                              #379.17
..LN4952:
	.loc    1  390  is_stmt 1
        lea       (%r9,%r12,8), %r12                            #390.17
..LN4953:
	.loc    1  379  is_stmt 1
        movl      %edx, 2376(%rsp)                              #379.17
..LN4954:
	.loc    1  388  is_stmt 1
        lea       (%r9,%rax,8), %r13                            #388.17
..LN4955:
	.loc    1  379  is_stmt 1
        lea       (%r10,%rax,8), %r15                           #379.17
..LN4956:
                                # LOE rbx r12 r13 r14 r15
..B11.76:                       # Preds ..B11.91 ..B11.75       # Infreq
..L464:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN4957:
	.loc    1  375  is_stmt 1
        vmovsd    (%rbx,%r14,8), %xmm0                          #375.57
..LN4958:
        vcomisd   .L_2il0floatpacket.1(%rip), %xmm0             #375.78
..LN4959:
        jbe       ..B11.91      # Prob 50%                      #375.78
..LN4960:
                                # LOE rbx r12 r13 r14 r15
..B11.77:                       # Preds ..B11.76                # Infreq
..LN4961:
	.loc    1  381  is_stmt 1
        movq      2416(%rsp), %rax                              #381.17
..LN4962:
	.loc    1  383  is_stmt 1
        vmovsd    2424(%rsp), %xmm0                             #383.23
..LN4963:
	.loc    1  379  is_stmt 1
        vmovsd    (%r15,%r14,8), %xmm4                          #379.17
..LN4964:
	.loc    1  380  is_stmt 1
        vmovsd    8(%r15,%r14,8), %xmm3                         #380.17
..LN4965:
	.loc    1  381  is_stmt 1
        vmovsd    16(%rax,%r14,8), %xmm2                        #381.17
..LN4966:
	.loc    1  382  is_stmt 1
        vmovsd    8(%rax,%r14,8), %xmm1                         #382.17
..LN4967:
	.loc    1  379  is_stmt 1
        vmovsd    %xmm4, 1880(%rsp)                             #379.7
..LN4968:
	.loc    1  380  is_stmt 1
        vmovsd    %xmm3, 1888(%rsp)                             #380.7
..LN4969:
	.loc    1  381  is_stmt 1
        vmovsd    %xmm2, 1896(%rsp)                             #381.7
..LN4970:
	.loc    1  382  is_stmt 1
        vmovsd    %xmm1, 1904(%rsp)                             #382.7
..LN4971:
	.loc    1  383  is_stmt 1
        vcomisd   %xmm4, %xmm0                                  #383.23
..LN4972:
        jb        ..B11.81      # Prob 50%                      #383.23
..LN4973:
                                # LOE rbx r12 r13 r14 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B11.78:                       # Preds ..B11.77                # Infreq
..LN4974:
        vcomisd   %xmm3, %xmm0                                  #383.44
..LN4975:
        jb        ..B11.81      # Prob 50%                      #383.44
..LN4976:
                                # LOE rbx r12 r13 r14 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B11.79:                       # Preds ..B11.78                # Infreq
..LN4977:
	.loc    1  384  is_stmt 1
        vcomisd   %xmm2, %xmm0                                  #384.19
..LN4978:
        jb        ..B11.81      # Prob 50%                      #384.19
..LN4979:
                                # LOE rbx r12 r13 r14 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B11.80:                       # Preds ..B11.79                # Infreq
..LN4980:
        vcomisd   %xmm1, %xmm0                                  #384.40
..LN4981:
        jae       ..B11.91      # Prob 50%                      #384.40
..LN4982:
                                # LOE rbx r12 r13 r14 r15 xmm1 xmm2 xmm3 xmm4
..B11.81:                       # Preds ..B11.80 ..B11.79 ..B11.78 ..B11.77 # Infreq
..LN4983:
	.loc    1  385  is_stmt 1
        vcomisd   2408(%rsp), %xmm4                             #385.23
..LN4984:
        jb        ..B11.85      # Prob 22%                      #385.23
..LN4985:
                                # LOE rbx r12 r13 r14 r15 xmm1 xmm2 xmm3
..B11.82:                       # Preds ..B11.81                # Infreq
..LN4986:
        vcomisd   2408(%rsp), %xmm3                             #385.44
..LN4987:
        jb        ..B11.85      # Prob 22%                      #385.44
..LN4988:
                                # LOE rbx r12 r13 r14 r15 xmm1 xmm2
..B11.83:                       # Preds ..B11.82                # Infreq
..LN4989:
	.loc    1  386  is_stmt 1
        vcomisd   2408(%rsp), %xmm2                             #386.19
..LN4990:
        jb        ..B11.85      # Prob 22%                      #386.19
..LN4991:
                                # LOE rbx r12 r13 r14 r15 xmm1
..B11.84:                       # Preds ..B11.83                # Infreq
..LN4992:
        vcomisd   2408(%rsp), %xmm1                             #386.40
..LN4993:
        jae       ..B11.91      # Prob 78%                      #386.40
..LN4994:
                                # LOE rbx r12 r13 r14 r15
..B11.85:                       # Preds ..B11.84 ..B11.83 ..B11.82 ..B11.81 # Infreq
..LN4995:
	.loc    1  393  is_stmt 1
        lea       680(%rsp), %rdi                               #393.14
..LN4996:
	.loc    1  388  is_stmt 1
        movq      (%r13,%r14,8), %rax                           #388.17
..LN4997:
	.loc    1  393  is_stmt 1
        lea       1880(%rsp), %rsi                              #393.14
..LN4998:
	.loc    1  389  is_stmt 1
        movq      8(%r13,%r14,8), %rcx                          #389.17
..LN4999:
	.loc    1  393  is_stmt 1
        movl      $4, %edx                                      #393.14
..LN5000:
	.loc    1  390  is_stmt 1
        movq      16(%r12,%r14,8), %r8                          #390.17
..LN5001:
	.loc    1  391  is_stmt 1
        movq      8(%r12,%r14,8), %r9                           #391.17
..LN5002:
	.loc    1  393  is_stmt 1
        vmovsd    512(%rsi), %xmm0                              #393.14
..LN5003:
	.loc    1  388  is_stmt 1
        movq      %rax, -1200(%rsi)                             #388.7
..LN5004:
	.loc    1  389  is_stmt 1
        movq      %rcx, -1192(%rsi)                             #389.7
..LN5005:
	.loc    1  390  is_stmt 1
        movq      %r8, -1184(%rsi)                              #390.7
..LN5006:
	.loc    1  391  is_stmt 1
        movq      %r9, -1176(%rsi)                              #391.7
..___tag_value_create_xgrid_2dx1d_order1_.465:
..LN5007:
	.loc    1  393  is_stmt 1
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #393.14
..___tag_value_create_xgrid_2dx1d_order1_.466:
..LN5008:
                                # LOE rbx r12 r13 r14 r15 eax
..B11.86:                       # Preds ..B11.85                # Infreq
..LN5009:
	.loc    1  395  is_stmt 1
        lea       680(%rsp), %rdi                               #395.21
..LN5010:
        vmovsd    1704(%rdi), %xmm0                             #395.21
..LN5011:
        lea       1880(%rsp), %rsi                              #395.21
..LN5012:
        vmovsd    544(%rsi), %xmm1                              #395.21
..LN5013:
        lea       1080(%rsp), %rcx                              #395.21
..LN5014:
        vmovsd    1320(%rcx), %xmm2                             #395.21
..LN5015:
        lea       1480(%rsp), %r8                               #395.21
..LN5016:
        vmovsd    1328(%rcx), %xmm3                             #395.21
..LN5017:
        movl      %eax, %edx                                    #395.21
..___tag_value_create_xgrid_2dx1d_order1_.467:
..LN5018:
#       clip(const double *, const double *, int, double, double, double, double, double *, double *)
        call      clip                                          #395.21
..___tag_value_create_xgrid_2dx1d_order1_.468:
..LN5019:
                                # LOE rbx r12 r13 r14 r15 eax
..B11.87:                       # Preds ..B11.86                # Infreq
..LN5020:
        testl     %eax, %eax                                    #395.96
..LN5021:
        jle       ..B11.91      # Prob 40%                      #395.96
..LN5022:
                                # LOE rbx r12 r13 r14 r15 eax
..B11.88:                       # Preds ..B11.87                # Infreq
..LN5023:
	.loc    1  396  is_stmt 1
        movl      %eax, %edx                                    #396.10
..LN5024:
        lea       1080(%rsp), %rdi                              #396.10
..LN5025:
        lea       1480(%rsp), %rsi                              #396.10
..___tag_value_create_xgrid_2dx1d_order1_.469:
..LN5026:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #396.10
..___tag_value_create_xgrid_2dx1d_order1_.470:
..LN5027:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B11.89:                       # Preds ..B11.88                # Infreq
..LN5028:
	.loc    1  397  is_stmt 1
        movq      2320(%rsp), %rax                              #397.13
..LN5029:
	.loc    1  398  is_stmt 1
        movq      24(%rsp), %rdx                                #398.2
..LN5030:
        movq      32(%rsp), %rcx                                #398.2
..LN5031:
	.loc    1  396  is_stmt 1
        vmulsd    (%rbx,%r14,8), %xmm0, %xmm2                   #396.46
..LN5032:
	.loc    1  397  is_stmt 1
        vmovsd    (%rax,%r14,8), %xmm0                          #397.13
..LN5033:
	.loc    1  398  is_stmt 1
        vminsd    (%rdx,%rcx,8), %xmm0, %xmm0                   #398.2
..LN5034:
        vdivsd    %xmm0, %xmm2, %xmm1                           #398.12
..LN5035:
        vcomisd   .L_2il0floatpacket.2(%rip), %xmm1             #398.23
..LN5036:
        jbe       ..B11.91      # Prob 50%                      #398.23
..LN5037:
                                # LOE rbx r12 r13 r14 r15 xmm2
..B11.90:                       # Preds ..B11.89                # Infreq
..LN5038:
	.loc    1  399  is_stmt 1
        movq      2304(%rsp), %r11                              #399.10
..LN5039:
	.loc    1  400  is_stmt 1
        movq      40(%rbp), %rdx                                #400.4
..LN5040:
	.loc    1  401  is_stmt 1
        movq      48(%rbp), %rsi                                #401.4
..LN5041:
	.loc    1  402  is_stmt 1
        movq      56(%rbp), %r8                                 #402.4
..LN5042:
	.loc    1  399  is_stmt 1
        movq      72(%rbp), %rax                                #399.10
..LN5043:
	.loc    1  403  is_stmt 1
        movq      64(%rbp), %r10                                #403.4
..LN5044:
	.loc    1  401  is_stmt 1
        movl      2376(%rsp), %ecx                              #401.4
..LN5045:
	.loc    1  402  is_stmt 1
        movq      32(%rsp), %rdi                                #402.4
..LN5046:
	.loc    1  403  is_stmt 1
        movl      16(%rsp), %r9d                                #403.4
..LN5047:
	.loc    1  400  is_stmt 1
        movl      %r14d, (%rdx,%r11,4)                          #400.4
..LN5048:
	.loc    1  401  is_stmt 1
        movl      %ecx, (%rsi,%r11,4)                           #401.4
..LN5049:
	.loc    1  402  is_stmt 1
        movl      %edi, (%r8,%r11,4)                            #402.4
..LN5050:
	.loc    1  399  is_stmt 1
        vmovsd    %xmm2, (%rax,%r11,8)                          #399.10
..LN5051:
	.loc    1  403  is_stmt 1
        movl      %r9d, (%r10,%r11,4)                           #403.4
..LN5052:
	.loc    1  404  is_stmt 1
        incq      %r11                                          #404.6
..LN5053:
        movq      %r11, 2304(%rsp)                              #404.6
..LN5054:
	.loc    1  405  is_stmt 1
        cmpq      $10000000, %r11                               #405.16
..LN5055:
        jg        ..B11.101     # Prob 0%                       #405.16
..LN5056:
                                # LOE rbx r12 r13 r14 r15
..B11.91:                       # Preds ..B11.84 ..B11.80 ..B11.101 ..B11.90 ..B11.89
                                #       ..B11.87 ..B11.76       # Infreq
..LN5057:
	.loc    1  375  is_stmt 1
        incq      %r14                                          #375.47
..LN5058:
        cmpq      2432(%rsp), %r14                              #375.42
..LN5059:
        jl        ..B11.76      # Prob 82%                      #375.42
..LN5060:
                                # LOE rbx r12 r13 r14 r15
..B11.92:                       # Preds ..B11.91                # Infreq
..LN5061:
        movl      2376(%rsp), %edx                              #
..LN5062:
        incl      %edx                                          #375.23
..LN5063:
        movl      2360(%rsp), %ecx                              #
..LN5064:
        movl      2352(%rsp), %r8d                              #
..LN5065:
        addl      %r8d, %ecx                                    #375.23
..LN5066:
        movl      2368(%rsp), %eax                              #
..LN5067:
        movq      2336(%rsp), %r9                               #
..LN5068:
        lea       1(%rax,%r8), %eax                             #375.23
..LN5069:
        movq      2328(%rsp), %r10                              #
..LN5070:
        movq      32(%rbp), %r11                                #
..LN5071:
        cmpl      2344(%rsp), %edx                              #375.18
..LN5072:
        jl        ..B11.74      # Prob 82%                      #375.18
..LN5073:
                                # LOE r9 r10 r11 eax edx ecx r8d
..B11.93:                       # Preds ..B11.102 ..B11.92      # Infreq
..LN5074:
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm0             #
..LN5075:
        movq      32(%rsp), %rsi                                #
..LN5076:
        movq      8(%rsp), %r9                                  #
..LN5077:
        movq      (%rsp), %rdi                                  #
..LN5078:
        movl      16(%rsp), %r8d                                #
..LN5079:
        movq      2280(%rsp), %r14                              #
..LN5080:
        movl      2296(%rsp), %ebx                              #
..LN5081:
        movq      2288(%rsp), %r12                              #
..LN5082:
        movl      2344(%rsp), %r15d                             #
..LN5083:
        movq      24(%rbp), %r11                                #
..LN5084:
        movq      16(%rbp), %r13                                #
..LN5085:
                                # LOE rbx rsi rdi r8 r9 r11 r12 r13 r14 r15 ebx esi edi r8d r9d r12d r14d r15d bl bh sil dil r8b r9b r12b r14b r15b xmm0
..B11.94:                       # Preds ..B11.93                # Infreq
..LN5086:
	.loc    1  371  is_stmt 1
        incq      %rsi                                          #371.45
..LN5087:
        cmpq      %r12, %rsi                                    #371.40
..LN5088:
        jl        ..B11.72      # Prob 82%                      #371.40
..LN5089:
                                # LOE rbx rsi rdi r8 r9 r11 r12 r13 r14 r15 ebx edi r8d r9d r12d r14d r15d bl bh dil r8b r9b r12b r14b r15b xmm0
..B11.95:                       # Preds ..B11.94                # Infreq
..LN5090:
        incl      %r8d                                          #371.21
..LN5091:
        addq      %r12, %r9                                     #371.21
..LN5092:
        incq      %rdi                                          #371.21
..LN5093:
        cmpl      %ebx, %r8d                                    #371.16
..LN5094:
        jl        ..B11.106     # Prob 82%                      #371.16
..LN5095:
                                # LOE rbx rdi r9 r11 r12 r13 r14 r15 ebx r8d r12d r14d r15d bl bh r12b r14b r15b xmm0
..B11.98:                       # Preds ..B11.108 ..B11.105 ..B11.95 ..B11.68 # Infreq
..LN5096:
	.loc    1  411  is_stmt 1
        movq      2312(%rsp), %rdi                              #411.3
..LN5097:
#       free(void *)
        call      free                                          #411.3
..LN5098:
                                # LOE
..B11.99:                       # Preds ..B11.98                # Infreq
..LN5099:
	.loc    1  412  is_stmt 1
        movq      2280(%rsp), %rdi                              #412.3
..LN5100:
#       free(void *)
        call      free                                          #412.3
..LN5101:
                                # LOE
..B11.100:                      # Preds ..B11.99                # Infreq
..LN5102:
	.loc    1  334  is_stmt 1
        movq      2304(%rsp), %rax                              #334.10
..LN5103:
	.loc    1  334  epilogue_begin  is_stmt 1
        addq      $2456, %rsp                                   #334.10
	.cfi_restore 3
..LN5104:
        popq      %rbx                                          #334.10
	.cfi_restore 15
..LN5105:
        popq      %r15                                          #334.10
	.cfi_restore 14
..LN5106:
        popq      %r14                                          #334.10
	.cfi_restore 13
..LN5107:
        popq      %r13                                          #334.10
	.cfi_restore 12
..LN5108:
        popq      %r12                                          #334.10
..LN5109:
        movq      %rbp, %rsp                                    #334.10
..LN5110:
        popq      %rbp                                          #334.10
	.cfi_def_cfa 7, 8
	.cfi_restore 6
..LN5111:
        ret                                                     #334.10
	.cfi_def_cfa 6, 16
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_offset 6, -16
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN5112:
                                # LOE
..B11.101:                      # Preds ..B11.90                # Infreq
..LN5113:
	.loc    1  405  is_stmt 1
        movl      $.L_2__STRING.0, %edi                         #405.26
..___tag_value_create_xgrid_2dx1d_order1_.486:
..LN5114:
#       error_handler(const char *)
        call      error_handler                                 #405.26
..___tag_value_create_xgrid_2dx1d_order1_.487:
..LN5115:
        jmp       ..B11.91      # Prob 100%                     #405.26
..LN5116:
                                # LOE rbx r12 r13 r14 r15
..B11.102:                      # Preds ..B11.74                # Infreq
..LN5117:
	.loc    1  375  is_stmt 1
        incl      %edx                                          #375.23
..LN5118:
        addl      %r8d, %ecx                                    #375.23
..LN5119:
        lea       1(%rax,%r8), %eax                             #375.23
..LN5120:
        cmpl      2344(%rsp), %edx                              #375.18
..LN5121:
        jl        ..B11.74      # Prob 82%                      #375.18
..LN5122:
        jmp       ..B11.93      # Prob 100%                     #375.18
..LN5123:
                                # LOE r9 r10 r11 eax edx ecx r8d
..B11.104:                      # Preds ..B11.72                # Infreq
..LN5124:
	.loc    1  371  is_stmt 1
        .byte     15                                            #371.45
..LN5125:
        .byte     31                                            #371.45
..LN5126:
        .byte     132                                           #371.45
..LN5127:
        .byte     0                                             #371.45
..LN5128:
        .byte     0                                             #371.45
..LN5129:
        .byte     0                                             #371.45
..LN5130:
        .byte     0                                             #371.45
..LN5131:
        .byte     0                                             #371.45
..LN5132:
        incq      %rsi                                          #371.45
..LN5133:
        cmpq      %r12, %rsi                                    #371.40
..LN5134:
        jl        ..B11.72      # Prob 82%                      #371.40
..LN5135:
                                # LOE rsi rdi r9 r11 r12 r13 r14 ebx r8d r15d xmm0
..B11.105:                      # Preds ..B11.104               # Infreq
..LN5136:
        incl      %r8d                                          #371.21
..LN5137:
        addq      %r12, %r9                                     #371.21
..LN5138:
        incq      %rdi                                          #371.21
..LN5139:
        cmpl      %ebx, %r8d                                    #371.16
..LN5140:
        jge       ..B11.98      # Prob 18%                      #371.16
..LN5141:
                                # LOE rdi r9 r11 r12 r13 r14 ebx r8d r15d xmm0
..B11.106:                      # Preds ..B11.95 ..B11.105      # Infreq
..LN5142:
        xorl      %esi, %esi                                    #371.31
..LN5143:
        jmp       ..B11.72      # Prob 100%                     #371.31
..LN5144:
                                # LOE rsi rdi r9 r11 r12 r13 r14 ebx r8d r15d xmm0
..B11.108:                      # Preds ..B11.70                # Infreq
..LN5145:
        incl      %r8d                                          #371.21
..LN5146:
        addq      %r12, %r9                                     #371.21
..LN5147:
        incq      %rdi                                          #371.21
..LN5148:
        cmpl      %ebx, %r8d                                    #371.16
..LN5149:
        jl        ..B11.70      # Prob 82%                      #371.16
..LN5150:
        jmp       ..B11.98      # Prob 100%                     #371.16
..LN5151:
                                # LOE rax rdi r9 r12 edx ebx r8d xmm0 xmm1
..B11.110:                      # Preds ..B11.59                # Infreq
..LN5152:
	.loc    1  75  is_stmt 1
        incl      %ecx                                          #75.18
..LN5153:
        addq      %rsi, %rdx                                    #75.18
..LN5154:
        lea       1(%rax,%rdi), %eax                            #75.18
..LN5155:
        cmpl      8(%rsp), %ecx                                 #75.14
..LN5156:
        jl        ..B11.59      # Prob 82%                      #75.14
..LN5157:
        jmp       ..B11.65      # Prob 100%                     #75.14
..LN5158:
                                # LOE rdx rsi r8 r9 r10 eax ecx edi
..B11.112:                      # Preds ..B11.50                # Infreq
..LN5159:
        incl      %esi                                          #75.18
..LN5160:
        addq      %rdi, %rcx                                    #75.18
..LN5161:
        lea       1(%rdx,%rax), %edx                            #75.18
..LN5162:
        cmpl      24(%rsp), %esi                                #75.14
..LN5163:
        jl        ..B11.50      # Prob 82%                      #75.14
..LN5164:
        jmp       ..B11.56      # Prob 100%                     #75.14
..LN5165:
                                # LOE rcx rdi r8 r9 r10 eax edx esi
..B11.114:                      # Preds ..B11.38                # Infreq
..LN5166:
	.loc    1  361  is_stmt 1
        xorl      %r12d, %r12d                                  #361.28
..LN5167:
        jmp       ..B11.42      # Prob 100%                     #361.28
..LN5168:
                                # LOE rdx rdi r8 r9 r11 r12 r13 eax ecx esi r10d r14d
..B11.115:                      # Preds ..B11.25 ..B11.27 ..B11.29 # Infreq
..LN5169:
        xorl      %r14d, %r14d                                  #361.28
..LN5170:
        jmp       ..B11.37      # Prob 100%                     #361.28
..LN5171:
                                # LOE rdx rdi r8 r9 r11 eax ecx esi r10d r14d
..B11.118:                      # Preds ..B11.8 ..B11.11 ..B11.13 # Infreq
..LN5172:
        xorl      %ebx, %ebx                                    #361.28
..LN5173:
        jmp       ..B11.21      # Prob 100%                     #361.28
..LN5174:
                                # LOE rdx rbx rdi r8 r9 r11 eax ecx esi r10d
..B11.120:                      # Preds ..B11.9                 # Infreq
..LN5175:
        movq      16(%rsp), %rbx                                #361.28
..LN5176:
        xorl      %r12d, %r12d                                  #361.28
..LN5177:
        jmp       ..B11.18      # Prob 100%                     #361.28
..LN5178:
        .align    16,0x90
	.cfi_endproc
..LN5179:
                                # LOE rdx rbx rdi r8 r9 r11 r12 eax ecx esi r10d
..LN5180:
# mark_end;
	.type	create_xgrid_2dx1d_order1_,@function
	.size	create_xgrid_2dx1d_order1_,.-create_xgrid_2dx1d_order1_
..LNcreate_xgrid_2dx1d_order1_.5181:
.LNcreate_xgrid_2dx1d_order1_:
	.data
# -- End  create_xgrid_2dx1d_order1_
	.text
.L_2__routine_start_create_xgrid_2dx1d_order1_11:
# -- Begin  create_xgrid_2dx1d_order1
	.text
# mark_begin;
       .align    16,0x90
	.globl create_xgrid_2dx1d_order1
# --- create_xgrid_2dx1d_order1(const int *, const int *, const int *, const int *, const double *, const double *, const double *, const double *, const double *, int *, int *, int *, int *, double *)
create_xgrid_2dx1d_order1:
# parameter 1(nlon_in): %rdi
# parameter 2(nlat_in): %rsi
# parameter 3(nlon_out): %rdx
# parameter 4(nlat_out): %rcx
# parameter 5(lon_in): %r8
# parameter 6(lat_in): %r9
# parameter 7(lon_out): 16 + %rbp
# parameter 8(lat_out): 24 + %rbp
# parameter 9(mask_in): 32 + %rbp
# parameter 10(i_in): 40 + %rbp
# parameter 11(j_in): 48 + %rbp
# parameter 12(i_out): 56 + %rbp
# parameter 13(j_out): 64 + %rbp
# parameter 14(xgrid_area): 72 + %rbp
..B12.1:                        # Preds ..B12.0
	.cfi_startproc
..___tag_value_create_xgrid_2dx1d_order1.492:
..L493:
                                                        #341.1
..LN5182:
	.loc    1  341  is_stmt 1
        pushq     %rbp                                          #341.1
	.cfi_def_cfa_offset 16
..LN5183:
        movq      %rsp, %rbp                                    #341.1
	.cfi_def_cfa 6, 16
	.cfi_offset 6, -16
..LN5184:
        andq      $-32, %rsp                                    #341.1
..LN5185:
        pushq     %r12                                          #341.1
..LN5186:
        pushq     %r13                                          #341.1
..LN5187:
        pushq     %r14                                          #341.1
..LN5188:
        pushq     %r15                                          #341.1
..LN5189:
        pushq     %rbx                                          #341.1
..LN5190:
        subq      $2456, %rsp                                   #341.1
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN5191:
        movq      %rsi, %r13                                    #341.1
..LN5192:
        movq      %rdi, 56(%rsp)                                #341.1
..LN5193:
        movq      %rdx, %r14                                    #341.1
..LN5194:
	.loc    1  349  prologue_end  is_stmt 1
        movl      (%rdi), %edi                                  #349.10
..LN5195:
	.loc    1  341  is_stmt 1
        movq      %rcx, %r15                                    #341.1
..LN5196:
	.loc    1  349  is_stmt 1
        movl      %edi, 2352(%rsp)                              #349.10
..LN5197:
	.loc    1  350  is_stmt 1
        movl      (%r13), %eax                                  #350.10
..LN5198:
	.loc    1  357  is_stmt 1
        imull     %eax, %edi                                    #357.23
..LN5199:
        movslq    %edi, %rdi                                    #357.23
..LN5200:
	.loc    1  351  is_stmt 1
        movl      (%r14), %r12d                                 #351.10
..LN5201:
	.loc    1  357  is_stmt 1
        shlq      $3, %rdi                                      #357.23
..LN5202:
	.loc    1  341  is_stmt 1
        movq      %r9, 2328(%rsp)                               #341.1
..LN5203:
        movq      %r8, 2336(%rsp)                               #341.1
..LN5204:
	.loc    1  350  is_stmt 1
        movl      %eax, 2344(%rsp)                              #350.10
..LN5205:
	.loc    1  351  is_stmt 1
        movl      %r12d, 32(%rsp)                               #351.10
..LN5206:
	.loc    1  371  is_stmt 1
        movslq    %r12d, %r12                                   #371.21
..LN5207:
	.loc    1  352  is_stmt 1
        movl      (%r15), %ebx                                  #352.10
..LN5208:
	.loc    1  354  is_stmt 1
        movq      $0, 2304(%rsp)                                #354.3
..LN5209:
	.loc    1  357  is_stmt 1
#       malloc(size_t)
        call      malloc                                        #357.23
..LN5210:
                                # LOE rax r12 r13 r14 r15 ebx
..B12.124:                      # Preds ..B12.1
..LN5211:
        movq      %rax, 2312(%rsp)                              #357.23
..LN5212:
                                # LOE r12 r13 r14 r15 ebx
..B12.2:                        # Preds ..B12.124
..LN5213:
	.loc    1  358  is_stmt 1
        movl      32(%rsp), %edi                                #358.24
..LN5214:
        imull     %ebx, %edi                                    #358.24
..LN5215:
        movslq    %edi, %rdi                                    #358.24
..LN5216:
        shlq      $3, %rdi                                      #358.24
..LN5217:
#       malloc(size_t)
        call      malloc                                        #358.24
..LN5218:
                                # LOE rax r12 r13 r14 r15 ebx
..B12.125:                      # Preds ..B12.2
..LN5219:
        movq      %rax, 2280(%rsp)                              #358.24
..LN5220:
                                # LOE r12 r13 r14 r15 ebx
..B12.3:                        # Preds ..B12.125
..LN5221:
	.loc    1  359  is_stmt 1
        movl      32(%rsp), %eax                                #359.32
..LN5222:
        lea       1(%rbx), %edx                                 #359.40
..LN5223:
        movl      %edx, 64(%rsp)                                #359.40
..LN5224:
        lea       1(%rax), %edi                                 #359.32
..LN5225:
        movl      %edi, 48(%rsp)                                #359.32
..LN5226:
	.loc    1  361  is_stmt 1
        movslq    %edi, %rdi                                    #361.32
..LN5227:
        movq      %rdi, 40(%rsp)                                #361.32
..LN5228:
	.loc    1  359  is_stmt 1
        imull     %edx, %edi                                    #359.40
..LN5229:
        movslq    %edi, %rdi                                    #359.40
..LN5230:
        shlq      $3, %rdi                                      #359.43
..LN5231:
        movq      %rdi, (%rsp)                                  #359.43
..LN5232:
#       malloc(size_t)
        call      malloc                                        #359.20
..LN5233:
                                # LOE rax r12 r13 r14 r15 ebx
..B12.126:                      # Preds ..B12.3
..LN5234:
        movq      %rax, 680(%rsp)                               #359.20
..LN5235:
                                # LOE r12 r13 r14 r15 ebx
..B12.4:                        # Preds ..B12.126
..LN5236:
	.loc    1  360  is_stmt 1
        movq      (%rsp), %rdi                                  #360.20
..LN5237:
#       malloc(size_t)
        call      malloc                                        #360.20
..LN5238:
                                # LOE rax r12 r13 r14 r15 ebx
..B12.127:                      # Preds ..B12.4
..LN5239:
        movq      %rax, 688(%rsp)                               #360.20
..LN5240:
                                # LOE rax r12 r13 r14 r15 eax ebx al ah
..B12.5:                        # Preds ..B12.127
..LN5241:
	.loc    1  361  is_stmt 1
        movq      24(%rbp), %rdi                                #361.32
..LN5242:
        xorl      %r10d, %r10d                                  #361.3
..LN5243:
        movq      %rax, %r8                                     #361.32
..LN5244:
        movq      680(%rsp), %r9                                #361.32
..LN5245:
        testl     %ebx, %ebx                                    #361.17
..LN5246:
        jl        ..B12.48      # Prob 9%                       #361.17
..LN5247:
                                # LOE rdi r8 r9 r12 r13 r14 r15 ebx r8d r9d r10d r8b r9b
..B12.6:                        # Preds ..B12.5
..LN5248:
        movl      %ebx, 2296(%rsp)                              #361.28
..LN5249:
        lea       1(%r12), %r11                                 #361.28
..LN5250:
        movl      %r11d, %esi                                   #361.28
..LN5251:
        movl      %esi, %eax                                    #361.28
..LN5252:
        andl      $-4, %eax                                     #361.28
..LN5253:
        movslq    %eax, %rax                                    #361.28
..LN5254:
        movq      %rax, 16(%rsp)                                #361.28
..LN5255:
        movq      %r12, 2288(%rsp)                              #361.28
..LN5256:
        movq      %r13, 24(%rsp)                                #361.28
..LN5257:
        movq      %r14, 8(%rsp)                                 #361.28
..LN5258:
        movq      %r15, (%rsp)                                  #361.28
..LN5259:
        movq      40(%rsp), %rdx                                #361.28
..LN5260:
        movl      48(%rsp), %eax                                #361.28
..LN5261:
        movl      32(%rsp), %ecx                                #361.28
..LN5262:
                                # LOE rdx rdi r8 r9 r11 eax ecx esi r10d
..B12.7:                        # Preds ..B12.46 ..B12.6
..L503:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN5263:
        testl     %ecx, %ecx                                    #361.42
..LN5264:
        jl        ..B12.46      # Prob 50%                      #361.42
..LN5265:
                                # LOE rdx rdi r8 r9 r11 eax ecx esi r10d
..B12.8:                        # Preds ..B12.7
..LN5266:
        cmpq      $4, %r11                                      #361.28
..LN5267:
        jl        ..B12.118     # Prob 10%                      #361.28
..LN5268:
                                # LOE rdx rdi r8 r9 r11 eax ecx esi r10d
..B12.9:                        # Preds ..B12.8
..LN5269:
        cmpq      $95, %r11                                     #361.28
..LN5270:
        jl        ..B12.120     # Prob 10%                      #361.28
..LN5271:
                                # LOE rdx rdi r8 r9 r11 eax ecx esi r10d
..B12.10:                       # Preds ..B12.9
..LN5272:
        movq      %r9, %rbx                                     #361.28
..LN5273:
        andq      $31, %rbx                                     #361.28
..LN5274:
        testl     %ebx, %ebx                                    #361.28
..LN5275:
        je        ..B12.13      # Prob 50%                      #361.28
..LN5276:
                                # LOE rdx rdi r8 r9 r11 eax ecx ebx esi r10d
..B12.11:                       # Preds ..B12.10
..LN5277:
        testb     $7, %bl                                       #361.28
..LN5278:
        jne       ..B12.118     # Prob 10%                      #361.28
..LN5279:
                                # LOE rdx rdi r8 r9 r11 eax ecx ebx esi r10d
..B12.12:                       # Preds ..B12.11
..LN5280:
        negl      %ebx                                          #361.28
..LN5281:
        addl      $32, %ebx                                     #361.28
..LN5282:
        shrl      $3, %ebx                                      #361.28
..LN5283:
                                # LOE rdx rdi r8 r9 r11 eax ecx ebx esi r10d
..B12.13:                       # Preds ..B12.12 ..B12.10
..LN5284:
        movl      %ebx, %r12d                                   #361.28
..LN5285:
        lea       4(%r12), %r13                                 #361.28
..LN5286:
        cmpq      %r13, %r11                                    #361.28
..LN5287:
        jl        ..B12.118     # Prob 10%                      #361.28
..LN5288:
                                # LOE rdx rdi r8 r9 r11 r12 eax ecx ebx esi r10d
..B12.14:                       # Preds ..B12.13
..LN5289:
        negl      %ebx                                          #361.28
..LN5290:
        xorl      %r13d, %r13d                                  #361.28
..LN5291:
        addl      %esi, %ebx                                    #361.28
..LN5292:
        andl      $3, %ebx                                      #361.28
..LN5293:
        negl      %ebx                                          #361.28
..LN5294:
        addl      %esi, %ebx                                    #361.28
..LN5295:
        movslq    %ebx, %rbx                                    #361.28
..LN5296:
        testq     %r12, %r12                                    #361.28
..LN5297:
        jbe       ..B12.18      # Prob 10%                      #361.28
..LN5298:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 eax ecx esi r10d
..B12.15:                       # Preds ..B12.14
..LN5299:
        movq      16(%rbp), %r15                                #
..LN5300:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 r15 eax ecx esi r10d
..B12.16:                       # Preds ..B12.16 ..B12.15
..L504:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # PEELED LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
..LN5301:
	.loc    1  362  is_stmt 1
        movq      (%r15,%r13,8), %r14                           #362.24
..LN5302:
        movq      %r14, (%r9,%r13,8)                            #362.5
..LN5303:
	.loc    1  361  is_stmt 1
        incq      %r13                                          #361.28
..LN5304:
        cmpq      %r12, %r13                                    #361.28
..LN5305:
        jb        ..B12.16      # Prob 82%                      #361.28
..LN5306:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 r15 eax ecx esi r10d
..B12.18:                       # Preds ..B12.16 ..B12.14 ..B12.120
..LN5307:
        movq      16(%rbp), %r13                                #
..LN5308:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 eax ecx esi r10d
..B12.19:                       # Preds ..B12.19 ..B12.18
..L505:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS VECTORIZED
                # VECTORIZATION HAS UNALIGNED MEMORY REFERENCES
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN5309:
	.loc    1  362  is_stmt 1
        vmovupd   (%r13,%r12,8), %ymm0                          #362.24
..LN5310:
        vmovupd   %ymm0, (%r9,%r12,8)                           #362.5
..LN5311:
	.loc    1  361  is_stmt 1
        addq      $4, %r12                                      #361.28
..LN5312:
        cmpq      %rbx, %r12                                    #361.28
..LN5313:
        jb        ..B12.19      # Prob 82%                      #361.28
..LN5314:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 eax ecx esi r10d
..B12.21:                       # Preds ..B12.19 ..B12.118
..LN5315:
        cmpq      %r11, %rbx                                    #361.28
..LN5316:
        jae       ..B12.25      # Prob 10%                      #361.28
..LN5317:
                                # LOE rdx rbx rdi r8 r9 r11 eax ecx esi r10d
..B12.22:                       # Preds ..B12.21
..LN5318:
        movq      16(%rbp), %r13                                #
..LN5319:
                                # LOE rdx rbx rdi r8 r9 r11 r13 eax ecx esi r10d
..B12.23:                       # Preds ..B12.23 ..B12.22
..L506:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
..LN5320:
	.loc    1  362  is_stmt 1
        movq      (%r13,%rbx,8), %r12                           #362.24
..LN5321:
        movq      %r12, (%r9,%rbx,8)                            #362.5
..LN5322:
	.loc    1  361  is_stmt 1
        incq      %rbx                                          #361.28
..LN5323:
        cmpq      %r11, %rbx                                    #361.28
..LN5324:
        jb        ..B12.23      # Prob 82%                      #361.28
..LN5325:
                                # LOE rdx rbx rdi r8 r9 r11 r13 eax ecx esi r10d
..B12.25:                       # Preds ..B12.23 ..B12.21
..LN5326:
        cmpl      $16, %eax                                     #361.28
..LN5327:
        jl        ..B12.115     # Prob 10%                      #361.28
..LN5328:
                                # LOE rdx rdi r8 r9 r11 eax ecx esi r10d
..B12.26:                       # Preds ..B12.25
..LN5329:
        movq      %r8, %r12                                     #361.28
..LN5330:
        andq      $31, %r12                                     #361.28
..LN5331:
        movl      %r12d, %r12d                                  #361.28
..LN5332:
        testl     %r12d, %r12d                                  #361.28
..LN5333:
        je        ..B12.29      # Prob 50%                      #361.28
..LN5334:
                                # LOE rdx rdi r8 r9 r11 r12 eax ecx esi r10d
..B12.27:                       # Preds ..B12.26
..LN5335:
        testl     $7, %r12d                                     #361.28
..LN5336:
        jne       ..B12.115     # Prob 10%                      #361.28
..LN5337:
                                # LOE rdx rdi r8 r9 r11 r12 eax ecx esi r10d
..B12.28:                       # Preds ..B12.27
..LN5338:
        negl      %r12d                                         #361.28
..LN5339:
        addl      $32, %r12d                                    #361.28
..LN5340:
        shrl      $3, %r12d                                     #361.28
..LN5341:
                                # LOE rdx rdi r8 r9 r11 r12 eax ecx esi r10d
..B12.29:                       # Preds ..B12.28 ..B12.26
..LN5342:
        lea       16(%r12), %ebx                                #361.28
..LN5343:
        cmpl      %ebx, %eax                                    #361.28
..LN5344:
        jl        ..B12.115     # Prob 10%                      #361.28
..LN5345:
                                # LOE rdx rdi r8 r9 r11 r12 eax ecx esi r10d
..B12.30:                       # Preds ..B12.29
..LN5346:
        movl      %eax, %r14d                                   #361.28
..LN5347:
        xorl      %ebx, %ebx                                    #361.28
..LN5348:
        subl      %r12d, %r14d                                  #361.28
..LN5349:
        andl      $15, %r14d                                    #361.28
..LN5350:
        negl      %r14d                                         #361.28
..LN5351:
        addl      %eax, %r14d                                   #361.28
..LN5352:
	.loc    1  363  is_stmt 1
        vmovsd    (%rdi), %xmm0                                 #363.24
..LN5353:
	.loc    1  361  is_stmt 1
        testq     %r12, %r12                                    #361.28
..LN5354:
        jbe       ..B12.34      # Prob 10%                      #361.28
..LN5355:
                                # LOE rdx rbx rdi r8 r9 r11 r12 eax ecx esi r10d r14d xmm0
..B12.32:                       # Preds ..B12.30 ..B12.32
..L507:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 4
                # PEELED LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.648438
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.937500
..LN5356:
	.loc    1  363  is_stmt 1
        vmovsd    %xmm0, (%r8,%rbx,8)                           #363.5
..LN5357:
	.loc    1  361  is_stmt 1
        incq      %rbx                                          #361.28
..LN5358:
        cmpq      %r12, %rbx                                    #361.28
..LN5359:
        jb        ..B12.32      # Prob 82%                      #361.28
..LN5360:
                                # LOE rdx rbx rdi r8 r9 r11 r12 eax ecx esi r10d r14d xmm0
..B12.34:                       # Preds ..B12.32 ..B12.30
..LN5361:
        movslq    %r14d, %rbx                                   #361.28
..LN5362:
        lea       (%r8,%r12,8), %r13                            #361.28
..LN5363:
	.loc    1  363  is_stmt 1
        vbroadcastsd %xmm0, %ymm0                               #363.24
..LN5364:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 eax ecx esi r10d r14d ymm0
..B12.35:                       # Preds ..B12.35 ..B12.34
..L508:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 4
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 8.648438
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.937500
                # MAIN VECTOR TYPE: 64-bits floating point
..LN5365:
	.loc    1  361  is_stmt 1
        addq      $16, %r12                                     #361.28
..LN5366:
	.loc    1  363  is_stmt 1
        vmovupd   %ymm0, (%r13)                                 #363.5
..LN5367:
        vmovupd   %ymm0, 32(%r13)                               #363.5
..LN5368:
        vmovupd   %ymm0, 64(%r13)                               #363.5
..LN5369:
        vmovupd   %ymm0, 96(%r13)                               #363.5
..LN5370:
	.loc    1  361  is_stmt 1
        addq      $128, %r13                                    #361.28
..LN5371:
        cmpq      %rbx, %r12                                    #361.28
..LN5372:
        jb        ..B12.35      # Prob 82%                      #361.28
..LN5373:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 eax ecx esi r10d r14d ymm0
..B12.37:                       # Preds ..B12.35 ..B12.115
..LN5374:
        lea       1(%r14), %ebx                                 #361.28
..LN5375:
        cmpl      %ebx, %eax                                    #361.28
..LN5376:
        jb        ..B12.46      # Prob 50%                      #361.28
..LN5377:
                                # LOE rdx rdi r8 r9 r11 eax ecx esi r10d r14d
..B12.38:                       # Preds ..B12.37
..LN5378:
        movslq    %r14d, %r13                                   #361.28
..LN5379:
        negq      %r13                                          #361.28
..LN5380:
        addq      %rdx, %r13                                    #361.28
..LN5381:
        cmpq      $4, %r13                                      #361.28
..LN5382:
        jl        ..B12.114     # Prob 10%                      #361.28
..LN5383:
                                # LOE rdx rdi r8 r9 r11 r13 eax ecx esi r10d r14d
..B12.39:                       # Preds ..B12.38
..LN5384:
	.loc    1  363  is_stmt 1
        movslq    %r14d, %r14                                   #363.5
..LN5385:
	.loc    1  361  is_stmt 1
        movl      %r13d, %r12d                                  #361.28
..LN5386:
        andl      $-4, %r12d                                    #361.28
..LN5387:
        xorl      %ebx, %ebx                                    #361.28
..LN5388:
        movslq    %r12d, %r12                                   #361.28
..LN5389:
	.loc    1  363  is_stmt 1
        vbroadcastsd (%rdi), %ymm0                              #363.24
..LN5390:
        lea       (%r8,%r14,8), %r15                            #363.5
..LN5391:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 r15 eax ecx esi r10d r14d ymm0
..B12.40:                       # Preds ..B12.40 ..B12.39
..L509:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS VECTORIZED
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION HAS UNALIGNED MEMORY REFERENCES
                # VECTORIZATION SPEEDUP COEFFECIENT 2.542969
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 2.750000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN5392:
        vmovupd   %ymm0, (%r15,%rbx,8)                          #363.5
..LN5393:
	.loc    1  361  is_stmt 1
        addq      $4, %rbx                                      #361.28
..LN5394:
        cmpq      %r12, %rbx                                    #361.28
..LN5395:
        jb        ..B12.40      # Prob 82%                      #361.28
..LN5396:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 r15 eax ecx esi r10d r14d ymm0
..B12.42:                       # Preds ..B12.40 ..B12.114
..LN5397:
        cmpq      %r13, %r12                                    #361.28
..LN5398:
        jae       ..B12.46      # Prob 10%                      #361.28
..LN5399:
                                # LOE rdx rdi r8 r9 r11 r12 r13 eax ecx esi r10d r14d
..B12.43:                       # Preds ..B12.42
..LN5400:
	.loc    1  363  is_stmt 1
        movslq    %r14d, %r14                                   #363.5
..LN5401:
        lea       (%r8,%r14,8), %rbx                            #363.5
..LN5402:
        movq      (%rdi), %r14                                  #363.24
..LN5403:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 r14 eax ecx esi r10d
..B12.44:                       # Preds ..B12.44 ..B12.43
..L510:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 2.542969
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 2.750000
..LN5404:
        movq      %r14, (%rbx,%r12,8)                           #363.5
..LN5405:
	.loc    1  361  is_stmt 1
        incq      %r12                                          #361.28
..LN5406:
        cmpq      %r13, %r12                                    #361.28
..LN5407:
        jb        ..B12.44      # Prob 82%                      #361.28
..LN5408:
                                # LOE rdx rbx rdi r8 r9 r11 r12 r13 r14 eax ecx esi r10d
..B12.46:                       # Preds ..B12.44 ..B12.7 ..B12.37 ..B12.42
..LN5409:
        incl      %r10d                                         #361.3
..LN5410:
        addq      $8, %rdi                                      #361.3
..LN5411:
        lea       (%r8,%rdx,8), %r8                             #361.3
..LN5412:
        lea       (%r9,%rdx,8), %r9                             #361.3
..LN5413:
        cmpl      64(%rsp), %r10d                               #361.3
..LN5414:
        jb        ..B12.7       # Prob 82%                      #361.3
..LN5415:
                                # LOE rdx rdi r8 r9 r11 eax ecx esi r10d
..B12.47:                       # Preds ..B12.46
..LN5416:
        movl      2296(%rsp), %ebx                              #
..LN5417:
        movq      2288(%rsp), %r12                              #
..LN5418:
        movq      24(%rsp), %r13                                #
..LN5419:
        movq      8(%rsp), %r14                                 #
..LN5420:
        movq      (%rsp), %r15                                  #
..LN5421:
                                # LOE r12 r13 r14 r15 ebx
..B12.48:                       # Preds ..B12.5 ..B12.47
..LN5422:
	.loc    1  71  is_stmt 1
        movq      56(%rsp), %rax                                #71.9
..LN5423:
	.loc    1  75  is_stmt 1
        xorl      %esi, %esi                                    #75.7
..LN5424:
	.loc    1  72  is_stmt 1
        movl      (%r13), %r8d                                  #72.9
..LN5425:
	.loc    1  75  is_stmt 1
        xorl      %ecx, %ecx                                    #75.9
..LN5426:
	.loc    1  71  is_stmt 1
        movl      (%rax), %eax                                  #71.9
..LN5427:
	.loc    1  75  is_stmt 1
        movslq    %eax, %rdi                                    #75.18
..LN5428:
        testl     %r8d, %r8d                                    #75.14
..LN5429:
        jle       ..B12.57      # Prob 10%                      #75.14
..LN5430:
                                # LOE rcx rdi r12 r14 r15 eax ebx esi r8d
..B12.49:                       # Preds ..B12.48
..LN5431:
        movl      %r8d, 24(%rsp)                                #75.9
..LN5432:
        xorl      %edx, %edx                                    #75.9
..LN5433:
        movl      %ebx, 2296(%rsp)                              #75.9
..LN5434:
        movq      %r12, 2288(%rsp)                              #75.9
..LN5435:
        movq      %r14, 8(%rsp)                                 #75.9
..LN5436:
        movq      %r15, (%rsp)                                  #75.9
..LN5437:
        movq      2312(%rsp), %r10                              #75.9
..LN5438:
        movq      2336(%rsp), %r8                               #75.9
..LN5439:
        movq      2328(%rsp), %r9                               #75.9
..LN5440:
                                # LOE rcx rdi r8 r9 r10 eax edx esi
..B12.50:                       # Preds ..B12.55 ..B12.112 ..B12.49
..L511:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN5441:
        xorl      %r12d, %r12d                                  #75.27
..LN5442:
        testl     %eax, %eax                                    #75.36
..LN5443:
        jle       ..B12.112     # Prob 10%                      #75.36
..LN5444:
                                # LOE rcx rdi r8 r9 r10 r12 eax edx esi
..B12.51:                       # Preds ..B12.50
..LN5445:
	.loc    1  85  is_stmt 1
        movq      %rcx, 368(%rsp)                               #85.5
..LN5446:
	.loc    1  78  is_stmt 1
        lea       (%rax,%rdx), %r13d                            #78.25
..LN5447:
        movslq    %r13d, %r13                                   #78.15
..LN5448:
	.loc    1  85  is_stmt 1
        lea       (%r10,%rcx,8), %r11                           #85.5
..LN5449:
	.loc    1  76  is_stmt 1
        movslq    %edx, %rdx                                    #76.15
..LN5450:
	.loc    1  85  is_stmt 1
        movq      %r11, 392(%rsp)                               #85.5
..LN5451:
        movl      %edx, 376(%rsp)                               #85.5
..LN5452:
        movl      %esi, 360(%rsp)                               #85.5
..LN5453:
	.loc    1  78  is_stmt 1
        lea       (%r8,%r13,8), %rbx                            #78.15
..LN5454:
	.loc    1  85  is_stmt 1
        movq      %rdi, 384(%rsp)                               #85.5
..LN5455:
	.loc    1  82  is_stmt 1
        lea       (%r9,%r13,8), %r13                            #82.15
..LN5456:
	.loc    1  85  is_stmt 1
        movl      %eax, 16(%rsp)                                #85.5
..LN5457:
	.loc    1  80  is_stmt 1
        lea       (%r9,%rdx,8), %r14                            #80.15
..LN5458:
	.loc    1  76  is_stmt 1
        lea       (%r8,%rdx,8), %r15                            #76.15
..LN5459:
                                # LOE rbx r12 r13 r14 r15
..B12.52:                       # Preds ..B12.54 ..B12.51
..L512:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN5460:
	.loc    1  84  is_stmt 1
        lea       40(%rsp), %rdi                                #84.12
..LN5461:
	.loc    1  76  is_stmt 1
        movq      (%r15,%r12,8), %rax                           #76.15
..LN5462:
	.loc    1  84  is_stmt 1
        lea       200(%rsp), %rsi                               #84.12
..LN5463:
	.loc    1  83  is_stmt 1
        movq      8(%r13,%r12,8), %rdx                          #83.15
..LN5464:
	.loc    1  76  is_stmt 1
        movq      %rax, (%rdi)                                  #76.5
..LN5465:
	.loc    1  77  is_stmt 1
        movq      8(%r15,%r12,8), %rcx                          #77.15
..LN5466:
	.loc    1  78  is_stmt 1
        movq      16(%rbx,%r12,8), %r8                          #78.15
..LN5467:
	.loc    1  79  is_stmt 1
        movq      8(%rbx,%r12,8), %r9                           #79.15
..LN5468:
	.loc    1  80  is_stmt 1
        movq      (%r14,%r12,8), %r10                           #80.15
..LN5469:
	.loc    1  81  is_stmt 1
        movq      8(%r14,%r12,8), %r11                          #81.15
..LN5470:
	.loc    1  82  is_stmt 1
        movq      16(%r13,%r12,8), %rax                         #82.15
..LN5471:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN5472:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN5473:
	.loc    1  77  is_stmt 1
        movq      %rcx, 8(%rdi)                                 #77.5
..LN5474:
	.loc    1  78  is_stmt 1
        movq      %r8, 16(%rdi)                                 #78.5
..LN5475:
	.loc    1  79  is_stmt 1
        movq      %r9, 24(%rdi)                                 #79.5
..LN5476:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN5477:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN5478:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN5479:
	.loc    1  84  is_stmt 1
        vzeroupper                                              #84.12
..LN5480:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_2dx1d_order1.513:
..LN5481:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_2dx1d_order1.514:
..LN5482:
                                # LOE rbx r12 r13 r14 r15 eax
..B12.53:                       # Preds ..B12.52
..LN5483:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN5484:
        lea       40(%rsp), %rdi                                #85.20
..LN5485:
        lea       200(%rsp), %rsi                               #85.20
..___tag_value_create_xgrid_2dx1d_order1.515:
..LN5486:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_2dx1d_order1.516:
..LN5487:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B12.54:                       # Preds ..B12.53
..LN5488:
        movq      392(%rsp), %rax                               #85.5
..LN5489:
        vmovsd    %xmm0, (%rax,%r12,8)                          #85.5
..LN5490:
	.loc    1  75  is_stmt 1
        incq      %r12                                          #75.40
..LN5491:
        cmpq      384(%rsp), %r12                               #75.36
..LN5492:
        jl        ..B12.52      # Prob 82%                      #75.36
..LN5493:
                                # LOE rbx r12 r13 r14 r15
..B12.55:                       # Preds ..B12.54
..LN5494:
        movl      360(%rsp), %esi                               #
..LN5495:
        incl      %esi                                          #75.18
..LN5496:
        movq      368(%rsp), %rcx                               #
..LN5497:
        movq      384(%rsp), %rdi                               #
..LN5498:
        addq      %rdi, %rcx                                    #75.18
..LN5499:
        movl      376(%rsp), %edx                               #
..LN5500:
        movl      16(%rsp), %eax                                #
..LN5501:
        lea       1(%rdx,%rax), %edx                            #75.18
..LN5502:
        movq      2312(%rsp), %r10                              #
..LN5503:
        movq      2336(%rsp), %r8                               #
..LN5504:
        movq      2328(%rsp), %r9                               #
..LN5505:
        cmpl      24(%rsp), %esi                                #75.14
..LN5506:
        jl        ..B12.50      # Prob 82%                      #75.14
..LN5507:
                                # LOE rcx rdi r8 r9 r10 eax edx esi
..B12.56:                       # Preds ..B12.112 ..B12.55      # Infreq
..LN5508:
        movl      2296(%rsp), %ebx                              #
..LN5509:
        movq      2288(%rsp), %r12                              #
..LN5510:
        movq      8(%rsp), %r14                                 #
..LN5511:
        movq      (%rsp), %r15                                  #
..LN5512:
                                # LOE r12 r14 r15 ebx
..B12.57:                       # Preds ..B12.56 ..B12.48       # Infreq
..LN5513:
	.loc    1  71  is_stmt 1
        movl      (%r14), %edi                                  #71.9
..LN5514:
	.loc    1  75  is_stmt 1
        xorl      %ecx, %ecx                                    #75.7
..LN5515:
	.loc    1  72  is_stmt 1
        movl      (%r15), %r8d                                  #72.9
..LN5516:
	.loc    1  75  is_stmt 1
        xorl      %edx, %edx                                    #75.9
..LN5517:
        movslq    %edi, %rsi                                    #75.18
..LN5518:
        testl     %r8d, %r8d                                    #75.14
..LN5519:
        jle       ..B12.66      # Prob 10%                      #75.14
..LN5520:
                                # LOE rdx rsi r12 ecx ebx edi r8d
..B12.58:                       # Preds ..B12.57                # Infreq
..LN5521:
        movl      %r8d, 8(%rsp)                                 #75.9
..LN5522:
        xorl      %eax, %eax                                    #75.9
..LN5523:
        movl      %ebx, 2296(%rsp)                              #75.9
..LN5524:
        movq      %r12, 2288(%rsp)                              #75.9
..LN5525:
        movq      688(%rsp), %r10                               #75.9
..LN5526:
        movq      680(%rsp), %r8                                #75.9
..LN5527:
        movq      2280(%rsp), %r9                               #75.9
..LN5528:
                                # LOE rdx rsi r8 r9 r10 eax ecx edi
..B12.59:                       # Preds ..B12.64 ..B12.110 ..B12.58 # Infreq
..L517:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN5529:
        xorl      %r13d, %r13d                                  #75.27
..LN5530:
        testl     %edi, %edi                                    #75.36
..LN5531:
        jle       ..B12.110     # Prob 10%                      #75.36
..LN5532:
                                # LOE rdx rsi r8 r9 r10 r13 eax ecx edi
..B12.60:                       # Preds ..B12.59                # Infreq
..LN5533:
	.loc    1  85  is_stmt 1
        movq      %rdx, 24(%rsp)                                #85.5
..LN5534:
	.loc    1  78  is_stmt 1
        lea       (%rdi,%rax), %ebx                             #78.25
..LN5535:
        movslq    %ebx, %rbx                                    #78.15
..LN5536:
	.loc    1  85  is_stmt 1
        lea       (%r9,%rdx,8), %r11                            #85.5
..LN5537:
	.loc    1  76  is_stmt 1
        movslq    %eax, %rax                                    #76.15
..LN5538:
	.loc    1  85  is_stmt 1
        movq      %r11, 712(%rsp)                               #85.5
..LN5539:
        movl      %eax, 696(%rsp)                               #85.5
..LN5540:
        movl      %ecx, 16(%rsp)                                #85.5
..LN5541:
	.loc    1  78  is_stmt 1
        lea       (%r8,%rbx,8), %r12                            #78.15
..LN5542:
	.loc    1  85  is_stmt 1
        movq      %rsi, 704(%rsp)                               #85.5
..LN5543:
	.loc    1  82  is_stmt 1
        lea       (%r10,%rbx,8), %rbx                           #82.15
..LN5544:
	.loc    1  85  is_stmt 1
        movl      %edi, (%rsp)                                  #85.5
..LN5545:
	.loc    1  80  is_stmt 1
        lea       (%r10,%rax,8), %r14                           #80.15
..LN5546:
	.loc    1  76  is_stmt 1
        lea       (%r8,%rax,8), %r15                            #76.15
..LN5547:
                                # LOE rbx r12 r13 r14 r15
..B12.61:                       # Preds ..B12.63 ..B12.60       # Infreq
..L518:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN5548:
	.loc    1  84  is_stmt 1
        lea       360(%rsp), %rdi                               #84.12
..LN5549:
	.loc    1  76  is_stmt 1
        movq      (%r15,%r13,8), %rax                           #76.15
..LN5550:
	.loc    1  84  is_stmt 1
        lea       520(%rsp), %rsi                               #84.12
..LN5551:
	.loc    1  83  is_stmt 1
        movq      8(%rbx,%r13,8), %rdx                          #83.15
..LN5552:
	.loc    1  76  is_stmt 1
        movq      %rax, -160(%rsi)                              #76.5
..LN5553:
	.loc    1  77  is_stmt 1
        movq      8(%r15,%r13,8), %rcx                          #77.15
..LN5554:
	.loc    1  78  is_stmt 1
        movq      16(%r12,%r13,8), %r8                          #78.15
..LN5555:
	.loc    1  79  is_stmt 1
        movq      8(%r12,%r13,8), %r9                           #79.15
..LN5556:
	.loc    1  80  is_stmt 1
        movq      (%r14,%r13,8), %r10                           #80.15
..LN5557:
	.loc    1  81  is_stmt 1
        movq      8(%r14,%r13,8), %r11                          #81.15
..LN5558:
	.loc    1  82  is_stmt 1
        movq      16(%rbx,%r13,8), %rax                         #82.15
..LN5559:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN5560:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN5561:
	.loc    1  77  is_stmt 1
        movq      %rcx, -152(%rsi)                              #77.5
..LN5562:
	.loc    1  78  is_stmt 1
        movq      %r8, -144(%rsi)                               #78.5
..LN5563:
	.loc    1  79  is_stmt 1
        movq      %r9, -136(%rsi)                               #79.5
..LN5564:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN5565:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN5566:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN5567:
	.loc    1  84  is_stmt 1
        vzeroupper                                              #84.12
..LN5568:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_2dx1d_order1.519:
..LN5569:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_2dx1d_order1.520:
..LN5570:
                                # LOE rbx r12 r13 r14 r15 eax
..B12.62:                       # Preds ..B12.61                # Infreq
..LN5571:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN5572:
        lea       360(%rsp), %rdi                               #85.20
..LN5573:
        lea       520(%rsp), %rsi                               #85.20
..___tag_value_create_xgrid_2dx1d_order1.521:
..LN5574:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_2dx1d_order1.522:
..LN5575:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B12.63:                       # Preds ..B12.62                # Infreq
..LN5576:
        movq      712(%rsp), %rax                               #85.5
..LN5577:
        vmovsd    %xmm0, (%rax,%r13,8)                          #85.5
..LN5578:
	.loc    1  75  is_stmt 1
        incq      %r13                                          #75.40
..LN5579:
        cmpq      704(%rsp), %r13                               #75.36
..LN5580:
        jl        ..B12.61      # Prob 82%                      #75.36
..LN5581:
                                # LOE rbx r12 r13 r14 r15
..B12.64:                       # Preds ..B12.63                # Infreq
..LN5582:
        movl      16(%rsp), %ecx                                #
..LN5583:
        incl      %ecx                                          #75.18
..LN5584:
        movq      24(%rsp), %rdx                                #
..LN5585:
        movq      704(%rsp), %rsi                               #
..LN5586:
        addq      %rsi, %rdx                                    #75.18
..LN5587:
        movl      696(%rsp), %eax                               #
..LN5588:
        movl      (%rsp), %edi                                  #
..LN5589:
        lea       1(%rax,%rdi), %eax                            #75.18
..LN5590:
        movq      688(%rsp), %r10                               #
..LN5591:
        movq      680(%rsp), %r8                                #
..LN5592:
        movq      2280(%rsp), %r9                               #
..LN5593:
        cmpl      8(%rsp), %ecx                                 #75.14
..LN5594:
        jl        ..B12.59      # Prob 82%                      #75.14
..LN5595:
                                # LOE rdx rsi r8 r9 r10 eax ecx edi
..B12.65:                       # Preds ..B12.110 ..B12.64      # Infreq
..LN5596:
        movl      2296(%rsp), %ebx                              #
..LN5597:
        movq      2288(%rsp), %r12                              #
..LN5598:
                                # LOE r12 ebx
..B12.66:                       # Preds ..B12.65 ..B12.57       # Infreq
..LN5599:
	.loc    1  368  is_stmt 1
        vzeroupper                                              #368.3
..LN5600:
        movq      680(%rsp), %rdi                               #368.3
..LN5601:
#       free(void *)
        call      free                                          #368.3
..LN5602:
                                # LOE r12 ebx
..B12.67:                       # Preds ..B12.66                # Infreq
..LN5603:
	.loc    1  369  is_stmt 1
        movq      688(%rsp), %rdi                               #369.3
..LN5604:
#       free(void *)
        call      free                                          #369.3
..LN5605:
                                # LOE r12 ebx
..B12.68:                       # Preds ..B12.67                # Infreq
..LN5606:
	.loc    1  371  is_stmt 1
        xorl      %edi, %edi                                    #371.10
..LN5607:
        xorl      %r8d, %r8d                                    #371.7
..LN5608:
        xorl      %r9d, %r9d                                    #371.10
..LN5609:
        testl     %ebx, %ebx                                    #371.16
..LN5610:
        jle       ..B12.98      # Prob 10%                      #371.16
..LN5611:
                                # LOE rdi r9 r12 ebx r8d
..B12.69:                       # Preds ..B12.68                # Infreq
..LN5612:
	.loc    1  375  is_stmt 1
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm0             #375.78
..LN5613:
	.loc    1  398  is_stmt 1
        vmovsd    .L_2il0floatpacket.2(%rip), %xmm1             #398.23
..LN5614:
	.loc    1  375  is_stmt 1
        movslq    2352(%rsp), %rax                              #375.29
..LN5615:
        movl      32(%rsp), %edx                                #375.29
..LN5616:
                                # LOE rax rdi r9 r12 edx ebx r8d xmm0 xmm1
..B12.70:                       # Preds ..B12.108 ..B12.69      # Infreq
..L523:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN5617:
	.loc    1  371  is_stmt 1
        xorl      %esi, %esi                                    #371.31
..LN5618:
        testl     %edx, %edx                                    #371.40
..LN5619:
        jle       ..B12.108     # Prob 10%                      #371.40
..LN5620:
                                # LOE rax rsi rdi r9 r12 edx ebx r8d xmm0 xmm1
..B12.71:                       # Preds ..B12.70                # Infreq
..LN5621:
	.loc    1  341  is_stmt 1
        movq      56(%rbp), %r10                                #341.1
..LN5622:
        movq      24(%rbp), %r11                                #341.1
..LN5623:
        movq      16(%rbp), %r13                                #341.1
..LN5624:
        movq      %rax, 2432(%rsp)                              #341.1
..LN5625:
        movq      2280(%rsp), %r14                              #341.1
..LN5626:
        movl      2344(%rsp), %r15d                             #341.1
..LN5627:
                                # LOE rsi rdi r9 r11 r12 r13 r14 ebx r8d r15d xmm0
..B12.72:                       # Preds ..B12.106 ..B12.104 ..B12.94 ..B12.71 # Infreq
..L524:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN5628:
	.loc    1  375  is_stmt 1
        xorl      %edx, %edx                                    #375.9
..LN5629:
        xorl      %ecx, %ecx                                    #375.12
..LN5630:
	.loc    1  373  is_stmt 1
        vmovsd    (%r13,%rsi,8), %xmm5                          #373.14
..LN5631:
	.loc    1  375  is_stmt 1
        xorl      %eax, %eax                                    #375.12
..LN5632:
	.loc    1  374  is_stmt 1
        vmovsd    8(%r13,%rsi,8), %xmm3                         #374.14
..LN5633:
	.loc    1  373  is_stmt 1
        vmovsd    (%r11,%rdi,8), %xmm4                          #373.38
..LN5634:
	.loc    1  374  is_stmt 1
        vmovsd    8(%r11,%rdi,8), %xmm2                         #374.38
..LN5635:
	.loc    1  375  is_stmt 1
        testl     %r15d, %r15d                                  #375.18
..LN5636:
        jle       ..B12.104     # Prob 10%                      #375.18
..LN5637:
                                # LOE rsi rdi r9 r11 r12 r13 r14 eax edx ecx ebx r8d r15d xmm0 xmm2 xmm3 xmm4 xmm5
..B12.73:                       # Preds ..B12.72                # Infreq
..LN5638:
	.loc    1  397  is_stmt 1
        movq      %r9, 8(%rsp)                                  #397.13
..LN5639:
        lea       (%r14,%r9,8), %r10                            #397.13
..LN5640:
        movq      %r10, 24(%rsp)                                #397.13
..LN5641:
	.loc    1  393  is_stmt 1
        vaddsd    %xmm3, %xmm5, %xmm1                           #393.45
..LN5642:
        vmulsd    %xmm1, %xmm0, %xmm1                           #393.53
..LN5643:
	.loc    1  397  is_stmt 1
        movl      %r8d, 16(%rsp)                                #397.13
..LN5644:
        vmovsd    %xmm1, 2392(%rsp)                             #397.13
..LN5645:
        vmovsd    %xmm2, 2408(%rsp)                             #397.13
..LN5646:
        vmovsd    %xmm3, 2400(%rsp)                             #397.13
..LN5647:
        vmovsd    %xmm4, 2424(%rsp)                             #397.13
..LN5648:
        vmovsd    %xmm5, 2384(%rsp)                             #397.13
..LN5649:
        movq      %rsi, 32(%rsp)                                #397.13
..LN5650:
        movq      %rdi, (%rsp)                                  #397.13
..LN5651:
        movl      %ebx, 2296(%rsp)                              #397.13
..LN5652:
        movq      %r12, 2288(%rsp)                              #397.13
..LN5653:
        movq      32(%rbp), %r11                                #397.13
..LN5654:
        movl      2352(%rsp), %r8d                              #397.13
..LN5655:
        movq      2336(%rsp), %r9                               #397.13
..LN5656:
        movq      2328(%rsp), %r10                              #397.13
..LN5657:
                                # LOE r9 r10 r11 eax edx ecx r8d
..B12.74:                       # Preds ..B12.92 ..B12.102 ..B12.73 # Infreq
..L525:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN5658:
	.loc    1  375  is_stmt 1
        xorl      %r14d, %r14d                                  #375.33
..LN5659:
        testl     %r8d, %r8d                                    #375.42
..LN5660:
        jle       ..B12.102     # Prob 10%                      #375.42
..LN5661:
                                # LOE r9 r10 r11 r14 eax edx ecx r8d
..B12.75:                       # Preds ..B12.74                # Infreq
..LN5662:
        movslq    %ecx, %rcx                                    #375.57
..LN5663:
	.loc    1  381  is_stmt 1
        lea       (%r8,%rax), %r12d                             #381.31
..LN5664:
        movslq    %r12d, %r12                                   #381.17
..LN5665:
	.loc    1  397  is_stmt 1
        movq      2312(%rsp), %rdi                              #397.13
..LN5666:
	.loc    1  379  is_stmt 1
        movslq    %eax, %rax                                    #379.17
..LN5667:
        movl      %eax, 2368(%rsp)                              #379.17
..LN5668:
	.loc    1  375  is_stmt 1
        lea       (%r11,%rcx,8), %rbx                           #375.57
..LN5669:
	.loc    1  379  is_stmt 1
        movl      %ecx, 2360(%rsp)                              #379.17
..LN5670:
	.loc    1  397  is_stmt 1
        lea       (%rdi,%rcx,8), %rdi                           #397.13
..LN5671:
	.loc    1  379  is_stmt 1
        movq      %rdi, 2320(%rsp)                              #379.17
..LN5672:
	.loc    1  381  is_stmt 1
        lea       (%r10,%r12,8), %rsi                           #381.17
..LN5673:
	.loc    1  379  is_stmt 1
        movq      %rsi, 2416(%rsp)                              #379.17
..LN5674:
	.loc    1  390  is_stmt 1
        lea       (%r9,%r12,8), %r12                            #390.17
..LN5675:
	.loc    1  379  is_stmt 1
        movl      %edx, 2376(%rsp)                              #379.17
..LN5676:
	.loc    1  388  is_stmt 1
        lea       (%r9,%rax,8), %r13                            #388.17
..LN5677:
	.loc    1  379  is_stmt 1
        lea       (%r10,%rax,8), %r15                           #379.17
..LN5678:
                                # LOE rbx r12 r13 r14 r15
..B12.76:                       # Preds ..B12.91 ..B12.75       # Infreq
..L526:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN5679:
	.loc    1  375  is_stmt 1
        vmovsd    (%rbx,%r14,8), %xmm0                          #375.57
..LN5680:
        vcomisd   .L_2il0floatpacket.1(%rip), %xmm0             #375.78
..LN5681:
        jbe       ..B12.91      # Prob 50%                      #375.78
..LN5682:
                                # LOE rbx r12 r13 r14 r15
..B12.77:                       # Preds ..B12.76                # Infreq
..LN5683:
	.loc    1  381  is_stmt 1
        movq      2416(%rsp), %rax                              #381.17
..LN5684:
	.loc    1  383  is_stmt 1
        vmovsd    2424(%rsp), %xmm0                             #383.23
..LN5685:
	.loc    1  379  is_stmt 1
        vmovsd    (%r15,%r14,8), %xmm4                          #379.17
..LN5686:
	.loc    1  380  is_stmt 1
        vmovsd    8(%r15,%r14,8), %xmm3                         #380.17
..LN5687:
	.loc    1  381  is_stmt 1
        vmovsd    16(%rax,%r14,8), %xmm2                        #381.17
..LN5688:
	.loc    1  382  is_stmt 1
        vmovsd    8(%rax,%r14,8), %xmm1                         #382.17
..LN5689:
	.loc    1  379  is_stmt 1
        vmovsd    %xmm4, 1880(%rsp)                             #379.7
..LN5690:
	.loc    1  380  is_stmt 1
        vmovsd    %xmm3, 1888(%rsp)                             #380.7
..LN5691:
	.loc    1  381  is_stmt 1
        vmovsd    %xmm2, 1896(%rsp)                             #381.7
..LN5692:
	.loc    1  382  is_stmt 1
        vmovsd    %xmm1, 1904(%rsp)                             #382.7
..LN5693:
	.loc    1  383  is_stmt 1
        vcomisd   %xmm4, %xmm0                                  #383.23
..LN5694:
        jb        ..B12.81      # Prob 50%                      #383.23
..LN5695:
                                # LOE rbx r12 r13 r14 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B12.78:                       # Preds ..B12.77                # Infreq
..LN5696:
        vcomisd   %xmm3, %xmm0                                  #383.44
..LN5697:
        jb        ..B12.81      # Prob 50%                      #383.44
..LN5698:
                                # LOE rbx r12 r13 r14 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B12.79:                       # Preds ..B12.78                # Infreq
..LN5699:
	.loc    1  384  is_stmt 1
        vcomisd   %xmm2, %xmm0                                  #384.19
..LN5700:
        jb        ..B12.81      # Prob 50%                      #384.19
..LN5701:
                                # LOE rbx r12 r13 r14 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B12.80:                       # Preds ..B12.79                # Infreq
..LN5702:
        vcomisd   %xmm1, %xmm0                                  #384.40
..LN5703:
        jae       ..B12.91      # Prob 50%                      #384.40
..LN5704:
                                # LOE rbx r12 r13 r14 r15 xmm1 xmm2 xmm3 xmm4
..B12.81:                       # Preds ..B12.80 ..B12.79 ..B12.78 ..B12.77 # Infreq
..LN5705:
	.loc    1  385  is_stmt 1
        vcomisd   2408(%rsp), %xmm4                             #385.23
..LN5706:
        jb        ..B12.85      # Prob 22%                      #385.23
..LN5707:
                                # LOE rbx r12 r13 r14 r15 xmm1 xmm2 xmm3
..B12.82:                       # Preds ..B12.81                # Infreq
..LN5708:
        vcomisd   2408(%rsp), %xmm3                             #385.44
..LN5709:
        jb        ..B12.85      # Prob 22%                      #385.44
..LN5710:
                                # LOE rbx r12 r13 r14 r15 xmm1 xmm2
..B12.83:                       # Preds ..B12.82                # Infreq
..LN5711:
	.loc    1  386  is_stmt 1
        vcomisd   2408(%rsp), %xmm2                             #386.19
..LN5712:
        jb        ..B12.85      # Prob 22%                      #386.19
..LN5713:
                                # LOE rbx r12 r13 r14 r15 xmm1
..B12.84:                       # Preds ..B12.83                # Infreq
..LN5714:
        vcomisd   2408(%rsp), %xmm1                             #386.40
..LN5715:
        jae       ..B12.91      # Prob 78%                      #386.40
..LN5716:
                                # LOE rbx r12 r13 r14 r15
..B12.85:                       # Preds ..B12.84 ..B12.83 ..B12.82 ..B12.81 # Infreq
..LN5717:
	.loc    1  393  is_stmt 1
        lea       680(%rsp), %rdi                               #393.14
..LN5718:
	.loc    1  388  is_stmt 1
        movq      (%r13,%r14,8), %rax                           #388.17
..LN5719:
	.loc    1  393  is_stmt 1
        lea       1880(%rsp), %rsi                              #393.14
..LN5720:
	.loc    1  389  is_stmt 1
        movq      8(%r13,%r14,8), %rcx                          #389.17
..LN5721:
	.loc    1  393  is_stmt 1
        movl      $4, %edx                                      #393.14
..LN5722:
	.loc    1  390  is_stmt 1
        movq      16(%r12,%r14,8), %r8                          #390.17
..LN5723:
	.loc    1  391  is_stmt 1
        movq      8(%r12,%r14,8), %r9                           #391.17
..LN5724:
	.loc    1  393  is_stmt 1
        vmovsd    512(%rsi), %xmm0                              #393.14
..LN5725:
	.loc    1  388  is_stmt 1
        movq      %rax, -1200(%rsi)                             #388.7
..LN5726:
	.loc    1  389  is_stmt 1
        movq      %rcx, -1192(%rsi)                             #389.7
..LN5727:
	.loc    1  390  is_stmt 1
        movq      %r8, -1184(%rsi)                              #390.7
..LN5728:
	.loc    1  391  is_stmt 1
        movq      %r9, -1176(%rsi)                              #391.7
..___tag_value_create_xgrid_2dx1d_order1.527:
..LN5729:
	.loc    1  393  is_stmt 1
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #393.14
..___tag_value_create_xgrid_2dx1d_order1.528:
..LN5730:
                                # LOE rbx r12 r13 r14 r15 eax
..B12.86:                       # Preds ..B12.85                # Infreq
..LN5731:
	.loc    1  395  is_stmt 1
        lea       680(%rsp), %rdi                               #395.21
..LN5732:
        vmovsd    1704(%rdi), %xmm0                             #395.21
..LN5733:
        lea       1880(%rsp), %rsi                              #395.21
..LN5734:
        vmovsd    544(%rsi), %xmm1                              #395.21
..LN5735:
        lea       1080(%rsp), %rcx                              #395.21
..LN5736:
        vmovsd    1320(%rcx), %xmm2                             #395.21
..LN5737:
        lea       1480(%rsp), %r8                               #395.21
..LN5738:
        vmovsd    1328(%rcx), %xmm3                             #395.21
..LN5739:
        movl      %eax, %edx                                    #395.21
..___tag_value_create_xgrid_2dx1d_order1.529:
..LN5740:
#       clip(const double *, const double *, int, double, double, double, double, double *, double *)
        call      clip                                          #395.21
..___tag_value_create_xgrid_2dx1d_order1.530:
..LN5741:
                                # LOE rbx r12 r13 r14 r15 eax
..B12.87:                       # Preds ..B12.86                # Infreq
..LN5742:
        testl     %eax, %eax                                    #395.96
..LN5743:
        jle       ..B12.91      # Prob 40%                      #395.96
..LN5744:
                                # LOE rbx r12 r13 r14 r15 eax
..B12.88:                       # Preds ..B12.87                # Infreq
..LN5745:
	.loc    1  396  is_stmt 1
        movl      %eax, %edx                                    #396.10
..LN5746:
        lea       1080(%rsp), %rdi                              #396.10
..LN5747:
        lea       1480(%rsp), %rsi                              #396.10
..___tag_value_create_xgrid_2dx1d_order1.531:
..LN5748:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #396.10
..___tag_value_create_xgrid_2dx1d_order1.532:
..LN5749:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B12.89:                       # Preds ..B12.88                # Infreq
..LN5750:
	.loc    1  397  is_stmt 1
        movq      2320(%rsp), %rax                              #397.13
..LN5751:
	.loc    1  398  is_stmt 1
        movq      24(%rsp), %rdx                                #398.2
..LN5752:
        movq      32(%rsp), %rcx                                #398.2
..LN5753:
	.loc    1  396  is_stmt 1
        vmulsd    (%rbx,%r14,8), %xmm0, %xmm2                   #396.46
..LN5754:
	.loc    1  397  is_stmt 1
        vmovsd    (%rax,%r14,8), %xmm0                          #397.13
..LN5755:
	.loc    1  398  is_stmt 1
        vminsd    (%rdx,%rcx,8), %xmm0, %xmm0                   #398.2
..LN5756:
        vdivsd    %xmm0, %xmm2, %xmm1                           #398.12
..LN5757:
        vcomisd   .L_2il0floatpacket.2(%rip), %xmm1             #398.23
..LN5758:
        jbe       ..B12.91      # Prob 50%                      #398.23
..LN5759:
                                # LOE rbx r12 r13 r14 r15 xmm2
..B12.90:                       # Preds ..B12.89                # Infreq
..LN5760:
	.loc    1  399  is_stmt 1
        movq      2304(%rsp), %r11                              #399.10
..LN5761:
	.loc    1  400  is_stmt 1
        movq      40(%rbp), %rdx                                #400.4
..LN5762:
	.loc    1  401  is_stmt 1
        movq      48(%rbp), %rsi                                #401.4
..LN5763:
	.loc    1  402  is_stmt 1
        movq      56(%rbp), %r8                                 #402.4
..LN5764:
	.loc    1  399  is_stmt 1
        movq      72(%rbp), %rax                                #399.10
..LN5765:
	.loc    1  403  is_stmt 1
        movq      64(%rbp), %r10                                #403.4
..LN5766:
	.loc    1  401  is_stmt 1
        movl      2376(%rsp), %ecx                              #401.4
..LN5767:
	.loc    1  402  is_stmt 1
        movq      32(%rsp), %rdi                                #402.4
..LN5768:
	.loc    1  403  is_stmt 1
        movl      16(%rsp), %r9d                                #403.4
..LN5769:
	.loc    1  400  is_stmt 1
        movl      %r14d, (%rdx,%r11,4)                          #400.4
..LN5770:
	.loc    1  401  is_stmt 1
        movl      %ecx, (%rsi,%r11,4)                           #401.4
..LN5771:
	.loc    1  402  is_stmt 1
        movl      %edi, (%r8,%r11,4)                            #402.4
..LN5772:
	.loc    1  399  is_stmt 1
        vmovsd    %xmm2, (%rax,%r11,8)                          #399.10
..LN5773:
	.loc    1  403  is_stmt 1
        movl      %r9d, (%r10,%r11,4)                           #403.4
..LN5774:
	.loc    1  404  is_stmt 1
        incq      %r11                                          #404.6
..LN5775:
        movq      %r11, 2304(%rsp)                              #404.6
..LN5776:
	.loc    1  405  is_stmt 1
        cmpq      $10000000, %r11                               #405.16
..LN5777:
        jg        ..B12.101     # Prob 0%                       #405.16
..LN5778:
                                # LOE rbx r12 r13 r14 r15
..B12.91:                       # Preds ..B12.84 ..B12.80 ..B12.101 ..B12.90 ..B12.89
                                #       ..B12.87 ..B12.76       # Infreq
..LN5779:
	.loc    1  375  is_stmt 1
        incq      %r14                                          #375.47
..LN5780:
        cmpq      2432(%rsp), %r14                              #375.42
..LN5781:
        jl        ..B12.76      # Prob 82%                      #375.42
..LN5782:
                                # LOE rbx r12 r13 r14 r15
..B12.92:                       # Preds ..B12.91                # Infreq
..LN5783:
        movl      2376(%rsp), %edx                              #
..LN5784:
        incl      %edx                                          #375.23
..LN5785:
        movl      2360(%rsp), %ecx                              #
..LN5786:
        movl      2352(%rsp), %r8d                              #
..LN5787:
        addl      %r8d, %ecx                                    #375.23
..LN5788:
        movl      2368(%rsp), %eax                              #
..LN5789:
        movq      2336(%rsp), %r9                               #
..LN5790:
        lea       1(%rax,%r8), %eax                             #375.23
..LN5791:
        movq      2328(%rsp), %r10                              #
..LN5792:
        movq      32(%rbp), %r11                                #
..LN5793:
        cmpl      2344(%rsp), %edx                              #375.18
..LN5794:
        jl        ..B12.74      # Prob 82%                      #375.18
..LN5795:
                                # LOE r9 r10 r11 eax edx ecx r8d
..B12.93:                       # Preds ..B12.102 ..B12.92      # Infreq
..LN5796:
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm0             #
..LN5797:
        movq      32(%rsp), %rsi                                #
..LN5798:
        movq      8(%rsp), %r9                                  #
..LN5799:
        movq      (%rsp), %rdi                                  #
..LN5800:
        movl      16(%rsp), %r8d                                #
..LN5801:
        movq      2280(%rsp), %r14                              #
..LN5802:
        movl      2296(%rsp), %ebx                              #
..LN5803:
        movq      2288(%rsp), %r12                              #
..LN5804:
        movl      2344(%rsp), %r15d                             #
..LN5805:
        movq      24(%rbp), %r11                                #
..LN5806:
        movq      16(%rbp), %r13                                #
..LN5807:
                                # LOE rbx rsi rdi r8 r9 r11 r12 r13 r14 r15 ebx esi edi r8d r9d r12d r14d r15d bl bh sil dil r8b r9b r12b r14b r15b xmm0
..B12.94:                       # Preds ..B12.93                # Infreq
..LN5808:
	.loc    1  371  is_stmt 1
        incq      %rsi                                          #371.45
..LN5809:
        cmpq      %r12, %rsi                                    #371.40
..LN5810:
        jl        ..B12.72      # Prob 82%                      #371.40
..LN5811:
                                # LOE rbx rsi rdi r8 r9 r11 r12 r13 r14 r15 ebx edi r8d r9d r12d r14d r15d bl bh dil r8b r9b r12b r14b r15b xmm0
..B12.95:                       # Preds ..B12.94                # Infreq
..LN5812:
        incl      %r8d                                          #371.21
..LN5813:
        addq      %r12, %r9                                     #371.21
..LN5814:
        incq      %rdi                                          #371.21
..LN5815:
        cmpl      %ebx, %r8d                                    #371.16
..LN5816:
        jl        ..B12.106     # Prob 82%                      #371.16
..LN5817:
                                # LOE rbx rdi r9 r11 r12 r13 r14 r15 ebx r8d r12d r14d r15d bl bh r12b r14b r15b xmm0
..B12.98:                       # Preds ..B12.108 ..B12.105 ..B12.95 ..B12.68 # Infreq
..LN5818:
	.loc    1  411  is_stmt 1
        movq      2312(%rsp), %rdi                              #411.3
..LN5819:
#       free(void *)
        call      free                                          #411.3
..LN5820:
                                # LOE
..B12.99:                       # Preds ..B12.98                # Infreq
..LN5821:
	.loc    1  412  is_stmt 1
        movq      2280(%rsp), %rdi                              #412.3
..LN5822:
#       free(void *)
        call      free                                          #412.3
..LN5823:
                                # LOE
..B12.100:                      # Preds ..B12.99                # Infreq
..LN5824:
	.loc    1  414  is_stmt 1
        movq      2304(%rsp), %rax                              #414.10
..LN5825:
	.loc    1  414  epilogue_begin  is_stmt 1
        addq      $2456, %rsp                                   #414.10
	.cfi_restore 3
..LN5826:
        popq      %rbx                                          #414.10
	.cfi_restore 15
..LN5827:
        popq      %r15                                          #414.10
	.cfi_restore 14
..LN5828:
        popq      %r14                                          #414.10
	.cfi_restore 13
..LN5829:
        popq      %r13                                          #414.10
	.cfi_restore 12
..LN5830:
        popq      %r12                                          #414.10
..LN5831:
        movq      %rbp, %rsp                                    #414.10
..LN5832:
        popq      %rbp                                          #414.10
	.cfi_def_cfa 7, 8
	.cfi_restore 6
..LN5833:
        ret                                                     #414.10
	.cfi_def_cfa 6, 16
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_offset 6, -16
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN5834:
                                # LOE
..B12.101:                      # Preds ..B12.90                # Infreq
..LN5835:
	.loc    1  405  is_stmt 1
        movl      $.L_2__STRING.0, %edi                         #405.26
..___tag_value_create_xgrid_2dx1d_order1.548:
..LN5836:
#       error_handler(const char *)
        call      error_handler                                 #405.26
..___tag_value_create_xgrid_2dx1d_order1.549:
..LN5837:
        jmp       ..B12.91      # Prob 100%                     #405.26
..LN5838:
                                # LOE rbx r12 r13 r14 r15
..B12.102:                      # Preds ..B12.74                # Infreq
..LN5839:
	.loc    1  375  is_stmt 1
        incl      %edx                                          #375.23
..LN5840:
        addl      %r8d, %ecx                                    #375.23
..LN5841:
        lea       1(%rax,%r8), %eax                             #375.23
..LN5842:
        cmpl      2344(%rsp), %edx                              #375.18
..LN5843:
        jl        ..B12.74      # Prob 82%                      #375.18
..LN5844:
        jmp       ..B12.93      # Prob 100%                     #375.18
..LN5845:
                                # LOE r9 r10 r11 eax edx ecx r8d
..B12.104:                      # Preds ..B12.72                # Infreq
..LN5846:
	.loc    1  371  is_stmt 1
        .byte     15                                            #371.45
..LN5847:
        .byte     31                                            #371.45
..LN5848:
        .byte     132                                           #371.45
..LN5849:
        .byte     0                                             #371.45
..LN5850:
        .byte     0                                             #371.45
..LN5851:
        .byte     0                                             #371.45
..LN5852:
        .byte     0                                             #371.45
..LN5853:
        .byte     0                                             #371.45
..LN5854:
        incq      %rsi                                          #371.45
..LN5855:
        cmpq      %r12, %rsi                                    #371.40
..LN5856:
        jl        ..B12.72      # Prob 82%                      #371.40
..LN5857:
                                # LOE rsi rdi r9 r11 r12 r13 r14 ebx r8d r15d xmm0
..B12.105:                      # Preds ..B12.104               # Infreq
..LN5858:
        incl      %r8d                                          #371.21
..LN5859:
        addq      %r12, %r9                                     #371.21
..LN5860:
        incq      %rdi                                          #371.21
..LN5861:
        cmpl      %ebx, %r8d                                    #371.16
..LN5862:
        jge       ..B12.98      # Prob 18%                      #371.16
..LN5863:
                                # LOE rdi r9 r11 r12 r13 r14 ebx r8d r15d xmm0
..B12.106:                      # Preds ..B12.95 ..B12.105      # Infreq
..LN5864:
        xorl      %esi, %esi                                    #371.31
..LN5865:
        jmp       ..B12.72      # Prob 100%                     #371.31
..LN5866:
                                # LOE rsi rdi r9 r11 r12 r13 r14 ebx r8d r15d xmm0
..B12.108:                      # Preds ..B12.70                # Infreq
..LN5867:
        incl      %r8d                                          #371.21
..LN5868:
        addq      %r12, %r9                                     #371.21
..LN5869:
        incq      %rdi                                          #371.21
..LN5870:
        cmpl      %ebx, %r8d                                    #371.16
..LN5871:
        jl        ..B12.70      # Prob 82%                      #371.16
..LN5872:
        jmp       ..B12.98      # Prob 100%                     #371.16
..LN5873:
                                # LOE rax rdi r9 r12 edx ebx r8d xmm0 xmm1
..B12.110:                      # Preds ..B12.59                # Infreq
..LN5874:
	.loc    1  75  is_stmt 1
        incl      %ecx                                          #75.18
..LN5875:
        addq      %rsi, %rdx                                    #75.18
..LN5876:
        lea       1(%rax,%rdi), %eax                            #75.18
..LN5877:
        cmpl      8(%rsp), %ecx                                 #75.14
..LN5878:
        jl        ..B12.59      # Prob 82%                      #75.14
..LN5879:
        jmp       ..B12.65      # Prob 100%                     #75.14
..LN5880:
                                # LOE rdx rsi r8 r9 r10 eax ecx edi
..B12.112:                      # Preds ..B12.50                # Infreq
..LN5881:
        incl      %esi                                          #75.18
..LN5882:
        addq      %rdi, %rcx                                    #75.18
..LN5883:
        lea       1(%rdx,%rax), %edx                            #75.18
..LN5884:
        cmpl      24(%rsp), %esi                                #75.14
..LN5885:
        jl        ..B12.50      # Prob 82%                      #75.14
..LN5886:
        jmp       ..B12.56      # Prob 100%                     #75.14
..LN5887:
                                # LOE rcx rdi r8 r9 r10 eax edx esi
..B12.114:                      # Preds ..B12.38                # Infreq
..LN5888:
	.loc    1  361  is_stmt 1
        xorl      %r12d, %r12d                                  #361.28
..LN5889:
        jmp       ..B12.42      # Prob 100%                     #361.28
..LN5890:
                                # LOE rdx rdi r8 r9 r11 r12 r13 eax ecx esi r10d r14d
..B12.115:                      # Preds ..B12.25 ..B12.27 ..B12.29 # Infreq
..LN5891:
        xorl      %r14d, %r14d                                  #361.28
..LN5892:
        jmp       ..B12.37      # Prob 100%                     #361.28
..LN5893:
                                # LOE rdx rdi r8 r9 r11 eax ecx esi r10d r14d
..B12.118:                      # Preds ..B12.8 ..B12.11 ..B12.13 # Infreq
..LN5894:
        xorl      %ebx, %ebx                                    #361.28
..LN5895:
        jmp       ..B12.21      # Prob 100%                     #361.28
..LN5896:
                                # LOE rdx rbx rdi r8 r9 r11 eax ecx esi r10d
..B12.120:                      # Preds ..B12.9                 # Infreq
..LN5897:
        movq      16(%rsp), %rbx                                #361.28
..LN5898:
        xorl      %r12d, %r12d                                  #361.28
..LN5899:
        jmp       ..B12.18      # Prob 100%                     #361.28
..LN5900:
        .align    16,0x90
	.cfi_endproc
..LN5901:
                                # LOE rdx rbx rdi r8 r9 r11 r12 eax ecx esi r10d
..LN5902:
# mark_end;
	.type	create_xgrid_2dx1d_order1,@function
	.size	create_xgrid_2dx1d_order1,.-create_xgrid_2dx1d_order1
..LNcreate_xgrid_2dx1d_order1.5903:
.LNcreate_xgrid_2dx1d_order1:
	.data
# -- End  create_xgrid_2dx1d_order1
	.text
.L_2__routine_start_create_xgrid_2dx1d_order2__12:
# -- Begin  create_xgrid_2dx1d_order2_
	.text
# mark_begin;
       .align    16,0x90
	.globl create_xgrid_2dx1d_order2_
# --- create_xgrid_2dx1d_order2_(const int *, const int *, const int *, const int *, const double *, const double *, const double *, const double *, const double *, int *, int *, int *, int *, double *, double *, double *)
create_xgrid_2dx1d_order2_:
# parameter 1(nlon_in): %rdi
# parameter 2(nlat_in): %rsi
# parameter 3(nlon_out): %rdx
# parameter 4(nlat_out): %rcx
# parameter 5(lon_in): %r8
# parameter 6(lat_in): %r9
# parameter 7(lon_out): 16 + %rbp
# parameter 8(lat_out): 24 + %rbp
# parameter 9(mask_in): 32 + %rbp
# parameter 10(i_in): 40 + %rbp
# parameter 11(j_in): 48 + %rbp
# parameter 12(i_out): 56 + %rbp
# parameter 13(j_out): 64 + %rbp
# parameter 14(xgrid_area): 72 + %rbp
# parameter 15(xgrid_clon): 80 + %rbp
# parameter 16(xgrid_clat): 88 + %rbp
..B13.1:                        # Preds ..B13.0
	.cfi_startproc
..___tag_value_create_xgrid_2dx1d_order2_.554:
..L555:
                                                        #430.1
..LN5904:
	.loc    1  430  is_stmt 1
        pushq     %rbp                                          #430.1
	.cfi_def_cfa_offset 16
..LN5905:
        movq      %rsp, %rbp                                    #430.1
	.cfi_def_cfa 6, 16
	.cfi_offset 6, -16
..LN5906:
        andq      $-32, %rsp                                    #430.1
..LN5907:
        pushq     %r12                                          #430.1
..LN5908:
        pushq     %r13                                          #430.1
..LN5909:
        pushq     %r14                                          #430.1
..LN5910:
        pushq     %r15                                          #430.1
..LN5911:
        pushq     %rbx                                          #430.1
..LN5912:
        subq      $3512, %rsp                                   #430.1
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN5913:
        movq      %rsi, %r13                                    #430.1
..LN5914:
        movq      %rdi, 56(%rsp)                                #430.1
..LN5915:
        movq      %rdx, %r14                                    #430.1
..LN5916:
	.loc    1  451  prologue_end  is_stmt 1
        movl      (%rdi), %edi                                  #451.10
..LN5917:
	.loc    1  430  is_stmt 1
        movq      %rcx, %r15                                    #430.1
..LN5918:
	.loc    1  451  is_stmt 1
        movl      %edi, 3320(%rsp)                              #451.10
..LN5919:
	.loc    1  452  is_stmt 1
        movl      (%r13), %eax                                  #452.10
..LN5920:
	.loc    1  460  is_stmt 1
        imull     %eax, %edi                                    #460.28
..LN5921:
        movslq    %edi, %rdi                                    #460.28
..LN5922:
	.loc    1  453  is_stmt 1
        movl      (%r14), %r12d                                 #453.10
..LN5923:
	.loc    1  460  is_stmt 1
        shlq      $3, %rdi                                      #460.28
..LN5924:
	.loc    1  430  is_stmt 1
        movq      %r9, 3288(%rsp)                               #430.1
..LN5925:
        movq      %r8, 3312(%rsp)                               #430.1
..LN5926:
	.loc    1  452  is_stmt 1
        movl      %eax, 3304(%rsp)                              #452.10
..LN5927:
	.loc    1  453  is_stmt 1
        movl      %r12d, 32(%rsp)                               #453.10
..LN5928:
	.loc    1  474  is_stmt 1
        movslq    %r12d, %r12                                   #474.31
..LN5929:
	.loc    1  454  is_stmt 1
        movl      (%r15), %ebx                                  #454.10
..LN5930:
	.loc    1  456  is_stmt 1
        movl      $0, 3144(%rsp)                                #456.3
..LN5931:
        movq      $0, 3136(%rsp)                                #456.12
..LN5932:
	.loc    1  460  is_stmt 1
#       malloc(size_t)
        call      malloc                                        #460.28
..LN5933:
                                # LOE rax r12 r13 r14 r15 ebx
..B13.164:                      # Preds ..B13.1
..LN5934:
        movq      %rax, 3280(%rsp)                              #460.28
..LN5935:
                                # LOE r12 r13 r14 r15 ebx
..B13.2:                        # Preds ..B13.164
..LN5936:
	.loc    1  461  is_stmt 1
        movl      32(%rsp), %edi                                #461.28
..LN5937:
        imull     %ebx, %edi                                    #461.28
..LN5938:
        movslq    %edi, %rdi                                    #461.28
..LN5939:
        shlq      $3, %rdi                                      #461.28
..LN5940:
#       malloc(size_t)
        call      malloc                                        #461.28
..LN5941:
                                # LOE rax r12 r13 r14 r15 ebx
..B13.165:                      # Preds ..B13.2
..LN5942:
        movq      %rax, 2416(%rsp)                              #461.28
..LN5943:
                                # LOE r12 r13 r14 r15 ebx
..B13.3:                        # Preds ..B13.165
..LN5944:
	.loc    1  462  is_stmt 1
        movl      32(%rsp), %eax                                #462.32
..LN5945:
        lea       1(%rbx), %edx                                 #462.40
..LN5946:
        movl      %edx, 64(%rsp)                                #462.40
..LN5947:
        lea       1(%rax), %edi                                 #462.32
..LN5948:
        movl      %edi, 48(%rsp)                                #462.32
..LN5949:
	.loc    1  464  is_stmt 1
        movslq    %edi, %rdi                                    #464.32
..LN5950:
        movq      %rdi, 40(%rsp)                                #464.32
..LN5951:
	.loc    1  462  is_stmt 1
        imull     %edx, %edi                                    #462.40
..LN5952:
        movslq    %edi, %rdi                                    #462.40
..LN5953:
        shlq      $3, %rdi                                      #462.43
..LN5954:
        movq      %rdi, (%rsp)                                  #462.43
..LN5955:
#       malloc(size_t)
        call      malloc                                        #462.20
..LN5956:
                                # LOE rax r12 r13 r14 r15 ebx
..B13.166:                      # Preds ..B13.3
..LN5957:
        movq      %rax, %rdx                                    #462.20
..LN5958:
                                # LOE rdx r12 r13 r14 r15 ebx
..B13.4:                        # Preds ..B13.166
..LN5959:
	.loc    1  463  is_stmt 1
        movq      (%rsp), %rdi                                  #463.20
..LN5960:
        movq      %rdx, 680(%rsp)                               #463.20
..LN5961:
#       malloc(size_t)
        call      malloc                                        #463.20
..LN5962:
                                # LOE rax r12 r13 r14 r15 ebx
..B13.167:                      # Preds ..B13.4
..LN5963:
        movq      680(%rsp), %rdx                               #
..LN5964:
                                # LOE rax rdx r12 r13 r14 r15 edx ebx dl dh
..B13.5:                        # Preds ..B13.167
..LN5965:
	.loc    1  464  is_stmt 1
        movq      24(%rbp), %r8                                 #464.32
..LN5966:
        xorl      %esi, %esi                                    #464.3
..LN5967:
        movq      %rax, %r10                                    #464.32
..LN5968:
        movq      %rdx, %r9                                     #464.32
..LN5969:
        testl     %ebx, %ebx                                    #464.17
..LN5970:
        jl        ..B13.48      # Prob 9%                       #464.17
..LN5971:
                                # LOE rax rdx r8 r9 r10 r12 r13 r14 r15 edx ebx esi r9d dl dh r9b
..B13.6:                        # Preds ..B13.5
..LN5972:
        movq      %rax, 688(%rsp)                               #464.28
..LN5973:
        lea       1(%r12), %rcx                                 #464.28
..LN5974:
        movl      %ecx, %edi                                    #464.28
..LN5975:
        andl      $-4, %edi                                     #464.28
..LN5976:
        movslq    %edi, %rdi                                    #464.28
..LN5977:
        movq      %rdi, 16(%rsp)                                #464.28
..LN5978:
        movq      %rdx, 680(%rsp)                               #464.28
..LN5979:
        movl      %ebx, 3120(%rsp)                              #464.28
..LN5980:
        movq      %r12, 2424(%rsp)                              #464.28
..LN5981:
        movq      %r13, 24(%rsp)                                #464.28
..LN5982:
        movq      %r14, 8(%rsp)                                 #464.28
..LN5983:
        movq      %r15, (%rsp)                                  #464.28
..LN5984:
        movl      %ecx, %ebx                                    #464.28
..LN5985:
        movq      40(%rsp), %rdx                                #464.28
..LN5986:
        movl      48(%rsp), %eax                                #464.28
..LN5987:
        movl      32(%rsp), %edi                                #464.28
..LN5988:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi
..B13.7:                        # Preds ..B13.46 ..B13.6
..L565:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN5989:
        testl     %edi, %edi                                    #464.42
..LN5990:
        jl        ..B13.46      # Prob 50%                      #464.42
..LN5991:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi
..B13.8:                        # Preds ..B13.7
..LN5992:
        cmpq      $4, %rcx                                      #464.28
..LN5993:
        jl        ..B13.158     # Prob 10%                      #464.28
..LN5994:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi
..B13.9:                        # Preds ..B13.8
..LN5995:
        cmpq      $95, %rcx                                     #464.28
..LN5996:
        jl        ..B13.160     # Prob 10%                      #464.28
..LN5997:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi
..B13.10:                       # Preds ..B13.9
..LN5998:
        movq      %r9, %r11                                     #464.28
..LN5999:
        andq      $31, %r11                                     #464.28
..LN6000:
        testl     %r11d, %r11d                                  #464.28
..LN6001:
        je        ..B13.13      # Prob 50%                      #464.28
..LN6002:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi r11d
..B13.11:                       # Preds ..B13.10
..LN6003:
        testl     $7, %r11d                                     #464.28
..LN6004:
        jne       ..B13.158     # Prob 10%                      #464.28
..LN6005:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi r11d
..B13.12:                       # Preds ..B13.11
..LN6006:
        negl      %r11d                                         #464.28
..LN6007:
        addl      $32, %r11d                                    #464.28
..LN6008:
        shrl      $3, %r11d                                     #464.28
..LN6009:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi r11d
..B13.13:                       # Preds ..B13.12 ..B13.10
..LN6010:
        movl      %r11d, %r12d                                  #464.28
..LN6011:
        lea       4(%r12), %r13                                 #464.28
..LN6012:
        cmpq      %r13, %rcx                                    #464.28
..LN6013:
        jl        ..B13.158     # Prob 10%                      #464.28
..LN6014:
                                # LOE rdx rcx r8 r9 r10 r12 eax ebx esi edi r11d
..B13.14:                       # Preds ..B13.13
..LN6015:
        negl      %r11d                                         #464.28
..LN6016:
        xorl      %r13d, %r13d                                  #464.28
..LN6017:
        addl      %ebx, %r11d                                   #464.28
..LN6018:
        andl      $3, %r11d                                     #464.28
..LN6019:
        negl      %r11d                                         #464.28
..LN6020:
        addl      %ebx, %r11d                                   #464.28
..LN6021:
        movslq    %r11d, %r11                                   #464.28
..LN6022:
        testq     %r12, %r12                                    #464.28
..LN6023:
        jbe       ..B13.18      # Prob 10%                      #464.28
..LN6024:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 eax ebx esi edi
..B13.15:                       # Preds ..B13.14
..LN6025:
        movq      16(%rbp), %r15                                #
..LN6026:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 r15 eax ebx esi edi
..B13.16:                       # Preds ..B13.16 ..B13.15
..L566:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # PEELED LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
..LN6027:
	.loc    1  465  is_stmt 1
        movq      (%r15,%r13,8), %r14                           #465.24
..LN6028:
        movq      %r14, (%r9,%r13,8)                            #465.5
..LN6029:
	.loc    1  464  is_stmt 1
        incq      %r13                                          #464.28
..LN6030:
        cmpq      %r12, %r13                                    #464.28
..LN6031:
        jb        ..B13.16      # Prob 82%                      #464.28
..LN6032:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 r15 eax ebx esi edi
..B13.18:                       # Preds ..B13.16 ..B13.14 ..B13.160
..LN6033:
        movq      16(%rbp), %r13                                #
..LN6034:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 eax ebx esi edi
..B13.19:                       # Preds ..B13.19 ..B13.18
..L567:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS VECTORIZED
                # VECTORIZATION HAS UNALIGNED MEMORY REFERENCES
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN6035:
	.loc    1  465  is_stmt 1
        vmovupd   (%r13,%r12,8), %ymm0                          #465.24
..LN6036:
        vmovupd   %ymm0, (%r9,%r12,8)                           #465.5
..LN6037:
	.loc    1  464  is_stmt 1
        addq      $4, %r12                                      #464.28
..LN6038:
        cmpq      %r11, %r12                                    #464.28
..LN6039:
        jb        ..B13.19      # Prob 82%                      #464.28
..LN6040:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 eax ebx esi edi
..B13.21:                       # Preds ..B13.19 ..B13.158
..LN6041:
        cmpq      %rcx, %r11                                    #464.28
..LN6042:
        jae       ..B13.25      # Prob 10%                      #464.28
..LN6043:
                                # LOE rdx rcx r8 r9 r10 r11 eax ebx esi edi
..B13.22:                       # Preds ..B13.21
..LN6044:
        movq      16(%rbp), %r13                                #
..LN6045:
                                # LOE rdx rcx r8 r9 r10 r11 r13 eax ebx esi edi
..B13.23:                       # Preds ..B13.23 ..B13.22
..L568:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
..LN6046:
	.loc    1  465  is_stmt 1
        movq      (%r13,%r11,8), %r12                           #465.24
..LN6047:
        movq      %r12, (%r9,%r11,8)                            #465.5
..LN6048:
	.loc    1  464  is_stmt 1
        incq      %r11                                          #464.28
..LN6049:
        cmpq      %rcx, %r11                                    #464.28
..LN6050:
        jb        ..B13.23      # Prob 82%                      #464.28
..LN6051:
                                # LOE rdx rcx r8 r9 r10 r11 r13 eax ebx esi edi
..B13.25:                       # Preds ..B13.23 ..B13.21
..LN6052:
        cmpl      $16, %eax                                     #464.28
..LN6053:
        jl        ..B13.155     # Prob 10%                      #464.28
..LN6054:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi
..B13.26:                       # Preds ..B13.25
..LN6055:
        movq      %r10, %r12                                    #464.28
..LN6056:
        andq      $31, %r12                                     #464.28
..LN6057:
        movl      %r12d, %r12d                                  #464.28
..LN6058:
        testl     %r12d, %r12d                                  #464.28
..LN6059:
        je        ..B13.29      # Prob 50%                      #464.28
..LN6060:
                                # LOE rdx rcx r8 r9 r10 r12 eax ebx esi edi
..B13.27:                       # Preds ..B13.26
..LN6061:
        testl     $7, %r12d                                     #464.28
..LN6062:
        jne       ..B13.155     # Prob 10%                      #464.28
..LN6063:
                                # LOE rdx rcx r8 r9 r10 r12 eax ebx esi edi
..B13.28:                       # Preds ..B13.27
..LN6064:
        negl      %r12d                                         #464.28
..LN6065:
        addl      $32, %r12d                                    #464.28
..LN6066:
        shrl      $3, %r12d                                     #464.28
..LN6067:
                                # LOE rdx rcx r8 r9 r10 r12 eax ebx esi edi
..B13.29:                       # Preds ..B13.28 ..B13.26
..LN6068:
        lea       16(%r12), %r11d                               #464.28
..LN6069:
        cmpl      %r11d, %eax                                   #464.28
..LN6070:
        jl        ..B13.155     # Prob 10%                      #464.28
..LN6071:
                                # LOE rdx rcx r8 r9 r10 r12 eax ebx esi edi
..B13.30:                       # Preds ..B13.29
..LN6072:
        movl      %eax, %r14d                                   #464.28
..LN6073:
        xorl      %r11d, %r11d                                  #464.28
..LN6074:
        subl      %r12d, %r14d                                  #464.28
..LN6075:
        andl      $15, %r14d                                    #464.28
..LN6076:
        negl      %r14d                                         #464.28
..LN6077:
        addl      %eax, %r14d                                   #464.28
..LN6078:
	.loc    1  466  is_stmt 1
        vmovsd    (%r8), %xmm0                                  #466.24
..LN6079:
	.loc    1  464  is_stmt 1
        testq     %r12, %r12                                    #464.28
..LN6080:
        jbe       ..B13.34      # Prob 10%                      #464.28
..LN6081:
                                # LOE rdx rcx r8 r9 r10 r11 r12 eax ebx esi edi r14d xmm0
..B13.32:                       # Preds ..B13.30 ..B13.32
..L569:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 4
                # PEELED LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.648438
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.937500
..LN6082:
	.loc    1  466  is_stmt 1
        vmovsd    %xmm0, (%r10,%r11,8)                          #466.5
..LN6083:
	.loc    1  464  is_stmt 1
        incq      %r11                                          #464.28
..LN6084:
        cmpq      %r12, %r11                                    #464.28
..LN6085:
        jb        ..B13.32      # Prob 82%                      #464.28
..LN6086:
                                # LOE rdx rcx r8 r9 r10 r11 r12 eax ebx esi edi r14d xmm0
..B13.34:                       # Preds ..B13.32 ..B13.30
..LN6087:
        movslq    %r14d, %r11                                   #464.28
..LN6088:
        lea       (%r10,%r12,8), %r13                           #464.28
..LN6089:
	.loc    1  466  is_stmt 1
        vbroadcastsd %xmm0, %ymm0                               #466.24
..LN6090:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 eax ebx esi edi r14d ymm0
..B13.35:                       # Preds ..B13.35 ..B13.34
..L570:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 4
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 8.648438
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.937500
                # MAIN VECTOR TYPE: 64-bits floating point
..LN6091:
	.loc    1  464  is_stmt 1
        addq      $16, %r12                                     #464.28
..LN6092:
	.loc    1  466  is_stmt 1
        vmovupd   %ymm0, (%r13)                                 #466.5
..LN6093:
        vmovupd   %ymm0, 32(%r13)                               #466.5
..LN6094:
        vmovupd   %ymm0, 64(%r13)                               #466.5
..LN6095:
        vmovupd   %ymm0, 96(%r13)                               #466.5
..LN6096:
	.loc    1  464  is_stmt 1
        addq      $128, %r13                                    #464.28
..LN6097:
        cmpq      %r11, %r12                                    #464.28
..LN6098:
        jb        ..B13.35      # Prob 82%                      #464.28
..LN6099:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 eax ebx esi edi r14d ymm0
..B13.37:                       # Preds ..B13.35 ..B13.155
..LN6100:
        lea       1(%r14), %r11d                                #464.28
..LN6101:
        cmpl      %r11d, %eax                                   #464.28
..LN6102:
        jb        ..B13.46      # Prob 50%                      #464.28
..LN6103:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi r14d
..B13.38:                       # Preds ..B13.37
..LN6104:
        movslq    %r14d, %r13                                   #464.28
..LN6105:
        negq      %r13                                          #464.28
..LN6106:
        addq      %rdx, %r13                                    #464.28
..LN6107:
        cmpq      $4, %r13                                      #464.28
..LN6108:
        jl        ..B13.154     # Prob 10%                      #464.28
..LN6109:
                                # LOE rdx rcx r8 r9 r10 r13 eax ebx esi edi r14d
..B13.39:                       # Preds ..B13.38
..LN6110:
	.loc    1  466  is_stmt 1
        movslq    %r14d, %r14                                   #466.5
..LN6111:
	.loc    1  464  is_stmt 1
        movl      %r13d, %r12d                                  #464.28
..LN6112:
        andl      $-4, %r12d                                    #464.28
..LN6113:
        xorl      %r11d, %r11d                                  #464.28
..LN6114:
        movslq    %r12d, %r12                                   #464.28
..LN6115:
	.loc    1  466  is_stmt 1
        vbroadcastsd (%r8), %ymm0                               #466.24
..LN6116:
        lea       (%r10,%r14,8), %r15                           #466.5
..LN6117:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 r15 eax ebx esi edi r14d ymm0
..B13.40:                       # Preds ..B13.40 ..B13.39
..L571:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS VECTORIZED
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION HAS UNALIGNED MEMORY REFERENCES
                # VECTORIZATION SPEEDUP COEFFECIENT 2.542969
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 2.750000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN6118:
        vmovupd   %ymm0, (%r15,%r11,8)                          #466.5
..LN6119:
	.loc    1  464  is_stmt 1
        addq      $4, %r11                                      #464.28
..LN6120:
        cmpq      %r12, %r11                                    #464.28
..LN6121:
        jb        ..B13.40      # Prob 82%                      #464.28
..LN6122:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 r15 eax ebx esi edi r14d ymm0
..B13.42:                       # Preds ..B13.40 ..B13.154
..LN6123:
        cmpq      %r13, %r12                                    #464.28
..LN6124:
        jae       ..B13.46      # Prob 10%                      #464.28
..LN6125:
                                # LOE rdx rcx r8 r9 r10 r12 r13 eax ebx esi edi r14d
..B13.43:                       # Preds ..B13.42
..LN6126:
	.loc    1  466  is_stmt 1
        movslq    %r14d, %r14                                   #466.5
..LN6127:
        lea       (%r10,%r14,8), %r11                           #466.5
..LN6128:
        movq      (%r8), %r14                                   #466.24
..LN6129:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 r14 eax ebx esi edi
..B13.44:                       # Preds ..B13.44 ..B13.43
..L572:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 2.542969
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 2.750000
..LN6130:
        movq      %r14, (%r11,%r12,8)                           #466.5
..LN6131:
	.loc    1  464  is_stmt 1
        incq      %r12                                          #464.28
..LN6132:
        cmpq      %r13, %r12                                    #464.28
..LN6133:
        jb        ..B13.44      # Prob 82%                      #464.28
..LN6134:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 r14 eax ebx esi edi
..B13.46:                       # Preds ..B13.44 ..B13.7 ..B13.37 ..B13.42
..LN6135:
        incl      %esi                                          #464.3
..LN6136:
        addq      $8, %r8                                       #464.3
..LN6137:
        lea       (%r10,%rdx,8), %r10                           #464.3
..LN6138:
        lea       (%r9,%rdx,8), %r9                             #464.3
..LN6139:
        cmpl      64(%rsp), %esi                                #464.3
..LN6140:
        jb        ..B13.7       # Prob 82%                      #464.3
..LN6141:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi
..B13.47:                       # Preds ..B13.46
..LN6142:
        movq      688(%rsp), %rax                               #
..LN6143:
        movq      680(%rsp), %rdx                               #
..LN6144:
        movl      3120(%rsp), %ebx                              #
..LN6145:
        movq      2424(%rsp), %r12                              #
..LN6146:
        movq      24(%rsp), %r13                                #
..LN6147:
        movq      8(%rsp), %r14                                 #
..LN6148:
        movq      (%rsp), %r15                                  #
..LN6149:
                                # LOE rax rdx r12 r13 r14 r15 edx ebx dl dh
..B13.48:                       # Preds ..B13.5 ..B13.47
..LN6150:
	.loc    1  71  is_stmt 1
        movq      56(%rsp), %rcx                                #71.9
..LN6151:
	.loc    1  75  is_stmt 1
        xorl      %edi, %edi                                    #75.7
..LN6152:
	.loc    1  72  is_stmt 1
        movl      (%r13), %r10d                                 #72.9
..LN6153:
	.loc    1  75  is_stmt 1
        xorl      %r8d, %r8d                                    #75.9
..LN6154:
	.loc    1  71  is_stmt 1
        movl      (%rcx), %ecx                                  #71.9
..LN6155:
	.loc    1  75  is_stmt 1
        movslq    %ecx, %r9                                     #75.18
..LN6156:
        testl     %r10d, %r10d                                  #75.14
..LN6157:
        jle       ..B13.57      # Prob 10%                      #75.14
..LN6158:
                                # LOE rax rdx r8 r9 r12 r14 r15 edx ecx ebx edi r10d dl dh
..B13.49:                       # Preds ..B13.48
..LN6159:
        movl      %r10d, 24(%rsp)                               #75.9
..LN6160:
        xorl      %esi, %esi                                    #75.9
..LN6161:
        movq      %rax, 688(%rsp)                               #75.9
..LN6162:
        movq      %rdx, 680(%rsp)                               #75.9
..LN6163:
        movl      %ebx, 3120(%rsp)                              #75.9
..LN6164:
        movq      %r12, 2424(%rsp)                              #75.9
..LN6165:
        movq      %r14, 8(%rsp)                                 #75.9
..LN6166:
        movq      %r15, (%rsp)                                  #75.9
..LN6167:
        movq      3280(%rsp), %r10                              #75.9
..LN6168:
        movq      3312(%rsp), %rax                              #75.9
..LN6169:
        movq      3288(%rsp), %rdx                              #75.9
..LN6170:
                                # LOE rax rdx r8 r9 r10 ecx esi edi
..B13.50:                       # Preds ..B13.55 ..B13.152 ..B13.49
..L573:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN6171:
        xorl      %r12d, %r12d                                  #75.27
..LN6172:
        testl     %ecx, %ecx                                    #75.36
..LN6173:
        jle       ..B13.152     # Prob 10%                      #75.36
..LN6174:
                                # LOE rax rdx r8 r9 r10 r12 ecx esi edi
..B13.51:                       # Preds ..B13.50
..LN6175:
	.loc    1  85  is_stmt 1
        movq      %r8, 368(%rsp)                                #85.5
..LN6176:
	.loc    1  78  is_stmt 1
        lea       (%rcx,%rsi), %r13d                            #78.25
..LN6177:
        movslq    %r13d, %r13                                   #78.15
..LN6178:
	.loc    1  85  is_stmt 1
        lea       (%r10,%r8,8), %r11                            #85.5
..LN6179:
	.loc    1  76  is_stmt 1
        movslq    %esi, %rsi                                    #76.15
..LN6180:
	.loc    1  85  is_stmt 1
        movq      %r11, 392(%rsp)                               #85.5
..LN6181:
        movl      %esi, 376(%rsp)                               #85.5
..LN6182:
        movl      %edi, 360(%rsp)                               #85.5
..LN6183:
	.loc    1  78  is_stmt 1
        lea       (%rax,%r13,8), %rbx                           #78.15
..LN6184:
	.loc    1  85  is_stmt 1
        movq      %r9, 384(%rsp)                                #85.5
..LN6185:
	.loc    1  82  is_stmt 1
        lea       (%rdx,%r13,8), %r13                           #82.15
..LN6186:
	.loc    1  85  is_stmt 1
        movl      %ecx, 16(%rsp)                                #85.5
..LN6187:
	.loc    1  80  is_stmt 1
        lea       (%rdx,%rsi,8), %r14                           #80.15
..LN6188:
	.loc    1  76  is_stmt 1
        lea       (%rax,%rsi,8), %r15                           #76.15
..LN6189:
                                # LOE rbx r12 r13 r14 r15
..B13.52:                       # Preds ..B13.54 ..B13.51
..L574:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN6190:
	.loc    1  84  is_stmt 1
        lea       40(%rsp), %rdi                                #84.12
..LN6191:
	.loc    1  76  is_stmt 1
        movq      (%r15,%r12,8), %rax                           #76.15
..LN6192:
	.loc    1  84  is_stmt 1
        lea       200(%rsp), %rsi                               #84.12
..LN6193:
	.loc    1  83  is_stmt 1
        movq      8(%r13,%r12,8), %rdx                          #83.15
..LN6194:
	.loc    1  76  is_stmt 1
        movq      %rax, (%rdi)                                  #76.5
..LN6195:
	.loc    1  77  is_stmt 1
        movq      8(%r15,%r12,8), %rcx                          #77.15
..LN6196:
	.loc    1  78  is_stmt 1
        movq      16(%rbx,%r12,8), %r8                          #78.15
..LN6197:
	.loc    1  79  is_stmt 1
        movq      8(%rbx,%r12,8), %r9                           #79.15
..LN6198:
	.loc    1  80  is_stmt 1
        movq      (%r14,%r12,8), %r10                           #80.15
..LN6199:
	.loc    1  81  is_stmt 1
        movq      8(%r14,%r12,8), %r11                          #81.15
..LN6200:
	.loc    1  82  is_stmt 1
        movq      16(%r13,%r12,8), %rax                         #82.15
..LN6201:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN6202:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN6203:
	.loc    1  77  is_stmt 1
        movq      %rcx, 8(%rdi)                                 #77.5
..LN6204:
	.loc    1  78  is_stmt 1
        movq      %r8, 16(%rdi)                                 #78.5
..LN6205:
	.loc    1  79  is_stmt 1
        movq      %r9, 24(%rdi)                                 #79.5
..LN6206:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN6207:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN6208:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN6209:
	.loc    1  84  is_stmt 1
        vzeroupper                                              #84.12
..LN6210:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_2dx1d_order2_.575:
..LN6211:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_2dx1d_order2_.576:
..LN6212:
                                # LOE rbx r12 r13 r14 r15 eax
..B13.53:                       # Preds ..B13.52
..LN6213:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN6214:
        lea       40(%rsp), %rdi                                #85.20
..LN6215:
        lea       200(%rsp), %rsi                               #85.20
..___tag_value_create_xgrid_2dx1d_order2_.577:
..LN6216:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_2dx1d_order2_.578:
..LN6217:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B13.54:                       # Preds ..B13.53
..LN6218:
        movq      392(%rsp), %rax                               #85.5
..LN6219:
        vmovsd    %xmm0, (%rax,%r12,8)                          #85.5
..LN6220:
	.loc    1  75  is_stmt 1
        incq      %r12                                          #75.40
..LN6221:
        cmpq      384(%rsp), %r12                               #75.36
..LN6222:
        jl        ..B13.52      # Prob 82%                      #75.36
..LN6223:
                                # LOE rbx r12 r13 r14 r15
..B13.55:                       # Preds ..B13.54
..LN6224:
        movl      360(%rsp), %edi                               #
..LN6225:
        incl      %edi                                          #75.18
..LN6226:
        movq      368(%rsp), %r8                                #
..LN6227:
        movq      384(%rsp), %r9                                #
..LN6228:
        addq      %r9, %r8                                      #75.18
..LN6229:
        movl      376(%rsp), %esi                               #
..LN6230:
        movl      16(%rsp), %ecx                                #
..LN6231:
        lea       1(%rsi,%rcx), %esi                            #75.18
..LN6232:
        movq      3280(%rsp), %r10                              #
..LN6233:
        movq      3312(%rsp), %rax                              #
..LN6234:
        movq      3288(%rsp), %rdx                              #
..LN6235:
        cmpl      24(%rsp), %edi                                #75.14
..LN6236:
        jl        ..B13.50      # Prob 82%                      #75.14
..LN6237:
                                # LOE rax rdx r8 r9 r10 ecx esi edi
..B13.56:                       # Preds ..B13.152 ..B13.55      # Infreq
..LN6238:
        movq      688(%rsp), %rax                               #
..LN6239:
        movq      680(%rsp), %rdx                               #
..LN6240:
        movl      3120(%rsp), %ebx                              #
..LN6241:
        movq      2424(%rsp), %r12                              #
..LN6242:
        movq      8(%rsp), %r14                                 #
..LN6243:
        movq      (%rsp), %r15                                  #
..LN6244:
                                # LOE rax rdx r12 r14 r15 edx ebx dl dh
..B13.57:                       # Preds ..B13.56 ..B13.48       # Infreq
..LN6245:
	.loc    1  71  is_stmt 1
        movl      (%r14), %ecx                                  #71.9
..LN6246:
	.loc    1  75  is_stmt 1
        xorl      %r10d, %r10d                                  #75.3
..LN6247:
	.loc    1  72  is_stmt 1
        movl      (%r15), %r14d                                 #72.9
..LN6248:
	.loc    1  75  is_stmt 1
        xorl      %r8d, %r8d                                    #75.27
..LN6249:
        movslq    %ecx, %r15                                    #75.27
..LN6250:
        testl     %r14d, %r14d                                  #75.14
..LN6251:
        jle       ..B13.66      # Prob 9%                       #75.14
..LN6252:
                                # LOE rax rdx r8 r12 r15 edx ecx ebx r10d r14d dl dh
..B13.58:                       # Preds ..B13.57                # Infreq
..LN6253:
        movl      %r14d, 8(%rsp)                                #75.27
..LN6254:
	.loc    1  73  is_stmt 1
        lea       1(%rcx), %r11d                                #73.14
..LN6255:
	.loc    1  75  is_stmt 1
        movslq    %r11d, %r11                                   #75.27
..LN6256:
	.loc    1  78  is_stmt 1
        lea       (%rdx,%r15,8), %r13                           #78.15
..LN6257:
	.loc    1  75  is_stmt 1
        movq      %r11, 696(%rsp)                               #75.27
..LN6258:
	.loc    1  82  is_stmt 1
        lea       (%rax,%r15,8), %r9                            #82.15
..LN6259:
	.loc    1  75  is_stmt 1
        movq      %r13, 712(%rsp)                               #75.27
..LN6260:
        xorl      %esi, %esi                                    #75.27
..LN6261:
        movq      %r15, 728(%rsp)                               #75.27
..LN6262:
        movl      %ebx, 3120(%rsp)                              #75.27
..LN6263:
        movq      %r12, 2424(%rsp)                              #75.27
..LN6264:
        movq      2416(%rsp), %r11                              #75.27
..LN6265:
                                # LOE rax rdx rsi r8 r9 r11 ecx r10d
..B13.59:                       # Preds ..B13.64 ..B13.150 ..B13.58 # Infreq
..L579:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN6266:
        xorl      %r12d, %r12d                                  #75.23
..LN6267:
        testl     %ecx, %ecx                                    #75.36
..LN6268:
        jle       ..B13.150     # Prob 10%                      #75.36
..LN6269:
                                # LOE rax rdx rsi r8 r9 r11 r12 ecx r10d
..B13.60:                       # Preds ..B13.59                # Infreq
..LN6270:
	.loc    1  78  is_stmt 1
        movq      712(%rsp), %r15                               #78.15
..LN6271:
	.loc    1  85  is_stmt 1
        lea       (%r11,%r8,8), %rdi                            #85.5
..LN6272:
        movq      %rdi, 736(%rsp)                               #85.5
..LN6273:
	.loc    1  80  is_stmt 1
        lea       (%rax,%rsi,8), %rbx                           #80.15
..LN6274:
	.loc    1  85  is_stmt 1
        movq      %rsi, 720(%rsp)                               #85.5
..LN6275:
	.loc    1  76  is_stmt 1
        lea       (%rdx,%rsi,8), %r13                           #76.15
..LN6276:
	.loc    1  85  is_stmt 1
        movq      %r9, 704(%rsp)                                #85.5
..LN6277:
	.loc    1  82  is_stmt 1
        lea       (%r9,%rsi,8), %r14                            #82.15
..LN6278:
	.loc    1  85  is_stmt 1
        movq      %r8, 24(%rsp)                                 #85.5
..LN6279:
	.loc    1  78  is_stmt 1
        lea       (%r15,%rsi,8), %r15                           #78.15
..LN6280:
	.loc    1  85  is_stmt 1
        movl      %r10d, 16(%rsp)                               #85.5
..LN6281:
        movl      %ecx, (%rsp)                                  #85.5
..LN6282:
        movq      %rax, 688(%rsp)                               #85.5
..LN6283:
        movq      %rdx, 680(%rsp)                               #85.5
..LN6284:
                                # LOE rbx r12 r13 r14 r15
..B13.61:                       # Preds ..B13.63 ..B13.60       # Infreq
..L580:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN6285:
	.loc    1  84  is_stmt 1
        lea       360(%rsp), %rdi                               #84.12
..LN6286:
	.loc    1  76  is_stmt 1
        movq      (%r13,%r12,8), %rax                           #76.15
..LN6287:
	.loc    1  84  is_stmt 1
        lea       520(%rsp), %rsi                               #84.12
..LN6288:
	.loc    1  83  is_stmt 1
        movq      8(%r14,%r12,8), %rdx                          #83.15
..LN6289:
	.loc    1  76  is_stmt 1
        movq      %rax, -160(%rsi)                              #76.5
..LN6290:
	.loc    1  77  is_stmt 1
        movq      8(%r13,%r12,8), %rcx                          #77.15
..LN6291:
	.loc    1  78  is_stmt 1
        movq      16(%r15,%r12,8), %r8                          #78.15
..LN6292:
	.loc    1  79  is_stmt 1
        movq      8(%r15,%r12,8), %r9                           #79.15
..LN6293:
	.loc    1  80  is_stmt 1
        movq      (%rbx,%r12,8), %r10                           #80.15
..LN6294:
	.loc    1  81  is_stmt 1
        movq      8(%rbx,%r12,8), %r11                          #81.15
..LN6295:
	.loc    1  82  is_stmt 1
        movq      16(%r14,%r12,8), %rax                         #82.15
..LN6296:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN6297:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN6298:
	.loc    1  77  is_stmt 1
        movq      %rcx, -152(%rsi)                              #77.5
..LN6299:
	.loc    1  78  is_stmt 1
        movq      %r8, -144(%rsi)                               #78.5
..LN6300:
	.loc    1  79  is_stmt 1
        movq      %r9, -136(%rsi)                               #79.5
..LN6301:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN6302:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN6303:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN6304:
	.loc    1  84  is_stmt 1
        vzeroupper                                              #84.12
..LN6305:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_2dx1d_order2_.581:
..LN6306:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_2dx1d_order2_.582:
..LN6307:
                                # LOE rbx r12 r13 r14 r15 eax
..B13.62:                       # Preds ..B13.61                # Infreq
..LN6308:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN6309:
        lea       360(%rsp), %rdi                               #85.20
..LN6310:
        lea       520(%rsp), %rsi                               #85.20
..___tag_value_create_xgrid_2dx1d_order2_.583:
..LN6311:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_2dx1d_order2_.584:
..LN6312:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B13.63:                       # Preds ..B13.62                # Infreq
..LN6313:
        movq      736(%rsp), %rax                               #85.5
..LN6314:
        vmovsd    %xmm0, (%rax,%r12,8)                          #85.5
..LN6315:
	.loc    1  75  is_stmt 1
        incq      %r12                                          #75.23
..LN6316:
        cmpq      728(%rsp), %r12                               #75.23
..LN6317:
        jb        ..B13.61      # Prob 82%                      #75.23
..LN6318:
                                # LOE rbx r12 r13 r14 r15
..B13.64:                       # Preds ..B13.63                # Infreq
..LN6319:
        movq      720(%rsp), %rsi                               #
..LN6320:
        movq      24(%rsp), %r8                                 #
..LN6321:
        movl      16(%rsp), %r10d                               #
..LN6322:
        incl      %r10d                                         #75.3
..LN6323:
        addq      696(%rsp), %rsi                               #75.3
..LN6324:
        addq      728(%rsp), %r8                                #75.3
..LN6325:
        movq      704(%rsp), %r9                                #
..LN6326:
        movl      (%rsp), %ecx                                  #
..LN6327:
        movq      688(%rsp), %rax                               #
..LN6328:
        movq      680(%rsp), %rdx                               #
..LN6329:
        movq      2416(%rsp), %r11                              #
..LN6330:
        cmpl      8(%rsp), %r10d                                #75.3
..LN6331:
        jb        ..B13.59      # Prob 82%                      #75.3
..LN6332:
                                # LOE rax rdx rsi r8 r9 r11 eax edx ecx r10d al dl ah dh
..B13.65:                       # Preds ..B13.150 ..B13.64      # Infreq
..LN6333:
        movl      3120(%rsp), %ebx                              #
..LN6334:
        movq      2424(%rsp), %r12                              #
..LN6335:
                                # LOE rax rdx r12 ebx
..B13.66:                       # Preds ..B13.65 ..B13.57       # Infreq
..LN6336:
	.loc    1  471  is_stmt 1
        movq      %rdx, %rdi                                    #471.3
..LN6337:
        movq      %rax, 688(%rsp)                               #471.3
..LN6338:
        vzeroupper                                              #471.3
..LN6339:
#       free(void *)
        call      free                                          #471.3
..LN6340:
                                # LOE r12 ebx
..B13.67:                       # Preds ..B13.66                # Infreq
..LN6341:
        movq      688(%rsp), %rax                               #
..LN6342:
	.loc    1  472  is_stmt 1
        movq      %rax, %rdi                                    #472.3
..LN6343:
#       free(void *)
        call      free                                          #472.3
..LN6344:
                                # LOE r12 ebx
..B13.68:                       # Preds ..B13.67                # Infreq
..LN6345:
	.loc    1  474  is_stmt 1
        xorl      %edi, %edi                                    #474.31
..LN6346:
        xorl      %r8d, %r8d                                    #474.3
..LN6347:
        xorl      %esi, %esi                                    #474.31
..LN6348:
        testl     %ebx, %ebx                                    #474.16
..LN6349:
        jle       ..B13.135     # Prob 9%                       #474.16
..LN6350:
                                # LOE rsi rdi r12 ebx r8d
..B13.69:                       # Preds ..B13.68                # Infreq
..LN6351:
	.loc    1  929  is_stmt 1
        movl      $8, %r9d                                      #929.17
..LN6352:
	.loc    1  478  is_stmt 1
        movslq    3320(%rsp), %rcx                              #478.29
..LN6353:
	.loc    1  956  is_stmt 1
        vxorpd    %xmm7, %xmm7, %xmm7                           #956.17
..LN6354:
	.loc    1  493  is_stmt 1
        movq      3312(%rsp), %rdx                              #493.17
..LN6355:
	.loc    1  484  is_stmt 1
        movq      3288(%rsp), %rax                              #484.17
..LN6356:
	.loc    1  929  is_stmt 1
        vmovd     %r9d, %xmm2                                   #929.17
..LN6357:
        movl      32(%rsp), %r10d                               #929.17
..LN6358:
	.loc    1  493  is_stmt 1
        lea       (%rdx,%rcx,8), %rdx                           #493.17
..LN6359:
	.loc    1  478  is_stmt 1
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm0             #478.78
..LN6360:
	.loc    1  484  is_stmt 1
        lea       (%rax,%rcx,8), %rax                           #484.17
..LN6361:
	.loc    1  502  is_stmt 1
        vmovsd    .L_2il0floatpacket.2(%rip), %xmm8             #502.22
..LN6362:
	.loc    1  939  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm6             #939.13
..LN6363:
	.loc    1  940  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm5             #940.13
..LN6364:
	.loc    1  939  is_stmt 1
        vmovsd    .L_2il0floatpacket.4(%rip), %xmm4             #939.30
..LN6365:
	.loc    1  1000  is_stmt 1
        vmovsd    .L_2il0floatpacket.5(%rip), %xmm3             #1000.18
..LN6366:
	.loc    1  942  is_stmt 1
        vmovsd    .L_2il0floatpacket.6(%rip), %xmm1             #942.21
..LN6367:
	.loc    1  929  is_stmt 1
        vpbroadcastd %xmm2, %ymm2                               #929.17
..LN6368:
                                # LOE rax rdx rcx rsi rdi r12 ebx r8d r10d xmm0 xmm1 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 ymm2
..B13.70:                       # Preds ..B13.148 ..B13.69      # Infreq
..L585:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN6369:
	.loc    1  474  is_stmt 1
        xorl      %r9d, %r9d                                    #474.27
..LN6370:
        testl     %r10d, %r10d                                  #474.40
..LN6371:
        jle       ..B13.148     # Prob 10%                      #474.40
..LN6372:
                                # LOE rax rdx rcx rsi rdi r9 r12 ebx r8d r10d xmm0 xmm1 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 ymm2
..B13.71:                       # Preds ..B13.70                # Infreq
..LN6373:
        movq      %r9, 3264(%rsp)                               #
..LN6374:
	.loc    1  430  is_stmt 1
        movq      72(%rbp), %r9                                 #430.1
..LN6375:
        movq      24(%rbp), %r11                                #430.1
..LN6376:
        movq      16(%rbp), %r13                                #430.1
..LN6377:
        vmovdqu   %ymm2, 2688(%rsp)                             #430.1
..LN6378:
        movq      %rax, 3352(%rsp)                              #430.1
..LN6379:
        movq      %rdx, 3360(%rsp)                              #430.1
..LN6380:
        movq      %rcx, 3496(%rsp)                              #430.1
..LN6381:
        movq      3264(%rsp), %r10                              #430.1
..LN6382:
        movq      2416(%rsp), %r14                              #430.1
..LN6383:
        movl      3304(%rsp), %r15d                             #430.1
..LN6384:
                                # LOE rsi rdi r10 r11 r12 r13 r14 ebx r8d r15d xmm0
..B13.72:                       # Preds ..B13.146 ..B13.144 ..B13.131 ..B13.71 # Infreq
..L586:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN6385:
	.loc    1  478  is_stmt 1
        xorl      %edx, %edx                                    #478.5
..LN6386:
        xorl      %ecx, %ecx                                    #478.33
..LN6387:
	.loc    1  476  is_stmt 1
        vmovsd    (%r13,%r10,8), %xmm5                          #476.14
..LN6388:
	.loc    1  478  is_stmt 1
        xorl      %eax, %eax                                    #478.33
..LN6389:
	.loc    1  477  is_stmt 1
        vmovsd    8(%r13,%r10,8), %xmm3                         #477.14
..LN6390:
	.loc    1  476  is_stmt 1
        vmovsd    (%r11,%rdi,8), %xmm4                          #476.38
..LN6391:
	.loc    1  477  is_stmt 1
        vmovsd    8(%r11,%rdi,8), %xmm2                         #477.38
..LN6392:
	.loc    1  478  is_stmt 1
        testl     %r15d, %r15d                                  #478.18
..LN6393:
        jle       ..B13.144     # Prob 10%                      #478.18
..LN6394:
                                # LOE rsi rdi r10 r11 r12 r13 r14 eax edx ecx ebx r8d r15d xmm0 xmm2 xmm3 xmm4 xmm5
..B13.73:                       # Preds ..B13.72                # Infreq
..LN6395:
	.loc    1  501  is_stmt 1
        movq      %r10, 3264(%rsp)                              #501.13
..LN6396:
        lea       (%r14,%rsi,8), %r9                            #501.13
..LN6397:
        movq      %r9, 3272(%rsp)                               #501.13
..LN6398:
	.loc    1  496  is_stmt 1
        vaddsd    %xmm3, %xmm5, %xmm1                           #496.45
..LN6399:
        vmulsd    %xmm1, %xmm0, %xmm1                           #496.53
..LN6400:
	.loc    1  501  is_stmt 1
        movl      %r8d, 3168(%rsp)                              #501.13
..LN6401:
        vmovsd    %xmm1, 3448(%rsp)                             #501.13
..LN6402:
        vmovsd    %xmm2, 3464(%rsp)                             #501.13
..LN6403:
        vmovsd    %xmm3, 3440(%rsp)                             #501.13
..LN6404:
        vmovsd    %xmm4, 3488(%rsp)                             #501.13
..LN6405:
        vmovsd    %xmm5, 3432(%rsp)                             #501.13
..LN6406:
        movq      %rsi, 696(%rsp)                               #501.13
..LN6407:
        movq      %rdi, 3128(%rsp)                              #501.13
..LN6408:
        movl      %ebx, 3120(%rsp)                              #501.13
..LN6409:
        movq      %r12, 2424(%rsp)                              #501.13
..LN6410:
        movq      3352(%rsp), %r11                              #501.13
..LN6411:
        movq      3360(%rsp), %r8                               #501.13
..LN6412:
        movl      3320(%rsp), %r9d                              #501.13
..LN6413:
        movq      3312(%rsp), %r10                              #501.13
..LN6414:
                                # LOE r8 r10 r11 eax edx ecx r9d
..B13.74:                       # Preds ..B13.129 ..B13.142 ..B13.73 # Infreq
..L587:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN6415:
	.loc    1  478  is_stmt 1
        xorl      %r13d, %r13d                                  #478.29
..LN6416:
        testl     %r9d, %r9d                                    #478.42
..LN6417:
        jle       ..B13.142     # Prob 10%                      #478.42
..LN6418:
                                # LOE r8 r10 r11 r13 eax edx ecx r9d
..B13.75:                       # Preds ..B13.74                # Infreq
..LN6419:
        movslq    %ecx, %rcx                                    #478.57
..LN6420:
	.loc    1  482  is_stmt 1
        movslq    %eax, %rax                                    #482.17
..LN6421:
	.loc    1  501  is_stmt 1
        movq      3280(%rsp), %rbx                              #501.13
..LN6422:
	.loc    1  482  is_stmt 1
        movq      3288(%rsp), %rsi                              #482.17
..LN6423:
	.loc    1  478  is_stmt 1
        movq      32(%rbp), %r15                                #478.57
..LN6424:
	.loc    1  484  is_stmt 1
        movl      %eax, 3328(%rsp)                              #484.17
..LN6425:
	.loc    1  501  is_stmt 1
        lea       (%rbx,%rcx,8), %rdi                           #501.13
..LN6426:
	.loc    1  484  is_stmt 1
        movq      %rdi, 3296(%rsp)                              #484.17
..LN6427:
	.loc    1  482  is_stmt 1
        lea       (%rsi,%rax,8), %rsi                           #482.17
..LN6428:
	.loc    1  484  is_stmt 1
        movq      %rsi, 3480(%rsp)                              #484.17
..LN6429:
        lea       (%r11,%rax,8), %r14                           #484.17
..LN6430:
        movq      %r14, 3472(%rsp)                              #484.17
..LN6431:
	.loc    1  478  is_stmt 1
        lea       (%r15,%rcx,8), %r15                           #478.57
..LN6432:
	.loc    1  484  is_stmt 1
        movl      %ecx, 3336(%rsp)                              #484.17
..LN6433:
	.loc    1  491  is_stmt 1
        lea       (%r10,%rax,8), %rbx                           #491.17
..LN6434:
	.loc    1  484  is_stmt 1
        movl      %edx, 3344(%rsp)                              #484.17
..LN6435:
	.loc    1  493  is_stmt 1
        lea       (%r8,%rax,8), %r12                            #493.17
..LN6436:
                                # LOE rbx r12 r13 r15
..B13.76:                       # Preds ..B13.128 ..B13.75      # Infreq
..L588:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN6437:
	.loc    1  478  is_stmt 1
        vmovsd    (%r15,%r13,8), %xmm0                          #478.57
..LN6438:
        vcomisd   .L_2il0floatpacket.1(%rip), %xmm0             #478.78
..LN6439:
        jbe       ..B13.128     # Prob 50%                      #478.78
..LN6440:
                                # LOE rbx r12 r13 r15
..B13.77:                       # Preds ..B13.76                # Infreq
..LN6441:
	.loc    1  482  is_stmt 1
        movq      3480(%rsp), %rax                              #482.17
..LN6442:
	.loc    1  484  is_stmt 1
        movq      3472(%rsp), %rdx                              #484.17
..LN6443:
	.loc    1  486  is_stmt 1
        vmovsd    3488(%rsp), %xmm0                             #486.23
..LN6444:
	.loc    1  482  is_stmt 1
        vmovsd    (%rax,%r13,8), %xmm1                          #482.17
..LN6445:
	.loc    1  483  is_stmt 1
        vmovsd    8(%rax,%r13,8), %xmm2                         #483.17
..LN6446:
	.loc    1  484  is_stmt 1
        vmovsd    16(%rdx,%r13,8), %xmm3                        #484.17
..LN6447:
	.loc    1  485  is_stmt 1
        vmovsd    8(%rdx,%r13,8), %xmm4                         #485.17
..LN6448:
	.loc    1  482  is_stmt 1
        vmovsd    %xmm1, 2720(%rsp)                             #482.7
..LN6449:
	.loc    1  483  is_stmt 1
        vmovsd    %xmm2, 2728(%rsp)                             #483.7
..LN6450:
	.loc    1  484  is_stmt 1
        vmovsd    %xmm3, 2736(%rsp)                             #484.7
..LN6451:
	.loc    1  485  is_stmt 1
        vmovsd    %xmm4, 2744(%rsp)                             #485.7
..LN6452:
	.loc    1  486  is_stmt 1
        vcomisd   %xmm1, %xmm0                                  #486.23
..LN6453:
        jb        ..B13.81      # Prob 50%                      #486.23
..LN6454:
                                # LOE rbx r12 r13 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B13.78:                       # Preds ..B13.77                # Infreq
..LN6455:
        vcomisd   %xmm2, %xmm0                                  #486.44
..LN6456:
        jb        ..B13.81      # Prob 50%                      #486.44
..LN6457:
                                # LOE rbx r12 r13 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B13.79:                       # Preds ..B13.78                # Infreq
..LN6458:
	.loc    1  487  is_stmt 1
        vcomisd   %xmm3, %xmm0                                  #487.19
..LN6459:
        jb        ..B13.81      # Prob 50%                      #487.19
..LN6460:
                                # LOE rbx r12 r13 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B13.80:                       # Preds ..B13.79                # Infreq
..LN6461:
        vcomisd   %xmm4, %xmm0                                  #487.40
..LN6462:
        jae       ..B13.128     # Prob 50%                      #487.40
..LN6463:
                                # LOE rbx r12 r13 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B13.81:                       # Preds ..B13.77 ..B13.78 ..B13.79 ..B13.80 # Infreq
..LN6464:
	.loc    1  488  is_stmt 1
        vcomisd   3464(%rsp), %xmm1                             #488.23
..LN6465:
        jb        ..B13.85      # Prob 22%                      #488.23
..LN6466:
                                # LOE rbx r12 r13 r15 xmm0 xmm2 xmm3 xmm4 ymm0 zmm0
..B13.82:                       # Preds ..B13.81                # Infreq
..LN6467:
        vcomisd   3464(%rsp), %xmm2                             #488.44
..LN6468:
        jb        ..B13.85      # Prob 22%                      #488.44
..LN6469:
                                # LOE rbx r12 r13 r15 xmm0 xmm3 xmm4 ymm0 zmm0
..B13.83:                       # Preds ..B13.82                # Infreq
..LN6470:
	.loc    1  489  is_stmt 1
        vcomisd   3464(%rsp), %xmm3                             #489.19
..LN6471:
        jb        ..B13.85      # Prob 22%                      #489.19
..LN6472:
                                # LOE rbx r12 r13 r15 xmm0 xmm4 ymm0 zmm0
..B13.84:                       # Preds ..B13.83                # Infreq
..LN6473:
        vcomisd   3464(%rsp), %xmm4                             #489.40
..LN6474:
        jae       ..B13.128     # Prob 78%                      #489.40
..LN6475:
                                # LOE rbx r12 r13 r15 xmm0 ymm0 zmm0
..B13.85:                       # Preds ..B13.81 ..B13.82 ..B13.83 ..B13.84 # Infreq
..LN6476:
	.loc    1  496  is_stmt 1
        vzeroupper                                              #496.14
..LN6477:
        lea       1216(%rsp), %rdi                              #496.14
..LN6478:
	.loc    1  491  is_stmt 1
        movq      (%rbx,%r13,8), %rax                           #491.17
..LN6479:
	.loc    1  496  is_stmt 1
        lea       2720(%rsp), %rsi                              #496.14
..LN6480:
	.loc    1  492  is_stmt 1
        movq      8(%rbx,%r13,8), %rcx                          #492.17
..LN6481:
	.loc    1  496  is_stmt 1
        movl      $4, %edx                                      #496.14
..LN6482:
	.loc    1  493  is_stmt 1
        movq      16(%r12,%r13,8), %r8                          #493.17
..LN6483:
	.loc    1  494  is_stmt 1
        movq      8(%r12,%r13,8), %r9                           #494.17
..LN6484:
	.loc    1  496  is_stmt 1
        vmovsd    728(%rsi), %xmm0                              #496.14
..LN6485:
	.loc    1  491  is_stmt 1
        movq      %rax, -1504(%rsi)                             #491.7
..LN6486:
	.loc    1  492  is_stmt 1
        movq      %rcx, -1496(%rsi)                             #492.7
..LN6487:
	.loc    1  493  is_stmt 1
        movq      %r8, -1488(%rsi)                              #493.7
..LN6488:
	.loc    1  494  is_stmt 1
        movq      %r9, -1480(%rsi)                              #494.7
..___tag_value_create_xgrid_2dx1d_order2_.589:
..LN6489:
	.loc    1  496  is_stmt 1
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #496.14
..___tag_value_create_xgrid_2dx1d_order2_.590:
..LN6490:
                                # LOE rbx r12 r13 r15 eax
..B13.172:                      # Preds ..B13.85                # Infreq
..LN6491:
        movl      %eax, %r14d                                   #496.14
..LN6492:
                                # LOE rbx r12 r13 r15 r14d
..B13.86:                       # Preds ..B13.172               # Infreq
..LN6493:
	.loc    1  497  is_stmt 1
        movl      %r14d, %edi                                   #497.20
..LN6494:
        lea       1216(%rsp), %rsi                              #497.20
..___tag_value_create_xgrid_2dx1d_order2_.591:
..LN6495:
#       avgval_double(int, const double *)
        call      avgval_double                                 #497.20
..___tag_value_create_xgrid_2dx1d_order2_.592:
..LN6496:
                                # LOE rbx r12 r13 r15 r14d xmm0
..B13.173:                      # Preds ..B13.86                # Infreq
..LN6497:
        vmovsd    %xmm0, 3456(%rsp)                             #497.20
..LN6498:
                                # LOE rbx r12 r13 r15 r14d
..B13.87:                       # Preds ..B13.173               # Infreq
..LN6499:
	.loc    1  499  is_stmt 1
        lea       1216(%rsp), %rdi                              #499.22
..LN6500:
        vmovsd    2216(%rdi), %xmm0                             #499.22
..LN6501:
        lea       2720(%rsp), %rsi                              #499.22
..LN6502:
        vmovsd    768(%rsi), %xmm1                              #499.22
..LN6503:
        lea       1616(%rsp), %rcx                              #499.22
..LN6504:
        vmovsd    1824(%rcx), %xmm2                             #499.22
..LN6505:
        lea       2016(%rsp), %r8                               #499.22
..LN6506:
        vmovsd    1848(%rcx), %xmm3                             #499.22
..LN6507:
        movl      %r14d, %edx                                   #499.22
..___tag_value_create_xgrid_2dx1d_order2_.593:
..LN6508:
#       clip(const double *, const double *, int, double, double, double, double, double *, double *)
        call      clip                                          #499.22
..___tag_value_create_xgrid_2dx1d_order2_.594:
..LN6509:
                                # LOE rbx r12 r13 r15 eax
..B13.174:                      # Preds ..B13.87                # Infreq
..LN6510:
        movl      %eax, %r14d                                   #499.22
..LN6511:
                                # LOE rbx r12 r13 r15 r14d
..B13.88:                       # Preds ..B13.174               # Infreq
..LN6512:
        testl     %r14d, %r14d                                  #499.97
..LN6513:
        jle       ..B13.128     # Prob 40%                      #499.97
..LN6514:
                                # LOE rbx r12 r13 r15 r14d
..B13.89:                       # Preds ..B13.88                # Infreq
..LN6515:
	.loc    1  500  is_stmt 1
        movl      %r14d, %edx                                   #500.10
..LN6516:
        lea       1616(%rsp), %rdi                              #500.10
..LN6517:
        lea       2016(%rsp), %rsi                              #500.10
..___tag_value_create_xgrid_2dx1d_order2_.595:
..LN6518:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #500.10
..___tag_value_create_xgrid_2dx1d_order2_.596:
..LN6519:
                                # LOE rbx r12 r13 r15 r14d xmm0
..B13.90:                       # Preds ..B13.89                # Infreq
..LN6520:
	.loc    1  501  is_stmt 1
        movq      3296(%rsp), %rax                              #501.13
..LN6521:
	.loc    1  502  is_stmt 1
        movq      3272(%rsp), %rcx                              #502.2
..LN6522:
        movq      3264(%rsp), %rsi                              #502.2
..LN6523:
	.loc    1  500  is_stmt 1
        vmulsd    (%r15,%r13,8), %xmm0, %xmm2                   #500.45
..LN6524:
	.loc    1  501  is_stmt 1
        vmovsd    (%rax,%r13,8), %xmm0                          #501.13
..LN6525:
	.loc    1  502  is_stmt 1
        vminsd    (%rcx,%rsi,8), %xmm0, %xmm0                   #502.2
..LN6526:
        vdivsd    %xmm0, %xmm2, %xmm1                           #502.11
..LN6527:
        vcomisd   .L_2il0floatpacket.2(%rip), %xmm1             #502.22
..LN6528:
        jbe       ..B13.128     # Prob 78%                      #502.22
..LN6529:
                                # LOE rbx r12 r13 r15 r14d xmm2
..B13.91:                       # Preds ..B13.90                # Infreq
..LN6530:
	.loc    1  503  is_stmt 1
        movq      72(%rbp), %rax                                #503.4
..LN6531:
        movq      3136(%rsp), %rcx                              #503.4
..LN6532:
	.loc    1  956  is_stmt 1
        vxorpd    %xmm0, %xmm0, %xmm0                           #956.17
..LN6533:
	.loc    1  960  is_stmt 1
        movslq    %r14d, %rdx                                   #960.3
..LN6534:
        vmovsd    %xmm0, 3192(%rsp)                             #960.3
..LN6535:
	.loc    1  503  is_stmt 1
        vmovsd    %xmm2, (%rax,%rcx,8)                          #503.4
..LN6536:
	.loc    1  960  is_stmt 1
        xorl      %eax, %eax                                    #960.3
..LN6537:
        movq      %r15, 3152(%rsp)                              #960.3
..LN6538:
        movq      %rdx, %r15                                    #960.3
..LN6539:
        movq      %r13, 3160(%rsp)                              #960.3
..LN6540:
        movq      %rax, %r13                                    #960.3
..LN6541:
                                # LOE rbx r12 r13 r15 r14d
..B13.92:                       # Preds ..B13.91 ..B13.96       # Infreq
..L597:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN6542:
	.loc    1  961  is_stmt 1
        movl      %r13d, %eax                                   #961.22
..LN6543:
        incl      %eax                                          #961.17
..LN6544:
        cltd                                                    #961.22
..LN6545:
        idivl     %r14d                                         #961.22
..LN6546:
	.loc    1  504  is_stmt 1
        vmovsd    1616(%rsp,%r13,8), %xmm3                      #504.37
..LN6547:
	.loc    1  970  is_stmt 1
        vxorpd    %xmm5, %xmm5, %xmm5                           #970.20
..LN6548:
	.loc    1  961  is_stmt 1
        movslq    %edx, %rdx                                    #961.22
..LN6549:
	.loc    1  504  is_stmt 1
        vmovsd    2016(%rsp,%r13,8), %xmm1                      #504.44
..LN6550:
        vmovsd    %xmm3, 3368(%rsp)                             #504.37
..LN6551:
        vmovsd    %xmm1, 3384(%rsp)                             #504.44
..LN6552:
        vmovsd    1616(%rsp,%rdx,8), %xmm2                      #504.37
..LN6553:
        vmovsd    2016(%rsp,%rdx,8), %xmm0                      #504.44
..LN6554:
	.loc    1  968  is_stmt 1
        vsubsd    %xmm3, %xmm2, %xmm4                           #968.21
..LN6555:
	.loc    1  504  is_stmt 1
        vmovsd    %xmm2, 3376(%rsp)                             #504.37
..LN6556:
        vmovsd    %xmm0, 3392(%rsp)                             #504.44
..LN6557:
	.loc    1  968  is_stmt 1
        vmovsd    %xmm4, 3400(%rsp)                             #968.21
..LN6558:
	.loc    1  970  is_stmt 1
        vucomisd  %xmm5, %xmm4                                  #970.20
..LN6559:
        jp        ..B13.93      # Prob 0%                       #970.20
..LN6560:
        je        ..B13.96      # Prob 16%                      #970.20
..LN6561:
                                # LOE rbx r12 r13 r15 r14d xmm0 ymm0 zmm0
..B13.93:                       # Preds ..B13.92                # Infreq
..LN6562:
	.loc    1  972  is_stmt 1
        call      __libm_sse2_sincos                            #972.5
..LN6563:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1
..B13.177:                      # Preds ..B13.93                # Infreq
..LN6564:
        vfmadd213sd 3392(%rsp), %xmm0, %xmm1                    #972.5
..LN6565:
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm1, %xmm2      #972.35
..LN6566:
        vmovsd    %xmm2, 3248(%rsp)                             #972.35
..LN6567:
	.loc    1  973  is_stmt 1
        vmovsd    3384(%rsp), %xmm0                             #973.5
..LN6568:
        call      __libm_sse2_sincos                            #973.5
..LN6569:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1
..B13.176:                      # Preds ..B13.177               # Infreq
..LN6570:
	.loc    1  977  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm10            #977.22
..LN6571:
        vmovsd    3400(%rsp), %xmm6                             #977.22
..LN6572:
        vcomisd   %xmm10, %xmm6                                 #977.22
..LN6573:
	.loc    1  973  is_stmt 1
        vfmadd213sd 3384(%rsp), %xmm0, %xmm1                    #973.5
..LN6574:
	.loc    1  977  is_stmt 1
        vmovsd    .L_2il0floatpacket.4(%rip), %xmm13            #977.36
..LN6575:
	.loc    1  978  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm12            #978.22
..LN6576:
	.loc    1  977  is_stmt 1
        vsubsd    %xmm13, %xmm6, %xmm7                          #977.36
..LN6577:
	.loc    1  973  is_stmt 1
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm1, %xmm2      #973.35
..LN6578:
	.loc    1  977  is_stmt 1
        ja        ..L598        # Prob 50%                      #977.22
..LN6579:
        vmovaps   %xmm6, %xmm7                                  #977.22
..L598:                                                         #
..LN6580:
	.loc    1  978  is_stmt 1
        vcomisd   %xmm7, %xmm12                                 #978.22
..LN6581:
	.loc    1  979  is_stmt 1
        vmovsd    3456(%rsp), %xmm5                             #979.20
..LN6582:
        vmovsd    3376(%rsp), %xmm4                             #979.20
..LN6583:
	.loc    1  982  is_stmt 1
        vmovsd    3368(%rsp), %xmm3                             #982.19
..LN6584:
	.loc    1  979  is_stmt 1
        vsubsd    %xmm5, %xmm4, %xmm8                           #979.20
..LN6585:
	.loc    1  978  is_stmt 1
        vaddsd    %xmm13, %xmm7, %xmm4                          #978.36
..LN6586:
	.loc    1  982  is_stmt 1
        vsubsd    %xmm5, %xmm3, %xmm11                          #982.19
..LN6587:
	.loc    1  980  is_stmt 1
        vsubsd    %xmm13, %xmm8, %xmm9                          #980.23
..LN6588:
	.loc    1  983  is_stmt 1
        vsubsd    %xmm13, %xmm11, %xmm14                        #983.23
..LN6589:
	.loc    1  978  is_stmt 1
        ja        ..L599        # Prob 50%                      #978.22
..LN6590:
        vmovaps   %xmm7, %xmm4                                  #978.22
..L599:                                                         #
..LN6591:
	.loc    1  980  is_stmt 1
        vcomisd   %xmm10, %xmm8                                 #980.23
..LN6592:
        ja        ..L600        # Prob 50%                      #980.23
..LN6593:
        vmovaps   %xmm8, %xmm9                                  #980.23
..L600:                                                         #
..LN6594:
	.loc    1  981  is_stmt 1
        vcomisd   %xmm9, %xmm12                                 #981.23
..LN6595:
        vaddsd    %xmm13, %xmm9, %xmm1                          #981.23
..LN6596:
        ja        ..L601        # Prob 50%                      #981.23
..LN6597:
        vmovaps   %xmm9, %xmm1                                  #981.23
..L601:                                                         #
..LN6598:
	.loc    1  983  is_stmt 1
        vcomisd   %xmm10, %xmm11                                #983.23
..LN6599:
        ja        ..L602        # Prob 50%                      #983.23
..LN6600:
        vmovaps   %xmm11, %xmm14                                #983.23
..L602:                                                         #
..LN6601:
	.loc    1  984  is_stmt 1
        vcomisd   %xmm14, %xmm12                                #984.23
..LN6602:
        vaddsd    %xmm13, %xmm14, %xmm8                         #984.23
..LN6603:
        ja        ..L603        # Prob 50%                      #984.23
..LN6604:
        vmovaps   %xmm14, %xmm8                                 #984.23
..L603:                                                         #
..LN6605:
	.loc    1  986  is_stmt 1
        vsubsd    %xmm1, %xmm8, %xmm15                          #986.19
..LN6606:
        vcvttsd2si %xmm15, %esi                                 #986.19
..LN6607:
        movl      %esi, %ecx                                    #986.8
..LN6608:
        sarl      $31, %ecx                                     #986.8
..LN6609:
        xorl      %ecx, %esi                                    #986.8
..LN6610:
        subl      %ecx, %esi                                    #986.8
..LN6611:
        cmpl      $3, %esi                                      #986.28
..LN6612:
        jg        ..B13.95      # Prob 50%                      #986.28
..LN6613:
                                # LOE rbx r12 r13 r15 r14d xmm1 xmm2 xmm4 xmm8
..B13.94:                       # Preds ..B13.176               # Infreq
..LN6614:
	.loc    1  987  is_stmt 1
        vmulsd    3248(%rsp), %xmm1, %xmm0                      #987.7
..LN6615:
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm4, %xmm1      #987.7
..LN6616:
        vfmadd213sd %xmm0, %xmm8, %xmm2                         #987.7
..LN6617:
        vmovsd    3192(%rsp), %xmm3                             #987.7
..LN6618:
        vfnmadd231sd %xmm2, %xmm1, %xmm3                        #987.7
..LN6619:
        vmovsd    %xmm3, 3192(%rsp)                             #987.7
..LN6620:
        jmp       ..B13.96      # Prob 100%                     #987.7
..LN6621:
                                # LOE rbx r12 r13 r15 r14d
..B13.95:                       # Preds ..B13.176               # Infreq
..LN6622:
	.loc    1  994  is_stmt 1
        vcvttsd2si %xmm4, %esi                                  #994.43
..LN6623:
	.loc    1  996  is_stmt 1
        vaddsd    %xmm8, %xmm1, %xmm7                           #996.19
..LN6624:
	.loc    1  993  is_stmt 1
        vxorpd    %xmm5, %xmm5, %xmm5                           #993.2
..LN6625:
	.loc    1  994  is_stmt 1
        movl      %esi, %ecx                                    #994.39
..LN6626:
	.loc    1  993  is_stmt 1
        vcomisd   %xmm5, %xmm1                                  #993.2
..LN6627:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm6             #993.2
..LN6628:
	.loc    1  994  is_stmt 1
        vxorpd    %xmm4, %xmm4, %xmm4                           #994.39
..LN6629:
	.loc    1  993  is_stmt 1
        ja        ..L604        # Prob 50%                      #993.2
..LN6630:
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm6             #993.2
..L604:                                                         #
..LN6631:
	.loc    1  995  is_stmt 1
        vmovsd    3248(%rsp), %xmm0                             #995.34
..LN6632:
        vsubsd    %xmm6, %xmm1, %xmm11                          #995.34
..LN6633:
        vmulsd    %xmm1, %xmm0, %xmm1                           #995.34
..LN6634:
        vaddsd    %xmm6, %xmm8, %xmm9                           #995.61
..LN6635:
        vmulsd    %xmm8, %xmm2, %xmm8                           #995.61
..LN6636:
	.loc    1  994  is_stmt 1
        vsubsd    %xmm0, %xmm2, %xmm2                           #994.23
..LN6637:
	.loc    1  996  is_stmt 1
        vmulsd    %xmm6, %xmm7, %xmm3                           #996.19
..LN6638:
	.loc    1  995  is_stmt 1
        vmulsd    %xmm11, %xmm2, %xmm12                         #995.7
..LN6639:
        vmulsd    %xmm9, %xmm8, %xmm10                          #995.66
..LN6640:
	.loc    1  994  is_stmt 1
        sarl      $31, %ecx                                     #994.39
..LN6641:
        xorl      %ecx, %esi                                    #994.39
..LN6642:
        subl      %ecx, %esi                                    #994.39
..LN6643:
        vcvtsi2sd %esi, %xmm4, %xmm4                            #994.39
..LN6644:
	.loc    1  995  is_stmt 1
        vfnmadd213sd %xmm10, %xmm11, %xmm1                      #995.7
..LN6645:
        vxorpd    .L_2il0floatpacket.8(%rip), %xmm12, %xmm13    #995.7
..LN6646:
	.loc    1  994  is_stmt 1
        vdivsd    %xmm4, %xmm13, %xmm14                         #994.39
..LN6647:
        vaddsd    %xmm14, %xmm0, %xmm15                         #994.39
..LN6648:
	.loc    1  995  is_stmt 1
        vmovsd    3192(%rsp), %xmm0                             #995.7
..LN6649:
        vfnmadd213sd %xmm1, %xmm15, %xmm3                       #995.7
..LN6650:
        vfmadd231sd .L_2il0floatpacket.1(%rip), %xmm3, %xmm0    #995.7
..LN6651:
        vmovsd    %xmm0, 3192(%rsp)                             #995.7
..LN6652:
                                # LOE rbx r12 r13 r15 r14d
..B13.96:                       # Preds ..B13.94 ..B13.95 ..B13.92 # Infreq
..LN6653:
	.loc    1  960  is_stmt 1
        incq      %r13                                          #960.3
..LN6654:
        cmpq      %r15, %r13                                    #960.3
..LN6655:
        jb        ..B13.92      # Prob 82%                      #960.3
..LN6656:
                                # LOE rbx r12 r13 r15 r14d
..B13.97:                       # Preds ..B13.96                # Infreq
..LN6657:
        vmovsd    3192(%rsp), %xmm0                             #
..LN6658:
	.loc    1  929  is_stmt 1
        movl      %r14d, %r8d                                   #929.22
..LN6659:
	.loc    1  1000  is_stmt 1
        vmulsd    .L_2il0floatpacket.5(%rip), %xmm0, %xmm9      #1000.25
..LN6660:
	.loc    1  499  is_stmt 1
        vmovd     %r14d, %xmm0                                  #499.22
..LN6661:
	.loc    1  929  is_stmt 1
        vmovdqu   2688(%rsp), %ymm10                            #929.22
..LN6662:
	.loc    1  504  is_stmt 1
        movq      3136(%rsp), %rcx                              #504.4
..LN6663:
        movq      80(%rbp), %rax                                #504.4
..LN6664:
        movq      3160(%rsp), %r13                              #
..LN6665:
        vmovsd    %xmm9, (%rax,%rcx,8)                          #504.4
..LN6666:
	.loc    1  928  is_stmt 1
        xorl      %eax, %eax                                    #928.3
..LN6667:
        lea       63(%r14), %ecx                                #928.3
..LN6668:
	.loc    1  499  is_stmt 1
        vpbroadcastd %xmm0, %ymm8                               #499.22
..LN6669:
	.loc    1  929  is_stmt 1
        xorl      %esi, %esi                                    #929.22
..LN6670:
	.loc    1  928  is_stmt 1
        shrl      $6, %ecx                                      #928.3
..LN6671:
	.loc    1  929  is_stmt 1
        movl      %eax, %r14d                                   #929.22
..LN6672:
        movq      %r12, 3176(%rsp)                              #929.22
..LN6673:
        movl      %eax, %r12d                                   #929.22
..LN6674:
        movq      %rbx, 3184(%rsp)                              #929.22
..LN6675:
	.loc    1  925  is_stmt 1
        vxorpd    %xmm9, %xmm9, %xmm9                           #925.17
..LN6676:
                                # LOE ecx esi r8d r12d r14d xmm9 ymm8 ymm10
..B13.98:                       # Preds ..B13.97 ..B13.126      # Infreq
..L605:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # %s was not vectorized: inner loop was already vectorized
..LN6677:
	.loc    1  928  is_stmt 1
        lea       64(%r14), %r15d                               #928.3
..LN6678:
        cmpl      %r15d, %r8d                                   #928.3
..LN6679:
        cmovl     %r8d, %r15d                                   #928.3
..LN6680:
        movslq    %r15d, %rbx                                   #928.3
..LN6681:
        addl      %esi, %r15d                                   #928.3
..LN6682:
        cmpl      $16, %r15d                                    #928.3
..LN6683:
        jl        ..B13.141     # Prob 10%                      #928.3
..LN6684:
                                # LOE rbx ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B13.99:                       # Preds ..B13.98                # Infreq
..LN6685:
        movl      %r15d, %eax                                   #928.3
..LN6686:
        xorl      %r10d, %r10d                                  #928.3
..LN6687:
        andl      $-16, %eax                                    #928.3
..LN6688:
	.loc    1  934  is_stmt 1
        movslq    %r14d, %r9                                    #934.12
..LN6689:
	.loc    1  928  is_stmt 1
        movslq    %eax, %rdi                                    #928.3
..LN6690:
        .align    16,0x90
..LN6691:
                                # LOE rbx rdi r9 r10 eax ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B13.100:                      # Preds ..B13.100 ..B13.99      # Infreq
..L606:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 4
                # LOOP WAS STRIPMINED BY 64
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 3.958984
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.042969
                # MAIN VECTOR TYPE: 64-bits floating point
..LN6692:
	.loc    1  505  is_stmt 1
        vmovupd   2016(%rsp,%r9,8), %ymm0                       #505.45
..LN6693:
        vmovupd   2048(%rsp,%r9,8), %ymm2                       #505.45
..LN6694:
        vmovupd   2080(%rsp,%r9,8), %ymm3                       #505.45
..LN6695:
        vmovupd   2112(%rsp,%r9,8), %ymm4                       #505.45
..LN6696:
	.loc    1  934  is_stmt 1
        vmovupd   %ymm0, 704(%rsp,%r10,8)                       #934.5
..LN6697:
        vmovupd   %ymm2, 736(%rsp,%r10,8)                       #934.5
..LN6698:
        vmovupd   %ymm3, 768(%rsp,%r10,8)                       #934.5
..LN6699:
        vmovupd   %ymm4, 800(%rsp,%r10,8)                       #934.5
..LN6700:
	.loc    1  928  is_stmt 1
        addq      $16, %r10                                     #928.3
..LN6701:
        addq      $16, %r9                                      #928.3
..LN6702:
        cmpq      %rdi, %r10                                    #928.3
..LN6703:
        jb        ..B13.100     # Prob 82%                      #928.3
..LN6704:
                                # LOE rbx rdi r9 r10 eax ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B13.101:                      # Preds ..B13.100               # Infreq
..LN6705:
        lea       1(%rax), %edi                                 #928.3
..LN6706:
        cmpl      %edi, %r15d                                   #928.3
..LN6707:
        jb        ..B13.111     # Prob 50%                      #928.3
..LN6708:
                                # LOE rbx eax ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B13.102:                      # Preds ..B13.101 ..B13.141     # Infreq
..LN6709:
        movslq    %eax, %r10                                    #928.3
..LN6710:
        movslq    %r15d, %rdx                                   #928.3
..LN6711:
        subq      %r10, %rdx                                    #928.3
..LN6712:
        cmpq      $4, %rdx                                      #928.3
..LN6713:
        jl        ..B13.138     # Prob 10%                      #928.3
..LN6714:
                                # LOE rdx rbx r10 eax ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B13.103:                      # Preds ..B13.102               # Infreq
..LN6715:
	.loc    1  934  is_stmt 1
        movslq    %r14d, %r9                                    #934.12
..LN6716:
	.loc    1  928  is_stmt 1
        movl      %edx, %edi                                    #928.3
..LN6717:
	.loc    1  934  is_stmt 1
        movslq    %eax, %rax                                    #934.12
..LN6718:
	.loc    1  928  is_stmt 1
        andl      $-4, %edi                                     #928.3
..LN6719:
	.loc    1  934  is_stmt 1
        addq      %rax, %r9                                     #934.12
..LN6720:
	.loc    1  928  is_stmt 1
        xorl      %r11d, %r11d                                  #928.3
..LN6721:
        movslq    %edi, %rdi                                    #928.3
..LN6722:
        lea       704(%rsp,%r10,8), %r13                        #
..LN6723:
	.loc    1  505  is_stmt 1
        lea       2016(%rsp,%r9,8), %r9                         #505.45
..LN6724:
                                # LOE rdx rbx rdi r9 r10 r11 r13 eax ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B13.104:                      # Preds ..B13.104 ..B13.103     # Infreq
..L607:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS STRIPMINED BY 64
                # LOOP WAS VECTORIZED
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 1.915039
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 1.875000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN6725:
        vmovupd   (%r9,%r11,8), %ymm0                           #505.45
..LN6726:
	.loc    1  934  is_stmt 1
        vmovupd   %ymm0, (%r13,%r11,8)                          #934.5
..LN6727:
	.loc    1  928  is_stmt 1
        addq      $4, %r11                                      #928.3
..LN6728:
        cmpq      %rdi, %r11                                    #928.3
..LN6729:
        jb        ..B13.104     # Prob 82%                      #928.3
..LN6730:
                                # LOE rdx rbx rdi r9 r10 r11 r13 eax ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B13.106:                      # Preds ..B13.104 ..B13.138     # Infreq
..LN6731:
        cmpq      %rdx, %rdi                                    #928.3
..LN6732:
        jae       ..B13.110     # Prob 9%                       #928.3
..LN6733:
                                # LOE rdx rbx rdi r10 eax ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B13.107:                      # Preds ..B13.106               # Infreq
..LN6734:
	.loc    1  934  is_stmt 1
        movslq    %eax, %rax                                    #934.12
..LN6735:
        lea       704(%rsp,%r10,8), %r9                         #
..LN6736:
        movslq    %r14d, %r10                                   #934.12
..LN6737:
        addq      %rax, %r10                                    #934.12
..LN6738:
	.loc    1  505  is_stmt 1
        lea       2016(%rsp,%r10,8), %r10                       #505.45
..LN6739:
                                # LOE rdx rbx rdi r9 r10 ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B13.108:                      # Preds ..B13.108 ..B13.107     # Infreq
..L608:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS STRIPMINED BY 64
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 1.915039
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 1.875000
..LN6740:
        movq      (%r10,%rdi,8), %r11                           #505.45
..LN6741:
	.loc    1  934  is_stmt 1
        movq      %r11, (%r9,%rdi,8)                            #934.5
..LN6742:
	.loc    1  928  is_stmt 1
        incq      %rdi                                          #928.3
..LN6743:
        cmpq      %rdx, %rdi                                    #928.3
..LN6744:
        jb        ..B13.108     # Prob 82%                      #928.3
..LN6745:
                                # LOE rdx rbx rdi r9 r10 ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B13.110:                      # Preds ..B13.108 ..B13.106 ..B13.141 # Infreq
..LN6746:
        cmpl      $8, %r15d                                     #928.3
..LN6747:
        jl        ..B13.139     # Prob 10%                      #928.3
..LN6748:
                                # LOE rbx ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B13.111:                      # Preds ..B13.101 ..B13.110     # Infreq
..LN6749:
        movl      %r15d, %edi                                   #928.3
..LN6750:
        xorl      %r13d, %r13d                                  #928.3
..LN6751:
        andl      $-8, %edi                                     #928.3
..LN6752:
	.loc    1  929  is_stmt 1
        lea       1(%r14), %r9d                                 #929.17
..LN6753:
	.loc    1  928  is_stmt 1
        movslq    %edi, %rdi                                    #928.3
..LN6754:
        movl      %ecx, 680(%rsp)                               #928.3
..LN6755:
        movl      %r8d, 688(%rsp)                               #928.3
..LN6756:
	.loc    1  929  is_stmt 1
        vmovd     %r9d, %xmm0                                   #929.17
..LN6757:
        vpbroadcastd %xmm0, %ymm2                               #929.17
..LN6758:
        vpaddd    .L_2il0floatpacket.7(%rip), %ymm2, %ymm11     #929.17
..LN6759:
                                # LOE rbx rdi r13 esi r12d r14d r15d xmm9 ymm8 ymm10 ymm11
..B13.112:                      # Preds ..B13.178 ..B13.111     # Infreq
..L609:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS STRIPMINED BY 64
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 1.774414
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 8
                # NORMALIZED VECTORIZATION OVERHEAD 0.017578
                # MAIN VECTOR TYPE: 32-bits integer
..LN6760:
        vmovdqa   %ymm11, %ymm0                                 #929.22
..LN6761:
        vmovdqa   %ymm8, %ymm1                                  #929.22
..LN6762:
        call      __svml_irem8                                  #929.12
..LN6763:
                                # LOE rbx rdi r13 esi r12d r14d r15d xmm9 ymm0 ymm8 ymm10 ymm11
..B13.178:                      # Preds ..B13.112               # Infreq
..LN6764:
        vmovdqu   %ymm0, 2432(%rsp,%r13,4)                      #929.12
..LN6765:
	.loc    1  928  is_stmt 1
        addq      $8, %r13                                      #928.3
..LN6766:
	.loc    1  929  is_stmt 1
        vpaddd    %ymm10, %ymm11, %ymm11                        #929.17
..LN6767:
	.loc    1  928  is_stmt 1
        cmpq      %rdi, %r13                                    #928.3
..LN6768:
        jb        ..B13.112     # Prob 82%                      #928.3
..LN6769:
                                # LOE rbx rdi r13 esi r12d r14d r15d xmm9 ymm8 ymm10 ymm11
..B13.113:                      # Preds ..B13.178               # Infreq
..LN6770:
        movl      680(%rsp), %ecx                               #
..LN6771:
        movl      688(%rsp), %r8d                               #
..LN6772:
                                # LOE rbx rdi ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B13.114:                      # Preds ..B13.113 ..B13.139     # Infreq
..LN6773:
        movl      %edi, %r10d                                   #928.3
..LN6774:
	.loc    1  929  is_stmt 1
        lea       1(%r14,%r10), %r9d                            #929.17
..LN6775:
	.loc    1  928  is_stmt 1
        cmpl      %r15d, %r10d                                  #928.3
..LN6776:
        jae       ..B13.118     # Prob 9%                       #928.3
..LN6777:
                                # LOE rbx rdi ecx esi r8d r9d r10d r12d r14d r15d xmm9 ymm8 ymm10
..B13.116:                      # Preds ..B13.114 ..B13.116     # Infreq
..L610:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS STRIPMINED BY 64
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 1.774414
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 8
                # NORMALIZED VECTORIZATION OVERHEAD 0.017578
..LN6778:
	.loc    1  929  is_stmt 1
        movl      %r9d, %eax                                    #929.22
..LN6779:
        cltd                                                    #929.22
..LN6780:
        idivl     %r8d                                          #929.22
..LN6781:
	.loc    1  928  is_stmt 1
        incl      %r10d                                         #928.3
..LN6782:
        incl      %r9d                                          #928.3
..LN6783:
	.loc    1  929  is_stmt 1
        movl      %edx, 2432(%rsp,%rdi,4)                       #929.22
..LN6784:
	.loc    1  928  is_stmt 1
        incq      %rdi                                          #928.3
..LN6785:
        cmpl      %r15d, %r10d                                  #928.3
..LN6786:
        jb        ..B13.116     # Prob 82%                      #928.3
..LN6787:
                                # LOE rbx rdi ecx esi r8d r9d r10d r12d r14d r15d xmm9 ymm8 ymm10
..B13.118:                      # Preds ..B13.116 ..B13.114     # Infreq
..LN6788:
        movslq    %r12d, %r15                                   #928.3
..LN6789:
        xorl      %r13d, %r13d                                  #928.3
..LN6790:
        shlq      $6, %r15                                      #928.3
..LN6791:
        negq      %r15                                          #928.3
..LN6792:
        addq      %rbx, %r15                                    #928.3
..LN6793:
        je        ..B13.126     # Prob 9%                       #928.3
..LN6794:
                                # LOE r13 r15 ecx esi r8d r12d r14d xmm9 ymm8 ymm10
..B13.119:                      # Preds ..B13.118               # Infreq
..LN6795:
	.loc    1  930  is_stmt 1
        movslq    %r14d, %r14                                   #930.24
..LN6796:
	.loc    1  505  is_stmt 1
        vmovsd    %xmm9, 3240(%rsp)                             #505.38
..LN6797:
        movl      %esi, 32(%rsp)                                #505.38
..LN6798:
        movl      %ecx, 680(%rsp)                               #505.38
..LN6799:
        vmovdqu   %ymm8, (%rsp)                                 #505.38
..LN6800:
        lea       1616(%rsp,%r14,8), %rbx                       #505.38
..LN6801:
        vmovdqu   %ymm10, 2688(%rsp)                            #505.38
..LN6802:
        movl      %r8d, 688(%rsp)                               #505.38
..LN6803:
                                # LOE rbx r13 r15 r12d r14d
..B13.120:                      # Preds ..B13.124 ..B13.119     # Infreq
..L611:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 3
                # LOOP WAS STRIPMINED BY 64
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN6804:
	.loc    1  933  is_stmt 1
        movslq    2432(%rsp,%r13,4), %rcx                       #933.5
..LN6805:
	.loc    1  938  is_stmt 1
        vxorpd    %xmm7, %xmm7, %xmm7                           #938.18
..LN6806:
	.loc    1  937  is_stmt 1
        vmovsd    704(%rsp,%r13,8), %xmm1                       #937.5
..LN6807:
        vmovsd    %xmm1, 3424(%rsp)                             #937.5
..LN6808:
	.loc    1  505  is_stmt 1
        vmovsd    2016(%rsp,%rcx,8), %xmm2                      #505.45
..LN6809:
        vmovsd    1616(%rsp,%rcx,8), %xmm6                      #505.38
..LN6810:
	.loc    1  935  is_stmt 1
        vsubsd    %xmm2, %xmm1, %xmm4                           #935.17
..LN6811:
	.loc    1  937  is_stmt 1
        vaddsd    %xmm1, %xmm2, %xmm0                           #937.19
..LN6812:
	.loc    1  930  is_stmt 1
        vsubsd    (%rbx,%r13,8), %xmm6, %xmm1                   #930.24
..LN6813:
	.loc    1  937  is_stmt 1
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm3             #937.25
..LN6814:
	.loc    1  936  is_stmt 1
        vmulsd    %xmm4, %xmm3, %xmm5                           #936.14
..LN6815:
	.loc    1  938  is_stmt 1
        vucomisd  %xmm7, %xmm1                                  #938.18
..LN6816:
	.loc    1  937  is_stmt 1
        vmulsd    %xmm0, %xmm3, %xmm0                           #937.25
..LN6817:
	.loc    1  505  is_stmt 1
        vmovsd    %xmm2, 3408(%rsp)                             #505.45
..LN6818:
	.loc    1  936  is_stmt 1
        vmovsd    %xmm5, 3416(%rsp)                             #936.14
..LN6819:
	.loc    1  938  is_stmt 1
        jp        ..B13.121     # Prob 0%                       #938.18
..LN6820:
        je        ..B13.124     # Prob 16%                      #938.18
..LN6821:
                                # LOE rbx r13 r15 r12d r14d xmm0 xmm1 xmm5 ymm5 zmm5
..B13.121:                      # Preds ..B13.120               # Infreq
..LN6822:
	.loc    1  939  is_stmt 1
        vcomisd   .L_2il0floatpacket.0(%rip), %xmm1             #939.20
..LN6823:
        vmovsd    .L_2il0floatpacket.4(%rip), %xmm2             #939.30
..LN6824:
        vsubsd    %xmm2, %xmm1, %xmm3                           #939.30
..LN6825:
        ja        ..L612        # Prob 50%                      #939.20
..LN6826:
        vmovaps   %xmm1, %xmm3                                  #939.20
..L612:                                                         #
..LN6827:
	.loc    1  940  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm1             #940.20
..LN6828:
        vaddsd    %xmm2, %xmm3, %xmm4                           #940.30
..LN6829:
        vcomisd   %xmm3, %xmm1                                  #940.20
..LN6830:
	.loc    1  942  is_stmt 1
        vandpd    .L_2il0floatpacket.9(%rip), %xmm5, %xmm7      #942.10
..LN6831:
        vmovsd    .L_2il0floatpacket.6(%rip), %xmm6             #942.21
..LN6832:
	.loc    1  940  is_stmt 1
        ja        ..L613        # Prob 50%                      #940.20
..LN6833:
        vmovaps   %xmm3, %xmm4                                  #940.20
..L613:                                                         #
..LN6834:
        vmovsd    %xmm4, 3256(%rsp)                             #940.20
..LN6835:
	.loc    1  942  is_stmt 1
        vcomisd   %xmm7, %xmm6                                  #942.21
..LN6836:
        jbe       ..B13.123     # Prob 50%                      #942.21
..LN6837:
                                # LOE rbx r13 r15 r12d r14d xmm0 xmm4 xmm5 ymm4 ymm5 zmm4 zmm5
..B13.122:                      # Preds ..B13.121               # Infreq
..LN6838:
	.loc    1  943  is_stmt 1
        vzeroupper                                              #943.23
..LN6839:
        call      __libm_sse2_sincos                            #943.23
..LN6840:
                                # LOE rbx r13 r15 r12d r14d xmm0 xmm1
..B13.180:                      # Preds ..B13.122               # Infreq
..LN6841:
        vmovsd    %xmm0, 3216(%rsp)                             #943.23
..LN6842:
        vmovsd    %xmm1, 3232(%rsp)                             #943.23
..LN6843:
        vmovsd    3408(%rsp), %xmm0                             #943.54
..LN6844:
        call      cos                                           #943.54
..LN6845:
                                # LOE rbx r13 r15 r12d r14d xmm0
..B13.179:                      # Preds ..B13.180               # Infreq
..LN6846:
        vmovsd    3424(%rsp), %xmm2                             #943.7
..LN6847:
        vmovapd   %xmm0, %xmm1                                  #943.54
..LN6848:
        vmovsd    3232(%rsp), %xmm0                             #943.7
..LN6849:
        vfmadd132sd 3216(%rsp), %xmm0, %xmm2                    #943.7
..LN6850:
        vsubsd    %xmm1, %xmm0, %xmm3                           #943.7
..LN6851:
        vmovsd    3240(%rsp), %xmm5                             #943.7
..LN6852:
        vaddsd    %xmm3, %xmm2, %xmm4                           #943.7
..LN6853:
        vfnmadd231sd 3256(%rsp), %xmm4, %xmm5                   #943.7
..LN6854:
        vmovsd    %xmm5, 3240(%rsp)                             #943.7
..LN6855:
        jmp       ..B13.124     # Prob 100%                     #943.7
..LN6856:
                                # LOE rbx r13 r15 r12d r14d
..B13.123:                      # Preds ..B13.121               # Infreq
..LN6857:
	.loc    1  945  is_stmt 1
        vzeroupper                                              #945.40
..LN6858:
        call      __libm_sse2_sincos                            #945.40
..LN6859:
                                # LOE rbx r13 r15 r12d r14d xmm0 xmm1
..B13.183:                      # Preds ..B13.123               # Infreq
..LN6860:
        vmovsd    %xmm0, 3208(%rsp)                             #945.40
..LN6861:
        vmovsd    %xmm1, 3224(%rsp)                             #945.40
..LN6862:
        vmovsd    3416(%rsp), %xmm0                             #945.23
..LN6863:
        call      sin                                           #945.23
..LN6864:
                                # LOE rbx r13 r15 r12d r14d xmm0
..B13.182:                      # Preds ..B13.183               # Infreq
..LN6865:
        vmovsd    %xmm0, 3200(%rsp)                             #945.23
..LN6866:
        vmovsd    3408(%rsp), %xmm0                             #945.72
..LN6867:
        call      cos                                           #945.72
..LN6868:
                                # LOE rbx r13 r15 r12d r14d xmm0
..B13.181:                      # Preds ..B13.182               # Infreq
..LN6869:
        vmovapd   %xmm0, %xmm1                                  #945.72
..LN6870:
        vmovsd    3200(%rsp), %xmm0                             #945.32
..LN6871:
        vdivsd    3416(%rsp), %xmm0, %xmm2                      #945.32
..LN6872:
        vmovsd    3224(%rsp), %xmm3                             #945.7
..LN6873:
        vmovsd    3424(%rsp), %xmm4                             #945.7
..LN6874:
        vfmadd132sd 3208(%rsp), %xmm3, %xmm4                    #945.7
..LN6875:
        vfmsub213sd %xmm1, %xmm2, %xmm3                         #945.7
..LN6876:
        vmovsd    3240(%rsp), %xmm5                             #945.7
..LN6877:
        vfmadd213sd %xmm3, %xmm2, %xmm4                         #945.7
..LN6878:
        vfnmadd231sd 3256(%rsp), %xmm4, %xmm5                   #945.7
..LN6879:
        vmovsd    %xmm5, 3240(%rsp)                             #945.7
..LN6880:
                                # LOE rbx r13 r15 r12d r14d
..B13.124:                      # Preds ..B13.179 ..B13.181 ..B13.120 # Infreq
..LN6881:
	.loc    1  928  is_stmt 1
        incq      %r13                                          #928.3
..LN6882:
        cmpq      %r15, %r13                                    #928.3
..LN6883:
        jb        ..B13.120     # Prob 82%                      #928.3
..LN6884:
                                # LOE rbx r13 r15 r12d r14d
..B13.125:                      # Preds ..B13.124               # Infreq
..LN6885:
        vmovdqu   (%rsp), %ymm8                                 #
..LN6886:
        vmovsd    3240(%rsp), %xmm9                             #
..LN6887:
        vmovdqu   2688(%rsp), %ymm10                            #
..LN6888:
        movl      32(%rsp), %esi                                #
..LN6889:
        movl      680(%rsp), %ecx                               #
..LN6890:
        movl      688(%rsp), %r8d                               #
..LN6891:
                                # LOE ecx esi r8d r12d r14d xmm9 ymm8 ymm10
..B13.126:                      # Preds ..B13.125 ..B13.118     # Infreq
..LN6892:
        incl      %r12d                                         #928.3
..LN6893:
        addl      $64, %r14d                                    #928.3
..LN6894:
        addl      $-64, %esi                                    #928.3
..LN6895:
        cmpl      %ecx, %r12d                                   #928.3
..LN6896:
        jb        ..B13.98      # Prob 82%                      #928.3
..LN6897:
                                # LOE ecx esi r8d r12d r14d xmm9 ymm8 ymm10
..B13.127:                      # Preds ..B13.126               # Infreq
..LN6898:
	.loc    1  947  is_stmt 1
        vmulsd    .L_2il0floatpacket.5(%rip), %xmm9, %xmm0      #947.25
..LN6899:
        vmovdqu   %ymm10, 2688(%rsp)                            #
..LN6900:
	.loc    1  505  is_stmt 1
        movq      3136(%rsp), %r11                              #505.4
..LN6901:
	.loc    1  506  is_stmt 1
        movq      40(%rbp), %rdx                                #506.4
..LN6902:
	.loc    1  507  is_stmt 1
        movq      48(%rbp), %rsi                                #507.4
..LN6903:
	.loc    1  508  is_stmt 1
        movq      56(%rbp), %r8                                 #508.4
..LN6904:
	.loc    1  505  is_stmt 1
        movq      88(%rbp), %rax                                #505.4
..LN6905:
	.loc    1  509  is_stmt 1
        movq      64(%rbp), %r10                                #509.4
..LN6906:
        movq      3160(%rsp), %r13                              #
..LN6907:
	.loc    1  507  is_stmt 1
        movl      3344(%rsp), %ecx                              #507.4
..LN6908:
	.loc    1  508  is_stmt 1
        movq      3264(%rsp), %rdi                              #508.4
..LN6909:
	.loc    1  509  is_stmt 1
        movl      3168(%rsp), %r9d                              #509.4
..LN6910:
	.loc    1  510  is_stmt 1
        movl      3144(%rsp), %r14d                             #510.6
..LN6911:
        incl      %r14d                                         #510.6
..LN6912:
	.loc    1  506  is_stmt 1
        movl      %r13d, (%rdx,%r11,4)                          #506.4
..LN6913:
	.loc    1  507  is_stmt 1
        movl      %ecx, (%rsi,%r11,4)                           #507.4
..LN6914:
	.loc    1  508  is_stmt 1
        movl      %edi, (%r8,%r11,4)                            #508.4
..LN6915:
	.loc    1  505  is_stmt 1
        vmovsd    %xmm0, (%rax,%r11,8)                          #505.4
..LN6916:
	.loc    1  509  is_stmt 1
        movl      %r9d, (%r10,%r11,4)                           #509.4
..LN6917:
	.loc    1  510  is_stmt 1
        incq      %r11                                          #510.6
..LN6918:
        movq      3176(%rsp), %r12                              #
..LN6919:
        movq      3184(%rsp), %rbx                              #
..LN6920:
        movq      3152(%rsp), %r15                              #
..LN6921:
        movq      %r11, 3136(%rsp)                              #510.6
..LN6922:
        movl      %r14d, 3144(%rsp)                             #510.6
..LN6923:
	.loc    1  511  is_stmt 1
        cmpl      $10000000, %r14d                              #511.16
..LN6924:
        jg        ..B13.140     # Prob 0%                       #511.16
..LN6925:
                                # LOE rbx r12 r13 r15 ebx r12d r13d r15d bl bh r12b r13b r15b xmm10 ymm10 zmm10
..B13.128:                      # Preds ..B13.84 ..B13.80 ..B13.140 ..B13.127 ..B13.90
                                #       ..B13.88 ..B13.76       # Infreq
..LN6926:
	.loc    1  478  is_stmt 1
        incq      %r13                                          #478.29
..LN6927:
        cmpq      3496(%rsp), %r13                              #478.29
..LN6928:
        jb        ..B13.76      # Prob 82%                      #478.29
..LN6929:
                                # LOE rbx r12 r13 r15
..B13.129:                      # Preds ..B13.128               # Infreq
..LN6930:
        movl      3344(%rsp), %edx                              #
..LN6931:
        incl      %edx                                          #478.5
..LN6932:
        movl      3336(%rsp), %ecx                              #
..LN6933:
        movl      3320(%rsp), %r9d                              #
..LN6934:
        addl      %r9d, %ecx                                    #478.5
..LN6935:
        movl      3328(%rsp), %eax                              #
..LN6936:
        movq      3352(%rsp), %r11                              #
..LN6937:
        lea       1(%rax,%r9), %eax                             #478.5
..LN6938:
        movq      3360(%rsp), %r8                               #
..LN6939:
        movq      3312(%rsp), %r10                              #
..LN6940:
        cmpl      3304(%rsp), %edx                              #478.5
..LN6941:
        jb        ..B13.74      # Prob 82%                      #478.5
..LN6942:
                                # LOE r8 r10 r11 eax edx ecx r9d
..B13.130:                      # Preds ..B13.142 ..B13.129     # Infreq
..LN6943:
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm0             #
..LN6944:
        movq      3264(%rsp), %r10                              #
..LN6945:
        movq      696(%rsp), %rsi                               #
..LN6946:
        movq      3128(%rsp), %rdi                              #
..LN6947:
        movl      3168(%rsp), %r8d                              #
..LN6948:
        movq      2416(%rsp), %r14                              #
..LN6949:
        movl      3120(%rsp), %ebx                              #
..LN6950:
        movq      2424(%rsp), %r12                              #
..LN6951:
        movl      3304(%rsp), %r15d                             #
..LN6952:
        movq      24(%rbp), %r11                                #
..LN6953:
        movq      16(%rbp), %r13                                #
..LN6954:
                                # LOE rbx rsi rdi r8 r10 r11 r12 r13 r14 r15 ebx esi edi r8d r10d r12d r14d r15d bl bh sil dil r8b r10b r12b r14b r15b xmm0
..B13.131:                      # Preds ..B13.130               # Infreq
..LN6955:
	.loc    1  474  is_stmt 1
        incq      %r10                                          #474.27
..LN6956:
        cmpq      %r12, %r10                                    #474.27
..LN6957:
        jb        ..B13.72      # Prob 82%                      #474.27
..LN6958:
                                # LOE rbx rsi rdi r8 r10 r11 r12 r13 r14 r15 ebx esi edi r8d r12d r14d r15d bl bh sil dil r8b r12b r14b r15b xmm0
..B13.132:                      # Preds ..B13.131               # Infreq
..LN6959:
        incl      %r8d                                          #474.3
..LN6960:
        addq      %r12, %rsi                                    #474.3
..LN6961:
        incq      %rdi                                          #474.3
..LN6962:
        cmpl      %ebx, %r8d                                    #474.3
..LN6963:
        jb        ..B13.146     # Prob 82%                      #474.3
..LN6964:
                                # LOE rbx rsi rdi r11 r12 r13 r14 r15 ebx r8d r12d r14d r15d bl bh r12b r14b r15b xmm0
..B13.135:                      # Preds ..B13.148 ..B13.145 ..B13.132 ..B13.68 # Infreq
..LN6965:
	.loc    1  517  is_stmt 1
        vzeroupper                                              #517.3
..LN6966:
        movq      3280(%rsp), %rdi                              #517.3
..LN6967:
#       free(void *)
        call      free                                          #517.3
..LN6968:
                                # LOE
..B13.136:                      # Preds ..B13.135               # Infreq
..LN6969:
	.loc    1  518  is_stmt 1
        movq      2416(%rsp), %rdi                              #518.3
..LN6970:
#       free(void *)
        call      free                                          #518.3
..LN6971:
                                # LOE
..B13.137:                      # Preds ..B13.136               # Infreq
..LN6972:
	.loc    1  434  is_stmt 1
        movl      3144(%rsp), %eax                              #434.10
..LN6973:
	.loc    1  434  epilogue_begin  is_stmt 1
        addq      $3512, %rsp                                   #434.10
	.cfi_restore 3
..LN6974:
        popq      %rbx                                          #434.10
	.cfi_restore 15
..LN6975:
        popq      %r15                                          #434.10
	.cfi_restore 14
..LN6976:
        popq      %r14                                          #434.10
	.cfi_restore 13
..LN6977:
        popq      %r13                                          #434.10
	.cfi_restore 12
..LN6978:
        popq      %r12                                          #434.10
..LN6979:
        movq      %rbp, %rsp                                    #434.10
..LN6980:
        popq      %rbp                                          #434.10
	.cfi_def_cfa 7, 8
	.cfi_restore 6
..LN6981:
        ret                                                     #434.10
	.cfi_def_cfa 6, 16
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_offset 6, -16
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN6982:
                                # LOE
..B13.138:                      # Preds ..B13.102               # Infreq
..LN6983:
	.loc    1  928  is_stmt 1
        xorl      %edi, %edi                                    #928.3
..LN6984:
        jmp       ..B13.106     # Prob 100%                     #928.3
..LN6985:
                                # LOE rdx rbx rdi r10 eax ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B13.139:                      # Preds ..B13.110               # Infreq
..LN6986:
        xorl      %edi, %edi                                    #928.3
..LN6987:
        jmp       ..B13.114     # Prob 100%                     #928.3
..LN6988:
                                # LOE rbx rdi ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B13.140:                      # Preds ..B13.127               # Infreq
..LN6989:
	.loc    1  511  is_stmt 1
        movl      $.L_2__STRING.0, %edi                         #511.26
..LN6990:
        vzeroupper                                              #511.26
..___tag_value_create_xgrid_2dx1d_order2_.629:
..LN6991:
#       error_handler(const char *)
        call      error_handler                                 #511.26
..___tag_value_create_xgrid_2dx1d_order2_.630:
..LN6992:
        jmp       ..B13.128     # Prob 100%                     #511.26
..LN6993:
                                # LOE rbx r12 r13 r15
..B13.141:                      # Preds ..B13.98                # Infreq
..LN6994:
	.loc    1  928  is_stmt 1
        xorl      %eax, %eax                                    #928.3
..LN6995:
        cmpl      $1, %r15d                                     #928.3
..LN6996:
        jae       ..B13.102     # Prob 50%                      #928.3
..LN6997:
        jmp       ..B13.110     # Prob 100%                     #928.3
..LN6998:
                                # LOE rbx eax ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B13.142:                      # Preds ..B13.74                # Infreq
..LN6999:
	.loc    1  478  is_stmt 1
        incl      %edx                                          #478.5
..LN7000:
        addl      %r9d, %ecx                                    #478.5
..LN7001:
        lea       1(%rax,%r9), %eax                             #478.5
..LN7002:
        cmpl      3304(%rsp), %edx                              #478.5
..LN7003:
        jb        ..B13.74      # Prob 82%                      #478.5
..LN7004:
        jmp       ..B13.130     # Prob 100%                     #478.5
..LN7005:
                                # LOE r8 r10 r11 eax edx ecx r9d
..B13.144:                      # Preds ..B13.72                # Infreq
..LN7006:
	.loc    1  474  is_stmt 1
        .byte     15                                            #474.27
..LN7007:
        .byte     31                                            #474.27
..LN7008:
        .byte     132                                           #474.27
..LN7009:
        .byte     0                                             #474.27
..LN7010:
        .byte     0                                             #474.27
..LN7011:
        .byte     0                                             #474.27
..LN7012:
        .byte     0                                             #474.27
..LN7013:
        .byte     0                                             #474.27
..LN7014:
        incq      %r10                                          #474.27
..LN7015:
        cmpq      %r12, %r10                                    #474.27
..LN7016:
        jb        ..B13.72      # Prob 82%                      #474.27
..LN7017:
                                # LOE rsi rdi r10 r11 r12 r13 r14 ebx r8d r15d xmm0
..B13.145:                      # Preds ..B13.144               # Infreq
..LN7018:
        incl      %r8d                                          #474.3
..LN7019:
        addq      %r12, %rsi                                    #474.3
..LN7020:
        incq      %rdi                                          #474.3
..LN7021:
        cmpl      %ebx, %r8d                                    #474.3
..LN7022:
        jae       ..B13.135     # Prob 18%                      #474.3
..LN7023:
                                # LOE rsi rdi r11 r12 r13 r14 ebx r8d r15d xmm0
..B13.146:                      # Preds ..B13.132 ..B13.145     # Infreq
..LN7024:
        xorl      %r10d, %r10d                                  #474.27
..LN7025:
        jmp       ..B13.72      # Prob 100%                     #474.27
..LN7026:
                                # LOE rsi rdi r10 r11 r12 r13 r14 ebx r8d r15d xmm0
..B13.148:                      # Preds ..B13.70                # Infreq
..LN7027:
        incl      %r8d                                          #474.3
..LN7028:
        addq      %r12, %rsi                                    #474.3
..LN7029:
        incq      %rdi                                          #474.3
..LN7030:
        cmpl      %ebx, %r8d                                    #474.3
..LN7031:
        jb        ..B13.70      # Prob 82%                      #474.3
..LN7032:
        jmp       ..B13.135     # Prob 100%                     #474.3
..LN7033:
                                # LOE rax rdx rcx rsi rdi r12 ebx r8d r10d xmm0 xmm1 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 ymm2
..B13.150:                      # Preds ..B13.59                # Infreq
..LN7034:
	.loc    1  75  is_stmt 1
        incl      %r10d                                         #75.3
..LN7035:
        addq      696(%rsp), %rsi                               #75.3
..LN7036:
        addq      728(%rsp), %r8                                #75.3
..LN7037:
        cmpl      8(%rsp), %r10d                                #75.3
..LN7038:
        jb        ..B13.59      # Prob 82%                      #75.3
..LN7039:
        jmp       ..B13.65      # Prob 100%                     #75.3
..LN7040:
                                # LOE rax rdx rsi r8 r9 r11 ecx r10d
..B13.152:                      # Preds ..B13.50                # Infreq
..LN7041:
        incl      %edi                                          #75.18
..LN7042:
        addq      %r9, %r8                                      #75.18
..LN7043:
        lea       1(%rsi,%rcx), %esi                            #75.18
..LN7044:
        cmpl      24(%rsp), %edi                                #75.14
..LN7045:
        jl        ..B13.50      # Prob 82%                      #75.14
..LN7046:
        jmp       ..B13.56      # Prob 100%                     #75.14
..LN7047:
                                # LOE rax rdx r8 r9 r10 ecx esi edi
..B13.154:                      # Preds ..B13.38                # Infreq
..LN7048:
	.loc    1  464  is_stmt 1
        xorl      %r12d, %r12d                                  #464.28
..LN7049:
        jmp       ..B13.42      # Prob 100%                     #464.28
..LN7050:
                                # LOE rdx rcx r8 r9 r10 r12 r13 eax ebx esi edi r14d
..B13.155:                      # Preds ..B13.25 ..B13.27 ..B13.29 # Infreq
..LN7051:
        xorl      %r14d, %r14d                                  #464.28
..LN7052:
        jmp       ..B13.37      # Prob 100%                     #464.28
..LN7053:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi r14d
..B13.158:                      # Preds ..B13.8 ..B13.11 ..B13.13 # Infreq
..LN7054:
        xorl      %r11d, %r11d                                  #464.28
..LN7055:
        jmp       ..B13.21      # Prob 100%                     #464.28
..LN7056:
                                # LOE rdx rcx r8 r9 r10 r11 eax ebx esi edi
..B13.160:                      # Preds ..B13.9                 # Infreq
..LN7057:
        movq      16(%rsp), %r11                                #464.28
..LN7058:
        xorl      %r12d, %r12d                                  #464.28
..LN7059:
        jmp       ..B13.18      # Prob 100%                     #464.28
        .align    16,0x90
	.cfi_endproc
..LN7060:
                                # LOE rdx rcx r8 r9 r10 r11 r12 eax ebx esi edi
..LN7061:
# mark_end;
	.type	create_xgrid_2dx1d_order2_,@function
	.size	create_xgrid_2dx1d_order2_,.-create_xgrid_2dx1d_order2_
..LNcreate_xgrid_2dx1d_order2_.7062:
.LNcreate_xgrid_2dx1d_order2_:
	.data
# -- End  create_xgrid_2dx1d_order2_
	.text
.L_2__routine_start_create_xgrid_2dx1d_order2_13:
# -- Begin  create_xgrid_2dx1d_order2
	.text
# mark_begin;
       .align    16,0x90
	.globl create_xgrid_2dx1d_order2
# --- create_xgrid_2dx1d_order2(const int *, const int *, const int *, const int *, const double *, const double *, const double *, const double *, const double *, int *, int *, int *, int *, double *, double *, double *)
create_xgrid_2dx1d_order2:
# parameter 1(nlon_in): %rdi
# parameter 2(nlat_in): %rsi
# parameter 3(nlon_out): %rdx
# parameter 4(nlat_out): %rcx
# parameter 5(lon_in): %r8
# parameter 6(lat_in): %r9
# parameter 7(lon_out): 16 + %rbp
# parameter 8(lat_out): 24 + %rbp
# parameter 9(mask_in): 32 + %rbp
# parameter 10(i_in): 40 + %rbp
# parameter 11(j_in): 48 + %rbp
# parameter 12(i_out): 56 + %rbp
# parameter 13(j_out): 64 + %rbp
# parameter 14(xgrid_area): 72 + %rbp
# parameter 15(xgrid_clon): 80 + %rbp
# parameter 16(xgrid_clat): 88 + %rbp
..B14.1:                        # Preds ..B14.0
	.cfi_startproc
..___tag_value_create_xgrid_2dx1d_order2.635:
..L636:
                                                        #442.1
..LN7063:
	.loc    1  442  is_stmt 1
        pushq     %rbp                                          #442.1
	.cfi_def_cfa_offset 16
..LN7064:
        movq      %rsp, %rbp                                    #442.1
	.cfi_def_cfa 6, 16
	.cfi_offset 6, -16
..LN7065:
        andq      $-32, %rsp                                    #442.1
..LN7066:
        pushq     %r12                                          #442.1
..LN7067:
        pushq     %r13                                          #442.1
..LN7068:
        pushq     %r14                                          #442.1
..LN7069:
        pushq     %r15                                          #442.1
..LN7070:
        pushq     %rbx                                          #442.1
..LN7071:
        subq      $3512, %rsp                                   #442.1
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN7072:
        movq      %rsi, %r13                                    #442.1
..LN7073:
        movq      %rdi, 56(%rsp)                                #442.1
..LN7074:
        movq      %rdx, %r14                                    #442.1
..LN7075:
	.loc    1  451  prologue_end  is_stmt 1
        movl      (%rdi), %edi                                  #451.10
..LN7076:
	.loc    1  442  is_stmt 1
        movq      %rcx, %r15                                    #442.1
..LN7077:
	.loc    1  451  is_stmt 1
        movl      %edi, 3320(%rsp)                              #451.10
..LN7078:
	.loc    1  452  is_stmt 1
        movl      (%r13), %eax                                  #452.10
..LN7079:
	.loc    1  460  is_stmt 1
        imull     %eax, %edi                                    #460.28
..LN7080:
        movslq    %edi, %rdi                                    #460.28
..LN7081:
	.loc    1  453  is_stmt 1
        movl      (%r14), %r12d                                 #453.10
..LN7082:
	.loc    1  460  is_stmt 1
        shlq      $3, %rdi                                      #460.28
..LN7083:
	.loc    1  442  is_stmt 1
        movq      %r9, 3288(%rsp)                               #442.1
..LN7084:
        movq      %r8, 3312(%rsp)                               #442.1
..LN7085:
	.loc    1  452  is_stmt 1
        movl      %eax, 3304(%rsp)                              #452.10
..LN7086:
	.loc    1  453  is_stmt 1
        movl      %r12d, 32(%rsp)                               #453.10
..LN7087:
	.loc    1  474  is_stmt 1
        movslq    %r12d, %r12                                   #474.31
..LN7088:
	.loc    1  454  is_stmt 1
        movl      (%r15), %ebx                                  #454.10
..LN7089:
	.loc    1  456  is_stmt 1
        movl      $0, 3144(%rsp)                                #456.3
..LN7090:
        movq      $0, 3136(%rsp)                                #456.12
..LN7091:
	.loc    1  460  is_stmt 1
#       malloc(size_t)
        call      malloc                                        #460.28
..LN7092:
                                # LOE rax r12 r13 r14 r15 ebx
..B14.164:                      # Preds ..B14.1
..LN7093:
        movq      %rax, 3280(%rsp)                              #460.28
..LN7094:
                                # LOE r12 r13 r14 r15 ebx
..B14.2:                        # Preds ..B14.164
..LN7095:
	.loc    1  461  is_stmt 1
        movl      32(%rsp), %edi                                #461.28
..LN7096:
        imull     %ebx, %edi                                    #461.28
..LN7097:
        movslq    %edi, %rdi                                    #461.28
..LN7098:
        shlq      $3, %rdi                                      #461.28
..LN7099:
#       malloc(size_t)
        call      malloc                                        #461.28
..LN7100:
                                # LOE rax r12 r13 r14 r15 ebx
..B14.165:                      # Preds ..B14.2
..LN7101:
        movq      %rax, 2416(%rsp)                              #461.28
..LN7102:
                                # LOE r12 r13 r14 r15 ebx
..B14.3:                        # Preds ..B14.165
..LN7103:
	.loc    1  462  is_stmt 1
        movl      32(%rsp), %eax                                #462.32
..LN7104:
        lea       1(%rbx), %edx                                 #462.40
..LN7105:
        movl      %edx, 64(%rsp)                                #462.40
..LN7106:
        lea       1(%rax), %edi                                 #462.32
..LN7107:
        movl      %edi, 48(%rsp)                                #462.32
..LN7108:
	.loc    1  464  is_stmt 1
        movslq    %edi, %rdi                                    #464.32
..LN7109:
        movq      %rdi, 40(%rsp)                                #464.32
..LN7110:
	.loc    1  462  is_stmt 1
        imull     %edx, %edi                                    #462.40
..LN7111:
        movslq    %edi, %rdi                                    #462.40
..LN7112:
        shlq      $3, %rdi                                      #462.43
..LN7113:
        movq      %rdi, (%rsp)                                  #462.43
..LN7114:
#       malloc(size_t)
        call      malloc                                        #462.20
..LN7115:
                                # LOE rax r12 r13 r14 r15 ebx
..B14.166:                      # Preds ..B14.3
..LN7116:
        movq      %rax, %rdx                                    #462.20
..LN7117:
                                # LOE rdx r12 r13 r14 r15 ebx
..B14.4:                        # Preds ..B14.166
..LN7118:
	.loc    1  463  is_stmt 1
        movq      (%rsp), %rdi                                  #463.20
..LN7119:
        movq      %rdx, 680(%rsp)                               #463.20
..LN7120:
#       malloc(size_t)
        call      malloc                                        #463.20
..LN7121:
                                # LOE rax r12 r13 r14 r15 ebx
..B14.167:                      # Preds ..B14.4
..LN7122:
        movq      680(%rsp), %rdx                               #
..LN7123:
                                # LOE rax rdx r12 r13 r14 r15 edx ebx dl dh
..B14.5:                        # Preds ..B14.167
..LN7124:
	.loc    1  464  is_stmt 1
        movq      24(%rbp), %r8                                 #464.32
..LN7125:
        xorl      %esi, %esi                                    #464.3
..LN7126:
        movq      %rax, %r10                                    #464.32
..LN7127:
        movq      %rdx, %r9                                     #464.32
..LN7128:
        testl     %ebx, %ebx                                    #464.17
..LN7129:
        jl        ..B14.48      # Prob 9%                       #464.17
..LN7130:
                                # LOE rax rdx r8 r9 r10 r12 r13 r14 r15 edx ebx esi r9d dl dh r9b
..B14.6:                        # Preds ..B14.5
..LN7131:
        movq      %rax, 688(%rsp)                               #464.28
..LN7132:
        lea       1(%r12), %rcx                                 #464.28
..LN7133:
        movl      %ecx, %edi                                    #464.28
..LN7134:
        andl      $-4, %edi                                     #464.28
..LN7135:
        movslq    %edi, %rdi                                    #464.28
..LN7136:
        movq      %rdi, 16(%rsp)                                #464.28
..LN7137:
        movq      %rdx, 680(%rsp)                               #464.28
..LN7138:
        movl      %ebx, 3120(%rsp)                              #464.28
..LN7139:
        movq      %r12, 2424(%rsp)                              #464.28
..LN7140:
        movq      %r13, 24(%rsp)                                #464.28
..LN7141:
        movq      %r14, 8(%rsp)                                 #464.28
..LN7142:
        movq      %r15, (%rsp)                                  #464.28
..LN7143:
        movl      %ecx, %ebx                                    #464.28
..LN7144:
        movq      40(%rsp), %rdx                                #464.28
..LN7145:
        movl      48(%rsp), %eax                                #464.28
..LN7146:
        movl      32(%rsp), %edi                                #464.28
..LN7147:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi
..B14.7:                        # Preds ..B14.46 ..B14.6
..L646:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN7148:
        testl     %edi, %edi                                    #464.42
..LN7149:
        jl        ..B14.46      # Prob 50%                      #464.42
..LN7150:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi
..B14.8:                        # Preds ..B14.7
..LN7151:
        cmpq      $4, %rcx                                      #464.28
..LN7152:
        jl        ..B14.158     # Prob 10%                      #464.28
..LN7153:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi
..B14.9:                        # Preds ..B14.8
..LN7154:
        cmpq      $95, %rcx                                     #464.28
..LN7155:
        jl        ..B14.160     # Prob 10%                      #464.28
..LN7156:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi
..B14.10:                       # Preds ..B14.9
..LN7157:
        movq      %r9, %r11                                     #464.28
..LN7158:
        andq      $31, %r11                                     #464.28
..LN7159:
        testl     %r11d, %r11d                                  #464.28
..LN7160:
        je        ..B14.13      # Prob 50%                      #464.28
..LN7161:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi r11d
..B14.11:                       # Preds ..B14.10
..LN7162:
        testl     $7, %r11d                                     #464.28
..LN7163:
        jne       ..B14.158     # Prob 10%                      #464.28
..LN7164:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi r11d
..B14.12:                       # Preds ..B14.11
..LN7165:
        negl      %r11d                                         #464.28
..LN7166:
        addl      $32, %r11d                                    #464.28
..LN7167:
        shrl      $3, %r11d                                     #464.28
..LN7168:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi r11d
..B14.13:                       # Preds ..B14.12 ..B14.10
..LN7169:
        movl      %r11d, %r12d                                  #464.28
..LN7170:
        lea       4(%r12), %r13                                 #464.28
..LN7171:
        cmpq      %r13, %rcx                                    #464.28
..LN7172:
        jl        ..B14.158     # Prob 10%                      #464.28
..LN7173:
                                # LOE rdx rcx r8 r9 r10 r12 eax ebx esi edi r11d
..B14.14:                       # Preds ..B14.13
..LN7174:
        negl      %r11d                                         #464.28
..LN7175:
        xorl      %r13d, %r13d                                  #464.28
..LN7176:
        addl      %ebx, %r11d                                   #464.28
..LN7177:
        andl      $3, %r11d                                     #464.28
..LN7178:
        negl      %r11d                                         #464.28
..LN7179:
        addl      %ebx, %r11d                                   #464.28
..LN7180:
        movslq    %r11d, %r11                                   #464.28
..LN7181:
        testq     %r12, %r12                                    #464.28
..LN7182:
        jbe       ..B14.18      # Prob 10%                      #464.28
..LN7183:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 eax ebx esi edi
..B14.15:                       # Preds ..B14.14
..LN7184:
        movq      16(%rbp), %r15                                #
..LN7185:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 r15 eax ebx esi edi
..B14.16:                       # Preds ..B14.16 ..B14.15
..L647:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # PEELED LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
..LN7186:
	.loc    1  465  is_stmt 1
        movq      (%r15,%r13,8), %r14                           #465.24
..LN7187:
        movq      %r14, (%r9,%r13,8)                            #465.5
..LN7188:
	.loc    1  464  is_stmt 1
        incq      %r13                                          #464.28
..LN7189:
        cmpq      %r12, %r13                                    #464.28
..LN7190:
        jb        ..B14.16      # Prob 82%                      #464.28
..LN7191:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 r15 eax ebx esi edi
..B14.18:                       # Preds ..B14.16 ..B14.14 ..B14.160
..LN7192:
        movq      16(%rbp), %r13                                #
..LN7193:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 eax ebx esi edi
..B14.19:                       # Preds ..B14.19 ..B14.18
..L648:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS VECTORIZED
                # VECTORIZATION HAS UNALIGNED MEMORY REFERENCES
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN7194:
	.loc    1  465  is_stmt 1
        vmovupd   (%r13,%r12,8), %ymm0                          #465.24
..LN7195:
        vmovupd   %ymm0, (%r9,%r12,8)                           #465.5
..LN7196:
	.loc    1  464  is_stmt 1
        addq      $4, %r12                                      #464.28
..LN7197:
        cmpq      %r11, %r12                                    #464.28
..LN7198:
        jb        ..B14.19      # Prob 82%                      #464.28
..LN7199:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 eax ebx esi edi
..B14.21:                       # Preds ..B14.19 ..B14.158
..LN7200:
        cmpq      %rcx, %r11                                    #464.28
..LN7201:
        jae       ..B14.25      # Prob 10%                      #464.28
..LN7202:
                                # LOE rdx rcx r8 r9 r10 r11 eax ebx esi edi
..B14.22:                       # Preds ..B14.21
..LN7203:
        movq      16(%rbp), %r13                                #
..LN7204:
                                # LOE rdx rcx r8 r9 r10 r11 r13 eax ebx esi edi
..B14.23:                       # Preds ..B14.23 ..B14.22
..L649:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 1
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.601562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 3.250000
..LN7205:
	.loc    1  465  is_stmt 1
        movq      (%r13,%r11,8), %r12                           #465.24
..LN7206:
        movq      %r12, (%r9,%r11,8)                            #465.5
..LN7207:
	.loc    1  464  is_stmt 1
        incq      %r11                                          #464.28
..LN7208:
        cmpq      %rcx, %r11                                    #464.28
..LN7209:
        jb        ..B14.23      # Prob 82%                      #464.28
..LN7210:
                                # LOE rdx rcx r8 r9 r10 r11 r13 eax ebx esi edi
..B14.25:                       # Preds ..B14.23 ..B14.21
..LN7211:
        cmpl      $16, %eax                                     #464.28
..LN7212:
        jl        ..B14.155     # Prob 10%                      #464.28
..LN7213:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi
..B14.26:                       # Preds ..B14.25
..LN7214:
        movq      %r10, %r12                                    #464.28
..LN7215:
        andq      $31, %r12                                     #464.28
..LN7216:
        movl      %r12d, %r12d                                  #464.28
..LN7217:
        testl     %r12d, %r12d                                  #464.28
..LN7218:
        je        ..B14.29      # Prob 50%                      #464.28
..LN7219:
                                # LOE rdx rcx r8 r9 r10 r12 eax ebx esi edi
..B14.27:                       # Preds ..B14.26
..LN7220:
        testl     $7, %r12d                                     #464.28
..LN7221:
        jne       ..B14.155     # Prob 10%                      #464.28
..LN7222:
                                # LOE rdx rcx r8 r9 r10 r12 eax ebx esi edi
..B14.28:                       # Preds ..B14.27
..LN7223:
        negl      %r12d                                         #464.28
..LN7224:
        addl      $32, %r12d                                    #464.28
..LN7225:
        shrl      $3, %r12d                                     #464.28
..LN7226:
                                # LOE rdx rcx r8 r9 r10 r12 eax ebx esi edi
..B14.29:                       # Preds ..B14.28 ..B14.26
..LN7227:
        lea       16(%r12), %r11d                               #464.28
..LN7228:
        cmpl      %r11d, %eax                                   #464.28
..LN7229:
        jl        ..B14.155     # Prob 10%                      #464.28
..LN7230:
                                # LOE rdx rcx r8 r9 r10 r12 eax ebx esi edi
..B14.30:                       # Preds ..B14.29
..LN7231:
        movl      %eax, %r14d                                   #464.28
..LN7232:
        xorl      %r11d, %r11d                                  #464.28
..LN7233:
        subl      %r12d, %r14d                                  #464.28
..LN7234:
        andl      $15, %r14d                                    #464.28
..LN7235:
        negl      %r14d                                         #464.28
..LN7236:
        addl      %eax, %r14d                                   #464.28
..LN7237:
	.loc    1  466  is_stmt 1
        vmovsd    (%r8), %xmm0                                  #466.24
..LN7238:
	.loc    1  464  is_stmt 1
        testq     %r12, %r12                                    #464.28
..LN7239:
        jbe       ..B14.34      # Prob 10%                      #464.28
..LN7240:
                                # LOE rdx rcx r8 r9 r10 r11 r12 eax ebx esi edi r14d xmm0
..B14.32:                       # Preds ..B14.30 ..B14.32
..L650:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 4
                # PEELED LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 8.648438
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.937500
..LN7241:
	.loc    1  466  is_stmt 1
        vmovsd    %xmm0, (%r10,%r11,8)                          #466.5
..LN7242:
	.loc    1  464  is_stmt 1
        incq      %r11                                          #464.28
..LN7243:
        cmpq      %r12, %r11                                    #464.28
..LN7244:
        jb        ..B14.32      # Prob 82%                      #464.28
..LN7245:
                                # LOE rdx rcx r8 r9 r10 r11 r12 eax ebx esi edi r14d xmm0
..B14.34:                       # Preds ..B14.32 ..B14.30
..LN7246:
        movslq    %r14d, %r11                                   #464.28
..LN7247:
        lea       (%r10,%r12,8), %r13                           #464.28
..LN7248:
	.loc    1  466  is_stmt 1
        vbroadcastsd %xmm0, %ymm0                               #466.24
..LN7249:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 eax ebx esi edi r14d ymm0
..B14.35:                       # Preds ..B14.35 ..B14.34
..L651:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 4
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 8.648438
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.937500
                # MAIN VECTOR TYPE: 64-bits floating point
..LN7250:
	.loc    1  464  is_stmt 1
        addq      $16, %r12                                     #464.28
..LN7251:
	.loc    1  466  is_stmt 1
        vmovupd   %ymm0, (%r13)                                 #466.5
..LN7252:
        vmovupd   %ymm0, 32(%r13)                               #466.5
..LN7253:
        vmovupd   %ymm0, 64(%r13)                               #466.5
..LN7254:
        vmovupd   %ymm0, 96(%r13)                               #466.5
..LN7255:
	.loc    1  464  is_stmt 1
        addq      $128, %r13                                    #464.28
..LN7256:
        cmpq      %r11, %r12                                    #464.28
..LN7257:
        jb        ..B14.35      # Prob 82%                      #464.28
..LN7258:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 eax ebx esi edi r14d ymm0
..B14.37:                       # Preds ..B14.35 ..B14.155
..LN7259:
        lea       1(%r14), %r11d                                #464.28
..LN7260:
        cmpl      %r11d, %eax                                   #464.28
..LN7261:
        jb        ..B14.46      # Prob 50%                      #464.28
..LN7262:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi r14d
..B14.38:                       # Preds ..B14.37
..LN7263:
        movslq    %r14d, %r13                                   #464.28
..LN7264:
        negq      %r13                                          #464.28
..LN7265:
        addq      %rdx, %r13                                    #464.28
..LN7266:
        cmpq      $4, %r13                                      #464.28
..LN7267:
        jl        ..B14.154     # Prob 10%                      #464.28
..LN7268:
                                # LOE rdx rcx r8 r9 r10 r13 eax ebx esi edi r14d
..B14.39:                       # Preds ..B14.38
..LN7269:
	.loc    1  466  is_stmt 1
        movslq    %r14d, %r14                                   #466.5
..LN7270:
	.loc    1  464  is_stmt 1
        movl      %r13d, %r12d                                  #464.28
..LN7271:
        andl      $-4, %r12d                                    #464.28
..LN7272:
        xorl      %r11d, %r11d                                  #464.28
..LN7273:
        movslq    %r12d, %r12                                   #464.28
..LN7274:
	.loc    1  466  is_stmt 1
        vbroadcastsd (%r8), %ymm0                               #466.24
..LN7275:
        lea       (%r10,%r14,8), %r15                           #466.5
..LN7276:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 r15 eax ebx esi edi r14d ymm0
..B14.40:                       # Preds ..B14.40 ..B14.39
..L652:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS VECTORIZED
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION HAS UNALIGNED MEMORY REFERENCES
                # VECTORIZATION SPEEDUP COEFFECIENT 2.542969
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 2.750000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN7277:
        vmovupd   %ymm0, (%r15,%r11,8)                          #466.5
..LN7278:
	.loc    1  464  is_stmt 1
        addq      $4, %r11                                      #464.28
..LN7279:
        cmpq      %r12, %r11                                    #464.28
..LN7280:
        jb        ..B14.40      # Prob 82%                      #464.28
..LN7281:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 r15 eax ebx esi edi r14d ymm0
..B14.42:                       # Preds ..B14.40 ..B14.154
..LN7282:
        cmpq      %r13, %r12                                    #464.28
..LN7283:
        jae       ..B14.46      # Prob 10%                      #464.28
..LN7284:
                                # LOE rdx rcx r8 r9 r10 r12 r13 eax ebx esi edi r14d
..B14.43:                       # Preds ..B14.42
..LN7285:
	.loc    1  466  is_stmt 1
        movslq    %r14d, %r14                                   #466.5
..LN7286:
        lea       (%r10,%r14,8), %r11                           #466.5
..LN7287:
        movq      (%r8), %r14                                   #466.24
..LN7288:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 r14 eax ebx esi edi
..B14.44:                       # Preds ..B14.44 ..B14.43
..L653:         # optimization report
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 2.542969
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 2.750000
..LN7289:
        movq      %r14, (%r11,%r12,8)                           #466.5
..LN7290:
	.loc    1  464  is_stmt 1
        incq      %r12                                          #464.28
..LN7291:
        cmpq      %r13, %r12                                    #464.28
..LN7292:
        jb        ..B14.44      # Prob 82%                      #464.28
..LN7293:
                                # LOE rdx rcx r8 r9 r10 r11 r12 r13 r14 eax ebx esi edi
..B14.46:                       # Preds ..B14.44 ..B14.7 ..B14.37 ..B14.42
..LN7294:
        incl      %esi                                          #464.3
..LN7295:
        addq      $8, %r8                                       #464.3
..LN7296:
        lea       (%r10,%rdx,8), %r10                           #464.3
..LN7297:
        lea       (%r9,%rdx,8), %r9                             #464.3
..LN7298:
        cmpl      64(%rsp), %esi                                #464.3
..LN7299:
        jb        ..B14.7       # Prob 82%                      #464.3
..LN7300:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi
..B14.47:                       # Preds ..B14.46
..LN7301:
        movq      688(%rsp), %rax                               #
..LN7302:
        movq      680(%rsp), %rdx                               #
..LN7303:
        movl      3120(%rsp), %ebx                              #
..LN7304:
        movq      2424(%rsp), %r12                              #
..LN7305:
        movq      24(%rsp), %r13                                #
..LN7306:
        movq      8(%rsp), %r14                                 #
..LN7307:
        movq      (%rsp), %r15                                  #
..LN7308:
                                # LOE rax rdx r12 r13 r14 r15 edx ebx dl dh
..B14.48:                       # Preds ..B14.5 ..B14.47
..LN7309:
	.loc    1  71  is_stmt 1
        movq      56(%rsp), %rcx                                #71.9
..LN7310:
	.loc    1  75  is_stmt 1
        xorl      %edi, %edi                                    #75.7
..LN7311:
	.loc    1  72  is_stmt 1
        movl      (%r13), %r10d                                 #72.9
..LN7312:
	.loc    1  75  is_stmt 1
        xorl      %r8d, %r8d                                    #75.9
..LN7313:
	.loc    1  71  is_stmt 1
        movl      (%rcx), %ecx                                  #71.9
..LN7314:
	.loc    1  75  is_stmt 1
        movslq    %ecx, %r9                                     #75.18
..LN7315:
        testl     %r10d, %r10d                                  #75.14
..LN7316:
        jle       ..B14.57      # Prob 10%                      #75.14
..LN7317:
                                # LOE rax rdx r8 r9 r12 r14 r15 edx ecx ebx edi r10d dl dh
..B14.49:                       # Preds ..B14.48
..LN7318:
        movl      %r10d, 24(%rsp)                               #75.9
..LN7319:
        xorl      %esi, %esi                                    #75.9
..LN7320:
        movq      %rax, 688(%rsp)                               #75.9
..LN7321:
        movq      %rdx, 680(%rsp)                               #75.9
..LN7322:
        movl      %ebx, 3120(%rsp)                              #75.9
..LN7323:
        movq      %r12, 2424(%rsp)                              #75.9
..LN7324:
        movq      %r14, 8(%rsp)                                 #75.9
..LN7325:
        movq      %r15, (%rsp)                                  #75.9
..LN7326:
        movq      3280(%rsp), %r10                              #75.9
..LN7327:
        movq      3312(%rsp), %rax                              #75.9
..LN7328:
        movq      3288(%rsp), %rdx                              #75.9
..LN7329:
                                # LOE rax rdx r8 r9 r10 ecx esi edi
..B14.50:                       # Preds ..B14.55 ..B14.152 ..B14.49
..L654:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN7330:
        xorl      %r12d, %r12d                                  #75.27
..LN7331:
        testl     %ecx, %ecx                                    #75.36
..LN7332:
        jle       ..B14.152     # Prob 10%                      #75.36
..LN7333:
                                # LOE rax rdx r8 r9 r10 r12 ecx esi edi
..B14.51:                       # Preds ..B14.50
..LN7334:
	.loc    1  85  is_stmt 1
        movq      %r8, 368(%rsp)                                #85.5
..LN7335:
	.loc    1  78  is_stmt 1
        lea       (%rcx,%rsi), %r13d                            #78.25
..LN7336:
        movslq    %r13d, %r13                                   #78.15
..LN7337:
	.loc    1  85  is_stmt 1
        lea       (%r10,%r8,8), %r11                            #85.5
..LN7338:
	.loc    1  76  is_stmt 1
        movslq    %esi, %rsi                                    #76.15
..LN7339:
	.loc    1  85  is_stmt 1
        movq      %r11, 392(%rsp)                               #85.5
..LN7340:
        movl      %esi, 376(%rsp)                               #85.5
..LN7341:
        movl      %edi, 360(%rsp)                               #85.5
..LN7342:
	.loc    1  78  is_stmt 1
        lea       (%rax,%r13,8), %rbx                           #78.15
..LN7343:
	.loc    1  85  is_stmt 1
        movq      %r9, 384(%rsp)                                #85.5
..LN7344:
	.loc    1  82  is_stmt 1
        lea       (%rdx,%r13,8), %r13                           #82.15
..LN7345:
	.loc    1  85  is_stmt 1
        movl      %ecx, 16(%rsp)                                #85.5
..LN7346:
	.loc    1  80  is_stmt 1
        lea       (%rdx,%rsi,8), %r14                           #80.15
..LN7347:
	.loc    1  76  is_stmt 1
        lea       (%rax,%rsi,8), %r15                           #76.15
..LN7348:
                                # LOE rbx r12 r13 r14 r15
..B14.52:                       # Preds ..B14.54 ..B14.51
..L655:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN7349:
	.loc    1  84  is_stmt 1
        lea       40(%rsp), %rdi                                #84.12
..LN7350:
	.loc    1  76  is_stmt 1
        movq      (%r15,%r12,8), %rax                           #76.15
..LN7351:
	.loc    1  84  is_stmt 1
        lea       200(%rsp), %rsi                               #84.12
..LN7352:
	.loc    1  83  is_stmt 1
        movq      8(%r13,%r12,8), %rdx                          #83.15
..LN7353:
	.loc    1  76  is_stmt 1
        movq      %rax, (%rdi)                                  #76.5
..LN7354:
	.loc    1  77  is_stmt 1
        movq      8(%r15,%r12,8), %rcx                          #77.15
..LN7355:
	.loc    1  78  is_stmt 1
        movq      16(%rbx,%r12,8), %r8                          #78.15
..LN7356:
	.loc    1  79  is_stmt 1
        movq      8(%rbx,%r12,8), %r9                           #79.15
..LN7357:
	.loc    1  80  is_stmt 1
        movq      (%r14,%r12,8), %r10                           #80.15
..LN7358:
	.loc    1  81  is_stmt 1
        movq      8(%r14,%r12,8), %r11                          #81.15
..LN7359:
	.loc    1  82  is_stmt 1
        movq      16(%r13,%r12,8), %rax                         #82.15
..LN7360:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN7361:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN7362:
	.loc    1  77  is_stmt 1
        movq      %rcx, 8(%rdi)                                 #77.5
..LN7363:
	.loc    1  78  is_stmt 1
        movq      %r8, 16(%rdi)                                 #78.5
..LN7364:
	.loc    1  79  is_stmt 1
        movq      %r9, 24(%rdi)                                 #79.5
..LN7365:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN7366:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN7367:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN7368:
	.loc    1  84  is_stmt 1
        vzeroupper                                              #84.12
..LN7369:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_2dx1d_order2.656:
..LN7370:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_2dx1d_order2.657:
..LN7371:
                                # LOE rbx r12 r13 r14 r15 eax
..B14.53:                       # Preds ..B14.52
..LN7372:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN7373:
        lea       40(%rsp), %rdi                                #85.20
..LN7374:
        lea       200(%rsp), %rsi                               #85.20
..___tag_value_create_xgrid_2dx1d_order2.658:
..LN7375:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_2dx1d_order2.659:
..LN7376:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B14.54:                       # Preds ..B14.53
..LN7377:
        movq      392(%rsp), %rax                               #85.5
..LN7378:
        vmovsd    %xmm0, (%rax,%r12,8)                          #85.5
..LN7379:
	.loc    1  75  is_stmt 1
        incq      %r12                                          #75.40
..LN7380:
        cmpq      384(%rsp), %r12                               #75.36
..LN7381:
        jl        ..B14.52      # Prob 82%                      #75.36
..LN7382:
                                # LOE rbx r12 r13 r14 r15
..B14.55:                       # Preds ..B14.54
..LN7383:
        movl      360(%rsp), %edi                               #
..LN7384:
        incl      %edi                                          #75.18
..LN7385:
        movq      368(%rsp), %r8                                #
..LN7386:
        movq      384(%rsp), %r9                                #
..LN7387:
        addq      %r9, %r8                                      #75.18
..LN7388:
        movl      376(%rsp), %esi                               #
..LN7389:
        movl      16(%rsp), %ecx                                #
..LN7390:
        lea       1(%rsi,%rcx), %esi                            #75.18
..LN7391:
        movq      3280(%rsp), %r10                              #
..LN7392:
        movq      3312(%rsp), %rax                              #
..LN7393:
        movq      3288(%rsp), %rdx                              #
..LN7394:
        cmpl      24(%rsp), %edi                                #75.14
..LN7395:
        jl        ..B14.50      # Prob 82%                      #75.14
..LN7396:
                                # LOE rax rdx r8 r9 r10 ecx esi edi
..B14.56:                       # Preds ..B14.152 ..B14.55      # Infreq
..LN7397:
        movq      688(%rsp), %rax                               #
..LN7398:
        movq      680(%rsp), %rdx                               #
..LN7399:
        movl      3120(%rsp), %ebx                              #
..LN7400:
        movq      2424(%rsp), %r12                              #
..LN7401:
        movq      8(%rsp), %r14                                 #
..LN7402:
        movq      (%rsp), %r15                                  #
..LN7403:
                                # LOE rax rdx r12 r14 r15 edx ebx dl dh
..B14.57:                       # Preds ..B14.56 ..B14.48       # Infreq
..LN7404:
	.loc    1  71  is_stmt 1
        movl      (%r14), %ecx                                  #71.9
..LN7405:
	.loc    1  75  is_stmt 1
        xorl      %r10d, %r10d                                  #75.3
..LN7406:
	.loc    1  72  is_stmt 1
        movl      (%r15), %r14d                                 #72.9
..LN7407:
	.loc    1  75  is_stmt 1
        xorl      %r8d, %r8d                                    #75.27
..LN7408:
        movslq    %ecx, %r15                                    #75.27
..LN7409:
        testl     %r14d, %r14d                                  #75.14
..LN7410:
        jle       ..B14.66      # Prob 9%                       #75.14
..LN7411:
                                # LOE rax rdx r8 r12 r15 edx ecx ebx r10d r14d dl dh
..B14.58:                       # Preds ..B14.57                # Infreq
..LN7412:
        movl      %r14d, 8(%rsp)                                #75.27
..LN7413:
	.loc    1  73  is_stmt 1
        lea       1(%rcx), %r11d                                #73.14
..LN7414:
	.loc    1  75  is_stmt 1
        movslq    %r11d, %r11                                   #75.27
..LN7415:
	.loc    1  78  is_stmt 1
        lea       (%rdx,%r15,8), %r13                           #78.15
..LN7416:
	.loc    1  75  is_stmt 1
        movq      %r11, 696(%rsp)                               #75.27
..LN7417:
	.loc    1  82  is_stmt 1
        lea       (%rax,%r15,8), %r9                            #82.15
..LN7418:
	.loc    1  75  is_stmt 1
        movq      %r13, 712(%rsp)                               #75.27
..LN7419:
        xorl      %esi, %esi                                    #75.27
..LN7420:
        movq      %r15, 728(%rsp)                               #75.27
..LN7421:
        movl      %ebx, 3120(%rsp)                              #75.27
..LN7422:
        movq      %r12, 2424(%rsp)                              #75.27
..LN7423:
        movq      2416(%rsp), %r11                              #75.27
..LN7424:
                                # LOE rax rdx rsi r8 r9 r11 ecx r10d
..B14.59:                       # Preds ..B14.64 ..B14.150 ..B14.58 # Infreq
..L660:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN7425:
        xorl      %r12d, %r12d                                  #75.23
..LN7426:
        testl     %ecx, %ecx                                    #75.36
..LN7427:
        jle       ..B14.150     # Prob 10%                      #75.36
..LN7428:
                                # LOE rax rdx rsi r8 r9 r11 r12 ecx r10d
..B14.60:                       # Preds ..B14.59                # Infreq
..LN7429:
	.loc    1  78  is_stmt 1
        movq      712(%rsp), %r15                               #78.15
..LN7430:
	.loc    1  85  is_stmt 1
        lea       (%r11,%r8,8), %rdi                            #85.5
..LN7431:
        movq      %rdi, 736(%rsp)                               #85.5
..LN7432:
	.loc    1  80  is_stmt 1
        lea       (%rax,%rsi,8), %rbx                           #80.15
..LN7433:
	.loc    1  85  is_stmt 1
        movq      %rsi, 720(%rsp)                               #85.5
..LN7434:
	.loc    1  76  is_stmt 1
        lea       (%rdx,%rsi,8), %r13                           #76.15
..LN7435:
	.loc    1  85  is_stmt 1
        movq      %r9, 704(%rsp)                                #85.5
..LN7436:
	.loc    1  82  is_stmt 1
        lea       (%r9,%rsi,8), %r14                            #82.15
..LN7437:
	.loc    1  85  is_stmt 1
        movq      %r8, 24(%rsp)                                 #85.5
..LN7438:
	.loc    1  78  is_stmt 1
        lea       (%r15,%rsi,8), %r15                           #78.15
..LN7439:
	.loc    1  85  is_stmt 1
        movl      %r10d, 16(%rsp)                               #85.5
..LN7440:
        movl      %ecx, (%rsp)                                  #85.5
..LN7441:
        movq      %rax, 688(%rsp)                               #85.5
..LN7442:
        movq      %rdx, 680(%rsp)                               #85.5
..LN7443:
                                # LOE rbx r12 r13 r14 r15
..B14.61:                       # Preds ..B14.63 ..B14.60       # Infreq
..L661:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN7444:
	.loc    1  84  is_stmt 1
        lea       360(%rsp), %rdi                               #84.12
..LN7445:
	.loc    1  76  is_stmt 1
        movq      (%r13,%r12,8), %rax                           #76.15
..LN7446:
	.loc    1  84  is_stmt 1
        lea       520(%rsp), %rsi                               #84.12
..LN7447:
	.loc    1  83  is_stmt 1
        movq      8(%r14,%r12,8), %rdx                          #83.15
..LN7448:
	.loc    1  76  is_stmt 1
        movq      %rax, -160(%rsi)                              #76.5
..LN7449:
	.loc    1  77  is_stmt 1
        movq      8(%r13,%r12,8), %rcx                          #77.15
..LN7450:
	.loc    1  78  is_stmt 1
        movq      16(%r15,%r12,8), %r8                          #78.15
..LN7451:
	.loc    1  79  is_stmt 1
        movq      8(%r15,%r12,8), %r9                           #79.15
..LN7452:
	.loc    1  80  is_stmt 1
        movq      (%rbx,%r12,8), %r10                           #80.15
..LN7453:
	.loc    1  81  is_stmt 1
        movq      8(%rbx,%r12,8), %r11                          #81.15
..LN7454:
	.loc    1  82  is_stmt 1
        movq      16(%r14,%r12,8), %rax                         #82.15
..LN7455:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN7456:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN7457:
	.loc    1  77  is_stmt 1
        movq      %rcx, -152(%rsi)                              #77.5
..LN7458:
	.loc    1  78  is_stmt 1
        movq      %r8, -144(%rsi)                               #78.5
..LN7459:
	.loc    1  79  is_stmt 1
        movq      %r9, -136(%rsi)                               #79.5
..LN7460:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN7461:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN7462:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN7463:
	.loc    1  84  is_stmt 1
        vzeroupper                                              #84.12
..LN7464:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_2dx1d_order2.662:
..LN7465:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_2dx1d_order2.663:
..LN7466:
                                # LOE rbx r12 r13 r14 r15 eax
..B14.62:                       # Preds ..B14.61                # Infreq
..LN7467:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN7468:
        lea       360(%rsp), %rdi                               #85.20
..LN7469:
        lea       520(%rsp), %rsi                               #85.20
..___tag_value_create_xgrid_2dx1d_order2.664:
..LN7470:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_2dx1d_order2.665:
..LN7471:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B14.63:                       # Preds ..B14.62                # Infreq
..LN7472:
        movq      736(%rsp), %rax                               #85.5
..LN7473:
        vmovsd    %xmm0, (%rax,%r12,8)                          #85.5
..LN7474:
	.loc    1  75  is_stmt 1
        incq      %r12                                          #75.23
..LN7475:
        cmpq      728(%rsp), %r12                               #75.23
..LN7476:
        jb        ..B14.61      # Prob 82%                      #75.23
..LN7477:
                                # LOE rbx r12 r13 r14 r15
..B14.64:                       # Preds ..B14.63                # Infreq
..LN7478:
        movq      720(%rsp), %rsi                               #
..LN7479:
        movq      24(%rsp), %r8                                 #
..LN7480:
        movl      16(%rsp), %r10d                               #
..LN7481:
        incl      %r10d                                         #75.3
..LN7482:
        addq      696(%rsp), %rsi                               #75.3
..LN7483:
        addq      728(%rsp), %r8                                #75.3
..LN7484:
        movq      704(%rsp), %r9                                #
..LN7485:
        movl      (%rsp), %ecx                                  #
..LN7486:
        movq      688(%rsp), %rax                               #
..LN7487:
        movq      680(%rsp), %rdx                               #
..LN7488:
        movq      2416(%rsp), %r11                              #
..LN7489:
        cmpl      8(%rsp), %r10d                                #75.3
..LN7490:
        jb        ..B14.59      # Prob 82%                      #75.3
..LN7491:
                                # LOE rax rdx rsi r8 r9 r11 eax edx ecx r10d al dl ah dh
..B14.65:                       # Preds ..B14.150 ..B14.64      # Infreq
..LN7492:
        movl      3120(%rsp), %ebx                              #
..LN7493:
        movq      2424(%rsp), %r12                              #
..LN7494:
                                # LOE rax rdx r12 ebx
..B14.66:                       # Preds ..B14.65 ..B14.57       # Infreq
..LN7495:
	.loc    1  471  is_stmt 1
        movq      %rdx, %rdi                                    #471.3
..LN7496:
        movq      %rax, 688(%rsp)                               #471.3
..LN7497:
        vzeroupper                                              #471.3
..LN7498:
#       free(void *)
        call      free                                          #471.3
..LN7499:
                                # LOE r12 ebx
..B14.67:                       # Preds ..B14.66                # Infreq
..LN7500:
        movq      688(%rsp), %rax                               #
..LN7501:
	.loc    1  472  is_stmt 1
        movq      %rax, %rdi                                    #472.3
..LN7502:
#       free(void *)
        call      free                                          #472.3
..LN7503:
                                # LOE r12 ebx
..B14.68:                       # Preds ..B14.67                # Infreq
..LN7504:
	.loc    1  474  is_stmt 1
        xorl      %edi, %edi                                    #474.31
..LN7505:
        xorl      %r8d, %r8d                                    #474.3
..LN7506:
        xorl      %esi, %esi                                    #474.31
..LN7507:
        testl     %ebx, %ebx                                    #474.16
..LN7508:
        jle       ..B14.135     # Prob 9%                       #474.16
..LN7509:
                                # LOE rsi rdi r12 ebx r8d
..B14.69:                       # Preds ..B14.68                # Infreq
..LN7510:
	.loc    1  929  is_stmt 1
        movl      $8, %r9d                                      #929.17
..LN7511:
	.loc    1  478  is_stmt 1
        movslq    3320(%rsp), %rcx                              #478.29
..LN7512:
	.loc    1  956  is_stmt 1
        vxorpd    %xmm7, %xmm7, %xmm7                           #956.17
..LN7513:
	.loc    1  493  is_stmt 1
        movq      3312(%rsp), %rdx                              #493.17
..LN7514:
	.loc    1  484  is_stmt 1
        movq      3288(%rsp), %rax                              #484.17
..LN7515:
	.loc    1  929  is_stmt 1
        vmovd     %r9d, %xmm2                                   #929.17
..LN7516:
        movl      32(%rsp), %r10d                               #929.17
..LN7517:
	.loc    1  493  is_stmt 1
        lea       (%rdx,%rcx,8), %rdx                           #493.17
..LN7518:
	.loc    1  478  is_stmt 1
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm0             #478.78
..LN7519:
	.loc    1  484  is_stmt 1
        lea       (%rax,%rcx,8), %rax                           #484.17
..LN7520:
	.loc    1  502  is_stmt 1
        vmovsd    .L_2il0floatpacket.2(%rip), %xmm8             #502.22
..LN7521:
	.loc    1  939  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm6             #939.13
..LN7522:
	.loc    1  940  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm5             #940.13
..LN7523:
	.loc    1  939  is_stmt 1
        vmovsd    .L_2il0floatpacket.4(%rip), %xmm4             #939.30
..LN7524:
	.loc    1  1000  is_stmt 1
        vmovsd    .L_2il0floatpacket.5(%rip), %xmm3             #1000.18
..LN7525:
	.loc    1  942  is_stmt 1
        vmovsd    .L_2il0floatpacket.6(%rip), %xmm1             #942.21
..LN7526:
	.loc    1  929  is_stmt 1
        vpbroadcastd %xmm2, %ymm2                               #929.17
..LN7527:
                                # LOE rax rdx rcx rsi rdi r12 ebx r8d r10d xmm0 xmm1 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 ymm2
..B14.70:                       # Preds ..B14.148 ..B14.69      # Infreq
..L666:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN7528:
	.loc    1  474  is_stmt 1
        xorl      %r9d, %r9d                                    #474.27
..LN7529:
        testl     %r10d, %r10d                                  #474.40
..LN7530:
        jle       ..B14.148     # Prob 10%                      #474.40
..LN7531:
                                # LOE rax rdx rcx rsi rdi r9 r12 ebx r8d r10d xmm0 xmm1 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 ymm2
..B14.71:                       # Preds ..B14.70                # Infreq
..LN7532:
        movq      %r9, 3264(%rsp)                               #
..LN7533:
	.loc    1  442  is_stmt 1
        movq      72(%rbp), %r9                                 #442.1
..LN7534:
        movq      24(%rbp), %r11                                #442.1
..LN7535:
        movq      16(%rbp), %r13                                #442.1
..LN7536:
        vmovdqu   %ymm2, 2688(%rsp)                             #442.1
..LN7537:
        movq      %rax, 3352(%rsp)                              #442.1
..LN7538:
        movq      %rdx, 3360(%rsp)                              #442.1
..LN7539:
        movq      %rcx, 3496(%rsp)                              #442.1
..LN7540:
        movq      3264(%rsp), %r10                              #442.1
..LN7541:
        movq      2416(%rsp), %r14                              #442.1
..LN7542:
        movl      3304(%rsp), %r15d                             #442.1
..LN7543:
                                # LOE rsi rdi r10 r11 r12 r13 r14 ebx r8d r15d xmm0
..B14.72:                       # Preds ..B14.146 ..B14.144 ..B14.131 ..B14.71 # Infreq
..L667:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN7544:
	.loc    1  478  is_stmt 1
        xorl      %edx, %edx                                    #478.5
..LN7545:
        xorl      %ecx, %ecx                                    #478.33
..LN7546:
	.loc    1  476  is_stmt 1
        vmovsd    (%r13,%r10,8), %xmm5                          #476.14
..LN7547:
	.loc    1  478  is_stmt 1
        xorl      %eax, %eax                                    #478.33
..LN7548:
	.loc    1  477  is_stmt 1
        vmovsd    8(%r13,%r10,8), %xmm3                         #477.14
..LN7549:
	.loc    1  476  is_stmt 1
        vmovsd    (%r11,%rdi,8), %xmm4                          #476.38
..LN7550:
	.loc    1  477  is_stmt 1
        vmovsd    8(%r11,%rdi,8), %xmm2                         #477.38
..LN7551:
	.loc    1  478  is_stmt 1
        testl     %r15d, %r15d                                  #478.18
..LN7552:
        jle       ..B14.144     # Prob 10%                      #478.18
..LN7553:
                                # LOE rsi rdi r10 r11 r12 r13 r14 eax edx ecx ebx r8d r15d xmm0 xmm2 xmm3 xmm4 xmm5
..B14.73:                       # Preds ..B14.72                # Infreq
..LN7554:
	.loc    1  501  is_stmt 1
        movq      %r10, 3264(%rsp)                              #501.13
..LN7555:
        lea       (%r14,%rsi,8), %r9                            #501.13
..LN7556:
        movq      %r9, 3272(%rsp)                               #501.13
..LN7557:
	.loc    1  496  is_stmt 1
        vaddsd    %xmm3, %xmm5, %xmm1                           #496.45
..LN7558:
        vmulsd    %xmm1, %xmm0, %xmm1                           #496.53
..LN7559:
	.loc    1  501  is_stmt 1
        movl      %r8d, 3168(%rsp)                              #501.13
..LN7560:
        vmovsd    %xmm1, 3448(%rsp)                             #501.13
..LN7561:
        vmovsd    %xmm2, 3464(%rsp)                             #501.13
..LN7562:
        vmovsd    %xmm3, 3440(%rsp)                             #501.13
..LN7563:
        vmovsd    %xmm4, 3488(%rsp)                             #501.13
..LN7564:
        vmovsd    %xmm5, 3432(%rsp)                             #501.13
..LN7565:
        movq      %rsi, 696(%rsp)                               #501.13
..LN7566:
        movq      %rdi, 3128(%rsp)                              #501.13
..LN7567:
        movl      %ebx, 3120(%rsp)                              #501.13
..LN7568:
        movq      %r12, 2424(%rsp)                              #501.13
..LN7569:
        movq      3352(%rsp), %r11                              #501.13
..LN7570:
        movq      3360(%rsp), %r8                               #501.13
..LN7571:
        movl      3320(%rsp), %r9d                              #501.13
..LN7572:
        movq      3312(%rsp), %r10                              #501.13
..LN7573:
                                # LOE r8 r10 r11 eax edx ecx r9d
..B14.74:                       # Preds ..B14.129 ..B14.142 ..B14.73 # Infreq
..L668:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN7574:
	.loc    1  478  is_stmt 1
        xorl      %r13d, %r13d                                  #478.29
..LN7575:
        testl     %r9d, %r9d                                    #478.42
..LN7576:
        jle       ..B14.142     # Prob 10%                      #478.42
..LN7577:
                                # LOE r8 r10 r11 r13 eax edx ecx r9d
..B14.75:                       # Preds ..B14.74                # Infreq
..LN7578:
        movslq    %ecx, %rcx                                    #478.57
..LN7579:
	.loc    1  482  is_stmt 1
        movslq    %eax, %rax                                    #482.17
..LN7580:
	.loc    1  501  is_stmt 1
        movq      3280(%rsp), %rbx                              #501.13
..LN7581:
	.loc    1  482  is_stmt 1
        movq      3288(%rsp), %rsi                              #482.17
..LN7582:
	.loc    1  478  is_stmt 1
        movq      32(%rbp), %r15                                #478.57
..LN7583:
	.loc    1  484  is_stmt 1
        movl      %eax, 3328(%rsp)                              #484.17
..LN7584:
	.loc    1  501  is_stmt 1
        lea       (%rbx,%rcx,8), %rdi                           #501.13
..LN7585:
	.loc    1  484  is_stmt 1
        movq      %rdi, 3296(%rsp)                              #484.17
..LN7586:
	.loc    1  482  is_stmt 1
        lea       (%rsi,%rax,8), %rsi                           #482.17
..LN7587:
	.loc    1  484  is_stmt 1
        movq      %rsi, 3480(%rsp)                              #484.17
..LN7588:
        lea       (%r11,%rax,8), %r14                           #484.17
..LN7589:
        movq      %r14, 3472(%rsp)                              #484.17
..LN7590:
	.loc    1  478  is_stmt 1
        lea       (%r15,%rcx,8), %r15                           #478.57
..LN7591:
	.loc    1  484  is_stmt 1
        movl      %ecx, 3336(%rsp)                              #484.17
..LN7592:
	.loc    1  491  is_stmt 1
        lea       (%r10,%rax,8), %rbx                           #491.17
..LN7593:
	.loc    1  484  is_stmt 1
        movl      %edx, 3344(%rsp)                              #484.17
..LN7594:
	.loc    1  493  is_stmt 1
        lea       (%r8,%rax,8), %r12                            #493.17
..LN7595:
                                # LOE rbx r12 r13 r15
..B14.76:                       # Preds ..B14.128 ..B14.75      # Infreq
..L669:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN7596:
	.loc    1  478  is_stmt 1
        vmovsd    (%r15,%r13,8), %xmm0                          #478.57
..LN7597:
        vcomisd   .L_2il0floatpacket.1(%rip), %xmm0             #478.78
..LN7598:
        jbe       ..B14.128     # Prob 50%                      #478.78
..LN7599:
                                # LOE rbx r12 r13 r15
..B14.77:                       # Preds ..B14.76                # Infreq
..LN7600:
	.loc    1  482  is_stmt 1
        movq      3480(%rsp), %rax                              #482.17
..LN7601:
	.loc    1  484  is_stmt 1
        movq      3472(%rsp), %rdx                              #484.17
..LN7602:
	.loc    1  486  is_stmt 1
        vmovsd    3488(%rsp), %xmm0                             #486.23
..LN7603:
	.loc    1  482  is_stmt 1
        vmovsd    (%rax,%r13,8), %xmm1                          #482.17
..LN7604:
	.loc    1  483  is_stmt 1
        vmovsd    8(%rax,%r13,8), %xmm2                         #483.17
..LN7605:
	.loc    1  484  is_stmt 1
        vmovsd    16(%rdx,%r13,8), %xmm3                        #484.17
..LN7606:
	.loc    1  485  is_stmt 1
        vmovsd    8(%rdx,%r13,8), %xmm4                         #485.17
..LN7607:
	.loc    1  482  is_stmt 1
        vmovsd    %xmm1, 2720(%rsp)                             #482.7
..LN7608:
	.loc    1  483  is_stmt 1
        vmovsd    %xmm2, 2728(%rsp)                             #483.7
..LN7609:
	.loc    1  484  is_stmt 1
        vmovsd    %xmm3, 2736(%rsp)                             #484.7
..LN7610:
	.loc    1  485  is_stmt 1
        vmovsd    %xmm4, 2744(%rsp)                             #485.7
..LN7611:
	.loc    1  486  is_stmt 1
        vcomisd   %xmm1, %xmm0                                  #486.23
..LN7612:
        jb        ..B14.81      # Prob 50%                      #486.23
..LN7613:
                                # LOE rbx r12 r13 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B14.78:                       # Preds ..B14.77                # Infreq
..LN7614:
        vcomisd   %xmm2, %xmm0                                  #486.44
..LN7615:
        jb        ..B14.81      # Prob 50%                      #486.44
..LN7616:
                                # LOE rbx r12 r13 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B14.79:                       # Preds ..B14.78                # Infreq
..LN7617:
	.loc    1  487  is_stmt 1
        vcomisd   %xmm3, %xmm0                                  #487.19
..LN7618:
        jb        ..B14.81      # Prob 50%                      #487.19
..LN7619:
                                # LOE rbx r12 r13 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B14.80:                       # Preds ..B14.79                # Infreq
..LN7620:
        vcomisd   %xmm4, %xmm0                                  #487.40
..LN7621:
        jae       ..B14.128     # Prob 50%                      #487.40
..LN7622:
                                # LOE rbx r12 r13 r15 xmm0 xmm1 xmm2 xmm3 xmm4 ymm0 zmm0
..B14.81:                       # Preds ..B14.77 ..B14.78 ..B14.79 ..B14.80 # Infreq
..LN7623:
	.loc    1  488  is_stmt 1
        vcomisd   3464(%rsp), %xmm1                             #488.23
..LN7624:
        jb        ..B14.85      # Prob 22%                      #488.23
..LN7625:
                                # LOE rbx r12 r13 r15 xmm0 xmm2 xmm3 xmm4 ymm0 zmm0
..B14.82:                       # Preds ..B14.81                # Infreq
..LN7626:
        vcomisd   3464(%rsp), %xmm2                             #488.44
..LN7627:
        jb        ..B14.85      # Prob 22%                      #488.44
..LN7628:
                                # LOE rbx r12 r13 r15 xmm0 xmm3 xmm4 ymm0 zmm0
..B14.83:                       # Preds ..B14.82                # Infreq
..LN7629:
	.loc    1  489  is_stmt 1
        vcomisd   3464(%rsp), %xmm3                             #489.19
..LN7630:
        jb        ..B14.85      # Prob 22%                      #489.19
..LN7631:
                                # LOE rbx r12 r13 r15 xmm0 xmm4 ymm0 zmm0
..B14.84:                       # Preds ..B14.83                # Infreq
..LN7632:
        vcomisd   3464(%rsp), %xmm4                             #489.40
..LN7633:
        jae       ..B14.128     # Prob 78%                      #489.40
..LN7634:
                                # LOE rbx r12 r13 r15 xmm0 ymm0 zmm0
..B14.85:                       # Preds ..B14.81 ..B14.82 ..B14.83 ..B14.84 # Infreq
..LN7635:
	.loc    1  496  is_stmt 1
        vzeroupper                                              #496.14
..LN7636:
        lea       1216(%rsp), %rdi                              #496.14
..LN7637:
	.loc    1  491  is_stmt 1
        movq      (%rbx,%r13,8), %rax                           #491.17
..LN7638:
	.loc    1  496  is_stmt 1
        lea       2720(%rsp), %rsi                              #496.14
..LN7639:
	.loc    1  492  is_stmt 1
        movq      8(%rbx,%r13,8), %rcx                          #492.17
..LN7640:
	.loc    1  496  is_stmt 1
        movl      $4, %edx                                      #496.14
..LN7641:
	.loc    1  493  is_stmt 1
        movq      16(%r12,%r13,8), %r8                          #493.17
..LN7642:
	.loc    1  494  is_stmt 1
        movq      8(%r12,%r13,8), %r9                           #494.17
..LN7643:
	.loc    1  496  is_stmt 1
        vmovsd    728(%rsi), %xmm0                              #496.14
..LN7644:
	.loc    1  491  is_stmt 1
        movq      %rax, -1504(%rsi)                             #491.7
..LN7645:
	.loc    1  492  is_stmt 1
        movq      %rcx, -1496(%rsi)                             #492.7
..LN7646:
	.loc    1  493  is_stmt 1
        movq      %r8, -1488(%rsi)                              #493.7
..LN7647:
	.loc    1  494  is_stmt 1
        movq      %r9, -1480(%rsi)                              #494.7
..___tag_value_create_xgrid_2dx1d_order2.670:
..LN7648:
	.loc    1  496  is_stmt 1
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #496.14
..___tag_value_create_xgrid_2dx1d_order2.671:
..LN7649:
                                # LOE rbx r12 r13 r15 eax
..B14.172:                      # Preds ..B14.85                # Infreq
..LN7650:
        movl      %eax, %r14d                                   #496.14
..LN7651:
                                # LOE rbx r12 r13 r15 r14d
..B14.86:                       # Preds ..B14.172               # Infreq
..LN7652:
	.loc    1  497  is_stmt 1
        movl      %r14d, %edi                                   #497.20
..LN7653:
        lea       1216(%rsp), %rsi                              #497.20
..___tag_value_create_xgrid_2dx1d_order2.672:
..LN7654:
#       avgval_double(int, const double *)
        call      avgval_double                                 #497.20
..___tag_value_create_xgrid_2dx1d_order2.673:
..LN7655:
                                # LOE rbx r12 r13 r15 r14d xmm0
..B14.173:                      # Preds ..B14.86                # Infreq
..LN7656:
        vmovsd    %xmm0, 3456(%rsp)                             #497.20
..LN7657:
                                # LOE rbx r12 r13 r15 r14d
..B14.87:                       # Preds ..B14.173               # Infreq
..LN7658:
	.loc    1  499  is_stmt 1
        lea       1216(%rsp), %rdi                              #499.22
..LN7659:
        vmovsd    2216(%rdi), %xmm0                             #499.22
..LN7660:
        lea       2720(%rsp), %rsi                              #499.22
..LN7661:
        vmovsd    768(%rsi), %xmm1                              #499.22
..LN7662:
        lea       1616(%rsp), %rcx                              #499.22
..LN7663:
        vmovsd    1824(%rcx), %xmm2                             #499.22
..LN7664:
        lea       2016(%rsp), %r8                               #499.22
..LN7665:
        vmovsd    1848(%rcx), %xmm3                             #499.22
..LN7666:
        movl      %r14d, %edx                                   #499.22
..___tag_value_create_xgrid_2dx1d_order2.674:
..LN7667:
#       clip(const double *, const double *, int, double, double, double, double, double *, double *)
        call      clip                                          #499.22
..___tag_value_create_xgrid_2dx1d_order2.675:
..LN7668:
                                # LOE rbx r12 r13 r15 eax
..B14.174:                      # Preds ..B14.87                # Infreq
..LN7669:
        movl      %eax, %r14d                                   #499.22
..LN7670:
                                # LOE rbx r12 r13 r15 r14d
..B14.88:                       # Preds ..B14.174               # Infreq
..LN7671:
        testl     %r14d, %r14d                                  #499.97
..LN7672:
        jle       ..B14.128     # Prob 40%                      #499.97
..LN7673:
                                # LOE rbx r12 r13 r15 r14d
..B14.89:                       # Preds ..B14.88                # Infreq
..LN7674:
	.loc    1  500  is_stmt 1
        movl      %r14d, %edx                                   #500.10
..LN7675:
        lea       1616(%rsp), %rdi                              #500.10
..LN7676:
        lea       2016(%rsp), %rsi                              #500.10
..___tag_value_create_xgrid_2dx1d_order2.676:
..LN7677:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #500.10
..___tag_value_create_xgrid_2dx1d_order2.677:
..LN7678:
                                # LOE rbx r12 r13 r15 r14d xmm0
..B14.90:                       # Preds ..B14.89                # Infreq
..LN7679:
	.loc    1  501  is_stmt 1
        movq      3296(%rsp), %rax                              #501.13
..LN7680:
	.loc    1  502  is_stmt 1
        movq      3272(%rsp), %rcx                              #502.2
..LN7681:
        movq      3264(%rsp), %rsi                              #502.2
..LN7682:
	.loc    1  500  is_stmt 1
        vmulsd    (%r15,%r13,8), %xmm0, %xmm2                   #500.45
..LN7683:
	.loc    1  501  is_stmt 1
        vmovsd    (%rax,%r13,8), %xmm0                          #501.13
..LN7684:
	.loc    1  502  is_stmt 1
        vminsd    (%rcx,%rsi,8), %xmm0, %xmm0                   #502.2
..LN7685:
        vdivsd    %xmm0, %xmm2, %xmm1                           #502.11
..LN7686:
        vcomisd   .L_2il0floatpacket.2(%rip), %xmm1             #502.22
..LN7687:
        jbe       ..B14.128     # Prob 78%                      #502.22
..LN7688:
                                # LOE rbx r12 r13 r15 r14d xmm2
..B14.91:                       # Preds ..B14.90                # Infreq
..LN7689:
	.loc    1  503  is_stmt 1
        movq      72(%rbp), %rax                                #503.4
..LN7690:
        movq      3136(%rsp), %rcx                              #503.4
..LN7691:
	.loc    1  956  is_stmt 1
        vxorpd    %xmm0, %xmm0, %xmm0                           #956.17
..LN7692:
	.loc    1  960  is_stmt 1
        movslq    %r14d, %rdx                                   #960.3
..LN7693:
        vmovsd    %xmm0, 3192(%rsp)                             #960.3
..LN7694:
	.loc    1  503  is_stmt 1
        vmovsd    %xmm2, (%rax,%rcx,8)                          #503.4
..LN7695:
	.loc    1  960  is_stmt 1
        xorl      %eax, %eax                                    #960.3
..LN7696:
        movq      %r15, 3152(%rsp)                              #960.3
..LN7697:
        movq      %rdx, %r15                                    #960.3
..LN7698:
        movq      %r13, 3160(%rsp)                              #960.3
..LN7699:
        movq      %rax, %r13                                    #960.3
..LN7700:
                                # LOE rbx r12 r13 r15 r14d
..B14.92:                       # Preds ..B14.91 ..B14.96       # Infreq
..L678:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN7701:
	.loc    1  961  is_stmt 1
        movl      %r13d, %eax                                   #961.22
..LN7702:
        incl      %eax                                          #961.17
..LN7703:
        cltd                                                    #961.22
..LN7704:
        idivl     %r14d                                         #961.22
..LN7705:
	.loc    1  504  is_stmt 1
        vmovsd    1616(%rsp,%r13,8), %xmm3                      #504.37
..LN7706:
	.loc    1  970  is_stmt 1
        vxorpd    %xmm5, %xmm5, %xmm5                           #970.20
..LN7707:
	.loc    1  961  is_stmt 1
        movslq    %edx, %rdx                                    #961.22
..LN7708:
	.loc    1  504  is_stmt 1
        vmovsd    2016(%rsp,%r13,8), %xmm1                      #504.44
..LN7709:
        vmovsd    %xmm3, 3368(%rsp)                             #504.37
..LN7710:
        vmovsd    %xmm1, 3384(%rsp)                             #504.44
..LN7711:
        vmovsd    1616(%rsp,%rdx,8), %xmm2                      #504.37
..LN7712:
        vmovsd    2016(%rsp,%rdx,8), %xmm0                      #504.44
..LN7713:
	.loc    1  968  is_stmt 1
        vsubsd    %xmm3, %xmm2, %xmm4                           #968.21
..LN7714:
	.loc    1  504  is_stmt 1
        vmovsd    %xmm2, 3376(%rsp)                             #504.37
..LN7715:
        vmovsd    %xmm0, 3392(%rsp)                             #504.44
..LN7716:
	.loc    1  968  is_stmt 1
        vmovsd    %xmm4, 3400(%rsp)                             #968.21
..LN7717:
	.loc    1  970  is_stmt 1
        vucomisd  %xmm5, %xmm4                                  #970.20
..LN7718:
        jp        ..B14.93      # Prob 0%                       #970.20
..LN7719:
        je        ..B14.96      # Prob 16%                      #970.20
..LN7720:
                                # LOE rbx r12 r13 r15 r14d xmm0 ymm0 zmm0
..B14.93:                       # Preds ..B14.92                # Infreq
..LN7721:
	.loc    1  972  is_stmt 1
        call      __libm_sse2_sincos                            #972.5
..LN7722:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1
..B14.177:                      # Preds ..B14.93                # Infreq
..LN7723:
        vfmadd213sd 3392(%rsp), %xmm0, %xmm1                    #972.5
..LN7724:
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm1, %xmm2      #972.35
..LN7725:
        vmovsd    %xmm2, 3248(%rsp)                             #972.35
..LN7726:
	.loc    1  973  is_stmt 1
        vmovsd    3384(%rsp), %xmm0                             #973.5
..LN7727:
        call      __libm_sse2_sincos                            #973.5
..LN7728:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1
..B14.176:                      # Preds ..B14.177               # Infreq
..LN7729:
	.loc    1  977  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm10            #977.22
..LN7730:
        vmovsd    3400(%rsp), %xmm6                             #977.22
..LN7731:
        vcomisd   %xmm10, %xmm6                                 #977.22
..LN7732:
	.loc    1  973  is_stmt 1
        vfmadd213sd 3384(%rsp), %xmm0, %xmm1                    #973.5
..LN7733:
	.loc    1  977  is_stmt 1
        vmovsd    .L_2il0floatpacket.4(%rip), %xmm13            #977.36
..LN7734:
	.loc    1  978  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm12            #978.22
..LN7735:
	.loc    1  977  is_stmt 1
        vsubsd    %xmm13, %xmm6, %xmm7                          #977.36
..LN7736:
	.loc    1  973  is_stmt 1
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm1, %xmm2      #973.35
..LN7737:
	.loc    1  977  is_stmt 1
        ja        ..L679        # Prob 50%                      #977.22
..LN7738:
        vmovaps   %xmm6, %xmm7                                  #977.22
..L679:                                                         #
..LN7739:
	.loc    1  978  is_stmt 1
        vcomisd   %xmm7, %xmm12                                 #978.22
..LN7740:
	.loc    1  979  is_stmt 1
        vmovsd    3456(%rsp), %xmm5                             #979.20
..LN7741:
        vmovsd    3376(%rsp), %xmm4                             #979.20
..LN7742:
	.loc    1  982  is_stmt 1
        vmovsd    3368(%rsp), %xmm3                             #982.19
..LN7743:
	.loc    1  979  is_stmt 1
        vsubsd    %xmm5, %xmm4, %xmm8                           #979.20
..LN7744:
	.loc    1  978  is_stmt 1
        vaddsd    %xmm13, %xmm7, %xmm4                          #978.36
..LN7745:
	.loc    1  982  is_stmt 1
        vsubsd    %xmm5, %xmm3, %xmm11                          #982.19
..LN7746:
	.loc    1  980  is_stmt 1
        vsubsd    %xmm13, %xmm8, %xmm9                          #980.23
..LN7747:
	.loc    1  983  is_stmt 1
        vsubsd    %xmm13, %xmm11, %xmm14                        #983.23
..LN7748:
	.loc    1  978  is_stmt 1
        ja        ..L680        # Prob 50%                      #978.22
..LN7749:
        vmovaps   %xmm7, %xmm4                                  #978.22
..L680:                                                         #
..LN7750:
	.loc    1  980  is_stmt 1
        vcomisd   %xmm10, %xmm8                                 #980.23
..LN7751:
        ja        ..L681        # Prob 50%                      #980.23
..LN7752:
        vmovaps   %xmm8, %xmm9                                  #980.23
..L681:                                                         #
..LN7753:
	.loc    1  981  is_stmt 1
        vcomisd   %xmm9, %xmm12                                 #981.23
..LN7754:
        vaddsd    %xmm13, %xmm9, %xmm1                          #981.23
..LN7755:
        ja        ..L682        # Prob 50%                      #981.23
..LN7756:
        vmovaps   %xmm9, %xmm1                                  #981.23
..L682:                                                         #
..LN7757:
	.loc    1  983  is_stmt 1
        vcomisd   %xmm10, %xmm11                                #983.23
..LN7758:
        ja        ..L683        # Prob 50%                      #983.23
..LN7759:
        vmovaps   %xmm11, %xmm14                                #983.23
..L683:                                                         #
..LN7760:
	.loc    1  984  is_stmt 1
        vcomisd   %xmm14, %xmm12                                #984.23
..LN7761:
        vaddsd    %xmm13, %xmm14, %xmm8                         #984.23
..LN7762:
        ja        ..L684        # Prob 50%                      #984.23
..LN7763:
        vmovaps   %xmm14, %xmm8                                 #984.23
..L684:                                                         #
..LN7764:
	.loc    1  986  is_stmt 1
        vsubsd    %xmm1, %xmm8, %xmm15                          #986.19
..LN7765:
        vcvttsd2si %xmm15, %esi                                 #986.19
..LN7766:
        movl      %esi, %ecx                                    #986.8
..LN7767:
        sarl      $31, %ecx                                     #986.8
..LN7768:
        xorl      %ecx, %esi                                    #986.8
..LN7769:
        subl      %ecx, %esi                                    #986.8
..LN7770:
        cmpl      $3, %esi                                      #986.28
..LN7771:
        jg        ..B14.95      # Prob 50%                      #986.28
..LN7772:
                                # LOE rbx r12 r13 r15 r14d xmm1 xmm2 xmm4 xmm8
..B14.94:                       # Preds ..B14.176               # Infreq
..LN7773:
	.loc    1  987  is_stmt 1
        vmulsd    3248(%rsp), %xmm1, %xmm0                      #987.7
..LN7774:
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm4, %xmm1      #987.7
..LN7775:
        vfmadd213sd %xmm0, %xmm8, %xmm2                         #987.7
..LN7776:
        vmovsd    3192(%rsp), %xmm3                             #987.7
..LN7777:
        vfnmadd231sd %xmm2, %xmm1, %xmm3                        #987.7
..LN7778:
        vmovsd    %xmm3, 3192(%rsp)                             #987.7
..LN7779:
        jmp       ..B14.96      # Prob 100%                     #987.7
..LN7780:
                                # LOE rbx r12 r13 r15 r14d
..B14.95:                       # Preds ..B14.176               # Infreq
..LN7781:
	.loc    1  994  is_stmt 1
        vcvttsd2si %xmm4, %esi                                  #994.43
..LN7782:
	.loc    1  996  is_stmt 1
        vaddsd    %xmm8, %xmm1, %xmm7                           #996.19
..LN7783:
	.loc    1  993  is_stmt 1
        vxorpd    %xmm5, %xmm5, %xmm5                           #993.2
..LN7784:
	.loc    1  994  is_stmt 1
        movl      %esi, %ecx                                    #994.39
..LN7785:
	.loc    1  993  is_stmt 1
        vcomisd   %xmm5, %xmm1                                  #993.2
..LN7786:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm6             #993.2
..LN7787:
	.loc    1  994  is_stmt 1
        vxorpd    %xmm4, %xmm4, %xmm4                           #994.39
..LN7788:
	.loc    1  993  is_stmt 1
        ja        ..L685        # Prob 50%                      #993.2
..LN7789:
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm6             #993.2
..L685:                                                         #
..LN7790:
	.loc    1  995  is_stmt 1
        vmovsd    3248(%rsp), %xmm0                             #995.34
..LN7791:
        vsubsd    %xmm6, %xmm1, %xmm11                          #995.34
..LN7792:
        vmulsd    %xmm1, %xmm0, %xmm1                           #995.34
..LN7793:
        vaddsd    %xmm6, %xmm8, %xmm9                           #995.61
..LN7794:
        vmulsd    %xmm8, %xmm2, %xmm8                           #995.61
..LN7795:
	.loc    1  994  is_stmt 1
        vsubsd    %xmm0, %xmm2, %xmm2                           #994.23
..LN7796:
	.loc    1  996  is_stmt 1
        vmulsd    %xmm6, %xmm7, %xmm3                           #996.19
..LN7797:
	.loc    1  995  is_stmt 1
        vmulsd    %xmm11, %xmm2, %xmm12                         #995.7
..LN7798:
        vmulsd    %xmm9, %xmm8, %xmm10                          #995.66
..LN7799:
	.loc    1  994  is_stmt 1
        sarl      $31, %ecx                                     #994.39
..LN7800:
        xorl      %ecx, %esi                                    #994.39
..LN7801:
        subl      %ecx, %esi                                    #994.39
..LN7802:
        vcvtsi2sd %esi, %xmm4, %xmm4                            #994.39
..LN7803:
	.loc    1  995  is_stmt 1
        vfnmadd213sd %xmm10, %xmm11, %xmm1                      #995.7
..LN7804:
        vxorpd    .L_2il0floatpacket.8(%rip), %xmm12, %xmm13    #995.7
..LN7805:
	.loc    1  994  is_stmt 1
        vdivsd    %xmm4, %xmm13, %xmm14                         #994.39
..LN7806:
        vaddsd    %xmm14, %xmm0, %xmm15                         #994.39
..LN7807:
	.loc    1  995  is_stmt 1
        vmovsd    3192(%rsp), %xmm0                             #995.7
..LN7808:
        vfnmadd213sd %xmm1, %xmm15, %xmm3                       #995.7
..LN7809:
        vfmadd231sd .L_2il0floatpacket.1(%rip), %xmm3, %xmm0    #995.7
..LN7810:
        vmovsd    %xmm0, 3192(%rsp)                             #995.7
..LN7811:
                                # LOE rbx r12 r13 r15 r14d
..B14.96:                       # Preds ..B14.94 ..B14.95 ..B14.92 # Infreq
..LN7812:
	.loc    1  960  is_stmt 1
        incq      %r13                                          #960.3
..LN7813:
        cmpq      %r15, %r13                                    #960.3
..LN7814:
        jb        ..B14.92      # Prob 82%                      #960.3
..LN7815:
                                # LOE rbx r12 r13 r15 r14d
..B14.97:                       # Preds ..B14.96                # Infreq
..LN7816:
        vmovsd    3192(%rsp), %xmm0                             #
..LN7817:
	.loc    1  929  is_stmt 1
        movl      %r14d, %r8d                                   #929.22
..LN7818:
	.loc    1  1000  is_stmt 1
        vmulsd    .L_2il0floatpacket.5(%rip), %xmm0, %xmm9      #1000.25
..LN7819:
	.loc    1  499  is_stmt 1
        vmovd     %r14d, %xmm0                                  #499.22
..LN7820:
	.loc    1  929  is_stmt 1
        vmovdqu   2688(%rsp), %ymm10                            #929.22
..LN7821:
	.loc    1  504  is_stmt 1
        movq      3136(%rsp), %rcx                              #504.4
..LN7822:
        movq      80(%rbp), %rax                                #504.4
..LN7823:
        movq      3160(%rsp), %r13                              #
..LN7824:
        vmovsd    %xmm9, (%rax,%rcx,8)                          #504.4
..LN7825:
	.loc    1  928  is_stmt 1
        xorl      %eax, %eax                                    #928.3
..LN7826:
        lea       63(%r14), %ecx                                #928.3
..LN7827:
	.loc    1  499  is_stmt 1
        vpbroadcastd %xmm0, %ymm8                               #499.22
..LN7828:
	.loc    1  929  is_stmt 1
        xorl      %esi, %esi                                    #929.22
..LN7829:
	.loc    1  928  is_stmt 1
        shrl      $6, %ecx                                      #928.3
..LN7830:
	.loc    1  929  is_stmt 1
        movl      %eax, %r14d                                   #929.22
..LN7831:
        movq      %r12, 3176(%rsp)                              #929.22
..LN7832:
        movl      %eax, %r12d                                   #929.22
..LN7833:
        movq      %rbx, 3184(%rsp)                              #929.22
..LN7834:
	.loc    1  925  is_stmt 1
        vxorpd    %xmm9, %xmm9, %xmm9                           #925.17
..LN7835:
                                # LOE ecx esi r8d r12d r14d xmm9 ymm8 ymm10
..B14.98:                       # Preds ..B14.97 ..B14.126      # Infreq
..L686:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # %s was not vectorized: inner loop was already vectorized
..LN7836:
	.loc    1  928  is_stmt 1
        lea       64(%r14), %r15d                               #928.3
..LN7837:
        cmpl      %r15d, %r8d                                   #928.3
..LN7838:
        cmovl     %r8d, %r15d                                   #928.3
..LN7839:
        movslq    %r15d, %rbx                                   #928.3
..LN7840:
        addl      %esi, %r15d                                   #928.3
..LN7841:
        cmpl      $16, %r15d                                    #928.3
..LN7842:
        jl        ..B14.141     # Prob 10%                      #928.3
..LN7843:
                                # LOE rbx ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B14.99:                       # Preds ..B14.98                # Infreq
..LN7844:
        movl      %r15d, %eax                                   #928.3
..LN7845:
        xorl      %r10d, %r10d                                  #928.3
..LN7846:
        andl      $-16, %eax                                    #928.3
..LN7847:
	.loc    1  934  is_stmt 1
        movslq    %r14d, %r9                                    #934.12
..LN7848:
	.loc    1  928  is_stmt 1
        movslq    %eax, %rdi                                    #928.3
..LN7849:
        .align    16,0x90
..LN7850:
                                # LOE rbx rdi r9 r10 eax ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B14.100:                      # Preds ..B14.100 ..B14.99      # Infreq
..L687:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 4
                # LOOP WAS STRIPMINED BY 64
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 3.958984
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.042969
                # MAIN VECTOR TYPE: 64-bits floating point
..LN7851:
	.loc    1  505  is_stmt 1
        vmovupd   2016(%rsp,%r9,8), %ymm0                       #505.45
..LN7852:
        vmovupd   2048(%rsp,%r9,8), %ymm2                       #505.45
..LN7853:
        vmovupd   2080(%rsp,%r9,8), %ymm3                       #505.45
..LN7854:
        vmovupd   2112(%rsp,%r9,8), %ymm4                       #505.45
..LN7855:
	.loc    1  934  is_stmt 1
        vmovupd   %ymm0, 704(%rsp,%r10,8)                       #934.5
..LN7856:
        vmovupd   %ymm2, 736(%rsp,%r10,8)                       #934.5
..LN7857:
        vmovupd   %ymm3, 768(%rsp,%r10,8)                       #934.5
..LN7858:
        vmovupd   %ymm4, 800(%rsp,%r10,8)                       #934.5
..LN7859:
	.loc    1  928  is_stmt 1
        addq      $16, %r10                                     #928.3
..LN7860:
        addq      $16, %r9                                      #928.3
..LN7861:
        cmpq      %rdi, %r10                                    #928.3
..LN7862:
        jb        ..B14.100     # Prob 82%                      #928.3
..LN7863:
                                # LOE rbx rdi r9 r10 eax ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B14.101:                      # Preds ..B14.100               # Infreq
..LN7864:
        lea       1(%rax), %edi                                 #928.3
..LN7865:
        cmpl      %edi, %r15d                                   #928.3
..LN7866:
        jb        ..B14.111     # Prob 50%                      #928.3
..LN7867:
                                # LOE rbx eax ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B14.102:                      # Preds ..B14.101 ..B14.141     # Infreq
..LN7868:
        movslq    %eax, %r10                                    #928.3
..LN7869:
        movslq    %r15d, %rdx                                   #928.3
..LN7870:
        subq      %r10, %rdx                                    #928.3
..LN7871:
        cmpq      $4, %rdx                                      #928.3
..LN7872:
        jl        ..B14.138     # Prob 10%                      #928.3
..LN7873:
                                # LOE rdx rbx r10 eax ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B14.103:                      # Preds ..B14.102               # Infreq
..LN7874:
	.loc    1  934  is_stmt 1
        movslq    %r14d, %r9                                    #934.12
..LN7875:
	.loc    1  928  is_stmt 1
        movl      %edx, %edi                                    #928.3
..LN7876:
	.loc    1  934  is_stmt 1
        movslq    %eax, %rax                                    #934.12
..LN7877:
	.loc    1  928  is_stmt 1
        andl      $-4, %edi                                     #928.3
..LN7878:
	.loc    1  934  is_stmt 1
        addq      %rax, %r9                                     #934.12
..LN7879:
	.loc    1  928  is_stmt 1
        xorl      %r11d, %r11d                                  #928.3
..LN7880:
        movslq    %edi, %rdi                                    #928.3
..LN7881:
        lea       704(%rsp,%r10,8), %r13                        #
..LN7882:
	.loc    1  505  is_stmt 1
        lea       2016(%rsp,%r9,8), %r9                         #505.45
..LN7883:
                                # LOE rdx rbx rdi r9 r10 r11 r13 eax ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B14.104:                      # Preds ..B14.104 ..B14.103     # Infreq
..L688:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS STRIPMINED BY 64
                # LOOP WAS VECTORIZED
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 1.915039
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 1.875000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN7884:
        vmovupd   (%r9,%r11,8), %ymm0                           #505.45
..LN7885:
	.loc    1  934  is_stmt 1
        vmovupd   %ymm0, (%r13,%r11,8)                          #934.5
..LN7886:
	.loc    1  928  is_stmt 1
        addq      $4, %r11                                      #928.3
..LN7887:
        cmpq      %rdi, %r11                                    #928.3
..LN7888:
        jb        ..B14.104     # Prob 82%                      #928.3
..LN7889:
                                # LOE rdx rbx rdi r9 r10 r11 r13 eax ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B14.106:                      # Preds ..B14.104 ..B14.138     # Infreq
..LN7890:
        cmpq      %rdx, %rdi                                    #928.3
..LN7891:
        jae       ..B14.110     # Prob 9%                       #928.3
..LN7892:
                                # LOE rdx rbx rdi r10 eax ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B14.107:                      # Preds ..B14.106               # Infreq
..LN7893:
	.loc    1  934  is_stmt 1
        movslq    %eax, %rax                                    #934.12
..LN7894:
        lea       704(%rsp,%r10,8), %r9                         #
..LN7895:
        movslq    %r14d, %r10                                   #934.12
..LN7896:
        addq      %rax, %r10                                    #934.12
..LN7897:
	.loc    1  505  is_stmt 1
        lea       2016(%rsp,%r10,8), %r10                       #505.45
..LN7898:
                                # LOE rdx rbx rdi r9 r10 ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B14.108:                      # Preds ..B14.108 ..B14.107     # Infreq
..L689:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS STRIPMINED BY 64
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 1.915039
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 1.875000
..LN7899:
        movq      (%r10,%rdi,8), %r11                           #505.45
..LN7900:
	.loc    1  934  is_stmt 1
        movq      %r11, (%r9,%rdi,8)                            #934.5
..LN7901:
	.loc    1  928  is_stmt 1
        incq      %rdi                                          #928.3
..LN7902:
        cmpq      %rdx, %rdi                                    #928.3
..LN7903:
        jb        ..B14.108     # Prob 82%                      #928.3
..LN7904:
                                # LOE rdx rbx rdi r9 r10 ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B14.110:                      # Preds ..B14.108 ..B14.106 ..B14.141 # Infreq
..LN7905:
        cmpl      $8, %r15d                                     #928.3
..LN7906:
        jl        ..B14.139     # Prob 10%                      #928.3
..LN7907:
                                # LOE rbx ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B14.111:                      # Preds ..B14.101 ..B14.110     # Infreq
..LN7908:
        movl      %r15d, %edi                                   #928.3
..LN7909:
        xorl      %r13d, %r13d                                  #928.3
..LN7910:
        andl      $-8, %edi                                     #928.3
..LN7911:
	.loc    1  929  is_stmt 1
        lea       1(%r14), %r9d                                 #929.17
..LN7912:
	.loc    1  928  is_stmt 1
        movslq    %edi, %rdi                                    #928.3
..LN7913:
        movl      %ecx, 680(%rsp)                               #928.3
..LN7914:
        movl      %r8d, 688(%rsp)                               #928.3
..LN7915:
	.loc    1  929  is_stmt 1
        vmovd     %r9d, %xmm0                                   #929.17
..LN7916:
        vpbroadcastd %xmm0, %ymm2                               #929.17
..LN7917:
        vpaddd    .L_2il0floatpacket.7(%rip), %ymm2, %ymm11     #929.17
..LN7918:
                                # LOE rbx rdi r13 esi r12d r14d r15d xmm9 ymm8 ymm10 ymm11
..B14.112:                      # Preds ..B14.178 ..B14.111     # Infreq
..L690:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS STRIPMINED BY 64
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 1.774414
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 8
                # NORMALIZED VECTORIZATION OVERHEAD 0.017578
                # MAIN VECTOR TYPE: 32-bits integer
..LN7919:
        vmovdqa   %ymm11, %ymm0                                 #929.22
..LN7920:
        vmovdqa   %ymm8, %ymm1                                  #929.22
..LN7921:
        call      __svml_irem8                                  #929.12
..LN7922:
                                # LOE rbx rdi r13 esi r12d r14d r15d xmm9 ymm0 ymm8 ymm10 ymm11
..B14.178:                      # Preds ..B14.112               # Infreq
..LN7923:
        vmovdqu   %ymm0, 2432(%rsp,%r13,4)                      #929.12
..LN7924:
	.loc    1  928  is_stmt 1
        addq      $8, %r13                                      #928.3
..LN7925:
	.loc    1  929  is_stmt 1
        vpaddd    %ymm10, %ymm11, %ymm11                        #929.17
..LN7926:
	.loc    1  928  is_stmt 1
        cmpq      %rdi, %r13                                    #928.3
..LN7927:
        jb        ..B14.112     # Prob 82%                      #928.3
..LN7928:
                                # LOE rbx rdi r13 esi r12d r14d r15d xmm9 ymm8 ymm10 ymm11
..B14.113:                      # Preds ..B14.178               # Infreq
..LN7929:
        movl      680(%rsp), %ecx                               #
..LN7930:
        movl      688(%rsp), %r8d                               #
..LN7931:
                                # LOE rbx rdi ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B14.114:                      # Preds ..B14.113 ..B14.139     # Infreq
..LN7932:
        movl      %edi, %r10d                                   #928.3
..LN7933:
	.loc    1  929  is_stmt 1
        lea       1(%r14,%r10), %r9d                            #929.17
..LN7934:
	.loc    1  928  is_stmt 1
        cmpl      %r15d, %r10d                                  #928.3
..LN7935:
        jae       ..B14.118     # Prob 9%                       #928.3
..LN7936:
                                # LOE rbx rdi ecx esi r8d r9d r10d r12d r14d r15d xmm9 ymm8 ymm10
..B14.116:                      # Preds ..B14.114 ..B14.116     # Infreq
..L691:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS STRIPMINED BY 64
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 1.774414
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 8
                # NORMALIZED VECTORIZATION OVERHEAD 0.017578
..LN7937:
	.loc    1  929  is_stmt 1
        movl      %r9d, %eax                                    #929.22
..LN7938:
        cltd                                                    #929.22
..LN7939:
        idivl     %r8d                                          #929.22
..LN7940:
	.loc    1  928  is_stmt 1
        incl      %r10d                                         #928.3
..LN7941:
        incl      %r9d                                          #928.3
..LN7942:
	.loc    1  929  is_stmt 1
        movl      %edx, 2432(%rsp,%rdi,4)                       #929.22
..LN7943:
	.loc    1  928  is_stmt 1
        incq      %rdi                                          #928.3
..LN7944:
        cmpl      %r15d, %r10d                                  #928.3
..LN7945:
        jb        ..B14.116     # Prob 82%                      #928.3
..LN7946:
                                # LOE rbx rdi ecx esi r8d r9d r10d r12d r14d r15d xmm9 ymm8 ymm10
..B14.118:                      # Preds ..B14.116 ..B14.114     # Infreq
..LN7947:
        movslq    %r12d, %r15                                   #928.3
..LN7948:
        xorl      %r13d, %r13d                                  #928.3
..LN7949:
        shlq      $6, %r15                                      #928.3
..LN7950:
        negq      %r15                                          #928.3
..LN7951:
        addq      %rbx, %r15                                    #928.3
..LN7952:
        je        ..B14.126     # Prob 9%                       #928.3
..LN7953:
                                # LOE r13 r15 ecx esi r8d r12d r14d xmm9 ymm8 ymm10
..B14.119:                      # Preds ..B14.118               # Infreq
..LN7954:
	.loc    1  930  is_stmt 1
        movslq    %r14d, %r14                                   #930.24
..LN7955:
	.loc    1  505  is_stmt 1
        vmovsd    %xmm9, 3240(%rsp)                             #505.38
..LN7956:
        movl      %esi, 32(%rsp)                                #505.38
..LN7957:
        movl      %ecx, 680(%rsp)                               #505.38
..LN7958:
        vmovdqu   %ymm8, (%rsp)                                 #505.38
..LN7959:
        lea       1616(%rsp,%r14,8), %rbx                       #505.38
..LN7960:
        vmovdqu   %ymm10, 2688(%rsp)                            #505.38
..LN7961:
        movl      %r8d, 688(%rsp)                               #505.38
..LN7962:
                                # LOE rbx r13 r15 r12d r14d
..B14.120:                      # Preds ..B14.124 ..B14.119     # Infreq
..L692:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 3
                # LOOP WAS STRIPMINED BY 64
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN7963:
	.loc    1  933  is_stmt 1
        movslq    2432(%rsp,%r13,4), %rcx                       #933.5
..LN7964:
	.loc    1  938  is_stmt 1
        vxorpd    %xmm7, %xmm7, %xmm7                           #938.18
..LN7965:
	.loc    1  937  is_stmt 1
        vmovsd    704(%rsp,%r13,8), %xmm1                       #937.5
..LN7966:
        vmovsd    %xmm1, 3424(%rsp)                             #937.5
..LN7967:
	.loc    1  505  is_stmt 1
        vmovsd    2016(%rsp,%rcx,8), %xmm2                      #505.45
..LN7968:
        vmovsd    1616(%rsp,%rcx,8), %xmm6                      #505.38
..LN7969:
	.loc    1  935  is_stmt 1
        vsubsd    %xmm2, %xmm1, %xmm4                           #935.17
..LN7970:
	.loc    1  937  is_stmt 1
        vaddsd    %xmm1, %xmm2, %xmm0                           #937.19
..LN7971:
	.loc    1  930  is_stmt 1
        vsubsd    (%rbx,%r13,8), %xmm6, %xmm1                   #930.24
..LN7972:
	.loc    1  937  is_stmt 1
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm3             #937.25
..LN7973:
	.loc    1  936  is_stmt 1
        vmulsd    %xmm4, %xmm3, %xmm5                           #936.14
..LN7974:
	.loc    1  938  is_stmt 1
        vucomisd  %xmm7, %xmm1                                  #938.18
..LN7975:
	.loc    1  937  is_stmt 1
        vmulsd    %xmm0, %xmm3, %xmm0                           #937.25
..LN7976:
	.loc    1  505  is_stmt 1
        vmovsd    %xmm2, 3408(%rsp)                             #505.45
..LN7977:
	.loc    1  936  is_stmt 1
        vmovsd    %xmm5, 3416(%rsp)                             #936.14
..LN7978:
	.loc    1  938  is_stmt 1
        jp        ..B14.121     # Prob 0%                       #938.18
..LN7979:
        je        ..B14.124     # Prob 16%                      #938.18
..LN7980:
                                # LOE rbx r13 r15 r12d r14d xmm0 xmm1 xmm5 ymm5 zmm5
..B14.121:                      # Preds ..B14.120               # Infreq
..LN7981:
	.loc    1  939  is_stmt 1
        vcomisd   .L_2il0floatpacket.0(%rip), %xmm1             #939.20
..LN7982:
        vmovsd    .L_2il0floatpacket.4(%rip), %xmm2             #939.30
..LN7983:
        vsubsd    %xmm2, %xmm1, %xmm3                           #939.30
..LN7984:
        ja        ..L693        # Prob 50%                      #939.20
..LN7985:
        vmovaps   %xmm1, %xmm3                                  #939.20
..L693:                                                         #
..LN7986:
	.loc    1  940  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm1             #940.20
..LN7987:
        vaddsd    %xmm2, %xmm3, %xmm4                           #940.30
..LN7988:
        vcomisd   %xmm3, %xmm1                                  #940.20
..LN7989:
	.loc    1  942  is_stmt 1
        vandpd    .L_2il0floatpacket.9(%rip), %xmm5, %xmm7      #942.10
..LN7990:
        vmovsd    .L_2il0floatpacket.6(%rip), %xmm6             #942.21
..LN7991:
	.loc    1  940  is_stmt 1
        ja        ..L694        # Prob 50%                      #940.20
..LN7992:
        vmovaps   %xmm3, %xmm4                                  #940.20
..L694:                                                         #
..LN7993:
        vmovsd    %xmm4, 3256(%rsp)                             #940.20
..LN7994:
	.loc    1  942  is_stmt 1
        vcomisd   %xmm7, %xmm6                                  #942.21
..LN7995:
        jbe       ..B14.123     # Prob 50%                      #942.21
..LN7996:
                                # LOE rbx r13 r15 r12d r14d xmm0 xmm4 xmm5 ymm4 ymm5 zmm4 zmm5
..B14.122:                      # Preds ..B14.121               # Infreq
..LN7997:
	.loc    1  943  is_stmt 1
        vzeroupper                                              #943.23
..LN7998:
        call      __libm_sse2_sincos                            #943.23
..LN7999:
                                # LOE rbx r13 r15 r12d r14d xmm0 xmm1
..B14.180:                      # Preds ..B14.122               # Infreq
..LN8000:
        vmovsd    %xmm0, 3216(%rsp)                             #943.23
..LN8001:
        vmovsd    %xmm1, 3232(%rsp)                             #943.23
..LN8002:
        vmovsd    3408(%rsp), %xmm0                             #943.54
..LN8003:
        call      cos                                           #943.54
..LN8004:
                                # LOE rbx r13 r15 r12d r14d xmm0
..B14.179:                      # Preds ..B14.180               # Infreq
..LN8005:
        vmovsd    3424(%rsp), %xmm2                             #943.7
..LN8006:
        vmovapd   %xmm0, %xmm1                                  #943.54
..LN8007:
        vmovsd    3232(%rsp), %xmm0                             #943.7
..LN8008:
        vfmadd132sd 3216(%rsp), %xmm0, %xmm2                    #943.7
..LN8009:
        vsubsd    %xmm1, %xmm0, %xmm3                           #943.7
..LN8010:
        vmovsd    3240(%rsp), %xmm5                             #943.7
..LN8011:
        vaddsd    %xmm3, %xmm2, %xmm4                           #943.7
..LN8012:
        vfnmadd231sd 3256(%rsp), %xmm4, %xmm5                   #943.7
..LN8013:
        vmovsd    %xmm5, 3240(%rsp)                             #943.7
..LN8014:
        jmp       ..B14.124     # Prob 100%                     #943.7
..LN8015:
                                # LOE rbx r13 r15 r12d r14d
..B14.123:                      # Preds ..B14.121               # Infreq
..LN8016:
	.loc    1  945  is_stmt 1
        vzeroupper                                              #945.40
..LN8017:
        call      __libm_sse2_sincos                            #945.40
..LN8018:
                                # LOE rbx r13 r15 r12d r14d xmm0 xmm1
..B14.183:                      # Preds ..B14.123               # Infreq
..LN8019:
        vmovsd    %xmm0, 3208(%rsp)                             #945.40
..LN8020:
        vmovsd    %xmm1, 3224(%rsp)                             #945.40
..LN8021:
        vmovsd    3416(%rsp), %xmm0                             #945.23
..LN8022:
        call      sin                                           #945.23
..LN8023:
                                # LOE rbx r13 r15 r12d r14d xmm0
..B14.182:                      # Preds ..B14.183               # Infreq
..LN8024:
        vmovsd    %xmm0, 3200(%rsp)                             #945.23
..LN8025:
        vmovsd    3408(%rsp), %xmm0                             #945.72
..LN8026:
        call      cos                                           #945.72
..LN8027:
                                # LOE rbx r13 r15 r12d r14d xmm0
..B14.181:                      # Preds ..B14.182               # Infreq
..LN8028:
        vmovapd   %xmm0, %xmm1                                  #945.72
..LN8029:
        vmovsd    3200(%rsp), %xmm0                             #945.32
..LN8030:
        vdivsd    3416(%rsp), %xmm0, %xmm2                      #945.32
..LN8031:
        vmovsd    3224(%rsp), %xmm3                             #945.7
..LN8032:
        vmovsd    3424(%rsp), %xmm4                             #945.7
..LN8033:
        vfmadd132sd 3208(%rsp), %xmm3, %xmm4                    #945.7
..LN8034:
        vfmsub213sd %xmm1, %xmm2, %xmm3                         #945.7
..LN8035:
        vmovsd    3240(%rsp), %xmm5                             #945.7
..LN8036:
        vfmadd213sd %xmm3, %xmm2, %xmm4                         #945.7
..LN8037:
        vfnmadd231sd 3256(%rsp), %xmm4, %xmm5                   #945.7
..LN8038:
        vmovsd    %xmm5, 3240(%rsp)                             #945.7
..LN8039:
                                # LOE rbx r13 r15 r12d r14d
..B14.124:                      # Preds ..B14.179 ..B14.181 ..B14.120 # Infreq
..LN8040:
	.loc    1  928  is_stmt 1
        incq      %r13                                          #928.3
..LN8041:
        cmpq      %r15, %r13                                    #928.3
..LN8042:
        jb        ..B14.120     # Prob 82%                      #928.3
..LN8043:
                                # LOE rbx r13 r15 r12d r14d
..B14.125:                      # Preds ..B14.124               # Infreq
..LN8044:
        vmovdqu   (%rsp), %ymm8                                 #
..LN8045:
        vmovsd    3240(%rsp), %xmm9                             #
..LN8046:
        vmovdqu   2688(%rsp), %ymm10                            #
..LN8047:
        movl      32(%rsp), %esi                                #
..LN8048:
        movl      680(%rsp), %ecx                               #
..LN8049:
        movl      688(%rsp), %r8d                               #
..LN8050:
                                # LOE ecx esi r8d r12d r14d xmm9 ymm8 ymm10
..B14.126:                      # Preds ..B14.125 ..B14.118     # Infreq
..LN8051:
        incl      %r12d                                         #928.3
..LN8052:
        addl      $64, %r14d                                    #928.3
..LN8053:
        addl      $-64, %esi                                    #928.3
..LN8054:
        cmpl      %ecx, %r12d                                   #928.3
..LN8055:
        jb        ..B14.98      # Prob 82%                      #928.3
..LN8056:
                                # LOE ecx esi r8d r12d r14d xmm9 ymm8 ymm10
..B14.127:                      # Preds ..B14.126               # Infreq
..LN8057:
	.loc    1  947  is_stmt 1
        vmulsd    .L_2il0floatpacket.5(%rip), %xmm9, %xmm0      #947.25
..LN8058:
        vmovdqu   %ymm10, 2688(%rsp)                            #
..LN8059:
	.loc    1  505  is_stmt 1
        movq      3136(%rsp), %r11                              #505.4
..LN8060:
	.loc    1  506  is_stmt 1
        movq      40(%rbp), %rdx                                #506.4
..LN8061:
	.loc    1  507  is_stmt 1
        movq      48(%rbp), %rsi                                #507.4
..LN8062:
	.loc    1  508  is_stmt 1
        movq      56(%rbp), %r8                                 #508.4
..LN8063:
	.loc    1  505  is_stmt 1
        movq      88(%rbp), %rax                                #505.4
..LN8064:
	.loc    1  509  is_stmt 1
        movq      64(%rbp), %r10                                #509.4
..LN8065:
        movq      3160(%rsp), %r13                              #
..LN8066:
	.loc    1  507  is_stmt 1
        movl      3344(%rsp), %ecx                              #507.4
..LN8067:
	.loc    1  508  is_stmt 1
        movq      3264(%rsp), %rdi                              #508.4
..LN8068:
	.loc    1  509  is_stmt 1
        movl      3168(%rsp), %r9d                              #509.4
..LN8069:
	.loc    1  510  is_stmt 1
        movl      3144(%rsp), %r14d                             #510.6
..LN8070:
        incl      %r14d                                         #510.6
..LN8071:
	.loc    1  506  is_stmt 1
        movl      %r13d, (%rdx,%r11,4)                          #506.4
..LN8072:
	.loc    1  507  is_stmt 1
        movl      %ecx, (%rsi,%r11,4)                           #507.4
..LN8073:
	.loc    1  508  is_stmt 1
        movl      %edi, (%r8,%r11,4)                            #508.4
..LN8074:
	.loc    1  505  is_stmt 1
        vmovsd    %xmm0, (%rax,%r11,8)                          #505.4
..LN8075:
	.loc    1  509  is_stmt 1
        movl      %r9d, (%r10,%r11,4)                           #509.4
..LN8076:
	.loc    1  510  is_stmt 1
        incq      %r11                                          #510.6
..LN8077:
        movq      3176(%rsp), %r12                              #
..LN8078:
        movq      3184(%rsp), %rbx                              #
..LN8079:
        movq      3152(%rsp), %r15                              #
..LN8080:
        movq      %r11, 3136(%rsp)                              #510.6
..LN8081:
        movl      %r14d, 3144(%rsp)                             #510.6
..LN8082:
	.loc    1  511  is_stmt 1
        cmpl      $10000000, %r14d                              #511.16
..LN8083:
        jg        ..B14.140     # Prob 0%                       #511.16
..LN8084:
                                # LOE rbx r12 r13 r15 ebx r12d r13d r15d bl bh r12b r13b r15b xmm10 ymm10 zmm10
..B14.128:                      # Preds ..B14.84 ..B14.80 ..B14.140 ..B14.127 ..B14.90
                                #       ..B14.88 ..B14.76       # Infreq
..LN8085:
	.loc    1  478  is_stmt 1
        incq      %r13                                          #478.29
..LN8086:
        cmpq      3496(%rsp), %r13                              #478.29
..LN8087:
        jb        ..B14.76      # Prob 82%                      #478.29
..LN8088:
                                # LOE rbx r12 r13 r15
..B14.129:                      # Preds ..B14.128               # Infreq
..LN8089:
        movl      3344(%rsp), %edx                              #
..LN8090:
        incl      %edx                                          #478.5
..LN8091:
        movl      3336(%rsp), %ecx                              #
..LN8092:
        movl      3320(%rsp), %r9d                              #
..LN8093:
        addl      %r9d, %ecx                                    #478.5
..LN8094:
        movl      3328(%rsp), %eax                              #
..LN8095:
        movq      3352(%rsp), %r11                              #
..LN8096:
        lea       1(%rax,%r9), %eax                             #478.5
..LN8097:
        movq      3360(%rsp), %r8                               #
..LN8098:
        movq      3312(%rsp), %r10                              #
..LN8099:
        cmpl      3304(%rsp), %edx                              #478.5
..LN8100:
        jb        ..B14.74      # Prob 82%                      #478.5
..LN8101:
                                # LOE r8 r10 r11 eax edx ecx r9d
..B14.130:                      # Preds ..B14.142 ..B14.129     # Infreq
..LN8102:
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm0             #
..LN8103:
        movq      3264(%rsp), %r10                              #
..LN8104:
        movq      696(%rsp), %rsi                               #
..LN8105:
        movq      3128(%rsp), %rdi                              #
..LN8106:
        movl      3168(%rsp), %r8d                              #
..LN8107:
        movq      2416(%rsp), %r14                              #
..LN8108:
        movl      3120(%rsp), %ebx                              #
..LN8109:
        movq      2424(%rsp), %r12                              #
..LN8110:
        movl      3304(%rsp), %r15d                             #
..LN8111:
        movq      24(%rbp), %r11                                #
..LN8112:
        movq      16(%rbp), %r13                                #
..LN8113:
                                # LOE rbx rsi rdi r8 r10 r11 r12 r13 r14 r15 ebx esi edi r8d r10d r12d r14d r15d bl bh sil dil r8b r10b r12b r14b r15b xmm0
..B14.131:                      # Preds ..B14.130               # Infreq
..LN8114:
	.loc    1  474  is_stmt 1
        incq      %r10                                          #474.27
..LN8115:
        cmpq      %r12, %r10                                    #474.27
..LN8116:
        jb        ..B14.72      # Prob 82%                      #474.27
..LN8117:
                                # LOE rbx rsi rdi r8 r10 r11 r12 r13 r14 r15 ebx esi edi r8d r12d r14d r15d bl bh sil dil r8b r12b r14b r15b xmm0
..B14.132:                      # Preds ..B14.131               # Infreq
..LN8118:
        incl      %r8d                                          #474.3
..LN8119:
        addq      %r12, %rsi                                    #474.3
..LN8120:
        incq      %rdi                                          #474.3
..LN8121:
        cmpl      %ebx, %r8d                                    #474.3
..LN8122:
        jb        ..B14.146     # Prob 82%                      #474.3
..LN8123:
                                # LOE rbx rsi rdi r11 r12 r13 r14 r15 ebx r8d r12d r14d r15d bl bh r12b r14b r15b xmm0
..B14.135:                      # Preds ..B14.148 ..B14.145 ..B14.132 ..B14.68 # Infreq
..LN8124:
	.loc    1  517  is_stmt 1
        vzeroupper                                              #517.3
..LN8125:
        movq      3280(%rsp), %rdi                              #517.3
..LN8126:
#       free(void *)
        call      free                                          #517.3
..LN8127:
                                # LOE
..B14.136:                      # Preds ..B14.135               # Infreq
..LN8128:
	.loc    1  518  is_stmt 1
        movq      2416(%rsp), %rdi                              #518.3
..LN8129:
#       free(void *)
        call      free                                          #518.3
..LN8130:
                                # LOE
..B14.137:                      # Preds ..B14.136               # Infreq
..LN8131:
	.loc    1  520  is_stmt 1
        movl      3144(%rsp), %eax                              #520.10
..LN8132:
	.loc    1  520  epilogue_begin  is_stmt 1
        addq      $3512, %rsp                                   #520.10
	.cfi_restore 3
..LN8133:
        popq      %rbx                                          #520.10
	.cfi_restore 15
..LN8134:
        popq      %r15                                          #520.10
	.cfi_restore 14
..LN8135:
        popq      %r14                                          #520.10
	.cfi_restore 13
..LN8136:
        popq      %r13                                          #520.10
	.cfi_restore 12
..LN8137:
        popq      %r12                                          #520.10
..LN8138:
        movq      %rbp, %rsp                                    #520.10
..LN8139:
        popq      %rbp                                          #520.10
	.cfi_def_cfa 7, 8
	.cfi_restore 6
..LN8140:
        ret                                                     #520.10
	.cfi_def_cfa 6, 16
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_offset 6, -16
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN8141:
                                # LOE
..B14.138:                      # Preds ..B14.102               # Infreq
..LN8142:
	.loc    1  928  is_stmt 1
        xorl      %edi, %edi                                    #928.3
..LN8143:
        jmp       ..B14.106     # Prob 100%                     #928.3
..LN8144:
                                # LOE rdx rbx rdi r10 eax ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B14.139:                      # Preds ..B14.110               # Infreq
..LN8145:
        xorl      %edi, %edi                                    #928.3
..LN8146:
        jmp       ..B14.114     # Prob 100%                     #928.3
..LN8147:
                                # LOE rbx rdi ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B14.140:                      # Preds ..B14.127               # Infreq
..LN8148:
	.loc    1  511  is_stmt 1
        movl      $.L_2__STRING.0, %edi                         #511.26
..LN8149:
        vzeroupper                                              #511.26
..___tag_value_create_xgrid_2dx1d_order2.710:
..LN8150:
#       error_handler(const char *)
        call      error_handler                                 #511.26
..___tag_value_create_xgrid_2dx1d_order2.711:
..LN8151:
        jmp       ..B14.128     # Prob 100%                     #511.26
..LN8152:
                                # LOE rbx r12 r13 r15
..B14.141:                      # Preds ..B14.98                # Infreq
..LN8153:
	.loc    1  928  is_stmt 1
        xorl      %eax, %eax                                    #928.3
..LN8154:
        cmpl      $1, %r15d                                     #928.3
..LN8155:
        jae       ..B14.102     # Prob 50%                      #928.3
..LN8156:
        jmp       ..B14.110     # Prob 100%                     #928.3
..LN8157:
                                # LOE rbx eax ecx esi r8d r12d r14d r15d xmm9 ymm8 ymm10
..B14.142:                      # Preds ..B14.74                # Infreq
..LN8158:
	.loc    1  478  is_stmt 1
        incl      %edx                                          #478.5
..LN8159:
        addl      %r9d, %ecx                                    #478.5
..LN8160:
        lea       1(%rax,%r9), %eax                             #478.5
..LN8161:
        cmpl      3304(%rsp), %edx                              #478.5
..LN8162:
        jb        ..B14.74      # Prob 82%                      #478.5
..LN8163:
        jmp       ..B14.130     # Prob 100%                     #478.5
..LN8164:
                                # LOE r8 r10 r11 eax edx ecx r9d
..B14.144:                      # Preds ..B14.72                # Infreq
..LN8165:
	.loc    1  474  is_stmt 1
        .byte     15                                            #474.27
..LN8166:
        .byte     31                                            #474.27
..LN8167:
        .byte     132                                           #474.27
..LN8168:
        .byte     0                                             #474.27
..LN8169:
        .byte     0                                             #474.27
..LN8170:
        .byte     0                                             #474.27
..LN8171:
        .byte     0                                             #474.27
..LN8172:
        .byte     0                                             #474.27
..LN8173:
        incq      %r10                                          #474.27
..LN8174:
        cmpq      %r12, %r10                                    #474.27
..LN8175:
        jb        ..B14.72      # Prob 82%                      #474.27
..LN8176:
                                # LOE rsi rdi r10 r11 r12 r13 r14 ebx r8d r15d xmm0
..B14.145:                      # Preds ..B14.144               # Infreq
..LN8177:
        incl      %r8d                                          #474.3
..LN8178:
        addq      %r12, %rsi                                    #474.3
..LN8179:
        incq      %rdi                                          #474.3
..LN8180:
        cmpl      %ebx, %r8d                                    #474.3
..LN8181:
        jae       ..B14.135     # Prob 18%                      #474.3
..LN8182:
                                # LOE rsi rdi r11 r12 r13 r14 ebx r8d r15d xmm0
..B14.146:                      # Preds ..B14.132 ..B14.145     # Infreq
..LN8183:
        xorl      %r10d, %r10d                                  #474.27
..LN8184:
        jmp       ..B14.72      # Prob 100%                     #474.27
..LN8185:
                                # LOE rsi rdi r10 r11 r12 r13 r14 ebx r8d r15d xmm0
..B14.148:                      # Preds ..B14.70                # Infreq
..LN8186:
        incl      %r8d                                          #474.3
..LN8187:
        addq      %r12, %rsi                                    #474.3
..LN8188:
        incq      %rdi                                          #474.3
..LN8189:
        cmpl      %ebx, %r8d                                    #474.3
..LN8190:
        jb        ..B14.70      # Prob 82%                      #474.3
..LN8191:
        jmp       ..B14.135     # Prob 100%                     #474.3
..LN8192:
                                # LOE rax rdx rcx rsi rdi r12 ebx r8d r10d xmm0 xmm1 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 ymm2
..B14.150:                      # Preds ..B14.59                # Infreq
..LN8193:
	.loc    1  75  is_stmt 1
        incl      %r10d                                         #75.3
..LN8194:
        addq      696(%rsp), %rsi                               #75.3
..LN8195:
        addq      728(%rsp), %r8                                #75.3
..LN8196:
        cmpl      8(%rsp), %r10d                                #75.3
..LN8197:
        jb        ..B14.59      # Prob 82%                      #75.3
..LN8198:
        jmp       ..B14.65      # Prob 100%                     #75.3
..LN8199:
                                # LOE rax rdx rsi r8 r9 r11 ecx r10d
..B14.152:                      # Preds ..B14.50                # Infreq
..LN8200:
        incl      %edi                                          #75.18
..LN8201:
        addq      %r9, %r8                                      #75.18
..LN8202:
        lea       1(%rsi,%rcx), %esi                            #75.18
..LN8203:
        cmpl      24(%rsp), %edi                                #75.14
..LN8204:
        jl        ..B14.50      # Prob 82%                      #75.14
..LN8205:
        jmp       ..B14.56      # Prob 100%                     #75.14
..LN8206:
                                # LOE rax rdx r8 r9 r10 ecx esi edi
..B14.154:                      # Preds ..B14.38                # Infreq
..LN8207:
	.loc    1  464  is_stmt 1
        xorl      %r12d, %r12d                                  #464.28
..LN8208:
        jmp       ..B14.42      # Prob 100%                     #464.28
..LN8209:
                                # LOE rdx rcx r8 r9 r10 r12 r13 eax ebx esi edi r14d
..B14.155:                      # Preds ..B14.25 ..B14.27 ..B14.29 # Infreq
..LN8210:
        xorl      %r14d, %r14d                                  #464.28
..LN8211:
        jmp       ..B14.37      # Prob 100%                     #464.28
..LN8212:
                                # LOE rdx rcx r8 r9 r10 eax ebx esi edi r14d
..B14.158:                      # Preds ..B14.8 ..B14.11 ..B14.13 # Infreq
..LN8213:
        xorl      %r11d, %r11d                                  #464.28
..LN8214:
        jmp       ..B14.21      # Prob 100%                     #464.28
..LN8215:
                                # LOE rdx rcx r8 r9 r10 r11 eax ebx esi edi
..B14.160:                      # Preds ..B14.9                 # Infreq
..LN8216:
        movq      16(%rsp), %r11                                #464.28
..LN8217:
        xorl      %r12d, %r12d                                  #464.28
..LN8218:
        jmp       ..B14.18      # Prob 100%                     #464.28
        .align    16,0x90
	.cfi_endproc
..LN8219:
                                # LOE rdx rcx r8 r9 r10 r11 r12 eax ebx esi edi
..LN8220:
# mark_end;
	.type	create_xgrid_2dx1d_order2,@function
	.size	create_xgrid_2dx1d_order2,.-create_xgrid_2dx1d_order2
..LNcreate_xgrid_2dx1d_order2.8221:
.LNcreate_xgrid_2dx1d_order2:
	.data
# -- End  create_xgrid_2dx1d_order2
	.text
.L_2__routine_start_create_xgrid_2dx2d_order1__14:
# -- Begin  create_xgrid_2dx2d_order1_
	.text
# mark_begin;
       .align    16,0x90
	.globl create_xgrid_2dx2d_order1_
# --- create_xgrid_2dx2d_order1_(const int *, const int *, const int *, const int *, const double *, const double *, const double *, const double *, const double *, int *, int *, int *, int *, double *)
create_xgrid_2dx2d_order1_:
# parameter 1(nlon_in): %rdi
# parameter 2(nlat_in): %rsi
# parameter 3(nlon_out): %rdx
# parameter 4(nlat_out): %rcx
# parameter 5(lon_in): %r8
# parameter 6(lat_in): %r9
# parameter 7(lon_out): 16 + %rbp
# parameter 8(lat_out): 24 + %rbp
# parameter 9(mask_in): 32 + %rbp
# parameter 10(i_in): 40 + %rbp
# parameter 11(j_in): 48 + %rbp
# parameter 12(i_out): 56 + %rbp
# parameter 13(j_out): 64 + %rbp
# parameter 14(xgrid_area): 72 + %rbp
..B15.1:                        # Preds ..B15.0
	.cfi_startproc
..___tag_value_create_xgrid_2dx2d_order1_.716:
..L717:
                                                        #536.1
..LN8222:
	.loc    1  536  is_stmt 1
        pushq     %rbp                                          #536.1
	.cfi_def_cfa_offset 16
..LN8223:
        movq      %rsp, %rbp                                    #536.1
	.cfi_def_cfa 6, 16
	.cfi_offset 6, -16
..LN8224:
        andq      $-32, %rsp                                    #536.1
..LN8225:
        pushq     %r12                                          #536.1
..LN8226:
        pushq     %r13                                          #536.1
..LN8227:
        pushq     %r14                                          #536.1
..LN8228:
        pushq     %r15                                          #536.1
..LN8229:
        pushq     %rbx                                          #536.1
..LN8230:
        subq      $4344, %rsp                                   #536.1
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN8231:
        movq      %rsi, %r13                                    #536.1
..LN8232:
	.loc    1  558  prologue_end  is_stmt 1
        movl      (%rdi), %ebx                                  #558.10
..LN8233:
	.loc    1  536  is_stmt 1
        movq      %rdx, %r14                                    #536.1
..LN8234:
        movq      %rdi, (%rsp)                                  #536.1
..LN8235:
	.loc    1  567  is_stmt 1
        movl      %ebx, %edi                                    #567.23
..LN8236:
	.loc    1  536  is_stmt 1
        movq      %rcx, %r15                                    #536.1
..LN8237:
	.loc    1  559  is_stmt 1
        movl      (%r13), %r11d                                 #559.10
..LN8238:
	.loc    1  567  is_stmt 1
        imull     %r11d, %edi                                   #567.23
..LN8239:
        movslq    %edi, %rdi                                    #567.23
..LN8240:
	.loc    1  560  is_stmt 1
        movl      (%r14), %eax                                  #560.10
..LN8241:
	.loc    1  561  is_stmt 1
        movl      (%r15), %r10d                                 #561.10
..LN8242:
	.loc    1  567  is_stmt 1
        shlq      $3, %rdi                                      #567.23
..LN8243:
	.loc    1  560  is_stmt 1
        movl      %eax, 4256(%rsp)                              #560.10
..LN8244:
	.loc    1  586  is_stmt 1
        movslq    %eax, %rax                                    #586.33
..LN8245:
	.loc    1  536  is_stmt 1
        movq      %r9, 2712(%rsp)                               #536.1
..LN8246:
        movq      %r8, 3120(%rsp)                               #536.1
..LN8247:
	.loc    1  572  is_stmt 1
        movslq    %ebx, %r12                                    #572.31
..LN8248:
	.loc    1  559  is_stmt 1
        movl      %r11d, 3128(%rsp)                             #559.10
..LN8249:
	.loc    1  586  is_stmt 1
        movq      %rax, 4312(%rsp)                              #586.33
..LN8250:
	.loc    1  561  is_stmt 1
        movl      %r10d, 4240(%rsp)                             #561.10
..LN8251:
	.loc    1  563  is_stmt 1
        movl      $0, 16(%rsp)                                  #563.3
..LN8252:
	.loc    1  567  is_stmt 1
#       malloc(size_t)
        call      malloc                                        #567.23
..LN8253:
                                # LOE rax r12 r13 r14 r15 ebx
..B15.106:                      # Preds ..B15.1
..LN8254:
        movq      %rax, %rdx                                    #567.23
..LN8255:
                                # LOE rdx r12 r13 r14 r15 ebx
..B15.2:                        # Preds ..B15.106
..LN8256:
	.loc    1  568  is_stmt 1
        movl      4256(%rsp), %edi                              #568.24
..LN8257:
        imull     4240(%rsp), %edi                              #568.24
..LN8258:
        movslq    %edi, %rdi                                    #568.24
..LN8259:
        shlq      $3, %rdi                                      #568.24
..LN8260:
        movq      %rdx, 3536(%rsp)                              #568.24
..LN8261:
#       malloc(size_t)
        call      malloc                                        #568.24
..LN8262:
                                # LOE rax r12 r13 r14 r15 ebx
..B15.107:                      # Preds ..B15.2
..LN8263:
        movq      3536(%rsp), %rdx                              #
..LN8264:
        movq      %rax, 4248(%rsp)                              #568.24
..LN8265:
                                # LOE rdx r12 r13 r14 r15 edx ebx dl dh
..B15.3:                        # Preds ..B15.107
..LN8266:
	.loc    1  71  is_stmt 1
        movq      (%rsp), %rax                                  #71.9
..LN8267:
	.loc    1  75  is_stmt 1
        xorl      %r8d, %r8d                                    #75.7
..LN8268:
	.loc    1  72  is_stmt 1
        movl      (%r13), %r9d                                  #72.9
..LN8269:
	.loc    1  75  is_stmt 1
        xorl      %esi, %esi                                    #75.9
..LN8270:
	.loc    1  71  is_stmt 1
        movl      (%rax), %eax                                  #71.9
..LN8271:
	.loc    1  75  is_stmt 1
        movslq    %eax, %rdi                                    #75.18
..LN8272:
        testl     %r9d, %r9d                                    #75.14
..LN8273:
        jle       ..B15.12      # Prob 10%                      #75.14
..LN8274:
                                # LOE rdx rsi rdi r12 r14 r15 eax edx ebx r8d r9d dl dh
..B15.4:                        # Preds ..B15.3
..LN8275:
        movl      %r9d, 352(%rsp)                               #75.9
..LN8276:
        xorl      %ecx, %ecx                                    #75.9
..LN8277:
        movq      %r12, 4008(%rsp)                              #75.9
..LN8278:
        movl      %ebx, 3544(%rsp)                              #75.9
..LN8279:
        movq      %r14, 8(%rsp)                                 #75.9
..LN8280:
        movq      %r15, (%rsp)                                  #75.9
..LN8281:
        movq      3120(%rsp), %r9                               #75.9
..LN8282:
        movq      2712(%rsp), %r10                              #75.9
..LN8283:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B15.5:                        # Preds ..B15.10 ..B15.102 ..B15.4
..L727:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN8284:
        xorl      %r12d, %r12d                                  #75.27
..LN8285:
        testl     %eax, %eax                                    #75.36
..LN8286:
        jle       ..B15.102     # Prob 10%                      #75.36
..LN8287:
                                # LOE rdx rsi rdi r9 r10 r12 eax ecx r8d
..B15.6:                        # Preds ..B15.5
..LN8288:
	.loc    1  85  is_stmt 1
        movq      %rsi, 368(%rsp)                               #85.5
..LN8289:
	.loc    1  78  is_stmt 1
        lea       (%rax,%rcx), %r13d                            #78.25
..LN8290:
        movslq    %r13d, %r13                                   #78.15
..LN8291:
	.loc    1  85  is_stmt 1
        lea       (%rdx,%rsi,8), %r11                           #85.5
..LN8292:
	.loc    1  76  is_stmt 1
        movslq    %ecx, %rcx                                    #76.15
..LN8293:
	.loc    1  85  is_stmt 1
        movq      %r11, 392(%rsp)                               #85.5
..LN8294:
        movl      %ecx, 376(%rsp)                               #85.5
..LN8295:
        movl      %r8d, 360(%rsp)                               #85.5
..LN8296:
	.loc    1  78  is_stmt 1
        lea       (%r9,%r13,8), %rbx                            #78.15
..LN8297:
	.loc    1  85  is_stmt 1
        movq      %rdi, 384(%rsp)                               #85.5
..LN8298:
	.loc    1  82  is_stmt 1
        lea       (%r10,%r13,8), %r13                           #82.15
..LN8299:
	.loc    1  85  is_stmt 1
        movl      %eax, 344(%rsp)                               #85.5
..LN8300:
	.loc    1  80  is_stmt 1
        lea       (%r10,%rcx,8), %r14                           #80.15
..LN8301:
	.loc    1  85  is_stmt 1
        movq      %rdx, 3536(%rsp)                              #85.5
..LN8302:
	.loc    1  76  is_stmt 1
        lea       (%r9,%rcx,8), %r15                            #76.15
..LN8303:
                                # LOE rbx r12 r13 r14 r15
..B15.7:                        # Preds ..B15.9 ..B15.6
..L728:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN8304:
	.loc    1  84  is_stmt 1
        lea       24(%rsp), %rdi                                #84.12
..LN8305:
	.loc    1  76  is_stmt 1
        movq      (%r15,%r12,8), %rax                           #76.15
..LN8306:
	.loc    1  84  is_stmt 1
        lea       184(%rsp), %rsi                               #84.12
..LN8307:
	.loc    1  83  is_stmt 1
        movq      8(%r13,%r12,8), %rdx                          #83.15
..LN8308:
	.loc    1  76  is_stmt 1
        movq      %rax, (%rdi)                                  #76.5
..LN8309:
	.loc    1  77  is_stmt 1
        movq      8(%r15,%r12,8), %rcx                          #77.15
..LN8310:
	.loc    1  78  is_stmt 1
        movq      16(%rbx,%r12,8), %r8                          #78.15
..LN8311:
	.loc    1  79  is_stmt 1
        movq      8(%rbx,%r12,8), %r9                           #79.15
..LN8312:
	.loc    1  80  is_stmt 1
        movq      (%r14,%r12,8), %r10                           #80.15
..LN8313:
	.loc    1  81  is_stmt 1
        movq      8(%r14,%r12,8), %r11                          #81.15
..LN8314:
	.loc    1  82  is_stmt 1
        movq      16(%r13,%r12,8), %rax                         #82.15
..LN8315:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN8316:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN8317:
	.loc    1  77  is_stmt 1
        movq      %rcx, 8(%rdi)                                 #77.5
..LN8318:
	.loc    1  78  is_stmt 1
        movq      %r8, 16(%rdi)                                 #78.5
..LN8319:
	.loc    1  79  is_stmt 1
        movq      %r9, 24(%rdi)                                 #79.5
..LN8320:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN8321:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN8322:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN8323:
	.loc    1  84  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_2dx2d_order1_.729:
..LN8324:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_2dx2d_order1_.730:
..LN8325:
                                # LOE rbx r12 r13 r14 r15 eax
..B15.8:                        # Preds ..B15.7
..LN8326:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN8327:
        lea       24(%rsp), %rdi                                #85.20
..LN8328:
        lea       184(%rsp), %rsi                               #85.20
..___tag_value_create_xgrid_2dx2d_order1_.731:
..LN8329:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_2dx2d_order1_.732:
..LN8330:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B15.9:                        # Preds ..B15.8
..LN8331:
        movq      392(%rsp), %rax                               #85.5
..LN8332:
        vmovsd    %xmm0, (%rax,%r12,8)                          #85.5
..LN8333:
	.loc    1  75  is_stmt 1
        incq      %r12                                          #75.40
..LN8334:
        cmpq      384(%rsp), %r12                               #75.36
..LN8335:
        jl        ..B15.7       # Prob 82%                      #75.36
..LN8336:
                                # LOE rbx r12 r13 r14 r15
..B15.10:                       # Preds ..B15.9
..LN8337:
        movl      360(%rsp), %r8d                               #
..LN8338:
        incl      %r8d                                          #75.18
..LN8339:
        movq      368(%rsp), %rsi                               #
..LN8340:
        movq      384(%rsp), %rdi                               #
..LN8341:
        addq      %rdi, %rsi                                    #75.18
..LN8342:
        movl      376(%rsp), %ecx                               #
..LN8343:
        movl      344(%rsp), %eax                               #
..LN8344:
        lea       1(%rcx,%rax), %ecx                            #75.18
..LN8345:
        movq      3536(%rsp), %rdx                              #
..LN8346:
        movq      3120(%rsp), %r9                               #
..LN8347:
        movq      2712(%rsp), %r10                              #
..LN8348:
        cmpl      352(%rsp), %r8d                               #75.14
..LN8349:
        jl        ..B15.5       # Prob 82%                      #75.14
..LN8350:
                                # LOE rdx rsi rdi r9 r10 eax edx ecx r8d dl dh
..B15.11:                       # Preds ..B15.102 ..B15.10      # Infreq
..LN8351:
        movq      4008(%rsp), %r12                              #
..LN8352:
        movl      3544(%rsp), %ebx                              #
..LN8353:
        movq      8(%rsp), %r14                                 #
..LN8354:
        movq      (%rsp), %r15                                  #
..LN8355:
                                # LOE rdx r12 r14 r15 ebx
..B15.12:                       # Preds ..B15.11 ..B15.3        # Infreq
..LN8356:
	.loc    1  71  is_stmt 1
        movl      (%r14), %r9d                                  #71.9
..LN8357:
	.loc    1  75  is_stmt 1
        xorl      %esi, %esi                                    #75.7
..LN8358:
	.loc    1  72  is_stmt 1
        movl      (%r15), %r10d                                 #72.9
..LN8359:
	.loc    1  75  is_stmt 1
        xorl      %ecx, %ecx                                    #75.9
..LN8360:
        movslq    %r9d, %r8                                     #75.18
..LN8361:
        testl     %r10d, %r10d                                  #75.14
..LN8362:
        jle       ..B15.21      # Prob 10%                      #75.14
..LN8363:
                                # LOE rdx rcx r8 r12 ebx esi r9d r10d
..B15.13:                       # Preds ..B15.12                # Infreq
..LN8364:
        movl      %r10d, 8(%rsp)                                #75.9
..LN8365:
        xorl      %eax, %eax                                    #75.9
..LN8366:
        movq      %rdx, 3536(%rsp)                              #75.9
..LN8367:
        movq      %r12, 4008(%rsp)                              #75.9
..LN8368:
        movl      %ebx, 3544(%rsp)                              #75.9
..LN8369:
        movq      24(%rbp), %r10                                #75.9
..LN8370:
        movq      16(%rbp), %rdx                                #75.9
..LN8371:
        movq      4248(%rsp), %rdi                              #75.9
..LN8372:
                                # LOE rdx rcx rdi r8 r10 eax esi r9d
..B15.14:                       # Preds ..B15.19 ..B15.100 ..B15.13 # Infreq
..L733:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN8373:
        xorl      %r13d, %r13d                                  #75.27
..LN8374:
        testl     %r9d, %r9d                                    #75.36
..LN8375:
        jle       ..B15.100     # Prob 10%                      #75.36
..LN8376:
                                # LOE rdx rcx rdi r8 r10 r13 eax esi r9d
..B15.15:                       # Preds ..B15.14                # Infreq
..LN8377:
	.loc    1  85  is_stmt 1
        movq      %rcx, 672(%rsp)                               #85.5
..LN8378:
	.loc    1  78  is_stmt 1
        lea       (%r9,%rax), %ebx                              #78.25
..LN8379:
        movslq    %ebx, %rbx                                    #78.15
..LN8380:
	.loc    1  85  is_stmt 1
        lea       (%rdi,%rcx,8), %r11                           #85.5
..LN8381:
	.loc    1  76  is_stmt 1
        movslq    %eax, %rax                                    #76.15
..LN8382:
	.loc    1  85  is_stmt 1
        movq      %r11, 696(%rsp)                               #85.5
..LN8383:
        movl      %eax, 680(%rsp)                               #85.5
..LN8384:
        movl      %esi, 664(%rsp)                               #85.5
..LN8385:
	.loc    1  78  is_stmt 1
        lea       (%rdx,%rbx,8), %r12                           #78.15
..LN8386:
	.loc    1  85  is_stmt 1
        movq      %r8, 688(%rsp)                                #85.5
..LN8387:
	.loc    1  82  is_stmt 1
        lea       (%r10,%rbx,8), %rbx                           #82.15
..LN8388:
	.loc    1  85  is_stmt 1
        movl      %r9d, (%rsp)                                  #85.5
..LN8389:
	.loc    1  80  is_stmt 1
        lea       (%r10,%rax,8), %r14                           #80.15
..LN8390:
	.loc    1  76  is_stmt 1
        lea       (%rdx,%rax,8), %r15                           #76.15
..LN8391:
                                # LOE rbx r12 r13 r14 r15
..B15.16:                       # Preds ..B15.18 ..B15.15       # Infreq
..L734:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN8392:
	.loc    1  84  is_stmt 1
        lea       344(%rsp), %rdi                               #84.12
..LN8393:
	.loc    1  76  is_stmt 1
        movq      (%r15,%r13,8), %rax                           #76.15
..LN8394:
	.loc    1  84  is_stmt 1
        lea       504(%rsp), %rsi                               #84.12
..LN8395:
	.loc    1  83  is_stmt 1
        movq      8(%rbx,%r13,8), %rdx                          #83.15
..LN8396:
	.loc    1  76  is_stmt 1
        movq      %rax, -160(%rsi)                              #76.5
..LN8397:
	.loc    1  77  is_stmt 1
        movq      8(%r15,%r13,8), %rcx                          #77.15
..LN8398:
	.loc    1  78  is_stmt 1
        movq      16(%r12,%r13,8), %r8                          #78.15
..LN8399:
	.loc    1  79  is_stmt 1
        movq      8(%r12,%r13,8), %r9                           #79.15
..LN8400:
	.loc    1  80  is_stmt 1
        movq      (%r14,%r13,8), %r10                           #80.15
..LN8401:
	.loc    1  81  is_stmt 1
        movq      8(%r14,%r13,8), %r11                          #81.15
..LN8402:
	.loc    1  82  is_stmt 1
        movq      16(%rbx,%r13,8), %rax                         #82.15
..LN8403:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN8404:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN8405:
	.loc    1  77  is_stmt 1
        movq      %rcx, -152(%rsi)                              #77.5
..LN8406:
	.loc    1  78  is_stmt 1
        movq      %r8, -144(%rsi)                               #78.5
..LN8407:
	.loc    1  79  is_stmt 1
        movq      %r9, -136(%rsi)                               #79.5
..LN8408:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN8409:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN8410:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN8411:
	.loc    1  84  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_2dx2d_order1_.735:
..LN8412:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_2dx2d_order1_.736:
..LN8413:
                                # LOE rbx r12 r13 r14 r15 eax
..B15.17:                       # Preds ..B15.16                # Infreq
..LN8414:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN8415:
        lea       344(%rsp), %rdi                               #85.20
..LN8416:
        lea       504(%rsp), %rsi                               #85.20
..___tag_value_create_xgrid_2dx2d_order1_.737:
..LN8417:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_2dx2d_order1_.738:
..LN8418:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B15.18:                       # Preds ..B15.17                # Infreq
..LN8419:
        movq      696(%rsp), %rax                               #85.5
..LN8420:
        vmovsd    %xmm0, (%rax,%r13,8)                          #85.5
..LN8421:
	.loc    1  75  is_stmt 1
        incq      %r13                                          #75.40
..LN8422:
        cmpq      688(%rsp), %r13                               #75.36
..LN8423:
        jl        ..B15.16      # Prob 82%                      #75.36
..LN8424:
                                # LOE rbx r12 r13 r14 r15
..B15.19:                       # Preds ..B15.18                # Infreq
..LN8425:
        movl      664(%rsp), %esi                               #
..LN8426:
        incl      %esi                                          #75.18
..LN8427:
        movq      672(%rsp), %rcx                               #
..LN8428:
        movq      688(%rsp), %r8                                #
..LN8429:
        addq      %r8, %rcx                                     #75.18
..LN8430:
        movl      680(%rsp), %eax                               #
..LN8431:
        movl      (%rsp), %r9d                                  #
..LN8432:
        lea       1(%rax,%r9), %eax                             #75.18
..LN8433:
        movq      4248(%rsp), %rdi                              #
..LN8434:
        movq      24(%rbp), %r10                                #
..LN8435:
        movq      16(%rbp), %rdx                                #
..LN8436:
        cmpl      8(%rsp), %esi                                 #75.14
..LN8437:
        jl        ..B15.14      # Prob 82%                      #75.14
..LN8438:
                                # LOE rdx rcx rdi r8 r10 eax esi r9d
..B15.20:                       # Preds ..B15.100 ..B15.19      # Infreq
..LN8439:
        movq      3536(%rsp), %rdx                              #
..LN8440:
        movq      4008(%rsp), %r12                              #
..LN8441:
        movl      3544(%rsp), %ebx                              #
..LN8442:
                                # LOE rdx r12 ebx
..B15.21:                       # Preds ..B15.20 ..B15.12       # Infreq
..LN8443:
	.loc    1  572  is_stmt 1
        xorl      %ecx, %ecx                                    #572.3
..LN8444:
        xorl      %eax, %eax                                    #572.31
..LN8445:
        cmpl      $0, 3128(%rsp)                                #572.16
..LN8446:
        jle       ..B15.95      # Prob 9%                       #572.16
..LN8447:
                                # LOE rax rdx r12 ecx ebx
..B15.22:                       # Preds ..B15.21                # Infreq
..LN8448:
	.loc    1  565  is_stmt 1
        movl      4256(%rsp), %r10d                             #565.16
..LN8449:
	.loc    1  564  is_stmt 1
        lea       1(%rbx), %r14d                                #564.16
..LN8450:
	.loc    1  577  is_stmt 1
        movq      2712(%rsp), %r13                              #577.39
..LN8451:
        movq      3120(%rsp), %r11                              #577.16
..LN8452:
	.loc    1  593  is_stmt 1
        movq      4312(%rsp), %r15                              #593.42
..LN8453:
	.loc    1  565  is_stmt 1
        lea       1(%r10), %r10d                                #565.16
..LN8454:
	.loc    1  593  is_stmt 1
        movq      24(%rbp), %r9                                 #593.42
..LN8455:
	.loc    1  577  is_stmt 1
        lea       (%r13,%r12,8), %r13                           #577.39
..LN8456:
	.loc    1  593  is_stmt 1
        movq      16(%rbp), %rsi                                #593.18
..LN8457:
	.loc    1  577  is_stmt 1
        lea       (%r11,%r12,8), %r11                           #577.16
..LN8458:
	.loc    1  572  is_stmt 1
        movslq    %r14d, %r14                                   #572.31
..LN8459:
	.loc    1  586  is_stmt 1
        movslq    %r10d, %r10                                   #586.33
..LN8460:
	.loc    1  593  is_stmt 1
        lea       (%r9,%r15,8), %r9                             #593.42
..LN8461:
	.loc    1  536  is_stmt 1
        movq      32(%rbp), %r8                                 #536.1
..LN8462:
	.loc    1  593  is_stmt 1
        lea       (%rsi,%r15,8), %r15                           #593.18
..LN8463:
	.loc    1  572  is_stmt 1
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm3             #572.76
..LN8464:
        xorl      %esi, %esi                                    #572.31
..LN8465:
	.loc    1  611  is_stmt 1
        vmovsd    .L_2il0floatpacket.2(%rip), %xmm2             #611.23
..LN8466:
	.loc    1  1127  is_stmt 1
        vmovsd    .L_2il0floatpacket.10(%rip), %xmm1            #1127.23
..LN8467:
	.loc    1  888  is_stmt 1
        vmovsd    .L_2il0floatpacket.11(%rip), %xmm0            #888.27
..LN8468:
	.loc    1  572  is_stmt 1
        movq      %r15, 4224(%rsp)                              #572.31
..LN8469:
        movq      %r9, 4264(%rsp)                               #572.31
..LN8470:
        movq      %r10, 4272(%rsp)                              #572.31
..LN8471:
        movq      %r11, 3968(%rsp)                              #572.31
..LN8472:
        movq      %r13, 3976(%rsp)                              #572.31
..LN8473:
        movq      %r14, 3984(%rsp)                              #572.31
..LN8474:
                                # LOE rax rdx rsi r8 r12 ecx ebx
..B15.23:                       # Preds ..B15.27 ..B15.98 ..B15.22 # Infreq
..L739:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN8475:
        xorl      %r14d, %r14d                                  #572.27
..LN8476:
        testl     %ebx, %ebx                                    #572.40
..LN8477:
        jle       ..B15.98      # Prob 10%                      #572.40
..LN8478:
                                # LOE rax rdx rsi r8 r12 r14 ecx ebx
..B15.24:                       # Preds ..B15.23                # Infreq
..LN8479:
	.loc    1  575  is_stmt 1
        movq      2712(%rsp), %r11                              #575.39
..LN8480:
	.loc    1  610  is_stmt 1
        lea       (%rdx,%rax,8), %rdi                           #610.13
..LN8481:
	.loc    1  575  is_stmt 1
        movq      3120(%rsp), %r10                              #575.16
..LN8482:
	.loc    1  572  is_stmt 1
        lea       (%r8,%rax,8), %r13                            #572.55
..LN8483:
	.loc    1  577  is_stmt 1
        movq      3976(%rsp), %r9                               #577.39
..LN8484:
        movq      3968(%rsp), %r15                              #577.16
..LN8485:
	.loc    1  575  is_stmt 1
        lea       (%r11,%rsi,8), %r11                           #575.39
..LN8486:
	.loc    1  577  is_stmt 1
        movq      %r11, 4160(%rsp)                              #577.16
..LN8487:
	.loc    1  575  is_stmt 1
        lea       (%r10,%rsi,8), %r10                           #575.16
..LN8488:
	.loc    1  577  is_stmt 1
        movq      %r10, 4168(%rsp)                              #577.16
..LN8489:
        lea       (%r9,%rsi,8), %r9                             #577.39
..LN8490:
        movq      %r9, 4176(%rsp)                               #577.16
..LN8491:
        lea       (%r15,%rsi,8), %r15                           #577.16
..LN8492:
        movq      %rdi, 3952(%rsp)                              #577.16
..LN8493:
        movq      %rsi, 3960(%rsp)                              #577.16
..LN8494:
        movq      %rax, 3992(%rsp)                              #577.16
..LN8495:
        movl      %ecx, 4000(%rsp)                              #577.16
..LN8496:
        movq      %rdx, 3536(%rsp)                              #577.16
..LN8497:
        movl      %ebx, 3544(%rsp)                              #577.16
..LN8498:
                                # LOE r12 r13 r14 r15
..B15.25:                       # Preds ..B15.26 ..B15.24       # Infreq
..L740:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN8499:
	.loc    1  572  is_stmt 1
        vmovsd    (%r13,%r14,8), %xmm0                          #572.55
..LN8500:
        vcomisd   .L_2il0floatpacket.1(%rip), %xmm0             #572.76
..LN8501:
        ja        ..B15.28      # Prob 22%                      #572.76
..LN8502:
                                # LOE r12 r13 r14 r15
..B15.26:                       # Preds ..B15.85 ..B15.93 ..B15.34 ..B15.25 # Infreq
..LN8503:
        incq      %r14                                          #572.27
..LN8504:
        cmpq      %r12, %r14                                    #572.27
..LN8505:
        jb        ..B15.25      # Prob 82%                      #572.27
..LN8506:
                                # LOE r12 r13 r14 r15
..B15.27:                       # Preds ..B15.26                # Infreq
..LN8507:
        movq      3960(%rsp), %rsi                              #
..LN8508:
        movl      4000(%rsp), %ecx                              #
..LN8509:
        incl      %ecx                                          #572.3
..LN8510:
        movq      3992(%rsp), %rax                              #
..LN8511:
        addq      3984(%rsp), %rsi                              #572.3
..LN8512:
        addq      %r12, %rax                                    #572.3
..LN8513:
        movq      3536(%rsp), %rdx                              #
..LN8514:
        movl      3544(%rsp), %ebx                              #
..LN8515:
        movq      32(%rbp), %r8                                 #
..LN8516:
        cmpl      3128(%rsp), %ecx                              #572.3
..LN8517:
        jb        ..B15.23      # Prob 82%                      #572.3
..LN8518:
        jmp       ..B15.95      # Prob 100%                     #572.3
..LN8519:
                                # LOE rax rdx rsi r8 r12 edx ecx ebx dl dh
..B15.28:                       # Preds ..B15.25                # Infreq
..LN8520:
	.loc    1  575  is_stmt 1
        movq      4168(%rsp), %rcx                              #575.16
..LN8521:
	.loc    1  579  is_stmt 1
        movl      $4, %edi                                      #579.18
..LN8522:
	.loc    1  575  is_stmt 1
        movq      4160(%rsp), %r8                               #575.39
..LN8523:
	.loc    1  579  is_stmt 1
        lea       1088(%rsp), %rsi                              #579.18
..LN8524:
	.loc    1  577  is_stmt 1
        movq      16(%r15,%r14,8), %r10                         #577.16
..LN8525:
	.loc    1  575  is_stmt 1
        movq      (%rcx,%r14,8), %rax                           #575.16
..LN8526:
        movq      %rax, -416(%rsi)                              #575.5
..LN8527:
	.loc    1  577  is_stmt 1
        movq      3088(%rsi), %rax                              #577.39
..LN8528:
	.loc    1  575  is_stmt 1
        movq      (%r8,%r14,8), %rdx                            #575.39
..LN8529:
        movq      %rdx, (%rsi)                                  #575.28
..LN8530:
	.loc    1  577  is_stmt 1
        movq      16(%rax,%r14,8), %r11                         #577.39
..LN8531:
        movq      %r11, 16(%rsi)                                #577.28
..LN8532:
	.loc    1  576  is_stmt 1
        movq      8(%rcx,%r14,8), %rbx                          #576.16
..LN8533:
        movq      8(%r8,%r14,8), %r9                            #576.39
..LN8534:
	.loc    1  578  is_stmt 1
        movq      8(%r15,%r14,8), %r11                          #578.16
..LN8535:
        movq      8(%rax,%r14,8), %rdx                          #578.39
..LN8536:
	.loc    1  576  is_stmt 1
        movq      %rbx, -408(%rsi)                              #576.5
..LN8537:
        movq      %r9, 8(%rsi)                                  #576.28
..LN8538:
	.loc    1  577  is_stmt 1
        movq      %r10, -400(%rsi)                              #577.5
..LN8539:
	.loc    1  578  is_stmt 1
        movq      %r11, -392(%rsi)                              #578.5
..LN8540:
        movq      %rdx, 24(%rsi)                                #578.28
..LN8541:
	.loc    1  579  is_stmt 1
        vzeroupper                                              #579.18
..___tag_value_create_xgrid_2dx2d_order1_.741:
..LN8542:
#       minval_double(int, const double *)
        call      minval_double                                 #579.18
..___tag_value_create_xgrid_2dx2d_order1_.742:
..LN8543:
                                # LOE r12 r13 r14 r15 xmm0
..B15.112:                      # Preds ..B15.28                # Infreq
..LN8544:
        vmovsd    %xmm0, 4304(%rsp)                             #579.18
..LN8545:
                                # LOE r12 r13 r14 r15
..B15.29:                       # Preds ..B15.112               # Infreq
..LN8546:
	.loc    1  580  is_stmt 1
        movl      $4, %edi                                      #580.18
..LN8547:
        lea       1088(%rsp), %rsi                              #580.18
..___tag_value_create_xgrid_2dx2d_order1_.743:
..LN8548:
#       maxval_double(int, const double *)
        call      maxval_double                                 #580.18
..___tag_value_create_xgrid_2dx2d_order1_.744:
..LN8549:
                                # LOE r12 r13 r14 r15 xmm0
..B15.113:                      # Preds ..B15.29                # Infreq
..LN8550:
        vmovsd    %xmm0, 4320(%rsp)                             #580.18
..LN8551:
                                # LOE r12 r13 r14 r15
..B15.30:                       # Preds ..B15.113               # Infreq
..LN8552:
	.loc    1  581  is_stmt 1
        lea       672(%rsp), %rdi                               #581.13
..LN8553:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #581.13
..LN8554:
        lea       1088(%rsp), %rsi                              #581.13
..LN8555:
        movl      $4, %edx                                      #581.13
..___tag_value_create_xgrid_2dx2d_order1_.745:
..LN8556:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #581.13
..___tag_value_create_xgrid_2dx2d_order1_.746:
..LN8557:
                                # LOE r12 r13 r14 r15 eax
..B15.114:                      # Preds ..B15.30                # Infreq
..LN8558:
        movl      %eax, %ebx                                    #581.13
..LN8559:
                                # LOE r12 r13 r14 r15 ebx
..B15.31:                       # Preds ..B15.114               # Infreq
..LN8560:
	.loc    1  582  is_stmt 1
        movl      %ebx, %edi                                    #582.18
..LN8561:
        lea       672(%rsp), %rsi                               #582.18
..___tag_value_create_xgrid_2dx2d_order1_.747:
..LN8562:
#       minval_double(int, const double *)
        call      minval_double                                 #582.18
..___tag_value_create_xgrid_2dx2d_order1_.748:
..LN8563:
                                # LOE r12 r13 r14 r15 ebx xmm0
..B15.115:                      # Preds ..B15.31                # Infreq
..LN8564:
        vmovsd    %xmm0, 4184(%rsp)                             #582.18
..LN8565:
                                # LOE r12 r13 r14 r15 ebx
..B15.32:                       # Preds ..B15.115               # Infreq
..LN8566:
	.loc    1  583  is_stmt 1
        movl      %ebx, %edi                                    #583.18
..LN8567:
        lea       672(%rsp), %rsi                               #583.18
..___tag_value_create_xgrid_2dx2d_order1_.749:
..LN8568:
#       maxval_double(int, const double *)
        call      maxval_double                                 #583.18
..___tag_value_create_xgrid_2dx2d_order1_.750:
..LN8569:
                                # LOE r12 r13 r14 r15 ebx xmm0
..B15.116:                      # Preds ..B15.32                # Infreq
..LN8570:
        vmovsd    %xmm0, 4192(%rsp)                             #583.18
..LN8571:
                                # LOE r12 r13 r14 r15 ebx
..B15.33:                       # Preds ..B15.116               # Infreq
..LN8572:
	.loc    1  584  is_stmt 1
        movl      %ebx, %edi                                    #584.18
..LN8573:
        lea       672(%rsp), %rsi                               #584.18
..___tag_value_create_xgrid_2dx2d_order1_.751:
..LN8574:
#       avgval_double(int, const double *)
        call      avgval_double                                 #584.18
..___tag_value_create_xgrid_2dx2d_order1_.752:
..LN8575:
                                # LOE r12 r13 r14 r15 ebx xmm0
..B15.34:                       # Preds ..B15.33                # Infreq
..LN8576:
	.loc    1  586  is_stmt 1
        xorl      %ecx, %ecx                                    #586.33
..LN8577:
        xorl      %edx, %edx                                    #586.5
..LN8578:
        xorl      %eax, %eax                                    #586.33
..LN8579:
        cmpl      $0, 4240(%rsp)                                #586.18
..LN8580:
        jle       ..B15.26      # Prob 9%                       #586.18
..LN8581:
                                # LOE rax rcx r12 r13 r14 r15 edx ebx xmm0
..B15.35:                       # Preds ..B15.34                # Infreq
..LN8582:
	.loc    1  862  is_stmt 1
        movl      %ebx, %esi                                    #862.3
..LN8583:
        andl      $-4, %esi                                     #862.3
..LN8584:
	.loc    1  861  is_stmt 1
        movslq    %ebx, %r8                                     #861.3
..LN8585:
	.loc    1  862  is_stmt 1
        movslq    %esi, %rsi                                    #862.3
..LN8586:
        movq      %rsi, 4024(%rsp)                              #862.3
..LN8587:
        movq      %r8, 4056(%rsp)                               #862.3
..LN8588:
        vmovsd    %xmm0, 4200(%rsp)                             #862.3
..LN8589:
        movl      %ebx, 4048(%rsp)                              #862.3
..LN8590:
        movq      %r15, 4016(%rsp)                              #862.3
..LN8591:
        movq      %r13, 4032(%rsp)                              #862.3
..LN8592:
        movq      %r14, 4040(%rsp)                              #862.3
..LN8593:
        movq      %r12, 4008(%rsp)                              #862.3
..LN8594:
        movq      4264(%rsp), %rsi                              #862.3
..LN8595:
        movq      4248(%rsp), %r9                               #862.3
..LN8596:
        movl      4256(%rsp), %r10d                             #862.3
..LN8597:
        movq      24(%rbp), %rdi                                #862.3
..LN8598:
        movq      16(%rbp), %r8                                 #862.3
..LN8599:
                                # LOE rax rcx rsi rdi r8 r9 edx r10d
..B15.36:                       # Preds ..B15.84 ..B15.92 ..B15.35 # Infreq
..L753:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN8600:
	.loc    1  586  is_stmt 1
        xorl      %r12d, %r12d                                  #586.29
..LN8601:
        testl     %r10d, %r10d                                  #586.42
..LN8602:
        jle       ..B15.92      # Prob 10%                      #586.42
..LN8603:
                                # LOE rax rcx rsi rdi r8 r9 r12 edx r10d
..B15.37:                       # Preds ..B15.36                # Infreq
..LN8604:
	.loc    1  593  is_stmt 1
        movq      4224(%rsp), %r11                              #593.18
..LN8605:
	.loc    1  591  is_stmt 1
        lea       (%rdi,%rcx,8), %rbx                           #591.42
..LN8606:
	.loc    1  610  is_stmt 1
        movq      %rax, 4288(%rsp)                              #610.13
..LN8607:
	.loc    1  591  is_stmt 1
        lea       (%r8,%rcx,8), %r14                            #591.18
..LN8608:
	.loc    1  610  is_stmt 1
        movq      %rcx, 4280(%rsp)                              #610.13
..LN8609:
	.loc    1  593  is_stmt 1
        lea       (%rsi,%rcx,8), %r13                           #593.42
..LN8610:
	.loc    1  610  is_stmt 1
        movl      %edx, 4296(%rsp)                              #610.13
..LN8611:
	.loc    1  593  is_stmt 1
        lea       (%r11,%rcx,8), %r15                           #593.18
..LN8612:
	.loc    1  610  is_stmt 1
        movq      %rsi, 4264(%rsp)                              #610.13
..LN8613:
        lea       (%r9,%rax,8), %r11                            #610.13
..LN8614:
        movq      %r11, 4232(%rsp)                              #610.13
..LN8615:
                                # LOE rbx r12 r13 r14 r15
..B15.38:                       # Preds ..B15.83 ..B15.37       # Infreq
..L754:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN8616:
	.loc    1  596  is_stmt 1
        lea       1888(%rsp), %rsi                              #596.21
..LN8617:
	.loc    1  591  is_stmt 1
        movq      (%r14,%r12,8), %rax                           #591.18
..LN8618:
	.loc    1  596  is_stmt 1
        movl      $4, %edi                                      #596.21
..LN8619:
	.loc    1  591  is_stmt 1
        movq      %rax, -400(%rsi)                              #591.7
..LN8620:
        movq      (%rbx,%r12,8), %rdx                           #591.42
..LN8621:
	.loc    1  592  is_stmt 1
        movq      8(%rbx,%r12,8), %r8                           #592.42
..LN8622:
        movq      8(%r14,%r12,8), %rcx                          #592.18
..LN8623:
	.loc    1  593  is_stmt 1
        movq      16(%r15,%r12,8), %r9                          #593.18
..LN8624:
	.loc    1  594  is_stmt 1
        movq      8(%r15,%r12,8), %r11                          #594.18
..LN8625:
	.loc    1  593  is_stmt 1
        movq      16(%r13,%r12,8), %r10                         #593.42
..LN8626:
	.loc    1  594  is_stmt 1
        movq      8(%r13,%r12,8), %rax                          #594.42
..LN8627:
	.loc    1  591  is_stmt 1
        movq      %rdx, (%rsi)                                  #591.31
..LN8628:
	.loc    1  592  is_stmt 1
        movq      %rcx, -392(%rsi)                              #592.7
..LN8629:
        movq      %r8, 8(%rsi)                                  #592.31
..LN8630:
	.loc    1  593  is_stmt 1
        movq      %r9, -384(%rsi)                               #593.7
..LN8631:
        movq      %r10, 16(%rsi)                                #593.31
..LN8632:
	.loc    1  594  is_stmt 1
        movq      %r11, -376(%rsi)                              #594.7
..LN8633:
        movq      %rax, 24(%rsi)                                #594.31
..LN8634:
	.loc    1  596  is_stmt 1
        vzeroupper                                              #596.21
..___tag_value_create_xgrid_2dx2d_order1_.755:
..LN8635:
#       minval_double(int, const double *)
        call      minval_double                                 #596.21
..___tag_value_create_xgrid_2dx2d_order1_.756:
..LN8636:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B15.118:                      # Preds ..B15.38                # Infreq
..LN8637:
        vmovsd    %xmm0, 4328(%rsp)                             #596.21
..LN8638:
                                # LOE rbx r12 r13 r14 r15
..B15.39:                       # Preds ..B15.118               # Infreq
..LN8639:
	.loc    1  597  is_stmt 1
        movl      $4, %edi                                      #597.21
..LN8640:
        lea       1888(%rsp), %rsi                              #597.21
..___tag_value_create_xgrid_2dx2d_order1_.757:
..LN8641:
#       maxval_double(int, const double *)
        call      maxval_double                                 #597.21
..___tag_value_create_xgrid_2dx2d_order1_.758:
..LN8642:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B15.119:                      # Preds ..B15.39                # Infreq
..LN8643:
        vmovapd   %xmm0, %xmm1                                  #597.21
..LN8644:
                                # LOE rbx r12 r13 r14 r15 xmm1
..B15.40:                       # Preds ..B15.119               # Infreq
..LN8645:
	.loc    1  598  is_stmt 1
        vmovsd    4328(%rsp), %xmm0                             #598.25
..LN8646:
        vcomisd   4320(%rsp), %xmm0                             #598.25
..LN8647:
        jae       ..B15.83      # Prob 50%                      #598.25
..LN8648:
                                # LOE rbx r12 r13 r14 r15 xmm1
..B15.41:                       # Preds ..B15.40                # Infreq
..LN8649:
        vmovsd    4304(%rsp), %xmm0                             #598.54
..LN8650:
        vcomisd   %xmm1, %xmm0                                  #598.54
..LN8651:
        jae       ..B15.83      # Prob 78%                      #598.54
..LN8652:
                                # LOE rbx r12 r13 r14 r15
..B15.42:                       # Preds ..B15.41                # Infreq
..LN8653:
	.loc    1  599  is_stmt 1
        lea       1488(%rsp), %rdi                              #599.15
..LN8654:
        vmovsd    2712(%rdi), %xmm0                             #599.15
..LN8655:
        lea       1888(%rsp), %rsi                              #599.15
..LN8656:
        movl      $4, %edx                                      #599.15
..___tag_value_create_xgrid_2dx2d_order1_.759:
..LN8657:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #599.15
..___tag_value_create_xgrid_2dx2d_order1_.760:
..LN8658:
                                # LOE rbx r12 r13 r14 r15 eax
..B15.120:                      # Preds ..B15.42                # Infreq
..LN8659:
        movl      %eax, 4216(%rsp)                              #599.15
..LN8660:
                                # LOE rax rbx r12 r13 r14 r15 eax al ah
..B15.43:                       # Preds ..B15.120               # Infreq
..LN8661:
	.loc    1  600  is_stmt 1
        lea       1488(%rsp), %rsi                              #600.21
..LN8662:
        movl      %eax, %edi                                    #600.21
..___tag_value_create_xgrid_2dx2d_order1_.761:
..LN8663:
#       minval_double(int, const double *)
        call      minval_double                                 #600.21
..___tag_value_create_xgrid_2dx2d_order1_.762:
..LN8664:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B15.121:                      # Preds ..B15.43                # Infreq
..LN8665:
        vmovsd    %xmm0, 4208(%rsp)                             #600.21
..LN8666:
                                # LOE rbx r12 r13 r14 r15
..B15.44:                       # Preds ..B15.121               # Infreq
..LN8667:
	.loc    1  601  is_stmt 1
        lea       1488(%rsp), %rsi                              #601.21
..LN8668:
        movl      2728(%rsi), %edi                              #601.21
..___tag_value_create_xgrid_2dx2d_order1_.763:
..LN8669:
#       maxval_double(int, const double *)
        call      maxval_double                                 #601.21
..___tag_value_create_xgrid_2dx2d_order1_.764:
..LN8670:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B15.122:                      # Preds ..B15.44                # Infreq
..LN8671:
        vmovapd   %xmm0, %xmm1                                  #601.21
..LN8672:
                                # LOE rbx r12 r13 r14 r15 xmm1
..B15.45:                       # Preds ..B15.122               # Infreq
..LN8673:
	.loc    1  606  is_stmt 1
        vmovsd    4208(%rsp), %xmm0                             #606.25
..LN8674:
        vcomisd   4192(%rsp), %xmm0                             #606.25
..LN8675:
        jae       ..B15.83      # Prob 50%                      #606.25
..LN8676:
                                # LOE rbx r12 r13 r14 r15 xmm1
..B15.46:                       # Preds ..B15.45                # Infreq
..LN8677:
        vmovsd    4184(%rsp), %xmm0                             #606.54
..LN8678:
        vcomisd   %xmm1, %xmm0                                  #606.54
..LN8679:
        jae       ..B15.83      # Prob 78%                      #606.54
..LN8680:
                                # LOE rbx r12 r13 r14 r15
..B15.47:                       # Preds ..B15.46                # Infreq
..LN8681:
	.loc    1  861  is_stmt 1
        movq      4056(%rsp), %rdx                              #861.3
..LN8682:
	.loc    1  862  is_stmt 1
        cmpl      $0, 4048(%rsp)                                #862.16
..LN8683:
        jle       ..B15.56      # Prob 50%                      #862.16
..LN8684:
                                # LOE rdx rbx r12 r13 r14 r15 edx dl dh
..B15.48:                       # Preds ..B15.47                # Infreq
..LN8685:
        cmpq      $4, 4056(%rsp)                                #862.3
..LN8686:
        jl        ..B15.91      # Prob 10%                      #862.3
..LN8687:
                                # LOE rdx rbx r12 r13 r14 r15 edx dl dh
..B15.49:                       # Preds ..B15.48                # Infreq
..LN8688:
        movq      4024(%rsp), %rax                              #862.3
..LN8689:
        xorl      %ecx, %ecx                                    #862.3
..LN8690:
        movq      %rax, %rsi                                    #862.3
..LN8691:
                                # LOE rax rdx rcx rbx rsi r12 r13 r14 r15
..B15.50:                       # Preds ..B15.50 ..B15.49       # Infreq
..L765:         # optimization report
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 4.070312
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # MAIN VECTOR TYPE: 64-bits floating point
..LN8692:
	.loc    1  608  is_stmt 1
        vmovupd   672(%rsp,%rcx,8), %ymm0                       #608.34
..LN8693:
        vmovupd   1088(%rsp,%rcx,8), %ymm1                      #608.41
..LN8694:
	.loc    1  863  is_stmt 1
        vmovupd   %ymm0, 3136(%rsp,%rcx,8)                      #863.5
..LN8695:
	.loc    1  864  is_stmt 1
        vmovupd   %ymm1, 3552(%rsp,%rcx,8)                      #864.5
..LN8696:
	.loc    1  862  is_stmt 1
        addq      $4, %rcx                                      #862.3
..LN8697:
        cmpq      %rsi, %rcx                                    #862.3
..LN8698:
        jb        ..B15.50      # Prob 98%                      #862.3
..LN8699:
                                # LOE rax rdx rcx rbx rsi r12 r13 r14 r15
..B15.51:                       # Preds ..B15.50                # Infreq
..LN8700:
        movq      %rsi, 4024(%rsp)                              #
..LN8701:
                                # LOE rax rdx rbx r12 r13 r14 r15
..B15.52:                       # Preds ..B15.51 ..B15.91       # Infreq
..LN8702:
        cmpq      4056(%rsp), %rax                              #862.3
..LN8703:
        jae       ..B15.56      # Prob 9%                       #862.3
..LN8704:
                                # LOE rax rdx rbx r12 r13 r14 r15
..B15.53:                       # Preds ..B15.52                # Infreq
..LN8705:
        movq      4056(%rsp), %rdi                              #
..LN8706:
                                # LOE rax rdx rbx rdi r12 r13 r14 r15
..B15.54:                       # Preds ..B15.54 ..B15.53       # Infreq
..L766:         # optimization report
                # LOOP WAS UNROLLED BY 1
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 4.070312
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
..LN8707:
	.loc    1  608  is_stmt 1
        movq      672(%rsp,%rax,8), %rcx                        #608.34
..LN8708:
        movq      1088(%rsp,%rax,8), %rsi                       #608.41
..LN8709:
	.loc    1  863  is_stmt 1
        movq      %rcx, 3136(%rsp,%rax,8)                       #863.5
..LN8710:
	.loc    1  864  is_stmt 1
        movq      %rsi, 3552(%rsp,%rax,8)                       #864.5
..LN8711:
	.loc    1  862  is_stmt 1
        incq      %rax                                          #862.3
..LN8712:
        cmpq      %rdi, %rax                                    #862.3
..LN8713:
        jb        ..B15.54      # Prob 98%                      #862.3
..LN8714:
                                # LOE rax rdx rbx rdi r12 r13 r14 r15
..B15.55:                       # Preds ..B15.54                # Infreq
..LN8715:
        movq      %rdi, 4056(%rsp)                              #
..LN8716:
                                # LOE rdx rbx r12 r13 r14 r15
..B15.56:                       # Preds ..B15.47 ..B15.52 ..B15.55 # Infreq
..LN8717:
	.loc    1  868  is_stmt 1
        movl      4216(%rsp), %eax                              #868.16
..LN8718:
        xorl      %ecx, %ecx                                    #868.3
..LN8719:
        testl     %eax, %eax                                    #868.16
..LN8720:
	.loc    1  866  is_stmt 1
        movslq    %eax, %rax                                    #866.10
..LN8721:
	.loc    1  608  is_stmt 1
        vmovsd    1480(%rsp,%rax,8), %xmm3                      #608.55
..LN8722:
        vmovsd    1880(%rsp,%rax,8), %xmm0                      #608.62
..LN8723:
	.loc    1  868  is_stmt 1
        jle       ..B15.79      # Prob 4%                       #868.16
..LN8724:
                                # LOE rax rdx rcx rbx r12 r13 r14 r15 xmm0 xmm3
..B15.57:                       # Preds ..B15.56                # Infreq
..LN8725:
        movq      %r15, 1080(%rsp)                              #
..LN8726:
        movq      %rcx, %r15                                    #
..LN8727:
        movq      %r13, 1072(%rsp)                              #
..LN8728:
        movq      %r14, 664(%rsp)                               #
..LN8729:
        movq      %rbx, 8(%rsp)                                 #
..LN8730:
        movq      %rdx, %rbx                                    #
..LN8731:
        movq      %r12, (%rsp)                                  #
..LN8732:
        vmovsd    .L_2il0floatpacket.11(%rip), %xmm1            #
..LN8733:
        vmovsd    .L_2il0floatpacket.10(%rip), %xmm2            #
..LN8734:
                                # LOE rax rbx r15 xmm0 xmm1 xmm2 xmm3
..B15.58:                       # Preds ..B15.77 ..B15.57       # Infreq
..L767:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN8735:
	.loc    1  874  is_stmt 1
        xorl      %r12d, %r12d                                  #874.15
..LN8736:
	.loc    1  608  is_stmt 1
        vmovsd    1888(%rsp,%r15,8), %xmm9                      #608.62
..LN8737:
	.loc    1  874  is_stmt 1
        xorl      %r13d, %r13d                                  #874.5
..LN8738:
	.loc    1  871  is_stmt 1
        vmovsd    3128(%rsp,%rbx,8), %xmm14                     #871.12
..LN8739:
	.loc    1  1130  is_stmt 1
        vsubsd    %xmm0, %xmm9, %xmm7                           #1130.27
..LN8740:
        vsubsd    %xmm3, %xmm14, %xmm5                          #1130.18
..LN8741:
	.loc    1  872  is_stmt 1
        vmovsd    3544(%rsp,%rbx,8), %xmm4                      #872.12
..LN8742:
	.loc    1  608  is_stmt 1
        vmovsd    1488(%rsp,%r15,8), %xmm10                     #608.55
..LN8743:
	.loc    1  1130  is_stmt 1
        vsubsd    %xmm0, %xmm4, %xmm11                          #1130.44
..LN8744:
        vmulsd    %xmm7, %xmm5, %xmm8                           #1130.27
..LN8745:
        vsubsd    %xmm10, %xmm3, %xmm6                          #1130.37
..LN8746:
	.loc    1  1131  is_stmt 1
        vfmadd213sd %xmm8, %xmm6, %xmm11                        #1131.21
..LN8747:
        vcmpgesd  %xmm11, %xmm2, %xmm12                         #1131.21
..LN8748:
        vmovd     %xmm12, %r14d                                 #1131.21
..LN8749:
        negl      %r14d                                         #1131.21
..LN8750:
	.loc    1  874  is_stmt 1
        testq     %rbx, %rbx                                    #874.27
..LN8751:
        jle       ..B15.88      # Prob 10%                      #874.27
..LN8752:
                                # LOE rax rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm6 xmm7 xmm9 xmm10 xmm14
..B15.59:                       # Preds ..B15.58                # Infreq
..LN8753:
	.loc    1  886  is_stmt 1
        vmulsd    %xmm9, %xmm3, %xmm5                           #886.25
..LN8754:
	.loc    1  884  is_stmt 1
        vxorpd    .L_2il0floatpacket.8(%rip), %xmm6, %xmm8      #884.13
..LN8755:
	.loc    1  886  is_stmt 1
        vfmsub231sd %xmm0, %xmm10, %xmm5                        #886.2
..LN8756:
        vmovsd    %xmm9, 2704(%rsp)                             #886.2
..LN8757:
        vmovsd    %xmm10, 2296(%rsp)                            #886.2
..LN8758:
        movq      %rax, 2288(%rsp)                              #886.2
..LN8759:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm14
..B15.60:                       # Preds ..B15.66 ..B15.59       # Infreq
..L768:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN8760:
	.loc    1  876  is_stmt 1
        vmovsd    3552(%rsp,%r13,8), %xmm13                     #876.14
..LN8761:
	.loc    1  875  is_stmt 1
        vmovsd    3136(%rsp,%r13,8), %xmm12                     #875.14
..LN8762:
	.loc    1  1130  is_stmt 1
        vsubsd    %xmm0, %xmm13, %xmm9                          #1130.44
..LN8763:
        vsubsd    %xmm3, %xmm12, %xmm10                         #1130.18
..LN8764:
        vmulsd    %xmm9, %xmm6, %xmm11                          #1130.44
..LN8765:
	.loc    1  1131  is_stmt 1
        vfmadd231sd %xmm7, %xmm10, %xmm11                       #1131.21
..LN8766:
        vcomisd   %xmm11, %xmm2                                 #1131.21
..LN8767:
        jb        ..B15.62      # Prob 50%                      #1131.21
..LN8768:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13 xmm14
..B15.61:                       # Preds ..B15.60                # Infreq
..LN8769:
	.loc    1  877  is_stmt 1
        cmpl      $1, %r14d                                     #877.72
..LN8770:
	.loc    1  1131  is_stmt 1
        movl      $1, %r14d                                     #1131.21
..LN8771:
	.loc    1  877  is_stmt 1
        jne       ..B15.63      # Prob 50%                      #877.72
..LN8772:
        jmp       ..B15.65      # Prob 100%                     #877.72
..LN8773:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13 xmm14
..B15.62:                       # Preds ..B15.60                # Infreq
..LN8774:
        testl     %r14d, %r14d                                  #877.72
..LN8775:
	.loc    1  1131  is_stmt 1
        movl      $0, %r14d                                     #1131.21
..LN8776:
	.loc    1  877  is_stmt 1
        je        ..B15.66      # Prob 50%                      #877.72
..LN8777:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13 xmm14
..B15.63:                       # Preds ..B15.61 ..B15.62       # Infreq
..LN8778:
	.loc    1  885  is_stmt 1
        vmulsd    %xmm13, %xmm14, %xmm9                         #885.25
..LN8779:
	.loc    1  881  is_stmt 1
        vsubsd    %xmm4, %xmm13, %xmm11                         #881.13
..LN8780:
	.loc    1  883  is_stmt 1
        vsubsd    %xmm14, %xmm12, %xmm10                        #883.13
..LN8781:
	.loc    1  885  is_stmt 1
        vfmsub213sd %xmm9, %xmm12, %xmm4                        #885.2
..LN8782:
	.loc    1  887  is_stmt 1
        vmulsd    %xmm8, %xmm11, %xmm9                          #887.25
..LN8783:
        vfmsub231sd %xmm10, %xmm7, %xmm9                        #887.2
..LN8784:
	.loc    1  888  is_stmt 1
        vandpd    .L_2il0floatpacket.9(%rip), %xmm9, %xmm14     #888.12
..LN8785:
        vcomisd   %xmm14, %xmm1                                 #888.27
..LN8786:
        ja        ..B15.89      # Prob 5%                       #888.27
..LN8787:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm9 xmm10 xmm11 xmm12 xmm13
..B15.64:                       # Preds ..B15.124 ..B15.63      # Infreq
..LN8788:
	.loc    1  892  is_stmt 1
        vmulsd    %xmm5, %xmm10, %xmm10                         #892.36
..LN8789:
	.loc    1  893  is_stmt 1
        vmulsd    %xmm5, %xmm11, %xmm11                         #893.36
..LN8790:
	.loc    1  892  is_stmt 1
        vfmsub231sd %xmm8, %xmm4, %xmm10                        #892.2
..LN8791:
	.loc    1  893  is_stmt 1
        vfmsub231sd %xmm7, %xmm4, %xmm11                        #893.2
..LN8792:
	.loc    1  892  is_stmt 1
        vdivsd    %xmm9, %xmm10, %xmm14                         #892.41
..LN8793:
	.loc    1  893  is_stmt 1
        vdivsd    %xmm9, %xmm11, %xmm4                          #893.41
..LN8794:
	.loc    1  608  is_stmt 1
        vmovsd    %xmm14, 2304(%rsp,%r12,8)                     #608.76
..LN8795:
        vmovsd    %xmm4, 2720(%rsp,%r12,8)                      #608.83
..LN8796:
	.loc    1  893  is_stmt 1
        incq      %r12                                          #893.10
..LN8797:
	.loc    1  897  is_stmt 1
        testl     %r14d, %r14d                                  #897.10
..LN8798:
        je        ..B15.66      # Prob 50%                      #897.10
..LN8799:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13
..B15.65:                       # Preds ..B15.61 ..B15.64       # Infreq
..LN8800:
	.loc    1  608  is_stmt 1
        vmovsd    %xmm12, 2304(%rsp,%r12,8)                     #608.76
..LN8801:
        vmovsd    %xmm13, 2720(%rsp,%r12,8)                     #608.83
..LN8802:
	.loc    1  899  is_stmt 1
        incq      %r12                                          #899.10
..LN8803:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13
..B15.66:                       # Preds ..B15.64 ..B15.62 ..B15.65 # Infreq
..LN8804:
	.loc    1  874  is_stmt 1
        incq      %r13                                          #874.5
..LN8805:
	.loc    1  901  is_stmt 1
        vmovapd   %xmm12, %xmm14                                #901.7
..LN8806:
	.loc    1  902  is_stmt 1
        vmovapd   %xmm13, %xmm4                                 #902.7
..LN8807:
	.loc    1  874  is_stmt 1
        cmpq      %rbx, %r13                                    #874.5
..LN8808:
        jb        ..B15.60      # Prob 98%                      #874.5
..LN8809:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm14
..B15.67:                       # Preds ..B15.66                # Infreq
..LN8810:
        vmovsd    2704(%rsp), %xmm9                             #
..LN8811:
	.loc    1  905  is_stmt 1
        movq      %r12, %rbx                                    #905.10
..LN8812:
        vmovsd    2296(%rsp), %xmm10                            #
..LN8813:
        movq      2288(%rsp), %rax                              #
..LN8814:
        testq     %r12, %r12                                    #905.10
..LN8815:
        je        ..B15.88      # Prob 20%                      #905.10
..LN8816:
                                # LOE rax rbx r12 r15 eax al ah xmm1 xmm2 xmm9 xmm10 ymm9 ymm10 zmm9 zmm10
..B15.68:                       # Preds ..B15.67                # Infreq
..LN8817:
	.loc    1  906  is_stmt 1
        jle       ..B15.77      # Prob 50%                      #906.18
..LN8818:
                                # LOE rax rbx r12 r15 eax al ah xmm1 xmm2 xmm9 xmm10 ymm9 ymm10 zmm9 zmm10
..B15.69:                       # Preds ..B15.68                # Infreq
..LN8819:
        movslq    %r12d, %r8                                    #906.5
..LN8820:
        cmpq      $4, %r8                                       #906.5
..LN8821:
        jl        ..B15.87      # Prob 10%                      #906.5
..LN8822:
                                # LOE rax rbx r8 r15 eax al ah xmm1 xmm2 xmm9 xmm10 ymm9 ymm10 zmm9 zmm10
..B15.70:                       # Preds ..B15.69                # Infreq
..LN8823:
        movl      %r8d, %edi                                    #906.5
..LN8824:
        xorl      %esi, %esi                                    #906.5
..LN8825:
        andl      $-4, %edi                                     #906.5
..LN8826:
        movslq    %edi, %rdi                                    #906.5
..LN8827:
                                # LOE rax rbx rsi rdi r8 r15 xmm1 xmm2 xmm9 xmm10
..B15.71:                       # Preds ..B15.71 ..B15.70       # Infreq
..L769:         # optimization report
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 4.070312
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # MAIN VECTOR TYPE: 64-bits floating point
..LN8828:
	.loc    1  608  is_stmt 1
        vmovupd   2304(%rsp,%rsi,8), %ymm0                      #608.76
..LN8829:
        vmovupd   2720(%rsp,%rsi,8), %ymm3                      #608.83
..LN8830:
	.loc    1  907  is_stmt 1
        vmovupd   %ymm0, 3136(%rsp,%rsi,8)                      #907.7
..LN8831:
	.loc    1  908  is_stmt 1
        vmovupd   %ymm3, 3552(%rsp,%rsi,8)                      #908.7
..LN8832:
	.loc    1  906  is_stmt 1
        addq      $4, %rsi                                      #906.5
..LN8833:
        cmpq      %rdi, %rsi                                    #906.5
..LN8834:
        jb        ..B15.71      # Prob 98%                      #906.5
..LN8835:
                                # LOE rax rbx rsi rdi r8 r15 xmm1 xmm2 xmm9 xmm10
..B15.73:                       # Preds ..B15.71 ..B15.87       # Infreq
..LN8836:
        cmpq      %r8, %rdi                                     #906.5
..LN8837:
        jae       ..B15.77      # Prob 10%                      #906.5
..LN8838:
                                # LOE rax rbx rdi r8 r15 xmm1 xmm2 xmm9 xmm10
..B15.75:                       # Preds ..B15.73 ..B15.75       # Infreq
..L770:         # optimization report
                # LOOP WAS UNROLLED BY 1
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 4.070312
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
..LN8839:
	.loc    1  608  is_stmt 1
        movq      2304(%rsp,%rdi,8), %rsi                       #608.76
..LN8840:
        movq      2720(%rsp,%rdi,8), %r9                        #608.83
..LN8841:
	.loc    1  907  is_stmt 1
        movq      %rsi, 3136(%rsp,%rdi,8)                       #907.7
..LN8842:
	.loc    1  908  is_stmt 1
        movq      %r9, 3552(%rsp,%rdi,8)                        #908.7
..LN8843:
	.loc    1  906  is_stmt 1
        incq      %rdi                                          #906.5
..LN8844:
        cmpq      %r8, %rdi                                     #906.5
..LN8845:
        jb        ..B15.75      # Prob 98%                      #906.5
..LN8846:
                                # LOE rax rbx rdi r8 r15 xmm1 xmm2 xmm9 xmm10
..B15.77:                       # Preds ..B15.75 ..B15.73 ..B15.68 # Infreq
..LN8847:
	.loc    1  868  is_stmt 1
        incq      %r15                                          #868.3
..LN8848:
	.loc    1  911  is_stmt 1
        vmovapd   %xmm10, %xmm3                                 #911.5
..LN8849:
	.loc    1  912  is_stmt 1
        vmovapd   %xmm9, %xmm0                                  #912.5
..LN8850:
	.loc    1  868  is_stmt 1
        cmpq      %rax, %r15                                    #868.3
..LN8851:
        jb        ..B15.58      # Prob 81%                      #868.3
..LN8852:
                                # LOE rax rbx r15 xmm0 xmm1 xmm2 xmm3
..B15.78:                       # Preds ..B15.77                # Infreq
..LN8853:
        movq      1080(%rsp), %r15                              #
..LN8854:
        movq      %rbx, %rdx                                    #
..LN8855:
        movq      1072(%rsp), %r13                              #
..LN8856:
        movq      664(%rsp), %r14                               #
..LN8857:
        movq      8(%rsp), %rbx                                 #
..LN8858:
        movq      (%rsp), %r12                                  #
..LN8859:
                                # LOE rdx rbx r12 r13 r14 r15
..B15.79:                       # Preds ..B15.78 ..B15.56       # Infreq
..LN8860:
	.loc    1  608  is_stmt 1
        testl     %edx, %edx                                    #608.94
..LN8861:
        jle       ..B15.83      # Prob 40%                      #608.94
..LN8862:
                                # LOE rbx r12 r13 r14 r15 edx
..B15.80:                       # Preds ..B15.79                # Infreq
..LN8863:
	.loc    1  609  is_stmt 1
        vzeroupper                                              #609.10
..LN8864:
        lea       2304(%rsp), %rdi                              #609.10
..LN8865:
        lea       2720(%rsp), %rsi                              #609.10
..___tag_value_create_xgrid_2dx2d_order1_.771:
..LN8866:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #609.10
..___tag_value_create_xgrid_2dx2d_order1_.772:
..LN8867:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B15.81:                       # Preds ..B15.80                # Infreq
..LN8868:
        movq      4032(%rsp), %rax                              #609.44
..LN8869:
        movq      4040(%rsp), %rcx                              #609.44
..LN8870:
	.loc    1  610  is_stmt 1
        movq      3952(%rsp), %rdx                              #610.13
..LN8871:
	.loc    1  611  is_stmt 1
        movq      4232(%rsp), %rsi                              #611.2
..LN8872:
	.loc    1  609  is_stmt 1
        vmulsd    (%rax,%rcx,8), %xmm0, %xmm2                   #609.44
..LN8873:
	.loc    1  610  is_stmt 1
        vmovsd    (%rdx,%rcx,8), %xmm0                          #610.13
..LN8874:
	.loc    1  611  is_stmt 1
        vminsd    (%rsi,%r12,8), %xmm0, %xmm0                   #611.2
..LN8875:
        vdivsd    %xmm0, %xmm2, %xmm1                           #611.12
..LN8876:
        vcomisd   .L_2il0floatpacket.2(%rip), %xmm1             #611.23
..LN8877:
        jbe       ..B15.83      # Prob 50%                      #611.23
..LN8878:
                                # LOE rbx r12 r13 r14 r15 xmm2
..B15.82:                       # Preds ..B15.81                # Infreq
..LN8879:
	.loc    1  612  is_stmt 1
        movl      16(%rsp), %r11d                               #612.4
..LN8880:
        movslq    %r11d, %r11                                   #612.4
..LN8881:
	.loc    1  613  is_stmt 1
        movq      40(%rbp), %rcx                                #613.4
..LN8882:
	.loc    1  614  is_stmt 1
        movq      48(%rbp), %rdi                                #614.4
..LN8883:
	.loc    1  615  is_stmt 1
        movq      56(%rbp), %r8                                 #615.4
..LN8884:
	.loc    1  612  is_stmt 1
        movq      72(%rbp), %rax                                #612.4
..LN8885:
	.loc    1  616  is_stmt 1
        movq      64(%rbp), %r10                                #616.4
..LN8886:
	.loc    1  613  is_stmt 1
        movq      4040(%rsp), %rdx                              #613.4
..LN8887:
	.loc    1  614  is_stmt 1
        movl      4000(%rsp), %esi                              #614.4
..LN8888:
	.loc    1  616  is_stmt 1
        movl      4296(%rsp), %r9d                              #616.4
..LN8889:
	.loc    1  613  is_stmt 1
        movl      %edx, (%rcx,%r11,4)                           #613.4
..LN8890:
	.loc    1  614  is_stmt 1
        movl      %esi, (%rdi,%r11,4)                           #614.4
..LN8891:
	.loc    1  615  is_stmt 1
        movl      %r12d, (%r8,%r11,4)                           #615.4
..LN8892:
	.loc    1  612  is_stmt 1
        vmovsd    %xmm2, (%rax,%r11,8)                          #612.4
..LN8893:
	.loc    1  616  is_stmt 1
        movl      %r9d, (%r10,%r11,4)                           #616.4
..LN8894:
	.loc    1  617  is_stmt 1
        incl      %r11d                                         #617.6
..LN8895:
        movl      %r11d, 16(%rsp)                               #617.6
..LN8896:
	.loc    1  618  is_stmt 1
        cmpl      $10000000, %r11d                              #618.16
..LN8897:
        jg        ..B15.86      # Prob 0%                       #618.16
..LN8898:
                                # LOE rbx r12 r13 r14 r15
..B15.83:                       # Preds ..B15.88 ..B15.86 ..B15.82 ..B15.81 ..B15.79
                                #       ..B15.46 ..B15.45 ..B15.41 ..B15.40 # Infreq
..LN8899:
	.loc    1  586  is_stmt 1
        incq      %r12                                          #586.29
..LN8900:
        cmpq      4312(%rsp), %r12                              #586.29
..LN8901:
        jb        ..B15.38      # Prob 82%                      #586.29
..LN8902:
                                # LOE rbx r12 r13 r14 r15
..B15.84:                       # Preds ..B15.83                # Infreq
..LN8903:
        movq      4288(%rsp), %rax                              #
..LN8904:
        movq      4280(%rsp), %rcx                              #
..LN8905:
        movl      4296(%rsp), %edx                              #
..LN8906:
        incl      %edx                                          #586.5
..LN8907:
        addq      4272(%rsp), %rcx                              #586.5
..LN8908:
        addq      4312(%rsp), %rax                              #586.5
..LN8909:
        movq      4264(%rsp), %rsi                              #
..LN8910:
        movq      4248(%rsp), %r9                               #
..LN8911:
        movl      4256(%rsp), %r10d                             #
..LN8912:
        movq      24(%rbp), %rdi                                #
..LN8913:
        movq      16(%rbp), %r8                                 #
..LN8914:
        cmpl      4240(%rsp), %edx                              #586.5
..LN8915:
        jb        ..B15.36      # Prob 82%                      #586.5
..LN8916:
                                # LOE rax rcx rsi rdi r8 r9 edx esi r10d sil
..B15.85:                       # Preds ..B15.84                # Infreq
..LN8917:
        movq      %rsi, 4264(%rsp)                              #
..LN8918:
        movq      4016(%rsp), %r15                              #
..LN8919:
        movq      4032(%rsp), %r13                              #
..LN8920:
        movq      4040(%rsp), %r14                              #
..LN8921:
        movq      4008(%rsp), %r12                              #
..LN8922:
        jmp       ..B15.26      # Prob 100%                     #
..LN8923:
                                # LOE r12 r13 r14 r15
..B15.86:                       # Preds ..B15.82                # Infreq
..LN8924:
	.loc    1  618  is_stmt 1
        movl      $.L_2__STRING.0, %edi                         #618.26
..___tag_value_create_xgrid_2dx2d_order1_.773:
..LN8925:
#       error_handler(const char *)
        call      error_handler                                 #618.26
..___tag_value_create_xgrid_2dx2d_order1_.774:
..LN8926:
        jmp       ..B15.83      # Prob 100%                     #618.26
..LN8927:
                                # LOE rbx r12 r13 r14 r15
..B15.87:                       # Preds ..B15.69                # Infreq
..LN8928:
	.loc    1  906  is_stmt 1
        xorl      %edi, %edi                                    #906.5
..LN8929:
        jmp       ..B15.73      # Prob 100%                     #906.5
..LN8930:
                                # LOE rax rbx rdi r8 r15 xmm1 xmm2 xmm9 xmm10
..B15.88:                       # Preds ..B15.58 ..B15.67       # Infreq
..LN8931:
        movq      1080(%rsp), %r15                              #
..LN8932:
        movq      1072(%rsp), %r13                              #
..LN8933:
        movq      664(%rsp), %r14                               #
..LN8934:
        movq      8(%rsp), %rbx                                 #
..LN8935:
        movq      (%rsp), %r12                                  #
..LN8936:
        jmp       ..B15.83      # Prob 100%                     #
..LN8937:
                                # LOE rbx r12 r13 r14 r15
..B15.89:                       # Preds ..B15.63                # Infreq
..LN8938:
	.loc    1  889  is_stmt 1
        movl      $.L_2__STRING.1, %edi                         #889.4
..LN8939:
        vzeroupper                                              #889.4
..LN8940:
        vmovsd    %xmm9, 4064(%rsp)                             #889.4
..LN8941:
        vmovsd    %xmm10, 4072(%rsp)                            #889.4
..LN8942:
        vmovsd    %xmm11, 4080(%rsp)                            #889.4
..LN8943:
        vmovsd    %xmm12, 4088(%rsp)                            #889.4
..LN8944:
        vmovsd    %xmm13, 4096(%rsp)                            #889.4
..LN8945:
        vmovsd    %xmm4, 4104(%rsp)                             #889.4
..LN8946:
        vmovsd    %xmm5, 4112(%rsp)                             #889.4
..LN8947:
        vmovsd    %xmm8, 4120(%rsp)                             #889.4
..LN8948:
        vmovsd    %xmm7, 4128(%rsp)                             #889.4
..LN8949:
        vmovsd    %xmm6, 4136(%rsp)                             #889.4
..LN8950:
        vmovsd    %xmm0, 4144(%rsp)                             #889.4
..LN8951:
        vmovsd    %xmm3, 4152(%rsp)                             #889.4
..___tag_value_create_xgrid_2dx2d_order1_.775:
..LN8952:
#       error_handler(const char *)
        call      error_handler                                 #889.4
..___tag_value_create_xgrid_2dx2d_order1_.776:
..LN8953:
                                # LOE rbx r12 r13 r15 r14d
..B15.124:                      # Preds ..B15.89                # Infreq
..LN8954:
        vmovsd    .L_2il0floatpacket.10(%rip), %xmm2            #
..LN8955:
        vmovsd    .L_2il0floatpacket.11(%rip), %xmm1            #
..LN8956:
        vmovsd    4152(%rsp), %xmm3                             #
..LN8957:
        vmovsd    4144(%rsp), %xmm0                             #
..LN8958:
        vmovsd    4136(%rsp), %xmm6                             #
..LN8959:
        vmovsd    4128(%rsp), %xmm7                             #
..LN8960:
        vmovsd    4120(%rsp), %xmm8                             #
..LN8961:
        vmovsd    4112(%rsp), %xmm5                             #
..LN8962:
        vmovsd    4104(%rsp), %xmm4                             #
..LN8963:
        vmovsd    4096(%rsp), %xmm13                            #
..LN8964:
        vmovsd    4088(%rsp), %xmm12                            #
..LN8965:
        vmovsd    4080(%rsp), %xmm11                            #
..LN8966:
        vmovsd    4072(%rsp), %xmm10                            #
..LN8967:
        vmovsd    4064(%rsp), %xmm9                             #
..LN8968:
        jmp       ..B15.64      # Prob 100%                     #
..LN8969:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm9 xmm10 xmm11 xmm12 xmm13
..B15.91:                       # Preds ..B15.48                # Infreq
..LN8970:
	.loc    1  862  is_stmt 1
        xorl      %eax, %eax                                    #862.3
..LN8971:
        jmp       ..B15.52      # Prob 100%                     #862.3
..LN8972:
                                # LOE rax rdx rbx r12 r13 r14 r15
..B15.92:                       # Preds ..B15.36                # Infreq
..LN8973:
	.loc    1  586  is_stmt 1
        incl      %edx                                          #586.5
..LN8974:
        addq      4272(%rsp), %rcx                              #586.5
..LN8975:
        addq      4312(%rsp), %rax                              #586.5
..LN8976:
        cmpl      4240(%rsp), %edx                              #586.5
..LN8977:
        jb        ..B15.36      # Prob 82%                      #586.5
..LN8978:
                                # LOE rax rcx rsi rdi r8 r9 edx r10d
..B15.93:                       # Preds ..B15.92                # Infreq
..LN8979:
        movq      %rsi, 4264(%rsp)                              #
..LN8980:
        movq      4016(%rsp), %r15                              #
..LN8981:
        movq      4032(%rsp), %r13                              #
..LN8982:
        movq      4040(%rsp), %r14                              #
..LN8983:
        movq      4008(%rsp), %r12                              #
..LN8984:
        jmp       ..B15.26      # Prob 100%                     #
..LN8985:
                                # LOE r12 r13 r14 r15
..B15.95:                       # Preds ..B15.98 ..B15.27 ..B15.21 # Infreq
..LN8986:
	.loc    1  624  is_stmt 1
        movq      %rdx, %rdi                                    #624.3
..LN8987:
        vzeroupper                                              #624.3
..LN8988:
#       free(void *)
        call      free                                          #624.3
..LN8989:
                                # LOE
..B15.96:                       # Preds ..B15.95                # Infreq
..LN8990:
	.loc    1  625  is_stmt 1
        movq      4248(%rsp), %rdi                              #625.3
..LN8991:
#       free(void *)
        call      free                                          #625.3
..LN8992:
                                # LOE
..B15.97:                       # Preds ..B15.96                # Infreq
..LN8993:
	.loc    1  541  is_stmt 1
        movl      16(%rsp), %eax                                #541.10
..LN8994:
	.loc    1  541  epilogue_begin  is_stmt 1
        addq      $4344, %rsp                                   #541.10
	.cfi_restore 3
..LN8995:
        popq      %rbx                                          #541.10
	.cfi_restore 15
..LN8996:
        popq      %r15                                          #541.10
	.cfi_restore 14
..LN8997:
        popq      %r14                                          #541.10
	.cfi_restore 13
..LN8998:
        popq      %r13                                          #541.10
	.cfi_restore 12
..LN8999:
        popq      %r12                                          #541.10
..LN9000:
        movq      %rbp, %rsp                                    #541.10
..LN9001:
        popq      %rbp                                          #541.10
	.cfi_def_cfa 7, 8
	.cfi_restore 6
..LN9002:
        ret                                                     #541.10
	.cfi_def_cfa 6, 16
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_offset 6, -16
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN9003:
                                # LOE
..B15.98:                       # Preds ..B15.23                # Infreq
..LN9004:
	.loc    1  572  is_stmt 1
        incl      %ecx                                          #572.3
..LN9005:
        addq      %r12, %rax                                    #572.3
..LN9006:
        addq      3984(%rsp), %rsi                              #572.3
..LN9007:
        cmpl      3128(%rsp), %ecx                              #572.3
..LN9008:
        jb        ..B15.23      # Prob 82%                      #572.3
..LN9009:
        jmp       ..B15.95      # Prob 100%                     #572.3
..LN9010:
                                # LOE rax rdx rsi r8 r12 ecx ebx
..B15.100:                      # Preds ..B15.14                # Infreq
..LN9011:
	.loc    1  75  is_stmt 1
        incl      %esi                                          #75.18
..LN9012:
        addq      %r8, %rcx                                     #75.18
..LN9013:
        lea       1(%rax,%r9), %eax                             #75.18
..LN9014:
        cmpl      8(%rsp), %esi                                 #75.14
..LN9015:
        jl        ..B15.14      # Prob 82%                      #75.14
..LN9016:
        jmp       ..B15.20      # Prob 100%                     #75.14
..LN9017:
                                # LOE rdx rcx rdi r8 r10 eax esi r9d
..B15.102:                      # Preds ..B15.5                 # Infreq
..LN9018:
        incl      %r8d                                          #75.18
..LN9019:
        addq      %rdi, %rsi                                    #75.18
..LN9020:
        lea       1(%rcx,%rax), %ecx                            #75.18
..LN9021:
        cmpl      352(%rsp), %r8d                               #75.14
..LN9022:
        jl        ..B15.5       # Prob 82%                      #75.14
..LN9023:
        jmp       ..B15.11      # Prob 100%                     #75.14
..LN9024:
        .align    16,0x90
	.cfi_endproc
..LN9025:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..LN9026:
# mark_end;
	.type	create_xgrid_2dx2d_order1_,@function
	.size	create_xgrid_2dx2d_order1_,.-create_xgrid_2dx2d_order1_
..LNcreate_xgrid_2dx2d_order1_.9027:
.LNcreate_xgrid_2dx2d_order1_:
	.data
# -- End  create_xgrid_2dx2d_order1_
	.text
.L_2__routine_start_create_xgrid_2dx2d_order1_15:
# -- Begin  create_xgrid_2dx2d_order1
	.text
# mark_begin;
       .align    16,0x90
	.globl create_xgrid_2dx2d_order1
# --- create_xgrid_2dx2d_order1(const int *, const int *, const int *, const int *, const double *, const double *, const double *, const double *, const double *, int *, int *, int *, int *, double *)
create_xgrid_2dx2d_order1:
# parameter 1(nlon_in): %rdi
# parameter 2(nlat_in): %rsi
# parameter 3(nlon_out): %rdx
# parameter 4(nlat_out): %rcx
# parameter 5(lon_in): %r8
# parameter 6(lat_in): %r9
# parameter 7(lon_out): 16 + %rbp
# parameter 8(lat_out): 24 + %rbp
# parameter 9(mask_in): 32 + %rbp
# parameter 10(i_in): 40 + %rbp
# parameter 11(j_in): 48 + %rbp
# parameter 12(i_out): 56 + %rbp
# parameter 13(j_out): 64 + %rbp
# parameter 14(xgrid_area): 72 + %rbp
..B16.1:                        # Preds ..B16.0
	.cfi_startproc
..___tag_value_create_xgrid_2dx2d_order1.796:
..L797:
                                                        #549.1
..LN9028:
	.loc    1  549  is_stmt 1
        pushq     %rbp                                          #549.1
	.cfi_def_cfa_offset 16
..LN9029:
        movq      %rsp, %rbp                                    #549.1
	.cfi_def_cfa 6, 16
	.cfi_offset 6, -16
..LN9030:
        andq      $-32, %rsp                                    #549.1
..LN9031:
        pushq     %r12                                          #549.1
..LN9032:
        pushq     %r13                                          #549.1
..LN9033:
        pushq     %r14                                          #549.1
..LN9034:
        pushq     %r15                                          #549.1
..LN9035:
        pushq     %rbx                                          #549.1
..LN9036:
        subq      $4344, %rsp                                   #549.1
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN9037:
        movq      %rsi, %r13                                    #549.1
..LN9038:
	.loc    1  558  prologue_end  is_stmt 1
        movl      (%rdi), %ebx                                  #558.10
..LN9039:
	.loc    1  549  is_stmt 1
        movq      %rdx, %r14                                    #549.1
..LN9040:
        movq      %rdi, (%rsp)                                  #549.1
..LN9041:
	.loc    1  567  is_stmt 1
        movl      %ebx, %edi                                    #567.23
..LN9042:
	.loc    1  549  is_stmt 1
        movq      %rcx, %r15                                    #549.1
..LN9043:
	.loc    1  559  is_stmt 1
        movl      (%r13), %r11d                                 #559.10
..LN9044:
	.loc    1  567  is_stmt 1
        imull     %r11d, %edi                                   #567.23
..LN9045:
        movslq    %edi, %rdi                                    #567.23
..LN9046:
	.loc    1  560  is_stmt 1
        movl      (%r14), %eax                                  #560.10
..LN9047:
	.loc    1  561  is_stmt 1
        movl      (%r15), %r10d                                 #561.10
..LN9048:
	.loc    1  567  is_stmt 1
        shlq      $3, %rdi                                      #567.23
..LN9049:
	.loc    1  560  is_stmt 1
        movl      %eax, 4256(%rsp)                              #560.10
..LN9050:
	.loc    1  586  is_stmt 1
        movslq    %eax, %rax                                    #586.33
..LN9051:
	.loc    1  549  is_stmt 1
        movq      %r9, 2712(%rsp)                               #549.1
..LN9052:
        movq      %r8, 3120(%rsp)                               #549.1
..LN9053:
	.loc    1  572  is_stmt 1
        movslq    %ebx, %r12                                    #572.31
..LN9054:
	.loc    1  559  is_stmt 1
        movl      %r11d, 3128(%rsp)                             #559.10
..LN9055:
	.loc    1  586  is_stmt 1
        movq      %rax, 4312(%rsp)                              #586.33
..LN9056:
	.loc    1  561  is_stmt 1
        movl      %r10d, 4240(%rsp)                             #561.10
..LN9057:
	.loc    1  563  is_stmt 1
        movl      $0, 16(%rsp)                                  #563.3
..LN9058:
	.loc    1  567  is_stmt 1
#       malloc(size_t)
        call      malloc                                        #567.23
..LN9059:
                                # LOE rax r12 r13 r14 r15 ebx
..B16.106:                      # Preds ..B16.1
..LN9060:
        movq      %rax, %rdx                                    #567.23
..LN9061:
                                # LOE rdx r12 r13 r14 r15 ebx
..B16.2:                        # Preds ..B16.106
..LN9062:
	.loc    1  568  is_stmt 1
        movl      4256(%rsp), %edi                              #568.24
..LN9063:
        imull     4240(%rsp), %edi                              #568.24
..LN9064:
        movslq    %edi, %rdi                                    #568.24
..LN9065:
        shlq      $3, %rdi                                      #568.24
..LN9066:
        movq      %rdx, 3536(%rsp)                              #568.24
..LN9067:
#       malloc(size_t)
        call      malloc                                        #568.24
..LN9068:
                                # LOE rax r12 r13 r14 r15 ebx
..B16.107:                      # Preds ..B16.2
..LN9069:
        movq      3536(%rsp), %rdx                              #
..LN9070:
        movq      %rax, 4248(%rsp)                              #568.24
..LN9071:
                                # LOE rdx r12 r13 r14 r15 edx ebx dl dh
..B16.3:                        # Preds ..B16.107
..LN9072:
	.loc    1  71  is_stmt 1
        movq      (%rsp), %rax                                  #71.9
..LN9073:
	.loc    1  75  is_stmt 1
        xorl      %r8d, %r8d                                    #75.7
..LN9074:
	.loc    1  72  is_stmt 1
        movl      (%r13), %r9d                                  #72.9
..LN9075:
	.loc    1  75  is_stmt 1
        xorl      %esi, %esi                                    #75.9
..LN9076:
	.loc    1  71  is_stmt 1
        movl      (%rax), %eax                                  #71.9
..LN9077:
	.loc    1  75  is_stmt 1
        movslq    %eax, %rdi                                    #75.18
..LN9078:
        testl     %r9d, %r9d                                    #75.14
..LN9079:
        jle       ..B16.12      # Prob 10%                      #75.14
..LN9080:
                                # LOE rdx rsi rdi r12 r14 r15 eax edx ebx r8d r9d dl dh
..B16.4:                        # Preds ..B16.3
..LN9081:
        movl      %r9d, 352(%rsp)                               #75.9
..LN9082:
        xorl      %ecx, %ecx                                    #75.9
..LN9083:
        movq      %r12, 4008(%rsp)                              #75.9
..LN9084:
        movl      %ebx, 3544(%rsp)                              #75.9
..LN9085:
        movq      %r14, 8(%rsp)                                 #75.9
..LN9086:
        movq      %r15, (%rsp)                                  #75.9
..LN9087:
        movq      3120(%rsp), %r9                               #75.9
..LN9088:
        movq      2712(%rsp), %r10                              #75.9
..LN9089:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B16.5:                        # Preds ..B16.10 ..B16.102 ..B16.4
..L807:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN9090:
        xorl      %r12d, %r12d                                  #75.27
..LN9091:
        testl     %eax, %eax                                    #75.36
..LN9092:
        jle       ..B16.102     # Prob 10%                      #75.36
..LN9093:
                                # LOE rdx rsi rdi r9 r10 r12 eax ecx r8d
..B16.6:                        # Preds ..B16.5
..LN9094:
	.loc    1  85  is_stmt 1
        movq      %rsi, 368(%rsp)                               #85.5
..LN9095:
	.loc    1  78  is_stmt 1
        lea       (%rax,%rcx), %r13d                            #78.25
..LN9096:
        movslq    %r13d, %r13                                   #78.15
..LN9097:
	.loc    1  85  is_stmt 1
        lea       (%rdx,%rsi,8), %r11                           #85.5
..LN9098:
	.loc    1  76  is_stmt 1
        movslq    %ecx, %rcx                                    #76.15
..LN9099:
	.loc    1  85  is_stmt 1
        movq      %r11, 392(%rsp)                               #85.5
..LN9100:
        movl      %ecx, 376(%rsp)                               #85.5
..LN9101:
        movl      %r8d, 360(%rsp)                               #85.5
..LN9102:
	.loc    1  78  is_stmt 1
        lea       (%r9,%r13,8), %rbx                            #78.15
..LN9103:
	.loc    1  85  is_stmt 1
        movq      %rdi, 384(%rsp)                               #85.5
..LN9104:
	.loc    1  82  is_stmt 1
        lea       (%r10,%r13,8), %r13                           #82.15
..LN9105:
	.loc    1  85  is_stmt 1
        movl      %eax, 344(%rsp)                               #85.5
..LN9106:
	.loc    1  80  is_stmt 1
        lea       (%r10,%rcx,8), %r14                           #80.15
..LN9107:
	.loc    1  85  is_stmt 1
        movq      %rdx, 3536(%rsp)                              #85.5
..LN9108:
	.loc    1  76  is_stmt 1
        lea       (%r9,%rcx,8), %r15                            #76.15
..LN9109:
                                # LOE rbx r12 r13 r14 r15
..B16.7:                        # Preds ..B16.9 ..B16.6
..L808:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN9110:
	.loc    1  84  is_stmt 1
        lea       24(%rsp), %rdi                                #84.12
..LN9111:
	.loc    1  76  is_stmt 1
        movq      (%r15,%r12,8), %rax                           #76.15
..LN9112:
	.loc    1  84  is_stmt 1
        lea       184(%rsp), %rsi                               #84.12
..LN9113:
	.loc    1  83  is_stmt 1
        movq      8(%r13,%r12,8), %rdx                          #83.15
..LN9114:
	.loc    1  76  is_stmt 1
        movq      %rax, (%rdi)                                  #76.5
..LN9115:
	.loc    1  77  is_stmt 1
        movq      8(%r15,%r12,8), %rcx                          #77.15
..LN9116:
	.loc    1  78  is_stmt 1
        movq      16(%rbx,%r12,8), %r8                          #78.15
..LN9117:
	.loc    1  79  is_stmt 1
        movq      8(%rbx,%r12,8), %r9                           #79.15
..LN9118:
	.loc    1  80  is_stmt 1
        movq      (%r14,%r12,8), %r10                           #80.15
..LN9119:
	.loc    1  81  is_stmt 1
        movq      8(%r14,%r12,8), %r11                          #81.15
..LN9120:
	.loc    1  82  is_stmt 1
        movq      16(%r13,%r12,8), %rax                         #82.15
..LN9121:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN9122:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN9123:
	.loc    1  77  is_stmt 1
        movq      %rcx, 8(%rdi)                                 #77.5
..LN9124:
	.loc    1  78  is_stmt 1
        movq      %r8, 16(%rdi)                                 #78.5
..LN9125:
	.loc    1  79  is_stmt 1
        movq      %r9, 24(%rdi)                                 #79.5
..LN9126:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN9127:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN9128:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN9129:
	.loc    1  84  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_2dx2d_order1.809:
..LN9130:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_2dx2d_order1.810:
..LN9131:
                                # LOE rbx r12 r13 r14 r15 eax
..B16.8:                        # Preds ..B16.7
..LN9132:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN9133:
        lea       24(%rsp), %rdi                                #85.20
..LN9134:
        lea       184(%rsp), %rsi                               #85.20
..___tag_value_create_xgrid_2dx2d_order1.811:
..LN9135:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_2dx2d_order1.812:
..LN9136:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B16.9:                        # Preds ..B16.8
..LN9137:
        movq      392(%rsp), %rax                               #85.5
..LN9138:
        vmovsd    %xmm0, (%rax,%r12,8)                          #85.5
..LN9139:
	.loc    1  75  is_stmt 1
        incq      %r12                                          #75.40
..LN9140:
        cmpq      384(%rsp), %r12                               #75.36
..LN9141:
        jl        ..B16.7       # Prob 82%                      #75.36
..LN9142:
                                # LOE rbx r12 r13 r14 r15
..B16.10:                       # Preds ..B16.9
..LN9143:
        movl      360(%rsp), %r8d                               #
..LN9144:
        incl      %r8d                                          #75.18
..LN9145:
        movq      368(%rsp), %rsi                               #
..LN9146:
        movq      384(%rsp), %rdi                               #
..LN9147:
        addq      %rdi, %rsi                                    #75.18
..LN9148:
        movl      376(%rsp), %ecx                               #
..LN9149:
        movl      344(%rsp), %eax                               #
..LN9150:
        lea       1(%rcx,%rax), %ecx                            #75.18
..LN9151:
        movq      3536(%rsp), %rdx                              #
..LN9152:
        movq      3120(%rsp), %r9                               #
..LN9153:
        movq      2712(%rsp), %r10                              #
..LN9154:
        cmpl      352(%rsp), %r8d                               #75.14
..LN9155:
        jl        ..B16.5       # Prob 82%                      #75.14
..LN9156:
                                # LOE rdx rsi rdi r9 r10 eax edx ecx r8d dl dh
..B16.11:                       # Preds ..B16.102 ..B16.10      # Infreq
..LN9157:
        movq      4008(%rsp), %r12                              #
..LN9158:
        movl      3544(%rsp), %ebx                              #
..LN9159:
        movq      8(%rsp), %r14                                 #
..LN9160:
        movq      (%rsp), %r15                                  #
..LN9161:
                                # LOE rdx r12 r14 r15 ebx
..B16.12:                       # Preds ..B16.11 ..B16.3        # Infreq
..LN9162:
	.loc    1  71  is_stmt 1
        movl      (%r14), %r9d                                  #71.9
..LN9163:
	.loc    1  75  is_stmt 1
        xorl      %esi, %esi                                    #75.7
..LN9164:
	.loc    1  72  is_stmt 1
        movl      (%r15), %r10d                                 #72.9
..LN9165:
	.loc    1  75  is_stmt 1
        xorl      %ecx, %ecx                                    #75.9
..LN9166:
        movslq    %r9d, %r8                                     #75.18
..LN9167:
        testl     %r10d, %r10d                                  #75.14
..LN9168:
        jle       ..B16.21      # Prob 10%                      #75.14
..LN9169:
                                # LOE rdx rcx r8 r12 ebx esi r9d r10d
..B16.13:                       # Preds ..B16.12                # Infreq
..LN9170:
        movl      %r10d, 8(%rsp)                                #75.9
..LN9171:
        xorl      %eax, %eax                                    #75.9
..LN9172:
        movq      %rdx, 3536(%rsp)                              #75.9
..LN9173:
        movq      %r12, 4008(%rsp)                              #75.9
..LN9174:
        movl      %ebx, 3544(%rsp)                              #75.9
..LN9175:
        movq      24(%rbp), %r10                                #75.9
..LN9176:
        movq      16(%rbp), %rdx                                #75.9
..LN9177:
        movq      4248(%rsp), %rdi                              #75.9
..LN9178:
                                # LOE rdx rcx rdi r8 r10 eax esi r9d
..B16.14:                       # Preds ..B16.19 ..B16.100 ..B16.13 # Infreq
..L813:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN9179:
        xorl      %r13d, %r13d                                  #75.27
..LN9180:
        testl     %r9d, %r9d                                    #75.36
..LN9181:
        jle       ..B16.100     # Prob 10%                      #75.36
..LN9182:
                                # LOE rdx rcx rdi r8 r10 r13 eax esi r9d
..B16.15:                       # Preds ..B16.14                # Infreq
..LN9183:
	.loc    1  85  is_stmt 1
        movq      %rcx, 672(%rsp)                               #85.5
..LN9184:
	.loc    1  78  is_stmt 1
        lea       (%r9,%rax), %ebx                              #78.25
..LN9185:
        movslq    %ebx, %rbx                                    #78.15
..LN9186:
	.loc    1  85  is_stmt 1
        lea       (%rdi,%rcx,8), %r11                           #85.5
..LN9187:
	.loc    1  76  is_stmt 1
        movslq    %eax, %rax                                    #76.15
..LN9188:
	.loc    1  85  is_stmt 1
        movq      %r11, 696(%rsp)                               #85.5
..LN9189:
        movl      %eax, 680(%rsp)                               #85.5
..LN9190:
        movl      %esi, 664(%rsp)                               #85.5
..LN9191:
	.loc    1  78  is_stmt 1
        lea       (%rdx,%rbx,8), %r12                           #78.15
..LN9192:
	.loc    1  85  is_stmt 1
        movq      %r8, 688(%rsp)                                #85.5
..LN9193:
	.loc    1  82  is_stmt 1
        lea       (%r10,%rbx,8), %rbx                           #82.15
..LN9194:
	.loc    1  85  is_stmt 1
        movl      %r9d, (%rsp)                                  #85.5
..LN9195:
	.loc    1  80  is_stmt 1
        lea       (%r10,%rax,8), %r14                           #80.15
..LN9196:
	.loc    1  76  is_stmt 1
        lea       (%rdx,%rax,8), %r15                           #76.15
..LN9197:
                                # LOE rbx r12 r13 r14 r15
..B16.16:                       # Preds ..B16.18 ..B16.15       # Infreq
..L814:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN9198:
	.loc    1  84  is_stmt 1
        lea       344(%rsp), %rdi                               #84.12
..LN9199:
	.loc    1  76  is_stmt 1
        movq      (%r15,%r13,8), %rax                           #76.15
..LN9200:
	.loc    1  84  is_stmt 1
        lea       504(%rsp), %rsi                               #84.12
..LN9201:
	.loc    1  83  is_stmt 1
        movq      8(%rbx,%r13,8), %rdx                          #83.15
..LN9202:
	.loc    1  76  is_stmt 1
        movq      %rax, -160(%rsi)                              #76.5
..LN9203:
	.loc    1  77  is_stmt 1
        movq      8(%r15,%r13,8), %rcx                          #77.15
..LN9204:
	.loc    1  78  is_stmt 1
        movq      16(%r12,%r13,8), %r8                          #78.15
..LN9205:
	.loc    1  79  is_stmt 1
        movq      8(%r12,%r13,8), %r9                           #79.15
..LN9206:
	.loc    1  80  is_stmt 1
        movq      (%r14,%r13,8), %r10                           #80.15
..LN9207:
	.loc    1  81  is_stmt 1
        movq      8(%r14,%r13,8), %r11                          #81.15
..LN9208:
	.loc    1  82  is_stmt 1
        movq      16(%rbx,%r13,8), %rax                         #82.15
..LN9209:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN9210:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN9211:
	.loc    1  77  is_stmt 1
        movq      %rcx, -152(%rsi)                              #77.5
..LN9212:
	.loc    1  78  is_stmt 1
        movq      %r8, -144(%rsi)                               #78.5
..LN9213:
	.loc    1  79  is_stmt 1
        movq      %r9, -136(%rsi)                               #79.5
..LN9214:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN9215:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN9216:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN9217:
	.loc    1  84  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_2dx2d_order1.815:
..LN9218:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_2dx2d_order1.816:
..LN9219:
                                # LOE rbx r12 r13 r14 r15 eax
..B16.17:                       # Preds ..B16.16                # Infreq
..LN9220:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN9221:
        lea       344(%rsp), %rdi                               #85.20
..LN9222:
        lea       504(%rsp), %rsi                               #85.20
..___tag_value_create_xgrid_2dx2d_order1.817:
..LN9223:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_2dx2d_order1.818:
..LN9224:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B16.18:                       # Preds ..B16.17                # Infreq
..LN9225:
        movq      696(%rsp), %rax                               #85.5
..LN9226:
        vmovsd    %xmm0, (%rax,%r13,8)                          #85.5
..LN9227:
	.loc    1  75  is_stmt 1
        incq      %r13                                          #75.40
..LN9228:
        cmpq      688(%rsp), %r13                               #75.36
..LN9229:
        jl        ..B16.16      # Prob 82%                      #75.36
..LN9230:
                                # LOE rbx r12 r13 r14 r15
..B16.19:                       # Preds ..B16.18                # Infreq
..LN9231:
        movl      664(%rsp), %esi                               #
..LN9232:
        incl      %esi                                          #75.18
..LN9233:
        movq      672(%rsp), %rcx                               #
..LN9234:
        movq      688(%rsp), %r8                                #
..LN9235:
        addq      %r8, %rcx                                     #75.18
..LN9236:
        movl      680(%rsp), %eax                               #
..LN9237:
        movl      (%rsp), %r9d                                  #
..LN9238:
        lea       1(%rax,%r9), %eax                             #75.18
..LN9239:
        movq      4248(%rsp), %rdi                              #
..LN9240:
        movq      24(%rbp), %r10                                #
..LN9241:
        movq      16(%rbp), %rdx                                #
..LN9242:
        cmpl      8(%rsp), %esi                                 #75.14
..LN9243:
        jl        ..B16.14      # Prob 82%                      #75.14
..LN9244:
                                # LOE rdx rcx rdi r8 r10 eax esi r9d
..B16.20:                       # Preds ..B16.100 ..B16.19      # Infreq
..LN9245:
        movq      3536(%rsp), %rdx                              #
..LN9246:
        movq      4008(%rsp), %r12                              #
..LN9247:
        movl      3544(%rsp), %ebx                              #
..LN9248:
                                # LOE rdx r12 ebx
..B16.21:                       # Preds ..B16.20 ..B16.12       # Infreq
..LN9249:
	.loc    1  572  is_stmt 1
        xorl      %ecx, %ecx                                    #572.3
..LN9250:
        xorl      %eax, %eax                                    #572.31
..LN9251:
        cmpl      $0, 3128(%rsp)                                #572.16
..LN9252:
        jle       ..B16.95      # Prob 9%                       #572.16
..LN9253:
                                # LOE rax rdx r12 ecx ebx
..B16.22:                       # Preds ..B16.21                # Infreq
..LN9254:
	.loc    1  565  is_stmt 1
        movl      4256(%rsp), %r10d                             #565.16
..LN9255:
	.loc    1  564  is_stmt 1
        lea       1(%rbx), %r14d                                #564.16
..LN9256:
	.loc    1  577  is_stmt 1
        movq      2712(%rsp), %r13                              #577.39
..LN9257:
        movq      3120(%rsp), %r11                              #577.16
..LN9258:
	.loc    1  593  is_stmt 1
        movq      4312(%rsp), %r15                              #593.42
..LN9259:
	.loc    1  565  is_stmt 1
        lea       1(%r10), %r10d                                #565.16
..LN9260:
	.loc    1  593  is_stmt 1
        movq      24(%rbp), %r9                                 #593.42
..LN9261:
	.loc    1  577  is_stmt 1
        lea       (%r13,%r12,8), %r13                           #577.39
..LN9262:
	.loc    1  593  is_stmt 1
        movq      16(%rbp), %rsi                                #593.18
..LN9263:
	.loc    1  577  is_stmt 1
        lea       (%r11,%r12,8), %r11                           #577.16
..LN9264:
	.loc    1  572  is_stmt 1
        movslq    %r14d, %r14                                   #572.31
..LN9265:
	.loc    1  586  is_stmt 1
        movslq    %r10d, %r10                                   #586.33
..LN9266:
	.loc    1  593  is_stmt 1
        lea       (%r9,%r15,8), %r9                             #593.42
..LN9267:
	.loc    1  549  is_stmt 1
        movq      32(%rbp), %r8                                 #549.1
..LN9268:
	.loc    1  593  is_stmt 1
        lea       (%rsi,%r15,8), %r15                           #593.18
..LN9269:
	.loc    1  572  is_stmt 1
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm3             #572.76
..LN9270:
        xorl      %esi, %esi                                    #572.31
..LN9271:
	.loc    1  611  is_stmt 1
        vmovsd    .L_2il0floatpacket.2(%rip), %xmm2             #611.23
..LN9272:
	.loc    1  1127  is_stmt 1
        vmovsd    .L_2il0floatpacket.10(%rip), %xmm1            #1127.23
..LN9273:
	.loc    1  888  is_stmt 1
        vmovsd    .L_2il0floatpacket.11(%rip), %xmm0            #888.27
..LN9274:
	.loc    1  572  is_stmt 1
        movq      %r15, 4224(%rsp)                              #572.31
..LN9275:
        movq      %r9, 4264(%rsp)                               #572.31
..LN9276:
        movq      %r10, 4272(%rsp)                              #572.31
..LN9277:
        movq      %r11, 3968(%rsp)                              #572.31
..LN9278:
        movq      %r13, 3976(%rsp)                              #572.31
..LN9279:
        movq      %r14, 3984(%rsp)                              #572.31
..LN9280:
                                # LOE rax rdx rsi r8 r12 ecx ebx
..B16.23:                       # Preds ..B16.27 ..B16.98 ..B16.22 # Infreq
..L819:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN9281:
        xorl      %r14d, %r14d                                  #572.27
..LN9282:
        testl     %ebx, %ebx                                    #572.40
..LN9283:
        jle       ..B16.98      # Prob 10%                      #572.40
..LN9284:
                                # LOE rax rdx rsi r8 r12 r14 ecx ebx
..B16.24:                       # Preds ..B16.23                # Infreq
..LN9285:
	.loc    1  575  is_stmt 1
        movq      2712(%rsp), %r11                              #575.39
..LN9286:
	.loc    1  610  is_stmt 1
        lea       (%rdx,%rax,8), %rdi                           #610.13
..LN9287:
	.loc    1  575  is_stmt 1
        movq      3120(%rsp), %r10                              #575.16
..LN9288:
	.loc    1  572  is_stmt 1
        lea       (%r8,%rax,8), %r13                            #572.55
..LN9289:
	.loc    1  577  is_stmt 1
        movq      3976(%rsp), %r9                               #577.39
..LN9290:
        movq      3968(%rsp), %r15                              #577.16
..LN9291:
	.loc    1  575  is_stmt 1
        lea       (%r11,%rsi,8), %r11                           #575.39
..LN9292:
	.loc    1  577  is_stmt 1
        movq      %r11, 4160(%rsp)                              #577.16
..LN9293:
	.loc    1  575  is_stmt 1
        lea       (%r10,%rsi,8), %r10                           #575.16
..LN9294:
	.loc    1  577  is_stmt 1
        movq      %r10, 4168(%rsp)                              #577.16
..LN9295:
        lea       (%r9,%rsi,8), %r9                             #577.39
..LN9296:
        movq      %r9, 4176(%rsp)                               #577.16
..LN9297:
        lea       (%r15,%rsi,8), %r15                           #577.16
..LN9298:
        movq      %rdi, 3952(%rsp)                              #577.16
..LN9299:
        movq      %rsi, 3960(%rsp)                              #577.16
..LN9300:
        movq      %rax, 3992(%rsp)                              #577.16
..LN9301:
        movl      %ecx, 4000(%rsp)                              #577.16
..LN9302:
        movq      %rdx, 3536(%rsp)                              #577.16
..LN9303:
        movl      %ebx, 3544(%rsp)                              #577.16
..LN9304:
                                # LOE r12 r13 r14 r15
..B16.25:                       # Preds ..B16.26 ..B16.24       # Infreq
..L820:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN9305:
	.loc    1  572  is_stmt 1
        vmovsd    (%r13,%r14,8), %xmm0                          #572.55
..LN9306:
        vcomisd   .L_2il0floatpacket.1(%rip), %xmm0             #572.76
..LN9307:
        ja        ..B16.28      # Prob 22%                      #572.76
..LN9308:
                                # LOE r12 r13 r14 r15
..B16.26:                       # Preds ..B16.85 ..B16.93 ..B16.34 ..B16.25 # Infreq
..LN9309:
        incq      %r14                                          #572.27
..LN9310:
        cmpq      %r12, %r14                                    #572.27
..LN9311:
        jb        ..B16.25      # Prob 82%                      #572.27
..LN9312:
                                # LOE r12 r13 r14 r15
..B16.27:                       # Preds ..B16.26                # Infreq
..LN9313:
        movq      3960(%rsp), %rsi                              #
..LN9314:
        movl      4000(%rsp), %ecx                              #
..LN9315:
        incl      %ecx                                          #572.3
..LN9316:
        movq      3992(%rsp), %rax                              #
..LN9317:
        addq      3984(%rsp), %rsi                              #572.3
..LN9318:
        addq      %r12, %rax                                    #572.3
..LN9319:
        movq      3536(%rsp), %rdx                              #
..LN9320:
        movl      3544(%rsp), %ebx                              #
..LN9321:
        movq      32(%rbp), %r8                                 #
..LN9322:
        cmpl      3128(%rsp), %ecx                              #572.3
..LN9323:
        jb        ..B16.23      # Prob 82%                      #572.3
..LN9324:
        jmp       ..B16.95      # Prob 100%                     #572.3
..LN9325:
                                # LOE rax rdx rsi r8 r12 edx ecx ebx dl dh
..B16.28:                       # Preds ..B16.25                # Infreq
..LN9326:
	.loc    1  575  is_stmt 1
        movq      4168(%rsp), %rcx                              #575.16
..LN9327:
	.loc    1  579  is_stmt 1
        movl      $4, %edi                                      #579.18
..LN9328:
	.loc    1  575  is_stmt 1
        movq      4160(%rsp), %r8                               #575.39
..LN9329:
	.loc    1  579  is_stmt 1
        lea       1088(%rsp), %rsi                              #579.18
..LN9330:
	.loc    1  577  is_stmt 1
        movq      16(%r15,%r14,8), %r10                         #577.16
..LN9331:
	.loc    1  575  is_stmt 1
        movq      (%rcx,%r14,8), %rax                           #575.16
..LN9332:
        movq      %rax, -416(%rsi)                              #575.5
..LN9333:
	.loc    1  577  is_stmt 1
        movq      3088(%rsi), %rax                              #577.39
..LN9334:
	.loc    1  575  is_stmt 1
        movq      (%r8,%r14,8), %rdx                            #575.39
..LN9335:
        movq      %rdx, (%rsi)                                  #575.28
..LN9336:
	.loc    1  577  is_stmt 1
        movq      16(%rax,%r14,8), %r11                         #577.39
..LN9337:
        movq      %r11, 16(%rsi)                                #577.28
..LN9338:
	.loc    1  576  is_stmt 1
        movq      8(%rcx,%r14,8), %rbx                          #576.16
..LN9339:
        movq      8(%r8,%r14,8), %r9                            #576.39
..LN9340:
	.loc    1  578  is_stmt 1
        movq      8(%r15,%r14,8), %r11                          #578.16
..LN9341:
        movq      8(%rax,%r14,8), %rdx                          #578.39
..LN9342:
	.loc    1  576  is_stmt 1
        movq      %rbx, -408(%rsi)                              #576.5
..LN9343:
        movq      %r9, 8(%rsi)                                  #576.28
..LN9344:
	.loc    1  577  is_stmt 1
        movq      %r10, -400(%rsi)                              #577.5
..LN9345:
	.loc    1  578  is_stmt 1
        movq      %r11, -392(%rsi)                              #578.5
..LN9346:
        movq      %rdx, 24(%rsi)                                #578.28
..LN9347:
	.loc    1  579  is_stmt 1
        vzeroupper                                              #579.18
..___tag_value_create_xgrid_2dx2d_order1.821:
..LN9348:
#       minval_double(int, const double *)
        call      minval_double                                 #579.18
..___tag_value_create_xgrid_2dx2d_order1.822:
..LN9349:
                                # LOE r12 r13 r14 r15 xmm0
..B16.112:                      # Preds ..B16.28                # Infreq
..LN9350:
        vmovsd    %xmm0, 4304(%rsp)                             #579.18
..LN9351:
                                # LOE r12 r13 r14 r15
..B16.29:                       # Preds ..B16.112               # Infreq
..LN9352:
	.loc    1  580  is_stmt 1
        movl      $4, %edi                                      #580.18
..LN9353:
        lea       1088(%rsp), %rsi                              #580.18
..___tag_value_create_xgrid_2dx2d_order1.823:
..LN9354:
#       maxval_double(int, const double *)
        call      maxval_double                                 #580.18
..___tag_value_create_xgrid_2dx2d_order1.824:
..LN9355:
                                # LOE r12 r13 r14 r15 xmm0
..B16.113:                      # Preds ..B16.29                # Infreq
..LN9356:
        vmovsd    %xmm0, 4320(%rsp)                             #580.18
..LN9357:
                                # LOE r12 r13 r14 r15
..B16.30:                       # Preds ..B16.113               # Infreq
..LN9358:
	.loc    1  581  is_stmt 1
        lea       672(%rsp), %rdi                               #581.13
..LN9359:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #581.13
..LN9360:
        lea       1088(%rsp), %rsi                              #581.13
..LN9361:
        movl      $4, %edx                                      #581.13
..___tag_value_create_xgrid_2dx2d_order1.825:
..LN9362:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #581.13
..___tag_value_create_xgrid_2dx2d_order1.826:
..LN9363:
                                # LOE r12 r13 r14 r15 eax
..B16.114:                      # Preds ..B16.30                # Infreq
..LN9364:
        movl      %eax, %ebx                                    #581.13
..LN9365:
                                # LOE r12 r13 r14 r15 ebx
..B16.31:                       # Preds ..B16.114               # Infreq
..LN9366:
	.loc    1  582  is_stmt 1
        movl      %ebx, %edi                                    #582.18
..LN9367:
        lea       672(%rsp), %rsi                               #582.18
..___tag_value_create_xgrid_2dx2d_order1.827:
..LN9368:
#       minval_double(int, const double *)
        call      minval_double                                 #582.18
..___tag_value_create_xgrid_2dx2d_order1.828:
..LN9369:
                                # LOE r12 r13 r14 r15 ebx xmm0
..B16.115:                      # Preds ..B16.31                # Infreq
..LN9370:
        vmovsd    %xmm0, 4184(%rsp)                             #582.18
..LN9371:
                                # LOE r12 r13 r14 r15 ebx
..B16.32:                       # Preds ..B16.115               # Infreq
..LN9372:
	.loc    1  583  is_stmt 1
        movl      %ebx, %edi                                    #583.18
..LN9373:
        lea       672(%rsp), %rsi                               #583.18
..___tag_value_create_xgrid_2dx2d_order1.829:
..LN9374:
#       maxval_double(int, const double *)
        call      maxval_double                                 #583.18
..___tag_value_create_xgrid_2dx2d_order1.830:
..LN9375:
                                # LOE r12 r13 r14 r15 ebx xmm0
..B16.116:                      # Preds ..B16.32                # Infreq
..LN9376:
        vmovsd    %xmm0, 4192(%rsp)                             #583.18
..LN9377:
                                # LOE r12 r13 r14 r15 ebx
..B16.33:                       # Preds ..B16.116               # Infreq
..LN9378:
	.loc    1  584  is_stmt 1
        movl      %ebx, %edi                                    #584.18
..LN9379:
        lea       672(%rsp), %rsi                               #584.18
..___tag_value_create_xgrid_2dx2d_order1.831:
..LN9380:
#       avgval_double(int, const double *)
        call      avgval_double                                 #584.18
..___tag_value_create_xgrid_2dx2d_order1.832:
..LN9381:
                                # LOE r12 r13 r14 r15 ebx xmm0
..B16.34:                       # Preds ..B16.33                # Infreq
..LN9382:
	.loc    1  586  is_stmt 1
        xorl      %ecx, %ecx                                    #586.33
..LN9383:
        xorl      %edx, %edx                                    #586.5
..LN9384:
        xorl      %eax, %eax                                    #586.33
..LN9385:
        cmpl      $0, 4240(%rsp)                                #586.18
..LN9386:
        jle       ..B16.26      # Prob 9%                       #586.18
..LN9387:
                                # LOE rax rcx r12 r13 r14 r15 edx ebx xmm0
..B16.35:                       # Preds ..B16.34                # Infreq
..LN9388:
	.loc    1  862  is_stmt 1
        movl      %ebx, %esi                                    #862.3
..LN9389:
        andl      $-4, %esi                                     #862.3
..LN9390:
	.loc    1  861  is_stmt 1
        movslq    %ebx, %r8                                     #861.3
..LN9391:
	.loc    1  862  is_stmt 1
        movslq    %esi, %rsi                                    #862.3
..LN9392:
        movq      %rsi, 4024(%rsp)                              #862.3
..LN9393:
        movq      %r8, 4056(%rsp)                               #862.3
..LN9394:
        vmovsd    %xmm0, 4200(%rsp)                             #862.3
..LN9395:
        movl      %ebx, 4048(%rsp)                              #862.3
..LN9396:
        movq      %r15, 4016(%rsp)                              #862.3
..LN9397:
        movq      %r13, 4032(%rsp)                              #862.3
..LN9398:
        movq      %r14, 4040(%rsp)                              #862.3
..LN9399:
        movq      %r12, 4008(%rsp)                              #862.3
..LN9400:
        movq      4264(%rsp), %rsi                              #862.3
..LN9401:
        movq      4248(%rsp), %r9                               #862.3
..LN9402:
        movl      4256(%rsp), %r10d                             #862.3
..LN9403:
        movq      24(%rbp), %rdi                                #862.3
..LN9404:
        movq      16(%rbp), %r8                                 #862.3
..LN9405:
                                # LOE rax rcx rsi rdi r8 r9 edx r10d
..B16.36:                       # Preds ..B16.84 ..B16.92 ..B16.35 # Infreq
..L833:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN9406:
	.loc    1  586  is_stmt 1
        xorl      %r12d, %r12d                                  #586.29
..LN9407:
        testl     %r10d, %r10d                                  #586.42
..LN9408:
        jle       ..B16.92      # Prob 10%                      #586.42
..LN9409:
                                # LOE rax rcx rsi rdi r8 r9 r12 edx r10d
..B16.37:                       # Preds ..B16.36                # Infreq
..LN9410:
	.loc    1  593  is_stmt 1
        movq      4224(%rsp), %r11                              #593.18
..LN9411:
	.loc    1  591  is_stmt 1
        lea       (%rdi,%rcx,8), %rbx                           #591.42
..LN9412:
	.loc    1  610  is_stmt 1
        movq      %rax, 4288(%rsp)                              #610.13
..LN9413:
	.loc    1  591  is_stmt 1
        lea       (%r8,%rcx,8), %r14                            #591.18
..LN9414:
	.loc    1  610  is_stmt 1
        movq      %rcx, 4280(%rsp)                              #610.13
..LN9415:
	.loc    1  593  is_stmt 1
        lea       (%rsi,%rcx,8), %r13                           #593.42
..LN9416:
	.loc    1  610  is_stmt 1
        movl      %edx, 4296(%rsp)                              #610.13
..LN9417:
	.loc    1  593  is_stmt 1
        lea       (%r11,%rcx,8), %r15                           #593.18
..LN9418:
	.loc    1  610  is_stmt 1
        movq      %rsi, 4264(%rsp)                              #610.13
..LN9419:
        lea       (%r9,%rax,8), %r11                            #610.13
..LN9420:
        movq      %r11, 4232(%rsp)                              #610.13
..LN9421:
                                # LOE rbx r12 r13 r14 r15
..B16.38:                       # Preds ..B16.83 ..B16.37       # Infreq
..L834:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN9422:
	.loc    1  596  is_stmt 1
        lea       1888(%rsp), %rsi                              #596.21
..LN9423:
	.loc    1  591  is_stmt 1
        movq      (%r14,%r12,8), %rax                           #591.18
..LN9424:
	.loc    1  596  is_stmt 1
        movl      $4, %edi                                      #596.21
..LN9425:
	.loc    1  591  is_stmt 1
        movq      %rax, -400(%rsi)                              #591.7
..LN9426:
        movq      (%rbx,%r12,8), %rdx                           #591.42
..LN9427:
	.loc    1  592  is_stmt 1
        movq      8(%rbx,%r12,8), %r8                           #592.42
..LN9428:
        movq      8(%r14,%r12,8), %rcx                          #592.18
..LN9429:
	.loc    1  593  is_stmt 1
        movq      16(%r15,%r12,8), %r9                          #593.18
..LN9430:
	.loc    1  594  is_stmt 1
        movq      8(%r15,%r12,8), %r11                          #594.18
..LN9431:
	.loc    1  593  is_stmt 1
        movq      16(%r13,%r12,8), %r10                         #593.42
..LN9432:
	.loc    1  594  is_stmt 1
        movq      8(%r13,%r12,8), %rax                          #594.42
..LN9433:
	.loc    1  591  is_stmt 1
        movq      %rdx, (%rsi)                                  #591.31
..LN9434:
	.loc    1  592  is_stmt 1
        movq      %rcx, -392(%rsi)                              #592.7
..LN9435:
        movq      %r8, 8(%rsi)                                  #592.31
..LN9436:
	.loc    1  593  is_stmt 1
        movq      %r9, -384(%rsi)                               #593.7
..LN9437:
        movq      %r10, 16(%rsi)                                #593.31
..LN9438:
	.loc    1  594  is_stmt 1
        movq      %r11, -376(%rsi)                              #594.7
..LN9439:
        movq      %rax, 24(%rsi)                                #594.31
..LN9440:
	.loc    1  596  is_stmt 1
        vzeroupper                                              #596.21
..___tag_value_create_xgrid_2dx2d_order1.835:
..LN9441:
#       minval_double(int, const double *)
        call      minval_double                                 #596.21
..___tag_value_create_xgrid_2dx2d_order1.836:
..LN9442:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B16.118:                      # Preds ..B16.38                # Infreq
..LN9443:
        vmovsd    %xmm0, 4328(%rsp)                             #596.21
..LN9444:
                                # LOE rbx r12 r13 r14 r15
..B16.39:                       # Preds ..B16.118               # Infreq
..LN9445:
	.loc    1  597  is_stmt 1
        movl      $4, %edi                                      #597.21
..LN9446:
        lea       1888(%rsp), %rsi                              #597.21
..___tag_value_create_xgrid_2dx2d_order1.837:
..LN9447:
#       maxval_double(int, const double *)
        call      maxval_double                                 #597.21
..___tag_value_create_xgrid_2dx2d_order1.838:
..LN9448:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B16.119:                      # Preds ..B16.39                # Infreq
..LN9449:
        vmovapd   %xmm0, %xmm1                                  #597.21
..LN9450:
                                # LOE rbx r12 r13 r14 r15 xmm1
..B16.40:                       # Preds ..B16.119               # Infreq
..LN9451:
	.loc    1  598  is_stmt 1
        vmovsd    4328(%rsp), %xmm0                             #598.25
..LN9452:
        vcomisd   4320(%rsp), %xmm0                             #598.25
..LN9453:
        jae       ..B16.83      # Prob 50%                      #598.25
..LN9454:
                                # LOE rbx r12 r13 r14 r15 xmm1
..B16.41:                       # Preds ..B16.40                # Infreq
..LN9455:
        vmovsd    4304(%rsp), %xmm0                             #598.54
..LN9456:
        vcomisd   %xmm1, %xmm0                                  #598.54
..LN9457:
        jae       ..B16.83      # Prob 78%                      #598.54
..LN9458:
                                # LOE rbx r12 r13 r14 r15
..B16.42:                       # Preds ..B16.41                # Infreq
..LN9459:
	.loc    1  599  is_stmt 1
        lea       1488(%rsp), %rdi                              #599.15
..LN9460:
        vmovsd    2712(%rdi), %xmm0                             #599.15
..LN9461:
        lea       1888(%rsp), %rsi                              #599.15
..LN9462:
        movl      $4, %edx                                      #599.15
..___tag_value_create_xgrid_2dx2d_order1.839:
..LN9463:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #599.15
..___tag_value_create_xgrid_2dx2d_order1.840:
..LN9464:
                                # LOE rbx r12 r13 r14 r15 eax
..B16.120:                      # Preds ..B16.42                # Infreq
..LN9465:
        movl      %eax, 4216(%rsp)                              #599.15
..LN9466:
                                # LOE rax rbx r12 r13 r14 r15 eax al ah
..B16.43:                       # Preds ..B16.120               # Infreq
..LN9467:
	.loc    1  600  is_stmt 1
        lea       1488(%rsp), %rsi                              #600.21
..LN9468:
        movl      %eax, %edi                                    #600.21
..___tag_value_create_xgrid_2dx2d_order1.841:
..LN9469:
#       minval_double(int, const double *)
        call      minval_double                                 #600.21
..___tag_value_create_xgrid_2dx2d_order1.842:
..LN9470:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B16.121:                      # Preds ..B16.43                # Infreq
..LN9471:
        vmovsd    %xmm0, 4208(%rsp)                             #600.21
..LN9472:
                                # LOE rbx r12 r13 r14 r15
..B16.44:                       # Preds ..B16.121               # Infreq
..LN9473:
	.loc    1  601  is_stmt 1
        lea       1488(%rsp), %rsi                              #601.21
..LN9474:
        movl      2728(%rsi), %edi                              #601.21
..___tag_value_create_xgrid_2dx2d_order1.843:
..LN9475:
#       maxval_double(int, const double *)
        call      maxval_double                                 #601.21
..___tag_value_create_xgrid_2dx2d_order1.844:
..LN9476:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B16.122:                      # Preds ..B16.44                # Infreq
..LN9477:
        vmovapd   %xmm0, %xmm1                                  #601.21
..LN9478:
                                # LOE rbx r12 r13 r14 r15 xmm1
..B16.45:                       # Preds ..B16.122               # Infreq
..LN9479:
	.loc    1  606  is_stmt 1
        vmovsd    4208(%rsp), %xmm0                             #606.25
..LN9480:
        vcomisd   4192(%rsp), %xmm0                             #606.25
..LN9481:
        jae       ..B16.83      # Prob 50%                      #606.25
..LN9482:
                                # LOE rbx r12 r13 r14 r15 xmm1
..B16.46:                       # Preds ..B16.45                # Infreq
..LN9483:
        vmovsd    4184(%rsp), %xmm0                             #606.54
..LN9484:
        vcomisd   %xmm1, %xmm0                                  #606.54
..LN9485:
        jae       ..B16.83      # Prob 78%                      #606.54
..LN9486:
                                # LOE rbx r12 r13 r14 r15
..B16.47:                       # Preds ..B16.46                # Infreq
..LN9487:
	.loc    1  861  is_stmt 1
        movq      4056(%rsp), %rdx                              #861.3
..LN9488:
	.loc    1  862  is_stmt 1
        cmpl      $0, 4048(%rsp)                                #862.16
..LN9489:
        jle       ..B16.56      # Prob 50%                      #862.16
..LN9490:
                                # LOE rdx rbx r12 r13 r14 r15 edx dl dh
..B16.48:                       # Preds ..B16.47                # Infreq
..LN9491:
        cmpq      $4, 4056(%rsp)                                #862.3
..LN9492:
        jl        ..B16.91      # Prob 10%                      #862.3
..LN9493:
                                # LOE rdx rbx r12 r13 r14 r15 edx dl dh
..B16.49:                       # Preds ..B16.48                # Infreq
..LN9494:
        movq      4024(%rsp), %rax                              #862.3
..LN9495:
        xorl      %ecx, %ecx                                    #862.3
..LN9496:
        movq      %rax, %rsi                                    #862.3
..LN9497:
                                # LOE rax rdx rcx rbx rsi r12 r13 r14 r15
..B16.50:                       # Preds ..B16.50 ..B16.49       # Infreq
..L845:         # optimization report
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 4.070312
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # MAIN VECTOR TYPE: 64-bits floating point
..LN9498:
	.loc    1  608  is_stmt 1
        vmovupd   672(%rsp,%rcx,8), %ymm0                       #608.34
..LN9499:
        vmovupd   1088(%rsp,%rcx,8), %ymm1                      #608.41
..LN9500:
	.loc    1  863  is_stmt 1
        vmovupd   %ymm0, 3136(%rsp,%rcx,8)                      #863.5
..LN9501:
	.loc    1  864  is_stmt 1
        vmovupd   %ymm1, 3552(%rsp,%rcx,8)                      #864.5
..LN9502:
	.loc    1  862  is_stmt 1
        addq      $4, %rcx                                      #862.3
..LN9503:
        cmpq      %rsi, %rcx                                    #862.3
..LN9504:
        jb        ..B16.50      # Prob 98%                      #862.3
..LN9505:
                                # LOE rax rdx rcx rbx rsi r12 r13 r14 r15
..B16.51:                       # Preds ..B16.50                # Infreq
..LN9506:
        movq      %rsi, 4024(%rsp)                              #
..LN9507:
                                # LOE rax rdx rbx r12 r13 r14 r15
..B16.52:                       # Preds ..B16.51 ..B16.91       # Infreq
..LN9508:
        cmpq      4056(%rsp), %rax                              #862.3
..LN9509:
        jae       ..B16.56      # Prob 9%                       #862.3
..LN9510:
                                # LOE rax rdx rbx r12 r13 r14 r15
..B16.53:                       # Preds ..B16.52                # Infreq
..LN9511:
        movq      4056(%rsp), %rdi                              #
..LN9512:
                                # LOE rax rdx rbx rdi r12 r13 r14 r15
..B16.54:                       # Preds ..B16.54 ..B16.53       # Infreq
..L846:         # optimization report
                # LOOP WAS UNROLLED BY 1
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 4.070312
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
..LN9513:
	.loc    1  608  is_stmt 1
        movq      672(%rsp,%rax,8), %rcx                        #608.34
..LN9514:
        movq      1088(%rsp,%rax,8), %rsi                       #608.41
..LN9515:
	.loc    1  863  is_stmt 1
        movq      %rcx, 3136(%rsp,%rax,8)                       #863.5
..LN9516:
	.loc    1  864  is_stmt 1
        movq      %rsi, 3552(%rsp,%rax,8)                       #864.5
..LN9517:
	.loc    1  862  is_stmt 1
        incq      %rax                                          #862.3
..LN9518:
        cmpq      %rdi, %rax                                    #862.3
..LN9519:
        jb        ..B16.54      # Prob 98%                      #862.3
..LN9520:
                                # LOE rax rdx rbx rdi r12 r13 r14 r15
..B16.55:                       # Preds ..B16.54                # Infreq
..LN9521:
        movq      %rdi, 4056(%rsp)                              #
..LN9522:
                                # LOE rdx rbx r12 r13 r14 r15
..B16.56:                       # Preds ..B16.47 ..B16.52 ..B16.55 # Infreq
..LN9523:
	.loc    1  868  is_stmt 1
        movl      4216(%rsp), %eax                              #868.16
..LN9524:
        xorl      %ecx, %ecx                                    #868.3
..LN9525:
        testl     %eax, %eax                                    #868.16
..LN9526:
	.loc    1  866  is_stmt 1
        movslq    %eax, %rax                                    #866.10
..LN9527:
	.loc    1  608  is_stmt 1
        vmovsd    1480(%rsp,%rax,8), %xmm3                      #608.55
..LN9528:
        vmovsd    1880(%rsp,%rax,8), %xmm0                      #608.62
..LN9529:
	.loc    1  868  is_stmt 1
        jle       ..B16.79      # Prob 4%                       #868.16
..LN9530:
                                # LOE rax rdx rcx rbx r12 r13 r14 r15 xmm0 xmm3
..B16.57:                       # Preds ..B16.56                # Infreq
..LN9531:
        movq      %r15, 1080(%rsp)                              #
..LN9532:
        movq      %rcx, %r15                                    #
..LN9533:
        movq      %r13, 1072(%rsp)                              #
..LN9534:
        movq      %r14, 664(%rsp)                               #
..LN9535:
        movq      %rbx, 8(%rsp)                                 #
..LN9536:
        movq      %rdx, %rbx                                    #
..LN9537:
        movq      %r12, (%rsp)                                  #
..LN9538:
        vmovsd    .L_2il0floatpacket.11(%rip), %xmm1            #
..LN9539:
        vmovsd    .L_2il0floatpacket.10(%rip), %xmm2            #
..LN9540:
                                # LOE rax rbx r15 xmm0 xmm1 xmm2 xmm3
..B16.58:                       # Preds ..B16.77 ..B16.57       # Infreq
..L847:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN9541:
	.loc    1  874  is_stmt 1
        xorl      %r12d, %r12d                                  #874.15
..LN9542:
	.loc    1  608  is_stmt 1
        vmovsd    1888(%rsp,%r15,8), %xmm9                      #608.62
..LN9543:
	.loc    1  874  is_stmt 1
        xorl      %r13d, %r13d                                  #874.5
..LN9544:
	.loc    1  871  is_stmt 1
        vmovsd    3128(%rsp,%rbx,8), %xmm14                     #871.12
..LN9545:
	.loc    1  1130  is_stmt 1
        vsubsd    %xmm0, %xmm9, %xmm7                           #1130.27
..LN9546:
        vsubsd    %xmm3, %xmm14, %xmm5                          #1130.18
..LN9547:
	.loc    1  872  is_stmt 1
        vmovsd    3544(%rsp,%rbx,8), %xmm4                      #872.12
..LN9548:
	.loc    1  608  is_stmt 1
        vmovsd    1488(%rsp,%r15,8), %xmm10                     #608.55
..LN9549:
	.loc    1  1130  is_stmt 1
        vsubsd    %xmm0, %xmm4, %xmm11                          #1130.44
..LN9550:
        vmulsd    %xmm7, %xmm5, %xmm8                           #1130.27
..LN9551:
        vsubsd    %xmm10, %xmm3, %xmm6                          #1130.37
..LN9552:
	.loc    1  1131  is_stmt 1
        vfmadd213sd %xmm8, %xmm6, %xmm11                        #1131.21
..LN9553:
        vcmpgesd  %xmm11, %xmm2, %xmm12                         #1131.21
..LN9554:
        vmovd     %xmm12, %r14d                                 #1131.21
..LN9555:
        negl      %r14d                                         #1131.21
..LN9556:
	.loc    1  874  is_stmt 1
        testq     %rbx, %rbx                                    #874.27
..LN9557:
        jle       ..B16.88      # Prob 10%                      #874.27
..LN9558:
                                # LOE rax rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm6 xmm7 xmm9 xmm10 xmm14
..B16.59:                       # Preds ..B16.58                # Infreq
..LN9559:
	.loc    1  886  is_stmt 1
        vmulsd    %xmm9, %xmm3, %xmm5                           #886.25
..LN9560:
	.loc    1  884  is_stmt 1
        vxorpd    .L_2il0floatpacket.8(%rip), %xmm6, %xmm8      #884.13
..LN9561:
	.loc    1  886  is_stmt 1
        vfmsub231sd %xmm0, %xmm10, %xmm5                        #886.2
..LN9562:
        vmovsd    %xmm9, 2704(%rsp)                             #886.2
..LN9563:
        vmovsd    %xmm10, 2296(%rsp)                            #886.2
..LN9564:
        movq      %rax, 2288(%rsp)                              #886.2
..LN9565:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm14
..B16.60:                       # Preds ..B16.66 ..B16.59       # Infreq
..L848:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN9566:
	.loc    1  876  is_stmt 1
        vmovsd    3552(%rsp,%r13,8), %xmm13                     #876.14
..LN9567:
	.loc    1  875  is_stmt 1
        vmovsd    3136(%rsp,%r13,8), %xmm12                     #875.14
..LN9568:
	.loc    1  1130  is_stmt 1
        vsubsd    %xmm0, %xmm13, %xmm9                          #1130.44
..LN9569:
        vsubsd    %xmm3, %xmm12, %xmm10                         #1130.18
..LN9570:
        vmulsd    %xmm9, %xmm6, %xmm11                          #1130.44
..LN9571:
	.loc    1  1131  is_stmt 1
        vfmadd231sd %xmm7, %xmm10, %xmm11                       #1131.21
..LN9572:
        vcomisd   %xmm11, %xmm2                                 #1131.21
..LN9573:
        jb        ..B16.62      # Prob 50%                      #1131.21
..LN9574:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13 xmm14
..B16.61:                       # Preds ..B16.60                # Infreq
..LN9575:
	.loc    1  877  is_stmt 1
        cmpl      $1, %r14d                                     #877.72
..LN9576:
	.loc    1  1131  is_stmt 1
        movl      $1, %r14d                                     #1131.21
..LN9577:
	.loc    1  877  is_stmt 1
        jne       ..B16.63      # Prob 50%                      #877.72
..LN9578:
        jmp       ..B16.65      # Prob 100%                     #877.72
..LN9579:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13 xmm14
..B16.62:                       # Preds ..B16.60                # Infreq
..LN9580:
        testl     %r14d, %r14d                                  #877.72
..LN9581:
	.loc    1  1131  is_stmt 1
        movl      $0, %r14d                                     #1131.21
..LN9582:
	.loc    1  877  is_stmt 1
        je        ..B16.66      # Prob 50%                      #877.72
..LN9583:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13 xmm14
..B16.63:                       # Preds ..B16.61 ..B16.62       # Infreq
..LN9584:
	.loc    1  885  is_stmt 1
        vmulsd    %xmm13, %xmm14, %xmm9                         #885.25
..LN9585:
	.loc    1  881  is_stmt 1
        vsubsd    %xmm4, %xmm13, %xmm11                         #881.13
..LN9586:
	.loc    1  883  is_stmt 1
        vsubsd    %xmm14, %xmm12, %xmm10                        #883.13
..LN9587:
	.loc    1  885  is_stmt 1
        vfmsub213sd %xmm9, %xmm12, %xmm4                        #885.2
..LN9588:
	.loc    1  887  is_stmt 1
        vmulsd    %xmm8, %xmm11, %xmm9                          #887.25
..LN9589:
        vfmsub231sd %xmm10, %xmm7, %xmm9                        #887.2
..LN9590:
	.loc    1  888  is_stmt 1
        vandpd    .L_2il0floatpacket.9(%rip), %xmm9, %xmm14     #888.12
..LN9591:
        vcomisd   %xmm14, %xmm1                                 #888.27
..LN9592:
        ja        ..B16.89      # Prob 5%                       #888.27
..LN9593:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm9 xmm10 xmm11 xmm12 xmm13
..B16.64:                       # Preds ..B16.124 ..B16.63      # Infreq
..LN9594:
	.loc    1  892  is_stmt 1
        vmulsd    %xmm5, %xmm10, %xmm10                         #892.36
..LN9595:
	.loc    1  893  is_stmt 1
        vmulsd    %xmm5, %xmm11, %xmm11                         #893.36
..LN9596:
	.loc    1  892  is_stmt 1
        vfmsub231sd %xmm8, %xmm4, %xmm10                        #892.2
..LN9597:
	.loc    1  893  is_stmt 1
        vfmsub231sd %xmm7, %xmm4, %xmm11                        #893.2
..LN9598:
	.loc    1  892  is_stmt 1
        vdivsd    %xmm9, %xmm10, %xmm14                         #892.41
..LN9599:
	.loc    1  893  is_stmt 1
        vdivsd    %xmm9, %xmm11, %xmm4                          #893.41
..LN9600:
	.loc    1  608  is_stmt 1
        vmovsd    %xmm14, 2304(%rsp,%r12,8)                     #608.76
..LN9601:
        vmovsd    %xmm4, 2720(%rsp,%r12,8)                      #608.83
..LN9602:
	.loc    1  893  is_stmt 1
        incq      %r12                                          #893.10
..LN9603:
	.loc    1  897  is_stmt 1
        testl     %r14d, %r14d                                  #897.10
..LN9604:
        je        ..B16.66      # Prob 50%                      #897.10
..LN9605:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13
..B16.65:                       # Preds ..B16.61 ..B16.64       # Infreq
..LN9606:
	.loc    1  608  is_stmt 1
        vmovsd    %xmm12, 2304(%rsp,%r12,8)                     #608.76
..LN9607:
        vmovsd    %xmm13, 2720(%rsp,%r12,8)                     #608.83
..LN9608:
	.loc    1  899  is_stmt 1
        incq      %r12                                          #899.10
..LN9609:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13
..B16.66:                       # Preds ..B16.64 ..B16.62 ..B16.65 # Infreq
..LN9610:
	.loc    1  874  is_stmt 1
        incq      %r13                                          #874.5
..LN9611:
	.loc    1  901  is_stmt 1
        vmovapd   %xmm12, %xmm14                                #901.7
..LN9612:
	.loc    1  902  is_stmt 1
        vmovapd   %xmm13, %xmm4                                 #902.7
..LN9613:
	.loc    1  874  is_stmt 1
        cmpq      %rbx, %r13                                    #874.5
..LN9614:
        jb        ..B16.60      # Prob 98%                      #874.5
..LN9615:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm14
..B16.67:                       # Preds ..B16.66                # Infreq
..LN9616:
        vmovsd    2704(%rsp), %xmm9                             #
..LN9617:
	.loc    1  905  is_stmt 1
        movq      %r12, %rbx                                    #905.10
..LN9618:
        vmovsd    2296(%rsp), %xmm10                            #
..LN9619:
        movq      2288(%rsp), %rax                              #
..LN9620:
        testq     %r12, %r12                                    #905.10
..LN9621:
        je        ..B16.88      # Prob 20%                      #905.10
..LN9622:
                                # LOE rax rbx r12 r15 eax al ah xmm1 xmm2 xmm9 xmm10 ymm9 ymm10 zmm9 zmm10
..B16.68:                       # Preds ..B16.67                # Infreq
..LN9623:
	.loc    1  906  is_stmt 1
        jle       ..B16.77      # Prob 50%                      #906.18
..LN9624:
                                # LOE rax rbx r12 r15 eax al ah xmm1 xmm2 xmm9 xmm10 ymm9 ymm10 zmm9 zmm10
..B16.69:                       # Preds ..B16.68                # Infreq
..LN9625:
        movslq    %r12d, %r8                                    #906.5
..LN9626:
        cmpq      $4, %r8                                       #906.5
..LN9627:
        jl        ..B16.87      # Prob 10%                      #906.5
..LN9628:
                                # LOE rax rbx r8 r15 eax al ah xmm1 xmm2 xmm9 xmm10 ymm9 ymm10 zmm9 zmm10
..B16.70:                       # Preds ..B16.69                # Infreq
..LN9629:
        movl      %r8d, %edi                                    #906.5
..LN9630:
        xorl      %esi, %esi                                    #906.5
..LN9631:
        andl      $-4, %edi                                     #906.5
..LN9632:
        movslq    %edi, %rdi                                    #906.5
..LN9633:
                                # LOE rax rbx rsi rdi r8 r15 xmm1 xmm2 xmm9 xmm10
..B16.71:                       # Preds ..B16.71 ..B16.70       # Infreq
..L849:         # optimization report
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 4.070312
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # MAIN VECTOR TYPE: 64-bits floating point
..LN9634:
	.loc    1  608  is_stmt 1
        vmovupd   2304(%rsp,%rsi,8), %ymm0                      #608.76
..LN9635:
        vmovupd   2720(%rsp,%rsi,8), %ymm3                      #608.83
..LN9636:
	.loc    1  907  is_stmt 1
        vmovupd   %ymm0, 3136(%rsp,%rsi,8)                      #907.7
..LN9637:
	.loc    1  908  is_stmt 1
        vmovupd   %ymm3, 3552(%rsp,%rsi,8)                      #908.7
..LN9638:
	.loc    1  906  is_stmt 1
        addq      $4, %rsi                                      #906.5
..LN9639:
        cmpq      %rdi, %rsi                                    #906.5
..LN9640:
        jb        ..B16.71      # Prob 98%                      #906.5
..LN9641:
                                # LOE rax rbx rsi rdi r8 r15 xmm1 xmm2 xmm9 xmm10
..B16.73:                       # Preds ..B16.71 ..B16.87       # Infreq
..LN9642:
        cmpq      %r8, %rdi                                     #906.5
..LN9643:
        jae       ..B16.77      # Prob 10%                      #906.5
..LN9644:
                                # LOE rax rbx rdi r8 r15 xmm1 xmm2 xmm9 xmm10
..B16.75:                       # Preds ..B16.73 ..B16.75       # Infreq
..L850:         # optimization report
                # LOOP WAS UNROLLED BY 1
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 4.070312
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
..LN9645:
	.loc    1  608  is_stmt 1
        movq      2304(%rsp,%rdi,8), %rsi                       #608.76
..LN9646:
        movq      2720(%rsp,%rdi,8), %r9                        #608.83
..LN9647:
	.loc    1  907  is_stmt 1
        movq      %rsi, 3136(%rsp,%rdi,8)                       #907.7
..LN9648:
	.loc    1  908  is_stmt 1
        movq      %r9, 3552(%rsp,%rdi,8)                        #908.7
..LN9649:
	.loc    1  906  is_stmt 1
        incq      %rdi                                          #906.5
..LN9650:
        cmpq      %r8, %rdi                                     #906.5
..LN9651:
        jb        ..B16.75      # Prob 98%                      #906.5
..LN9652:
                                # LOE rax rbx rdi r8 r15 xmm1 xmm2 xmm9 xmm10
..B16.77:                       # Preds ..B16.75 ..B16.73 ..B16.68 # Infreq
..LN9653:
	.loc    1  868  is_stmt 1
        incq      %r15                                          #868.3
..LN9654:
	.loc    1  911  is_stmt 1
        vmovapd   %xmm10, %xmm3                                 #911.5
..LN9655:
	.loc    1  912  is_stmt 1
        vmovapd   %xmm9, %xmm0                                  #912.5
..LN9656:
	.loc    1  868  is_stmt 1
        cmpq      %rax, %r15                                    #868.3
..LN9657:
        jb        ..B16.58      # Prob 81%                      #868.3
..LN9658:
                                # LOE rax rbx r15 xmm0 xmm1 xmm2 xmm3
..B16.78:                       # Preds ..B16.77                # Infreq
..LN9659:
        movq      1080(%rsp), %r15                              #
..LN9660:
        movq      %rbx, %rdx                                    #
..LN9661:
        movq      1072(%rsp), %r13                              #
..LN9662:
        movq      664(%rsp), %r14                               #
..LN9663:
        movq      8(%rsp), %rbx                                 #
..LN9664:
        movq      (%rsp), %r12                                  #
..LN9665:
                                # LOE rdx rbx r12 r13 r14 r15
..B16.79:                       # Preds ..B16.78 ..B16.56       # Infreq
..LN9666:
	.loc    1  608  is_stmt 1
        testl     %edx, %edx                                    #608.94
..LN9667:
        jle       ..B16.83      # Prob 40%                      #608.94
..LN9668:
                                # LOE rbx r12 r13 r14 r15 edx
..B16.80:                       # Preds ..B16.79                # Infreq
..LN9669:
	.loc    1  609  is_stmt 1
        vzeroupper                                              #609.10
..LN9670:
        lea       2304(%rsp), %rdi                              #609.10
..LN9671:
        lea       2720(%rsp), %rsi                              #609.10
..___tag_value_create_xgrid_2dx2d_order1.851:
..LN9672:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #609.10
..___tag_value_create_xgrid_2dx2d_order1.852:
..LN9673:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B16.81:                       # Preds ..B16.80                # Infreq
..LN9674:
        movq      4032(%rsp), %rax                              #609.44
..LN9675:
        movq      4040(%rsp), %rcx                              #609.44
..LN9676:
	.loc    1  610  is_stmt 1
        movq      3952(%rsp), %rdx                              #610.13
..LN9677:
	.loc    1  611  is_stmt 1
        movq      4232(%rsp), %rsi                              #611.2
..LN9678:
	.loc    1  609  is_stmt 1
        vmulsd    (%rax,%rcx,8), %xmm0, %xmm2                   #609.44
..LN9679:
	.loc    1  610  is_stmt 1
        vmovsd    (%rdx,%rcx,8), %xmm0                          #610.13
..LN9680:
	.loc    1  611  is_stmt 1
        vminsd    (%rsi,%r12,8), %xmm0, %xmm0                   #611.2
..LN9681:
        vdivsd    %xmm0, %xmm2, %xmm1                           #611.12
..LN9682:
        vcomisd   .L_2il0floatpacket.2(%rip), %xmm1             #611.23
..LN9683:
        jbe       ..B16.83      # Prob 50%                      #611.23
..LN9684:
                                # LOE rbx r12 r13 r14 r15 xmm2
..B16.82:                       # Preds ..B16.81                # Infreq
..LN9685:
	.loc    1  612  is_stmt 1
        movl      16(%rsp), %r11d                               #612.4
..LN9686:
        movslq    %r11d, %r11                                   #612.4
..LN9687:
	.loc    1  613  is_stmt 1
        movq      40(%rbp), %rcx                                #613.4
..LN9688:
	.loc    1  614  is_stmt 1
        movq      48(%rbp), %rdi                                #614.4
..LN9689:
	.loc    1  615  is_stmt 1
        movq      56(%rbp), %r8                                 #615.4
..LN9690:
	.loc    1  612  is_stmt 1
        movq      72(%rbp), %rax                                #612.4
..LN9691:
	.loc    1  616  is_stmt 1
        movq      64(%rbp), %r10                                #616.4
..LN9692:
	.loc    1  613  is_stmt 1
        movq      4040(%rsp), %rdx                              #613.4
..LN9693:
	.loc    1  614  is_stmt 1
        movl      4000(%rsp), %esi                              #614.4
..LN9694:
	.loc    1  616  is_stmt 1
        movl      4296(%rsp), %r9d                              #616.4
..LN9695:
	.loc    1  613  is_stmt 1
        movl      %edx, (%rcx,%r11,4)                           #613.4
..LN9696:
	.loc    1  614  is_stmt 1
        movl      %esi, (%rdi,%r11,4)                           #614.4
..LN9697:
	.loc    1  615  is_stmt 1
        movl      %r12d, (%r8,%r11,4)                           #615.4
..LN9698:
	.loc    1  612  is_stmt 1
        vmovsd    %xmm2, (%rax,%r11,8)                          #612.4
..LN9699:
	.loc    1  616  is_stmt 1
        movl      %r9d, (%r10,%r11,4)                           #616.4
..LN9700:
	.loc    1  617  is_stmt 1
        incl      %r11d                                         #617.6
..LN9701:
        movl      %r11d, 16(%rsp)                               #617.6
..LN9702:
	.loc    1  618  is_stmt 1
        cmpl      $10000000, %r11d                              #618.16
..LN9703:
        jg        ..B16.86      # Prob 0%                       #618.16
..LN9704:
                                # LOE rbx r12 r13 r14 r15
..B16.83:                       # Preds ..B16.88 ..B16.86 ..B16.82 ..B16.81 ..B16.79
                                #       ..B16.46 ..B16.45 ..B16.41 ..B16.40 # Infreq
..LN9705:
	.loc    1  586  is_stmt 1
        incq      %r12                                          #586.29
..LN9706:
        cmpq      4312(%rsp), %r12                              #586.29
..LN9707:
        jb        ..B16.38      # Prob 82%                      #586.29
..LN9708:
                                # LOE rbx r12 r13 r14 r15
..B16.84:                       # Preds ..B16.83                # Infreq
..LN9709:
        movq      4288(%rsp), %rax                              #
..LN9710:
        movq      4280(%rsp), %rcx                              #
..LN9711:
        movl      4296(%rsp), %edx                              #
..LN9712:
        incl      %edx                                          #586.5
..LN9713:
        addq      4272(%rsp), %rcx                              #586.5
..LN9714:
        addq      4312(%rsp), %rax                              #586.5
..LN9715:
        movq      4264(%rsp), %rsi                              #
..LN9716:
        movq      4248(%rsp), %r9                               #
..LN9717:
        movl      4256(%rsp), %r10d                             #
..LN9718:
        movq      24(%rbp), %rdi                                #
..LN9719:
        movq      16(%rbp), %r8                                 #
..LN9720:
        cmpl      4240(%rsp), %edx                              #586.5
..LN9721:
        jb        ..B16.36      # Prob 82%                      #586.5
..LN9722:
                                # LOE rax rcx rsi rdi r8 r9 edx esi r10d sil
..B16.85:                       # Preds ..B16.84                # Infreq
..LN9723:
        movq      %rsi, 4264(%rsp)                              #
..LN9724:
        movq      4016(%rsp), %r15                              #
..LN9725:
        movq      4032(%rsp), %r13                              #
..LN9726:
        movq      4040(%rsp), %r14                              #
..LN9727:
        movq      4008(%rsp), %r12                              #
..LN9728:
        jmp       ..B16.26      # Prob 100%                     #
..LN9729:
                                # LOE r12 r13 r14 r15
..B16.86:                       # Preds ..B16.82                # Infreq
..LN9730:
	.loc    1  618  is_stmt 1
        movl      $.L_2__STRING.0, %edi                         #618.26
..___tag_value_create_xgrid_2dx2d_order1.853:
..LN9731:
#       error_handler(const char *)
        call      error_handler                                 #618.26
..___tag_value_create_xgrid_2dx2d_order1.854:
..LN9732:
        jmp       ..B16.83      # Prob 100%                     #618.26
..LN9733:
                                # LOE rbx r12 r13 r14 r15
..B16.87:                       # Preds ..B16.69                # Infreq
..LN9734:
	.loc    1  906  is_stmt 1
        xorl      %edi, %edi                                    #906.5
..LN9735:
        jmp       ..B16.73      # Prob 100%                     #906.5
..LN9736:
                                # LOE rax rbx rdi r8 r15 xmm1 xmm2 xmm9 xmm10
..B16.88:                       # Preds ..B16.58 ..B16.67       # Infreq
..LN9737:
        movq      1080(%rsp), %r15                              #
..LN9738:
        movq      1072(%rsp), %r13                              #
..LN9739:
        movq      664(%rsp), %r14                               #
..LN9740:
        movq      8(%rsp), %rbx                                 #
..LN9741:
        movq      (%rsp), %r12                                  #
..LN9742:
        jmp       ..B16.83      # Prob 100%                     #
..LN9743:
                                # LOE rbx r12 r13 r14 r15
..B16.89:                       # Preds ..B16.63                # Infreq
..LN9744:
	.loc    1  889  is_stmt 1
        movl      $.L_2__STRING.1, %edi                         #889.4
..LN9745:
        vzeroupper                                              #889.4
..LN9746:
        vmovsd    %xmm9, 4064(%rsp)                             #889.4
..LN9747:
        vmovsd    %xmm10, 4072(%rsp)                            #889.4
..LN9748:
        vmovsd    %xmm11, 4080(%rsp)                            #889.4
..LN9749:
        vmovsd    %xmm12, 4088(%rsp)                            #889.4
..LN9750:
        vmovsd    %xmm13, 4096(%rsp)                            #889.4
..LN9751:
        vmovsd    %xmm4, 4104(%rsp)                             #889.4
..LN9752:
        vmovsd    %xmm5, 4112(%rsp)                             #889.4
..LN9753:
        vmovsd    %xmm8, 4120(%rsp)                             #889.4
..LN9754:
        vmovsd    %xmm7, 4128(%rsp)                             #889.4
..LN9755:
        vmovsd    %xmm6, 4136(%rsp)                             #889.4
..LN9756:
        vmovsd    %xmm0, 4144(%rsp)                             #889.4
..LN9757:
        vmovsd    %xmm3, 4152(%rsp)                             #889.4
..___tag_value_create_xgrid_2dx2d_order1.855:
..LN9758:
#       error_handler(const char *)
        call      error_handler                                 #889.4
..___tag_value_create_xgrid_2dx2d_order1.856:
..LN9759:
                                # LOE rbx r12 r13 r15 r14d
..B16.124:                      # Preds ..B16.89                # Infreq
..LN9760:
        vmovsd    .L_2il0floatpacket.10(%rip), %xmm2            #
..LN9761:
        vmovsd    .L_2il0floatpacket.11(%rip), %xmm1            #
..LN9762:
        vmovsd    4152(%rsp), %xmm3                             #
..LN9763:
        vmovsd    4144(%rsp), %xmm0                             #
..LN9764:
        vmovsd    4136(%rsp), %xmm6                             #
..LN9765:
        vmovsd    4128(%rsp), %xmm7                             #
..LN9766:
        vmovsd    4120(%rsp), %xmm8                             #
..LN9767:
        vmovsd    4112(%rsp), %xmm5                             #
..LN9768:
        vmovsd    4104(%rsp), %xmm4                             #
..LN9769:
        vmovsd    4096(%rsp), %xmm13                            #
..LN9770:
        vmovsd    4088(%rsp), %xmm12                            #
..LN9771:
        vmovsd    4080(%rsp), %xmm11                            #
..LN9772:
        vmovsd    4072(%rsp), %xmm10                            #
..LN9773:
        vmovsd    4064(%rsp), %xmm9                             #
..LN9774:
        jmp       ..B16.64      # Prob 100%                     #
..LN9775:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm9 xmm10 xmm11 xmm12 xmm13
..B16.91:                       # Preds ..B16.48                # Infreq
..LN9776:
	.loc    1  862  is_stmt 1
        xorl      %eax, %eax                                    #862.3
..LN9777:
        jmp       ..B16.52      # Prob 100%                     #862.3
..LN9778:
                                # LOE rax rdx rbx r12 r13 r14 r15
..B16.92:                       # Preds ..B16.36                # Infreq
..LN9779:
	.loc    1  586  is_stmt 1
        incl      %edx                                          #586.5
..LN9780:
        addq      4272(%rsp), %rcx                              #586.5
..LN9781:
        addq      4312(%rsp), %rax                              #586.5
..LN9782:
        cmpl      4240(%rsp), %edx                              #586.5
..LN9783:
        jb        ..B16.36      # Prob 82%                      #586.5
..LN9784:
                                # LOE rax rcx rsi rdi r8 r9 edx r10d
..B16.93:                       # Preds ..B16.92                # Infreq
..LN9785:
        movq      %rsi, 4264(%rsp)                              #
..LN9786:
        movq      4016(%rsp), %r15                              #
..LN9787:
        movq      4032(%rsp), %r13                              #
..LN9788:
        movq      4040(%rsp), %r14                              #
..LN9789:
        movq      4008(%rsp), %r12                              #
..LN9790:
        jmp       ..B16.26      # Prob 100%                     #
..LN9791:
                                # LOE r12 r13 r14 r15
..B16.95:                       # Preds ..B16.98 ..B16.27 ..B16.21 # Infreq
..LN9792:
	.loc    1  624  is_stmt 1
        movq      %rdx, %rdi                                    #624.3
..LN9793:
        vzeroupper                                              #624.3
..LN9794:
#       free(void *)
        call      free                                          #624.3
..LN9795:
                                # LOE
..B16.96:                       # Preds ..B16.95                # Infreq
..LN9796:
	.loc    1  625  is_stmt 1
        movq      4248(%rsp), %rdi                              #625.3
..LN9797:
#       free(void *)
        call      free                                          #625.3
..LN9798:
                                # LOE
..B16.97:                       # Preds ..B16.96                # Infreq
..LN9799:
	.loc    1  626  is_stmt 1
        movl      16(%rsp), %eax                                #626.10
..LN9800:
	.loc    1  626  epilogue_begin  is_stmt 1
        addq      $4344, %rsp                                   #626.10
	.cfi_restore 3
..LN9801:
        popq      %rbx                                          #626.10
	.cfi_restore 15
..LN9802:
        popq      %r15                                          #626.10
	.cfi_restore 14
..LN9803:
        popq      %r14                                          #626.10
	.cfi_restore 13
..LN9804:
        popq      %r13                                          #626.10
	.cfi_restore 12
..LN9805:
        popq      %r12                                          #626.10
..LN9806:
        movq      %rbp, %rsp                                    #626.10
..LN9807:
        popq      %rbp                                          #626.10
	.cfi_def_cfa 7, 8
	.cfi_restore 6
..LN9808:
        ret                                                     #626.10
	.cfi_def_cfa 6, 16
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_offset 6, -16
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN9809:
                                # LOE
..B16.98:                       # Preds ..B16.23                # Infreq
..LN9810:
	.loc    1  572  is_stmt 1
        incl      %ecx                                          #572.3
..LN9811:
        addq      %r12, %rax                                    #572.3
..LN9812:
        addq      3984(%rsp), %rsi                              #572.3
..LN9813:
        cmpl      3128(%rsp), %ecx                              #572.3
..LN9814:
        jb        ..B16.23      # Prob 82%                      #572.3
..LN9815:
        jmp       ..B16.95      # Prob 100%                     #572.3
..LN9816:
                                # LOE rax rdx rsi r8 r12 ecx ebx
..B16.100:                      # Preds ..B16.14                # Infreq
..LN9817:
	.loc    1  75  is_stmt 1
        incl      %esi                                          #75.18
..LN9818:
        addq      %r8, %rcx                                     #75.18
..LN9819:
        lea       1(%rax,%r9), %eax                             #75.18
..LN9820:
        cmpl      8(%rsp), %esi                                 #75.14
..LN9821:
        jl        ..B16.14      # Prob 82%                      #75.14
..LN9822:
        jmp       ..B16.20      # Prob 100%                     #75.14
..LN9823:
                                # LOE rdx rcx rdi r8 r10 eax esi r9d
..B16.102:                      # Preds ..B16.5                 # Infreq
..LN9824:
        incl      %r8d                                          #75.18
..LN9825:
        addq      %rdi, %rsi                                    #75.18
..LN9826:
        lea       1(%rcx,%rax), %ecx                            #75.18
..LN9827:
        cmpl      352(%rsp), %r8d                               #75.14
..LN9828:
        jl        ..B16.5       # Prob 82%                      #75.14
..LN9829:
        jmp       ..B16.11      # Prob 100%                     #75.14
..LN9830:
        .align    16,0x90
	.cfi_endproc
..LN9831:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..LN9832:
# mark_end;
	.type	create_xgrid_2dx2d_order1,@function
	.size	create_xgrid_2dx2d_order1,.-create_xgrid_2dx2d_order1
..LNcreate_xgrid_2dx2d_order1.9833:
.LNcreate_xgrid_2dx2d_order1:
	.data
# -- End  create_xgrid_2dx2d_order1
	.text
.L_2__routine_start_create_xgrid_2dx2d_order2__16:
# -- Begin  create_xgrid_2dx2d_order2_
	.text
# mark_begin;
       .align    16,0x90
	.globl create_xgrid_2dx2d_order2_
# --- create_xgrid_2dx2d_order2_(const int *, const int *, const int *, const int *, const double *, const double *, const double *, const double *, const double *, int *, int *, int *, int *, double *, double *, double *)
create_xgrid_2dx2d_order2_:
# parameter 1(nlon_in): %rdi
# parameter 2(nlat_in): %rsi
# parameter 3(nlon_out): %rdx
# parameter 4(nlat_out): %rcx
# parameter 5(lon_in): %r8
# parameter 6(lat_in): %r9
# parameter 7(lon_out): 16 + %rbp
# parameter 8(lat_out): 24 + %rbp
# parameter 9(mask_in): 32 + %rbp
# parameter 10(i_in): 40 + %rbp
# parameter 11(j_in): 48 + %rbp
# parameter 12(i_out): 56 + %rbp
# parameter 13(j_out): 64 + %rbp
# parameter 14(xgrid_area): 72 + %rbp
# parameter 15(xgrid_clon): 80 + %rbp
# parameter 16(xgrid_clat): 88 + %rbp
..B17.1:                        # Preds ..B17.0
	.cfi_startproc
..___tag_value_create_xgrid_2dx2d_order2_.876:
..L877:
                                                        #642.1
..LN9834:
	.loc    1  642  is_stmt 1
        pushq     %rbp                                          #642.1
	.cfi_def_cfa_offset 16
..LN9835:
        movq      %rsp, %rbp                                    #642.1
	.cfi_def_cfa 6, 16
	.cfi_offset 6, -16
..LN9836:
        andq      $-32, %rsp                                    #642.1
..LN9837:
        pushq     %r12                                          #642.1
..LN9838:
        pushq     %r13                                          #642.1
..LN9839:
        pushq     %r14                                          #642.1
..LN9840:
        pushq     %r15                                          #642.1
..LN9841:
        pushq     %rbx                                          #642.1
..LN9842:
        subq      $5368, %rsp                                   #642.1
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN9843:
        movq      %rsi, %r13                                    #642.1
..LN9844:
	.loc    1  663  prologue_end  is_stmt 1
        movl      (%rdi), %ebx                                  #663.10
..LN9845:
	.loc    1  642  is_stmt 1
        movq      %rdx, %r14                                    #642.1
..LN9846:
        movq      %rdi, (%rsp)                                  #642.1
..LN9847:
	.loc    1  673  is_stmt 1
        movl      %ebx, %edi                                    #673.24
..LN9848:
	.loc    1  642  is_stmt 1
        movq      %rcx, %r15                                    #642.1
..LN9849:
	.loc    1  664  is_stmt 1
        movl      (%r13), %r11d                                 #664.10
..LN9850:
	.loc    1  673  is_stmt 1
        imull     %r11d, %edi                                   #673.24
..LN9851:
        movslq    %edi, %rdi                                    #673.24
..LN9852:
	.loc    1  665  is_stmt 1
        movl      (%r14), %eax                                  #665.10
..LN9853:
	.loc    1  666  is_stmt 1
        movl      (%r15), %r10d                                 #666.10
..LN9854:
	.loc    1  673  is_stmt 1
        shlq      $3, %rdi                                      #673.24
..LN9855:
	.loc    1  665  is_stmt 1
        movl      %eax, 5248(%rsp)                              #665.10
..LN9856:
	.loc    1  692  is_stmt 1
        movslq    %eax, %rax                                    #692.33
..LN9857:
	.loc    1  642  is_stmt 1
        movq      %r9, 4120(%rsp)                               #642.1
..LN9858:
        movq      %r8, 4528(%rsp)                               #642.1
..LN9859:
	.loc    1  678  is_stmt 1
        movslq    %ebx, %r12                                    #678.31
..LN9860:
	.loc    1  664  is_stmt 1
        movl      %r11d, 4536(%rsp)                             #664.10
..LN9861:
	.loc    1  692  is_stmt 1
        movq      %rax, 5320(%rsp)                              #692.33
..LN9862:
	.loc    1  666  is_stmt 1
        movl      %r10d, 5256(%rsp)                             #666.10
..LN9863:
	.loc    1  667  is_stmt 1
        movl      $0, 944(%rsp)                                 #667.3
..LN9864:
	.loc    1  673  is_stmt 1
#       malloc(size_t)
        call      malloc                                        #673.24
..LN9865:
                                # LOE rax r12 r13 r14 r15 ebx
..B17.145:                      # Preds ..B17.1
..LN9866:
        movq      %rax, %rdx                                    #673.24
..LN9867:
                                # LOE rdx r12 r13 r14 r15 ebx
..B17.2:                        # Preds ..B17.145
..LN9868:
	.loc    1  674  is_stmt 1
        movl      5248(%rsp), %edi                              #674.24
..LN9869:
        imull     5256(%rsp), %edi                              #674.24
..LN9870:
        movslq    %edi, %rdi                                    #674.24
..LN9871:
        shlq      $3, %rdi                                      #674.24
..LN9872:
        movq      %rdx, 4944(%rsp)                              #674.24
..LN9873:
#       malloc(size_t)
        call      malloc                                        #674.24
..LN9874:
                                # LOE rax r12 r13 r14 r15 ebx
..B17.146:                      # Preds ..B17.2
..LN9875:
        movq      4944(%rsp), %rdx                              #
..LN9876:
        movq      %rax, 5264(%rsp)                              #674.24
..LN9877:
                                # LOE rdx r12 r13 r14 r15 edx ebx dl dh
..B17.3:                        # Preds ..B17.146
..LN9878:
	.loc    1  71  is_stmt 1
        movq      (%rsp), %rax                                  #71.9
..LN9879:
	.loc    1  75  is_stmt 1
        xorl      %r8d, %r8d                                    #75.7
..LN9880:
	.loc    1  72  is_stmt 1
        movl      (%r13), %r9d                                  #72.9
..LN9881:
	.loc    1  75  is_stmt 1
        xorl      %esi, %esi                                    #75.9
..LN9882:
	.loc    1  71  is_stmt 1
        movl      (%rax), %eax                                  #71.9
..LN9883:
	.loc    1  75  is_stmt 1
        movslq    %eax, %rdi                                    #75.18
..LN9884:
        testl     %r9d, %r9d                                    #75.14
..LN9885:
        jle       ..B17.12      # Prob 10%                      #75.14
..LN9886:
                                # LOE rdx rsi rdi r12 r14 r15 eax edx ebx r8d r9d dl dh
..B17.4:                        # Preds ..B17.3
..LN9887:
        movl      %r9d, 24(%rsp)                                #75.9
..LN9888:
        xorl      %ecx, %ecx                                    #75.9
..LN9889:
        movq      %r12, 5016(%rsp)                              #75.9
..LN9890:
        movl      %ebx, 4952(%rsp)                              #75.9
..LN9891:
        movq      %r14, 8(%rsp)                                 #75.9
..LN9892:
        movq      %r15, (%rsp)                                  #75.9
..LN9893:
        movq      4528(%rsp), %r9                               #75.9
..LN9894:
        movq      4120(%rsp), %r10                              #75.9
..LN9895:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B17.5:                        # Preds ..B17.10 ..B17.141 ..B17.4
..L887:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN9896:
        xorl      %r12d, %r12d                                  #75.27
..LN9897:
        testl     %eax, %eax                                    #75.36
..LN9898:
        jle       ..B17.141     # Prob 10%                      #75.36
..LN9899:
                                # LOE rdx rsi rdi r9 r10 r12 eax ecx r8d
..B17.6:                        # Preds ..B17.5
..LN9900:
	.loc    1  85  is_stmt 1
        movq      %rsi, 40(%rsp)                                #85.5
..LN9901:
	.loc    1  78  is_stmt 1
        lea       (%rax,%rcx), %r13d                            #78.25
..LN9902:
        movslq    %r13d, %r13                                   #78.15
..LN9903:
	.loc    1  85  is_stmt 1
        lea       (%rdx,%rsi,8), %r11                           #85.5
..LN9904:
	.loc    1  76  is_stmt 1
        movslq    %ecx, %rcx                                    #76.15
..LN9905:
	.loc    1  85  is_stmt 1
        movq      %r11, 64(%rsp)                                #85.5
..LN9906:
        movl      %ecx, 48(%rsp)                                #85.5
..LN9907:
        movl      %r8d, 32(%rsp)                                #85.5
..LN9908:
	.loc    1  78  is_stmt 1
        lea       (%r9,%r13,8), %rbx                            #78.15
..LN9909:
	.loc    1  85  is_stmt 1
        movq      %rdi, 56(%rsp)                                #85.5
..LN9910:
	.loc    1  82  is_stmt 1
        lea       (%r10,%r13,8), %r13                           #82.15
..LN9911:
	.loc    1  85  is_stmt 1
        movl      %eax, 16(%rsp)                                #85.5
..LN9912:
	.loc    1  80  is_stmt 1
        lea       (%r10,%rcx,8), %r14                           #80.15
..LN9913:
	.loc    1  85  is_stmt 1
        movq      %rdx, 4944(%rsp)                              #85.5
..LN9914:
	.loc    1  76  is_stmt 1
        lea       (%r9,%rcx,8), %r15                            #76.15
..LN9915:
                                # LOE rbx r12 r13 r14 r15
..B17.7:                        # Preds ..B17.9 ..B17.6
..L888:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN9916:
	.loc    1  84  is_stmt 1
        lea       1016(%rsp), %rdi                              #84.12
..LN9917:
	.loc    1  76  is_stmt 1
        movq      (%r15,%r12,8), %rax                           #76.15
..LN9918:
	.loc    1  84  is_stmt 1
        lea       1176(%rsp), %rsi                              #84.12
..LN9919:
	.loc    1  83  is_stmt 1
        movq      8(%r13,%r12,8), %rdx                          #83.15
..LN9920:
	.loc    1  76  is_stmt 1
        movq      %rax, -160(%rsi)                              #76.5
..LN9921:
	.loc    1  77  is_stmt 1
        movq      8(%r15,%r12,8), %rcx                          #77.15
..LN9922:
	.loc    1  78  is_stmt 1
        movq      16(%rbx,%r12,8), %r8                          #78.15
..LN9923:
	.loc    1  79  is_stmt 1
        movq      8(%rbx,%r12,8), %r9                           #79.15
..LN9924:
	.loc    1  80  is_stmt 1
        movq      (%r14,%r12,8), %r10                           #80.15
..LN9925:
	.loc    1  81  is_stmt 1
        movq      8(%r14,%r12,8), %r11                          #81.15
..LN9926:
	.loc    1  82  is_stmt 1
        movq      16(%r13,%r12,8), %rax                         #82.15
..LN9927:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN9928:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN9929:
	.loc    1  77  is_stmt 1
        movq      %rcx, -152(%rsi)                              #77.5
..LN9930:
	.loc    1  78  is_stmt 1
        movq      %r8, -144(%rsi)                               #78.5
..LN9931:
	.loc    1  79  is_stmt 1
        movq      %r9, -136(%rsi)                               #79.5
..LN9932:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN9933:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN9934:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN9935:
	.loc    1  84  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_2dx2d_order2_.889:
..LN9936:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_2dx2d_order2_.890:
..LN9937:
                                # LOE rbx r12 r13 r14 r15 eax
..B17.8:                        # Preds ..B17.7
..LN9938:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN9939:
        lea       1016(%rsp), %rdi                              #85.20
..LN9940:
        lea       1176(%rsp), %rsi                              #85.20
..___tag_value_create_xgrid_2dx2d_order2_.891:
..LN9941:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_2dx2d_order2_.892:
..LN9942:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B17.9:                        # Preds ..B17.8
..LN9943:
        movq      64(%rsp), %rax                                #85.5
..LN9944:
        vmovsd    %xmm0, (%rax,%r12,8)                          #85.5
..LN9945:
	.loc    1  75  is_stmt 1
        incq      %r12                                          #75.40
..LN9946:
        cmpq      56(%rsp), %r12                                #75.36
..LN9947:
        jl        ..B17.7       # Prob 82%                      #75.36
..LN9948:
                                # LOE rbx r12 r13 r14 r15
..B17.10:                       # Preds ..B17.9
..LN9949:
        movl      32(%rsp), %r8d                                #
..LN9950:
        incl      %r8d                                          #75.18
..LN9951:
        movq      40(%rsp), %rsi                                #
..LN9952:
        movq      56(%rsp), %rdi                                #
..LN9953:
        addq      %rdi, %rsi                                    #75.18
..LN9954:
        movl      48(%rsp), %ecx                                #
..LN9955:
        movl      16(%rsp), %eax                                #
..LN9956:
        lea       1(%rcx,%rax), %ecx                            #75.18
..LN9957:
        movq      4944(%rsp), %rdx                              #
..LN9958:
        movq      4528(%rsp), %r9                               #
..LN9959:
        movq      4120(%rsp), %r10                              #
..LN9960:
        cmpl      24(%rsp), %r8d                                #75.14
..LN9961:
        jl        ..B17.5       # Prob 82%                      #75.14
..LN9962:
                                # LOE rdx rsi rdi r9 r10 eax edx ecx r8d dl dh
..B17.11:                       # Preds ..B17.141 ..B17.10      # Infreq
..LN9963:
        movq      5016(%rsp), %r12                              #
..LN9964:
        movl      4952(%rsp), %ebx                              #
..LN9965:
        movq      8(%rsp), %r14                                 #
..LN9966:
        movq      (%rsp), %r15                                  #
..LN9967:
                                # LOE rdx r12 r14 r15 ebx
..B17.12:                       # Preds ..B17.11 ..B17.3        # Infreq
..LN9968:
	.loc    1  71  is_stmt 1
        movl      (%r14), %r9d                                  #71.9
..LN9969:
	.loc    1  75  is_stmt 1
        xorl      %esi, %esi                                    #75.7
..LN9970:
	.loc    1  72  is_stmt 1
        movl      (%r15), %r10d                                 #72.9
..LN9971:
	.loc    1  75  is_stmt 1
        xorl      %ecx, %ecx                                    #75.9
..LN9972:
        movslq    %r9d, %r8                                     #75.18
..LN9973:
        testl     %r10d, %r10d                                  #75.14
..LN9974:
        jle       ..B17.21      # Prob 10%                      #75.14
..LN9975:
                                # LOE rdx rcx r8 r12 ebx esi r9d r10d
..B17.13:                       # Preds ..B17.12                # Infreq
..LN9976:
        movl      %r10d, 8(%rsp)                                #75.9
..LN9977:
        xorl      %eax, %eax                                    #75.9
..LN9978:
        movq      %rdx, 4944(%rsp)                              #75.9
..LN9979:
        movq      %r12, 5016(%rsp)                              #75.9
..LN9980:
        movl      %ebx, 4952(%rsp)                              #75.9
..LN9981:
        movq      24(%rbp), %r10                                #75.9
..LN9982:
        movq      16(%rbp), %rdx                                #75.9
..LN9983:
        movq      5264(%rsp), %rdi                              #75.9
..LN9984:
                                # LOE rdx rcx rdi r8 r10 eax esi r9d
..B17.14:                       # Preds ..B17.19 ..B17.139 ..B17.13 # Infreq
..L893:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN9985:
        xorl      %r13d, %r13d                                  #75.27
..LN9986:
        testl     %r9d, %r9d                                    #75.36
..LN9987:
        jle       ..B17.139     # Prob 10%                      #75.36
..LN9988:
                                # LOE rdx rcx rdi r8 r10 r13 eax esi r9d
..B17.15:                       # Preds ..B17.14                # Infreq
..LN9989:
	.loc    1  85  is_stmt 1
        movq      %rcx, 24(%rsp)                                #85.5
..LN9990:
	.loc    1  78  is_stmt 1
        lea       (%r9,%rax), %ebx                              #78.25
..LN9991:
        movslq    %ebx, %rbx                                    #78.15
..LN9992:
	.loc    1  85  is_stmt 1
        lea       (%rdi,%rcx,8), %r11                           #85.5
..LN9993:
	.loc    1  76  is_stmt 1
        movslq    %eax, %rax                                    #76.15
..LN9994:
	.loc    1  85  is_stmt 1
        movq      %r11, 48(%rsp)                                #85.5
..LN9995:
        movl      %eax, 32(%rsp)                                #85.5
..LN9996:
        movl      %esi, 16(%rsp)                                #85.5
..LN9997:
	.loc    1  78  is_stmt 1
        lea       (%rdx,%rbx,8), %r12                           #78.15
..LN9998:
	.loc    1  85  is_stmt 1
        movq      %r8, 40(%rsp)                                 #85.5
..LN9999:
	.loc    1  82  is_stmt 1
        lea       (%r10,%rbx,8), %rbx                           #82.15
..LN10000:
	.loc    1  85  is_stmt 1
        movl      %r9d, (%rsp)                                  #85.5
..LN10001:
	.loc    1  80  is_stmt 1
        lea       (%r10,%rax,8), %r14                           #80.15
..LN10002:
	.loc    1  76  is_stmt 1
        lea       (%rdx,%rax,8), %r15                           #76.15
..LN10003:
                                # LOE rbx r12 r13 r14 r15
..B17.16:                       # Preds ..B17.18 ..B17.15       # Infreq
..L894:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN10004:
	.loc    1  84  is_stmt 1
        lea       1336(%rsp), %rdi                              #84.12
..LN10005:
	.loc    1  76  is_stmt 1
        movq      (%r15,%r13,8), %rax                           #76.15
..LN10006:
	.loc    1  84  is_stmt 1
        lea       1496(%rsp), %rsi                              #84.12
..LN10007:
	.loc    1  83  is_stmt 1
        movq      8(%rbx,%r13,8), %rdx                          #83.15
..LN10008:
	.loc    1  76  is_stmt 1
        movq      %rax, -160(%rsi)                              #76.5
..LN10009:
	.loc    1  77  is_stmt 1
        movq      8(%r15,%r13,8), %rcx                          #77.15
..LN10010:
	.loc    1  78  is_stmt 1
        movq      16(%r12,%r13,8), %r8                          #78.15
..LN10011:
	.loc    1  79  is_stmt 1
        movq      8(%r12,%r13,8), %r9                           #79.15
..LN10012:
	.loc    1  80  is_stmt 1
        movq      (%r14,%r13,8), %r10                           #80.15
..LN10013:
	.loc    1  81  is_stmt 1
        movq      8(%r14,%r13,8), %r11                          #81.15
..LN10014:
	.loc    1  82  is_stmt 1
        movq      16(%rbx,%r13,8), %rax                         #82.15
..LN10015:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN10016:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN10017:
	.loc    1  77  is_stmt 1
        movq      %rcx, -152(%rsi)                              #77.5
..LN10018:
	.loc    1  78  is_stmt 1
        movq      %r8, -144(%rsi)                               #78.5
..LN10019:
	.loc    1  79  is_stmt 1
        movq      %r9, -136(%rsi)                               #79.5
..LN10020:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN10021:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN10022:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN10023:
	.loc    1  84  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_2dx2d_order2_.895:
..LN10024:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_2dx2d_order2_.896:
..LN10025:
                                # LOE rbx r12 r13 r14 r15 eax
..B17.17:                       # Preds ..B17.16                # Infreq
..LN10026:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN10027:
        lea       1336(%rsp), %rdi                              #85.20
..LN10028:
        lea       1496(%rsp), %rsi                              #85.20
..___tag_value_create_xgrid_2dx2d_order2_.897:
..LN10029:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_2dx2d_order2_.898:
..LN10030:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B17.18:                       # Preds ..B17.17                # Infreq
..LN10031:
        movq      48(%rsp), %rax                                #85.5
..LN10032:
        vmovsd    %xmm0, (%rax,%r13,8)                          #85.5
..LN10033:
	.loc    1  75  is_stmt 1
        incq      %r13                                          #75.40
..LN10034:
        cmpq      40(%rsp), %r13                                #75.36
..LN10035:
        jl        ..B17.16      # Prob 82%                      #75.36
..LN10036:
                                # LOE rbx r12 r13 r14 r15
..B17.19:                       # Preds ..B17.18                # Infreq
..LN10037:
        movl      16(%rsp), %esi                                #
..LN10038:
        incl      %esi                                          #75.18
..LN10039:
        movq      24(%rsp), %rcx                                #
..LN10040:
        movq      40(%rsp), %r8                                 #
..LN10041:
        addq      %r8, %rcx                                     #75.18
..LN10042:
        movl      32(%rsp), %eax                                #
..LN10043:
        movl      (%rsp), %r9d                                  #
..LN10044:
        lea       1(%rax,%r9), %eax                             #75.18
..LN10045:
        movq      5264(%rsp), %rdi                              #
..LN10046:
        movq      24(%rbp), %r10                                #
..LN10047:
        movq      16(%rbp), %rdx                                #
..LN10048:
        cmpl      8(%rsp), %esi                                 #75.14
..LN10049:
        jl        ..B17.14      # Prob 82%                      #75.14
..LN10050:
                                # LOE rdx rcx rdi r8 r10 eax esi r9d
..B17.20:                       # Preds ..B17.139 ..B17.19      # Infreq
..LN10051:
        movq      4944(%rsp), %rdx                              #
..LN10052:
        movq      5016(%rsp), %r12                              #
..LN10053:
        movl      4952(%rsp), %ebx                              #
..LN10054:
                                # LOE rdx r12 ebx
..B17.21:                       # Preds ..B17.20 ..B17.12       # Infreq
..LN10055:
	.loc    1  678  is_stmt 1
        xorl      %ecx, %ecx                                    #678.3
..LN10056:
        xorl      %eax, %eax                                    #678.31
..LN10057:
        cmpl      $0, 4536(%rsp)                                #678.16
..LN10058:
        jle       ..B17.124     # Prob 9%                       #678.16
..LN10059:
                                # LOE rax rdx r12 ecx ebx
..B17.22:                       # Preds ..B17.21                # Infreq
..LN10060:
	.loc    1  699  is_stmt 1
        movq      24(%rbp), %r9                                 #699.42
..LN10061:
	.loc    1  668  is_stmt 1
        lea       1(%rbx), %r14d                                #668.16
..LN10062:
	.loc    1  699  is_stmt 1
        movq      16(%rbp), %rsi                                #699.18
..LN10063:
        movq      5320(%rsp), %r15                              #699.42
..LN10064:
	.loc    1  956  is_stmt 1
        vxorpd    %xmm6, %xmm6, %xmm6                           #956.17
..LN10065:
	.loc    1  669  is_stmt 1
        movl      5248(%rsp), %r10d                             #669.16
..LN10066:
	.loc    1  683  is_stmt 1
        movq      4120(%rsp), %r13                              #683.39
..LN10067:
        movq      4528(%rsp), %r11                              #683.16
..LN10068:
	.loc    1  699  is_stmt 1
        lea       (%r9,%r15,8), %r9                             #699.42
..LN10069:
	.loc    1  678  is_stmt 1
        movslq    %r14d, %r14                                   #678.31
..LN10070:
	.loc    1  699  is_stmt 1
        lea       (%rsi,%r15,8), %r15                           #699.18
..LN10071:
	.loc    1  929  is_stmt 1
        movl      $8, %esi                                      #929.17
..LN10072:
	.loc    1  669  is_stmt 1
        lea       1(%r10), %r10d                                #669.16
..LN10073:
	.loc    1  692  is_stmt 1
        movslq    %r10d, %r10                                   #692.33
..LN10074:
	.loc    1  683  is_stmt 1
        lea       (%r13,%r12,8), %r13                           #683.39
..LN10075:
	.loc    1  678  is_stmt 1
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm9             #678.76
..LN10076:
	.loc    1  683  is_stmt 1
        lea       (%r11,%r12,8), %r11                           #683.16
..LN10077:
	.loc    1  687  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm8             #687.38
..LN10078:
	.loc    1  929  is_stmt 1
        vmovd     %esi, %xmm0                                   #929.17
..LN10079:
	.loc    1  678  is_stmt 1
        xorl      %esi, %esi                                    #678.31
..LN10080:
	.loc    1  929  is_stmt 1
        vpbroadcastd %xmm0, %ymm0                               #929.17
..LN10081:
	.loc    1  717  is_stmt 1
        vmovsd    .L_2il0floatpacket.2(%rip), %xmm7             #717.23
..LN10082:
	.loc    1  940  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm5             #940.13
..LN10083:
	.loc    1  939  is_stmt 1
        vmovsd    .L_2il0floatpacket.4(%rip), %xmm4             #939.30
..LN10084:
	.loc    1  942  is_stmt 1
        vmovsd    .L_2il0floatpacket.6(%rip), %xmm3             #942.21
..LN10085:
	.loc    1  1127  is_stmt 1
        vmovsd    .L_2il0floatpacket.10(%rip), %xmm2            #1127.23
..LN10086:
	.loc    1  888  is_stmt 1
        vmovsd    .L_2il0floatpacket.11(%rip), %xmm1            #888.27
..LN10087:
	.loc    1  642  is_stmt 1
        movq      32(%rbp), %r8                                 #642.1
..LN10088:
	.loc    1  678  is_stmt 1
        vmovdqu   %ymm0, 832(%rsp)                              #678.31
..LN10089:
        movq      %r15, 5232(%rsp)                              #678.31
..LN10090:
        movq      %r9, 5280(%rsp)                               #678.31
..LN10091:
        movq      %r10, 5272(%rsp)                              #678.31
..LN10092:
        movq      %r11, 4992(%rsp)                              #678.31
..LN10093:
        movq      %r13, 4984(%rsp)                              #678.31
..LN10094:
        movq      %r14, 4976(%rsp)                              #678.31
..LN10095:
                                # LOE rax rdx rsi r8 r12 ecx ebx
..B17.23:                       # Preds ..B17.27 ..B17.137 ..B17.22 # Infreq
..L899:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN10096:
        xorl      %r14d, %r14d                                  #678.27
..LN10097:
        testl     %ebx, %ebx                                    #678.40
..LN10098:
        jle       ..B17.137     # Prob 10%                      #678.40
..LN10099:
                                # LOE rax rdx rsi r8 r12 r14 ecx ebx
..B17.24:                       # Preds ..B17.23                # Infreq
..LN10100:
	.loc    1  681  is_stmt 1
        movq      4120(%rsp), %r11                              #681.39
..LN10101:
	.loc    1  716  is_stmt 1
        lea       (%rdx,%rax,8), %rdi                           #716.13
..LN10102:
	.loc    1  681  is_stmt 1
        movq      4528(%rsp), %r10                              #681.16
..LN10103:
	.loc    1  678  is_stmt 1
        lea       (%r8,%rax,8), %r13                            #678.55
..LN10104:
	.loc    1  683  is_stmt 1
        movq      4984(%rsp), %r9                               #683.39
..LN10105:
        movq      4992(%rsp), %r15                              #683.16
..LN10106:
	.loc    1  681  is_stmt 1
        lea       (%r11,%rsi,8), %r11                           #681.39
..LN10107:
	.loc    1  683  is_stmt 1
        movq      %r11, 5168(%rsp)                              #683.16
..LN10108:
	.loc    1  681  is_stmt 1
        lea       (%r10,%rsi,8), %r10                           #681.16
..LN10109:
	.loc    1  683  is_stmt 1
        movq      %r10, 5176(%rsp)                              #683.16
..LN10110:
        lea       (%r9,%rsi,8), %r9                             #683.39
..LN10111:
        movq      %r9, 5184(%rsp)                               #683.16
..LN10112:
        lea       (%r15,%rsi,8), %r15                           #683.16
..LN10113:
        movq      %rdi, 5008(%rsp)                              #683.16
..LN10114:
        movq      %rsi, 5000(%rsp)                              #683.16
..LN10115:
        movq      %rax, 4968(%rsp)                              #683.16
..LN10116:
        movl      %ecx, 4960(%rsp)                              #683.16
..LN10117:
        movq      %rdx, 4944(%rsp)                              #683.16
..LN10118:
        movl      %ebx, 4952(%rsp)                              #683.16
..LN10119:
                                # LOE r12 r13 r14 r15
..B17.25:                       # Preds ..B17.26 ..B17.24       # Infreq
..L900:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN10120:
	.loc    1  678  is_stmt 1
        vmovsd    (%r13,%r14,8), %xmm0                          #678.55
..LN10121:
        vcomisd   .L_2il0floatpacket.1(%rip), %xmm0             #678.76
..LN10122:
        ja        ..B17.28      # Prob 22%                      #678.76
..LN10123:
                                # LOE r12 r13 r14 r15
..B17.26:                       # Preds ..B17.121 ..B17.135 ..B17.34 ..B17.25 # Infreq
..LN10124:
        incq      %r14                                          #678.27
..LN10125:
        cmpq      %r12, %r14                                    #678.27
..LN10126:
        jb        ..B17.25      # Prob 82%                      #678.27
..LN10127:
                                # LOE r12 r13 r14 r15
..B17.27:                       # Preds ..B17.26                # Infreq
..LN10128:
        movq      5000(%rsp), %rsi                              #
..LN10129:
        movl      4960(%rsp), %ecx                              #
..LN10130:
        incl      %ecx                                          #678.3
..LN10131:
        movq      4968(%rsp), %rax                              #
..LN10132:
        addq      4976(%rsp), %rsi                              #678.3
..LN10133:
        addq      %r12, %rax                                    #678.3
..LN10134:
        movq      4944(%rsp), %rdx                              #
..LN10135:
        movl      4952(%rsp), %ebx                              #
..LN10136:
        movq      32(%rbp), %r8                                 #
..LN10137:
        cmpl      4536(%rsp), %ecx                              #678.3
..LN10138:
        jb        ..B17.23      # Prob 82%                      #678.3
..LN10139:
        jmp       ..B17.124     # Prob 100%                     #678.3
..LN10140:
                                # LOE rax rdx rsi r8 r12 edx ecx ebx dl dh
..B17.28:                       # Preds ..B17.25                # Infreq
..LN10141:
	.loc    1  681  is_stmt 1
        movq      5176(%rsp), %rcx                              #681.16
..LN10142:
	.loc    1  685  is_stmt 1
        movl      $4, %edi                                      #685.18
..LN10143:
	.loc    1  681  is_stmt 1
        movq      5168(%rsp), %r8                               #681.39
..LN10144:
	.loc    1  685  is_stmt 1
        lea       2080(%rsp), %rsi                              #685.18
..LN10145:
	.loc    1  683  is_stmt 1
        movq      16(%r15,%r14,8), %r10                         #683.16
..LN10146:
	.loc    1  681  is_stmt 1
        movq      (%rcx,%r14,8), %rax                           #681.16
..LN10147:
        movq      %rax, -416(%rsi)                              #681.5
..LN10148:
	.loc    1  683  is_stmt 1
        movq      3104(%rsi), %rax                              #683.39
..LN10149:
	.loc    1  681  is_stmt 1
        movq      (%r8,%r14,8), %rdx                            #681.39
..LN10150:
        movq      %rdx, (%rsi)                                  #681.28
..LN10151:
	.loc    1  683  is_stmt 1
        movq      16(%rax,%r14,8), %r11                         #683.39
..LN10152:
        movq      %r11, 16(%rsi)                                #683.28
..LN10153:
	.loc    1  682  is_stmt 1
        movq      8(%rcx,%r14,8), %rbx                          #682.16
..LN10154:
        movq      8(%r8,%r14,8), %r9                            #682.39
..LN10155:
	.loc    1  684  is_stmt 1
        movq      8(%r15,%r14,8), %r11                          #684.16
..LN10156:
        movq      8(%rax,%r14,8), %rdx                          #684.39
..LN10157:
	.loc    1  682  is_stmt 1
        movq      %rbx, -408(%rsi)                              #682.5
..LN10158:
        movq      %r9, 8(%rsi)                                  #682.28
..LN10159:
	.loc    1  683  is_stmt 1
        movq      %r10, -400(%rsi)                              #683.5
..LN10160:
	.loc    1  684  is_stmt 1
        movq      %r11, -392(%rsi)                              #684.5
..LN10161:
        movq      %rdx, 24(%rsi)                                #684.28
..LN10162:
	.loc    1  685  is_stmt 1
        vzeroupper                                              #685.18
..___tag_value_create_xgrid_2dx2d_order2_.901:
..LN10163:
#       minval_double(int, const double *)
        call      minval_double                                 #685.18
..___tag_value_create_xgrid_2dx2d_order2_.902:
..LN10164:
                                # LOE r12 r13 r14 r15 xmm0
..B17.151:                      # Preds ..B17.28                # Infreq
..LN10165:
        vmovsd    %xmm0, 5312(%rsp)                             #685.18
..LN10166:
                                # LOE r12 r13 r14 r15
..B17.29:                       # Preds ..B17.151               # Infreq
..LN10167:
	.loc    1  686  is_stmt 1
        movl      $4, %edi                                      #686.18
..LN10168:
        lea       2080(%rsp), %rsi                              #686.18
..___tag_value_create_xgrid_2dx2d_order2_.903:
..LN10169:
#       maxval_double(int, const double *)
        call      maxval_double                                 #686.18
..___tag_value_create_xgrid_2dx2d_order2_.904:
..LN10170:
                                # LOE r12 r13 r14 r15 xmm0
..B17.152:                      # Preds ..B17.29                # Infreq
..LN10171:
        vmovsd    %xmm0, 5328(%rsp)                             #686.18
..LN10172:
                                # LOE r12 r13 r14 r15
..B17.30:                       # Preds ..B17.152               # Infreq
..LN10173:
	.loc    1  687  is_stmt 1
        lea       1664(%rsp), %rdi                              #687.13
..LN10174:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #687.13
..LN10175:
        lea       2080(%rsp), %rsi                              #687.13
..LN10176:
        movl      $4, %edx                                      #687.13
..___tag_value_create_xgrid_2dx2d_order2_.905:
..LN10177:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #687.13
..___tag_value_create_xgrid_2dx2d_order2_.906:
..LN10178:
                                # LOE r12 r13 r14 r15 eax
..B17.153:                      # Preds ..B17.30                # Infreq
..LN10179:
        movl      %eax, %ebx                                    #687.13
..LN10180:
                                # LOE r12 r13 r14 r15 ebx
..B17.31:                       # Preds ..B17.153               # Infreq
..LN10181:
	.loc    1  688  is_stmt 1
        movl      %ebx, %edi                                    #688.18
..LN10182:
        lea       1664(%rsp), %rsi                              #688.18
..___tag_value_create_xgrid_2dx2d_order2_.907:
..LN10183:
#       minval_double(int, const double *)
        call      minval_double                                 #688.18
..___tag_value_create_xgrid_2dx2d_order2_.908:
..LN10184:
                                # LOE r12 r13 r14 r15 ebx xmm0
..B17.154:                      # Preds ..B17.31                # Infreq
..LN10185:
        vmovsd    %xmm0, 5192(%rsp)                             #688.18
..LN10186:
                                # LOE r12 r13 r14 r15 ebx
..B17.32:                       # Preds ..B17.154               # Infreq
..LN10187:
	.loc    1  689  is_stmt 1
        movl      %ebx, %edi                                    #689.18
..LN10188:
        lea       1664(%rsp), %rsi                              #689.18
..___tag_value_create_xgrid_2dx2d_order2_.909:
..LN10189:
#       maxval_double(int, const double *)
        call      maxval_double                                 #689.18
..___tag_value_create_xgrid_2dx2d_order2_.910:
..LN10190:
                                # LOE r12 r13 r14 r15 ebx xmm0
..B17.155:                      # Preds ..B17.32                # Infreq
..LN10191:
        vmovsd    %xmm0, 5200(%rsp)                             #689.18
..LN10192:
                                # LOE r12 r13 r14 r15 ebx
..B17.33:                       # Preds ..B17.155               # Infreq
..LN10193:
	.loc    1  690  is_stmt 1
        movl      %ebx, %edi                                    #690.18
..LN10194:
        lea       1664(%rsp), %rsi                              #690.18
..___tag_value_create_xgrid_2dx2d_order2_.911:
..LN10195:
#       avgval_double(int, const double *)
        call      avgval_double                                 #690.18
..___tag_value_create_xgrid_2dx2d_order2_.912:
..LN10196:
                                # LOE r12 r13 r14 r15 ebx xmm0
..B17.34:                       # Preds ..B17.33                # Infreq
..LN10197:
	.loc    1  692  is_stmt 1
        xorl      %ecx, %ecx                                    #692.33
..LN10198:
        xorl      %edx, %edx                                    #692.5
..LN10199:
        xorl      %eax, %eax                                    #692.33
..LN10200:
        cmpl      $0, 5256(%rsp)                                #692.18
..LN10201:
        jle       ..B17.26      # Prob 9%                       #692.18
..LN10202:
                                # LOE rax rcx r12 r13 r14 r15 edx ebx xmm0
..B17.35:                       # Preds ..B17.34                # Infreq
..LN10203:
	.loc    1  862  is_stmt 1
        movl      %ebx, %esi                                    #862.3
..LN10204:
        andl      $-4, %esi                                     #862.3
..LN10205:
	.loc    1  861  is_stmt 1
        movslq    %ebx, %r8                                     #861.3
..LN10206:
	.loc    1  862  is_stmt 1
        movslq    %esi, %rsi                                    #862.3
..LN10207:
        movq      %rsi, 5064(%rsp)                              #862.3
..LN10208:
        movq      %r8, 5056(%rsp)                               #862.3
..LN10209:
        vmovsd    %xmm0, 5208(%rsp)                             #862.3
..LN10210:
        movl      %ebx, 5048(%rsp)                              #862.3
..LN10211:
        movq      %r15, 5040(%rsp)                              #862.3
..LN10212:
        movq      %r13, 5032(%rsp)                              #862.3
..LN10213:
        movq      %r14, 5024(%rsp)                              #862.3
..LN10214:
        movq      %r12, 5016(%rsp)                              #862.3
..LN10215:
        movq      5280(%rsp), %rsi                              #862.3
..LN10216:
        movq      5264(%rsp), %r9                               #862.3
..LN10217:
        movl      5248(%rsp), %r10d                             #862.3
..LN10218:
        movq      24(%rbp), %rdi                                #862.3
..LN10219:
        movq      16(%rbp), %r8                                 #862.3
..LN10220:
                                # LOE rax rcx rsi rdi r8 r9 edx r10d
..B17.36:                       # Preds ..B17.120 ..B17.134 ..B17.35 # Infreq
..L913:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN10221:
	.loc    1  692  is_stmt 1
        xorl      %r14d, %r14d                                  #692.29
..LN10222:
        testl     %r10d, %r10d                                  #692.42
..LN10223:
        jle       ..B17.134     # Prob 10%                      #692.42
..LN10224:
                                # LOE rax rcx rsi rdi r8 r9 r14 edx r10d
..B17.37:                       # Preds ..B17.36                # Infreq
..LN10225:
	.loc    1  699  is_stmt 1
        movq      5232(%rsp), %rbx                              #699.18
..LN10226:
	.loc    1  716  is_stmt 1
        lea       (%r9,%rax,8), %r11                            #716.13
..LN10227:
        movq      %r11, 5240(%rsp)                              #716.13
..LN10228:
	.loc    1  697  is_stmt 1
        lea       (%rdi,%rcx,8), %r13                           #697.42
..LN10229:
	.loc    1  716  is_stmt 1
        movq      %rax, 5304(%rsp)                              #716.13
..LN10230:
	.loc    1  697  is_stmt 1
        lea       (%r8,%rcx,8), %r15                            #697.18
..LN10231:
	.loc    1  716  is_stmt 1
        movq      %rcx, 5296(%rsp)                              #716.13
..LN10232:
	.loc    1  699  is_stmt 1
        lea       (%rsi,%rcx,8), %r12                           #699.42
..LN10233:
	.loc    1  716  is_stmt 1
        movl      %edx, 5288(%rsp)                              #716.13
..LN10234:
	.loc    1  699  is_stmt 1
        lea       (%rbx,%rcx,8), %rbx                           #699.18
..LN10235:
	.loc    1  716  is_stmt 1
        movq      %rsi, 5280(%rsp)                              #716.13
..LN10236:
                                # LOE rbx r12 r13 r14 r15
..B17.38:                       # Preds ..B17.119 ..B17.37      # Infreq
..L914:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN10237:
	.loc    1  702  is_stmt 1
        lea       2896(%rsp), %rsi                              #702.21
..LN10238:
	.loc    1  697  is_stmt 1
        movq      (%r15,%r14,8), %rax                           #697.18
..LN10239:
	.loc    1  702  is_stmt 1
        movl      $4, %edi                                      #702.21
..LN10240:
	.loc    1  697  is_stmt 1
        movq      %rax, -400(%rsi)                              #697.7
..LN10241:
        movq      (%r13,%r14,8), %rdx                           #697.42
..LN10242:
	.loc    1  698  is_stmt 1
        movq      8(%r13,%r14,8), %r8                           #698.42
..LN10243:
        movq      8(%r15,%r14,8), %rcx                          #698.18
..LN10244:
	.loc    1  699  is_stmt 1
        movq      16(%rbx,%r14,8), %r9                          #699.18
..LN10245:
	.loc    1  700  is_stmt 1
        movq      8(%rbx,%r14,8), %r11                          #700.18
..LN10246:
	.loc    1  699  is_stmt 1
        movq      16(%r12,%r14,8), %r10                         #699.42
..LN10247:
	.loc    1  700  is_stmt 1
        movq      8(%r12,%r14,8), %rax                          #700.42
..LN10248:
	.loc    1  697  is_stmt 1
        movq      %rdx, (%rsi)                                  #697.31
..LN10249:
	.loc    1  698  is_stmt 1
        movq      %rcx, -392(%rsi)                              #698.7
..LN10250:
        movq      %r8, 8(%rsi)                                  #698.31
..LN10251:
	.loc    1  699  is_stmt 1
        movq      %r9, -384(%rsi)                               #699.7
..LN10252:
        movq      %r10, 16(%rsi)                                #699.31
..LN10253:
	.loc    1  700  is_stmt 1
        movq      %r11, -376(%rsi)                              #700.7
..LN10254:
        movq      %rax, 24(%rsi)                                #700.31
..LN10255:
	.loc    1  702  is_stmt 1
        vzeroupper                                              #702.21
..___tag_value_create_xgrid_2dx2d_order2_.915:
..LN10256:
#       minval_double(int, const double *)
        call      minval_double                                 #702.21
..___tag_value_create_xgrid_2dx2d_order2_.916:
..LN10257:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B17.157:                      # Preds ..B17.38                # Infreq
..LN10258:
        vmovsd    %xmm0, 5336(%rsp)                             #702.21
..LN10259:
                                # LOE rbx r12 r13 r14 r15
..B17.39:                       # Preds ..B17.157               # Infreq
..LN10260:
	.loc    1  703  is_stmt 1
        movl      $4, %edi                                      #703.21
..LN10261:
        lea       2896(%rsp), %rsi                              #703.21
..___tag_value_create_xgrid_2dx2d_order2_.917:
..LN10262:
#       maxval_double(int, const double *)
        call      maxval_double                                 #703.21
..___tag_value_create_xgrid_2dx2d_order2_.918:
..LN10263:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B17.158:                      # Preds ..B17.39                # Infreq
..LN10264:
        vmovapd   %xmm0, %xmm1                                  #703.21
..LN10265:
                                # LOE rbx r12 r13 r14 r15 xmm1
..B17.40:                       # Preds ..B17.158               # Infreq
..LN10266:
	.loc    1  704  is_stmt 1
        vmovsd    5336(%rsp), %xmm0                             #704.25
..LN10267:
        vcomisd   5328(%rsp), %xmm0                             #704.25
..LN10268:
        jae       ..B17.119     # Prob 50%                      #704.25
..LN10269:
                                # LOE rbx r12 r13 r14 r15 xmm1
..B17.41:                       # Preds ..B17.40                # Infreq
..LN10270:
        vmovsd    5312(%rsp), %xmm0                             #704.54
..LN10271:
        vcomisd   %xmm1, %xmm0                                  #704.54
..LN10272:
        jae       ..B17.119     # Prob 78%                      #704.54
..LN10273:
                                # LOE rbx r12 r13 r14 r15
..B17.42:                       # Preds ..B17.41                # Infreq
..LN10274:
	.loc    1  705  is_stmt 1
        lea       2496(%rsp), %rdi                              #705.15
..LN10275:
        vmovsd    2712(%rdi), %xmm0                             #705.15
..LN10276:
        lea       2896(%rsp), %rsi                              #705.15
..LN10277:
        movl      $4, %edx                                      #705.15
..___tag_value_create_xgrid_2dx2d_order2_.919:
..LN10278:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #705.15
..___tag_value_create_xgrid_2dx2d_order2_.920:
..LN10279:
                                # LOE rbx r12 r13 r14 r15 eax
..B17.159:                      # Preds ..B17.42                # Infreq
..LN10280:
        movl      %eax, 5224(%rsp)                              #705.15
..LN10281:
                                # LOE rax rbx r12 r13 r14 r15 eax al ah
..B17.43:                       # Preds ..B17.159               # Infreq
..LN10282:
	.loc    1  706  is_stmt 1
        lea       2496(%rsp), %rsi                              #706.21
..LN10283:
        movl      %eax, %edi                                    #706.21
..___tag_value_create_xgrid_2dx2d_order2_.921:
..LN10284:
#       minval_double(int, const double *)
        call      minval_double                                 #706.21
..___tag_value_create_xgrid_2dx2d_order2_.922:
..LN10285:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B17.160:                      # Preds ..B17.43                # Infreq
..LN10286:
        vmovsd    %xmm0, 5216(%rsp)                             #706.21
..LN10287:
                                # LOE rbx r12 r13 r14 r15
..B17.44:                       # Preds ..B17.160               # Infreq
..LN10288:
	.loc    1  707  is_stmt 1
        lea       2496(%rsp), %rsi                              #707.21
..LN10289:
        movl      2728(%rsi), %edi                              #707.21
..___tag_value_create_xgrid_2dx2d_order2_.923:
..LN10290:
#       maxval_double(int, const double *)
        call      maxval_double                                 #707.21
..___tag_value_create_xgrid_2dx2d_order2_.924:
..LN10291:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B17.161:                      # Preds ..B17.44                # Infreq
..LN10292:
        vmovapd   %xmm0, %xmm1                                  #707.21
..LN10293:
                                # LOE rbx r12 r13 r14 r15 xmm1
..B17.45:                       # Preds ..B17.161               # Infreq
..LN10294:
	.loc    1  712  is_stmt 1
        vmovsd    5216(%rsp), %xmm0                             #712.25
..LN10295:
        vcomisd   5200(%rsp), %xmm0                             #712.25
..LN10296:
        jae       ..B17.119     # Prob 50%                      #712.25
..LN10297:
                                # LOE rbx r12 r13 r14 r15 xmm1
..B17.46:                       # Preds ..B17.45                # Infreq
..LN10298:
        vmovsd    5192(%rsp), %xmm0                             #712.54
..LN10299:
        vcomisd   %xmm1, %xmm0                                  #712.54
..LN10300:
        jae       ..B17.119     # Prob 78%                      #712.54
..LN10301:
                                # LOE rbx r12 r13 r14 r15
..B17.47:                       # Preds ..B17.46                # Infreq
..LN10302:
	.loc    1  861  is_stmt 1
        movq      5056(%rsp), %rcx                              #861.3
..LN10303:
	.loc    1  862  is_stmt 1
        cmpl      $0, 5048(%rsp)                                #862.16
..LN10304:
        jle       ..B17.56      # Prob 50%                      #862.16
..LN10305:
                                # LOE rcx rbx r12 r13 r14 r15 ecx cl ch
..B17.48:                       # Preds ..B17.47                # Infreq
..LN10306:
        cmpq      $4, 5056(%rsp)                                #862.3
..LN10307:
        jl        ..B17.133     # Prob 10%                      #862.3
..LN10308:
                                # LOE rcx rbx r12 r13 r14 r15 ecx cl ch
..B17.49:                       # Preds ..B17.48                # Infreq
..LN10309:
        movq      5064(%rsp), %rax                              #862.3
..LN10310:
        xorl      %edx, %edx                                    #862.3
..LN10311:
        movq      %rax, %rsi                                    #862.3
..LN10312:
                                # LOE rax rdx rcx rbx rsi r12 r13 r14 r15
..B17.50:                       # Preds ..B17.50 ..B17.49       # Infreq
..L925:         # optimization report
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 4.070312
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # MAIN VECTOR TYPE: 64-bits floating point
..LN10313:
	.loc    1  714  is_stmt 1
        vmovupd   1664(%rsp,%rdx,8), %ymm0                      #714.34
..LN10314:
        vmovupd   2080(%rsp,%rdx,8), %ymm1                      #714.41
..LN10315:
	.loc    1  863  is_stmt 1
        vmovupd   %ymm0, 4128(%rsp,%rdx,8)                      #863.5
..LN10316:
	.loc    1  864  is_stmt 1
        vmovupd   %ymm1, 4544(%rsp,%rdx,8)                      #864.5
..LN10317:
	.loc    1  862  is_stmt 1
        addq      $4, %rdx                                      #862.3
..LN10318:
        cmpq      %rsi, %rdx                                    #862.3
..LN10319:
        jb        ..B17.50      # Prob 98%                      #862.3
..LN10320:
                                # LOE rax rdx rcx rbx rsi r12 r13 r14 r15
..B17.51:                       # Preds ..B17.50                # Infreq
..LN10321:
        movq      %rsi, 5064(%rsp)                              #
..LN10322:
                                # LOE rax rcx rbx r12 r13 r14 r15
..B17.52:                       # Preds ..B17.51 ..B17.133      # Infreq
..LN10323:
        cmpq      5056(%rsp), %rax                              #862.3
..LN10324:
        jae       ..B17.56      # Prob 9%                       #862.3
..LN10325:
                                # LOE rax rcx rbx r12 r13 r14 r15
..B17.53:                       # Preds ..B17.52                # Infreq
..LN10326:
        movq      5056(%rsp), %rdi                              #
..LN10327:
                                # LOE rax rcx rbx rdi r12 r13 r14 r15
..B17.54:                       # Preds ..B17.54 ..B17.53       # Infreq
..L926:         # optimization report
                # LOOP WAS UNROLLED BY 1
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 4.070312
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
..LN10328:
	.loc    1  714  is_stmt 1
        movq      1664(%rsp,%rax,8), %rdx                       #714.34
..LN10329:
        movq      2080(%rsp,%rax,8), %rsi                       #714.41
..LN10330:
	.loc    1  863  is_stmt 1
        movq      %rdx, 4128(%rsp,%rax,8)                       #863.5
..LN10331:
	.loc    1  864  is_stmt 1
        movq      %rsi, 4544(%rsp,%rax,8)                       #864.5
..LN10332:
	.loc    1  862  is_stmt 1
        incq      %rax                                          #862.3
..LN10333:
        cmpq      %rdi, %rax                                    #862.3
..LN10334:
        jb        ..B17.54      # Prob 98%                      #862.3
..LN10335:
                                # LOE rax rcx rbx rdi r12 r13 r14 r15
..B17.55:                       # Preds ..B17.54                # Infreq
..LN10336:
        movq      %rdi, 5056(%rsp)                              #
..LN10337:
                                # LOE rcx rbx r12 r13 r14 r15
..B17.56:                       # Preds ..B17.47 ..B17.52 ..B17.55 # Infreq
..LN10338:
	.loc    1  868  is_stmt 1
        movl      5224(%rsp), %eax                              #868.16
..LN10339:
        xorl      %edx, %edx                                    #868.3
..LN10340:
        testl     %eax, %eax                                    #868.16
..LN10341:
	.loc    1  866  is_stmt 1
        movslq    %eax, %rax                                    #866.10
..LN10342:
	.loc    1  714  is_stmt 1
        vmovsd    2488(%rsp,%rax,8), %xmm3                      #714.55
..LN10343:
        vmovsd    2888(%rsp,%rax,8), %xmm0                      #714.62
..LN10344:
	.loc    1  868  is_stmt 1
        jle       ..B17.79      # Prob 4%                       #868.16
..LN10345:
                                # LOE rax rdx rcx rbx r12 r13 r14 r15 xmm0 xmm3
..B17.57:                       # Preds ..B17.56                # Infreq
..LN10346:
        movq      %rbx, 2488(%rsp)                              #
..LN10347:
        movq      %rcx, %rbx                                    #
..LN10348:
        movq      %r12, 2480(%rsp)                              #
..LN10349:
        movq      %r15, 2072(%rsp)                              #
..LN10350:
        movq      %rdx, %r15                                    #
..LN10351:
        movq      %r13, 2064(%rsp)                              #
..LN10352:
        movq      %r14, 1656(%rsp)                              #
..LN10353:
        vmovsd    .L_2il0floatpacket.11(%rip), %xmm1            #
..LN10354:
        vmovsd    .L_2il0floatpacket.10(%rip), %xmm2            #
..LN10355:
                                # LOE rax rbx r15 xmm0 xmm1 xmm2 xmm3
..B17.58:                       # Preds ..B17.77 ..B17.57       # Infreq
..L927:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN10356:
	.loc    1  874  is_stmt 1
        xorl      %r12d, %r12d                                  #874.15
..LN10357:
	.loc    1  714  is_stmt 1
        vmovsd    2896(%rsp,%r15,8), %xmm9                      #714.62
..LN10358:
	.loc    1  874  is_stmt 1
        xorl      %r13d, %r13d                                  #874.5
..LN10359:
	.loc    1  871  is_stmt 1
        vmovsd    4120(%rsp,%rbx,8), %xmm14                     #871.12
..LN10360:
	.loc    1  1130  is_stmt 1
        vsubsd    %xmm0, %xmm9, %xmm7                           #1130.27
..LN10361:
        vsubsd    %xmm3, %xmm14, %xmm5                          #1130.18
..LN10362:
	.loc    1  872  is_stmt 1
        vmovsd    4536(%rsp,%rbx,8), %xmm4                      #872.12
..LN10363:
	.loc    1  714  is_stmt 1
        vmovsd    2496(%rsp,%r15,8), %xmm10                     #714.55
..LN10364:
	.loc    1  1130  is_stmt 1
        vsubsd    %xmm0, %xmm4, %xmm11                          #1130.44
..LN10365:
        vmulsd    %xmm7, %xmm5, %xmm8                           #1130.27
..LN10366:
        vsubsd    %xmm10, %xmm3, %xmm6                          #1130.37
..LN10367:
	.loc    1  1131  is_stmt 1
        vfmadd213sd %xmm8, %xmm6, %xmm11                        #1131.21
..LN10368:
        vcmpgesd  %xmm11, %xmm2, %xmm12                         #1131.21
..LN10369:
        vmovd     %xmm12, %r14d                                 #1131.21
..LN10370:
        negl      %r14d                                         #1131.21
..LN10371:
	.loc    1  874  is_stmt 1
        testq     %rbx, %rbx                                    #874.27
..LN10372:
        jle       ..B17.130     # Prob 10%                      #874.27
..LN10373:
                                # LOE rax rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm6 xmm7 xmm9 xmm10 xmm14
..B17.59:                       # Preds ..B17.58                # Infreq
..LN10374:
	.loc    1  886  is_stmt 1
        vmulsd    %xmm9, %xmm3, %xmm5                           #886.25
..LN10375:
	.loc    1  884  is_stmt 1
        vxorpd    .L_2il0floatpacket.8(%rip), %xmm6, %xmm8      #884.13
..LN10376:
	.loc    1  886  is_stmt 1
        vfmsub231sd %xmm0, %xmm10, %xmm5                        #886.2
..LN10377:
        vmovsd    %xmm9, 4112(%rsp)                             #886.2
..LN10378:
        vmovsd    %xmm10, 3704(%rsp)                            #886.2
..LN10379:
        movq      %rax, 3696(%rsp)                              #886.2
..LN10380:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm14
..B17.60:                       # Preds ..B17.66 ..B17.59       # Infreq
..L928:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN10381:
	.loc    1  876  is_stmt 1
        vmovsd    4544(%rsp,%r13,8), %xmm13                     #876.14
..LN10382:
	.loc    1  875  is_stmt 1
        vmovsd    4128(%rsp,%r13,8), %xmm12                     #875.14
..LN10383:
	.loc    1  1130  is_stmt 1
        vsubsd    %xmm0, %xmm13, %xmm9                          #1130.44
..LN10384:
        vsubsd    %xmm3, %xmm12, %xmm10                         #1130.18
..LN10385:
        vmulsd    %xmm9, %xmm6, %xmm11                          #1130.44
..LN10386:
	.loc    1  1131  is_stmt 1
        vfmadd231sd %xmm7, %xmm10, %xmm11                       #1131.21
..LN10387:
        vcomisd   %xmm11, %xmm2                                 #1131.21
..LN10388:
        jb        ..B17.62      # Prob 50%                      #1131.21
..LN10389:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13 xmm14
..B17.61:                       # Preds ..B17.60                # Infreq
..LN10390:
	.loc    1  877  is_stmt 1
        cmpl      $1, %r14d                                     #877.72
..LN10391:
	.loc    1  1131  is_stmt 1
        movl      $1, %r14d                                     #1131.21
..LN10392:
	.loc    1  877  is_stmt 1
        jne       ..B17.63      # Prob 50%                      #877.72
..LN10393:
        jmp       ..B17.65      # Prob 100%                     #877.72
..LN10394:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13 xmm14
..B17.62:                       # Preds ..B17.60                # Infreq
..LN10395:
        testl     %r14d, %r14d                                  #877.72
..LN10396:
	.loc    1  1131  is_stmt 1
        movl      $0, %r14d                                     #1131.21
..LN10397:
	.loc    1  877  is_stmt 1
        je        ..B17.66      # Prob 50%                      #877.72
..LN10398:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13 xmm14
..B17.63:                       # Preds ..B17.61 ..B17.62       # Infreq
..LN10399:
	.loc    1  885  is_stmt 1
        vmulsd    %xmm13, %xmm14, %xmm9                         #885.25
..LN10400:
	.loc    1  881  is_stmt 1
        vsubsd    %xmm4, %xmm13, %xmm11                         #881.13
..LN10401:
	.loc    1  883  is_stmt 1
        vsubsd    %xmm14, %xmm12, %xmm10                        #883.13
..LN10402:
	.loc    1  885  is_stmt 1
        vfmsub213sd %xmm9, %xmm12, %xmm4                        #885.2
..LN10403:
	.loc    1  887  is_stmt 1
        vmulsd    %xmm8, %xmm11, %xmm9                          #887.25
..LN10404:
        vfmsub231sd %xmm10, %xmm7, %xmm9                        #887.2
..LN10405:
	.loc    1  888  is_stmt 1
        vandpd    .L_2il0floatpacket.9(%rip), %xmm9, %xmm14     #888.12
..LN10406:
        vcomisd   %xmm14, %xmm1                                 #888.27
..LN10407:
        ja        ..B17.131     # Prob 5%                       #888.27
..LN10408:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm9 xmm10 xmm11 xmm12 xmm13
..B17.64:                       # Preds ..B17.171 ..B17.63      # Infreq
..LN10409:
	.loc    1  892  is_stmt 1
        vmulsd    %xmm5, %xmm10, %xmm10                         #892.36
..LN10410:
	.loc    1  893  is_stmt 1
        vmulsd    %xmm5, %xmm11, %xmm11                         #893.36
..LN10411:
	.loc    1  892  is_stmt 1
        vfmsub231sd %xmm8, %xmm4, %xmm10                        #892.2
..LN10412:
	.loc    1  893  is_stmt 1
        vfmsub231sd %xmm7, %xmm4, %xmm11                        #893.2
..LN10413:
	.loc    1  892  is_stmt 1
        vdivsd    %xmm9, %xmm10, %xmm14                         #892.41
..LN10414:
	.loc    1  893  is_stmt 1
        vdivsd    %xmm9, %xmm11, %xmm4                          #893.41
..LN10415:
	.loc    1  714  is_stmt 1
        vmovsd    %xmm14, 3296(%rsp,%r12,8)                     #714.76
..LN10416:
        vmovsd    %xmm4, 3712(%rsp,%r12,8)                      #714.83
..LN10417:
	.loc    1  893  is_stmt 1
        incq      %r12                                          #893.10
..LN10418:
	.loc    1  897  is_stmt 1
        testl     %r14d, %r14d                                  #897.10
..LN10419:
        je        ..B17.66      # Prob 50%                      #897.10
..LN10420:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13
..B17.65:                       # Preds ..B17.61 ..B17.64       # Infreq
..LN10421:
	.loc    1  714  is_stmt 1
        vmovsd    %xmm12, 3296(%rsp,%r12,8)                     #714.76
..LN10422:
        vmovsd    %xmm13, 3712(%rsp,%r12,8)                     #714.83
..LN10423:
	.loc    1  899  is_stmt 1
        incq      %r12                                          #899.10
..LN10424:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13
..B17.66:                       # Preds ..B17.64 ..B17.62 ..B17.65 # Infreq
..LN10425:
	.loc    1  874  is_stmt 1
        incq      %r13                                          #874.5
..LN10426:
	.loc    1  901  is_stmt 1
        vmovapd   %xmm12, %xmm14                                #901.7
..LN10427:
	.loc    1  902  is_stmt 1
        vmovapd   %xmm13, %xmm4                                 #902.7
..LN10428:
	.loc    1  874  is_stmt 1
        cmpq      %rbx, %r13                                    #874.5
..LN10429:
        jb        ..B17.60      # Prob 98%                      #874.5
..LN10430:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm14
..B17.67:                       # Preds ..B17.66                # Infreq
..LN10431:
        vmovsd    4112(%rsp), %xmm9                             #
..LN10432:
	.loc    1  905  is_stmt 1
        movq      %r12, %rbx                                    #905.10
..LN10433:
        vmovsd    3704(%rsp), %xmm10                            #
..LN10434:
        movq      3696(%rsp), %rax                              #
..LN10435:
        testq     %r12, %r12                                    #905.10
..LN10436:
        je        ..B17.130     # Prob 20%                      #905.10
..LN10437:
                                # LOE rax rbx r12 r15 eax al ah xmm1 xmm2 xmm9 xmm10 ymm9 ymm10 zmm9 zmm10
..B17.68:                       # Preds ..B17.67                # Infreq
..LN10438:
	.loc    1  906  is_stmt 1
        jle       ..B17.77      # Prob 50%                      #906.18
..LN10439:
                                # LOE rax rbx r12 r15 eax al ah xmm1 xmm2 xmm9 xmm10 ymm9 ymm10 zmm9 zmm10
..B17.69:                       # Preds ..B17.68                # Infreq
..LN10440:
        movslq    %r12d, %r8                                    #906.5
..LN10441:
        cmpq      $4, %r8                                       #906.5
..LN10442:
        jl        ..B17.129     # Prob 10%                      #906.5
..LN10443:
                                # LOE rax rbx r8 r15 eax al ah xmm1 xmm2 xmm9 xmm10 ymm9 ymm10 zmm9 zmm10
..B17.70:                       # Preds ..B17.69                # Infreq
..LN10444:
        movl      %r8d, %edi                                    #906.5
..LN10445:
        xorl      %esi, %esi                                    #906.5
..LN10446:
        andl      $-4, %edi                                     #906.5
..LN10447:
        movslq    %edi, %rdi                                    #906.5
..LN10448:
                                # LOE rax rbx rsi rdi r8 r15 xmm1 xmm2 xmm9 xmm10
..B17.71:                       # Preds ..B17.71 ..B17.70       # Infreq
..L929:         # optimization report
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 4.070312
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # MAIN VECTOR TYPE: 64-bits floating point
..LN10449:
	.loc    1  714  is_stmt 1
        vmovupd   3296(%rsp,%rsi,8), %ymm0                      #714.76
..LN10450:
        vmovupd   3712(%rsp,%rsi,8), %ymm3                      #714.83
..LN10451:
	.loc    1  907  is_stmt 1
        vmovupd   %ymm0, 4128(%rsp,%rsi,8)                      #907.7
..LN10452:
	.loc    1  908  is_stmt 1
        vmovupd   %ymm3, 4544(%rsp,%rsi,8)                      #908.7
..LN10453:
	.loc    1  906  is_stmt 1
        addq      $4, %rsi                                      #906.5
..LN10454:
        cmpq      %rdi, %rsi                                    #906.5
..LN10455:
        jb        ..B17.71      # Prob 98%                      #906.5
..LN10456:
                                # LOE rax rbx rsi rdi r8 r15 xmm1 xmm2 xmm9 xmm10
..B17.73:                       # Preds ..B17.71 ..B17.129      # Infreq
..LN10457:
        cmpq      %r8, %rdi                                     #906.5
..LN10458:
        jae       ..B17.77      # Prob 10%                      #906.5
..LN10459:
                                # LOE rax rbx rdi r8 r15 xmm1 xmm2 xmm9 xmm10
..B17.75:                       # Preds ..B17.73 ..B17.75       # Infreq
..L930:         # optimization report
                # LOOP WAS UNROLLED BY 1
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 4.070312
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
..LN10460:
	.loc    1  714  is_stmt 1
        movq      3296(%rsp,%rdi,8), %rsi                       #714.76
..LN10461:
        movq      3712(%rsp,%rdi,8), %r9                        #714.83
..LN10462:
	.loc    1  907  is_stmt 1
        movq      %rsi, 4128(%rsp,%rdi,8)                       #907.7
..LN10463:
	.loc    1  908  is_stmt 1
        movq      %r9, 4544(%rsp,%rdi,8)                        #908.7
..LN10464:
	.loc    1  906  is_stmt 1
        incq      %rdi                                          #906.5
..LN10465:
        cmpq      %r8, %rdi                                     #906.5
..LN10466:
        jb        ..B17.75      # Prob 98%                      #906.5
..LN10467:
                                # LOE rax rbx rdi r8 r15 xmm1 xmm2 xmm9 xmm10
..B17.77:                       # Preds ..B17.75 ..B17.68 ..B17.73 # Infreq
..LN10468:
	.loc    1  868  is_stmt 1
        incq      %r15                                          #868.3
..LN10469:
	.loc    1  911  is_stmt 1
        vmovapd   %xmm10, %xmm3                                 #911.5
..LN10470:
	.loc    1  912  is_stmt 1
        vmovapd   %xmm9, %xmm0                                  #912.5
..LN10471:
	.loc    1  868  is_stmt 1
        cmpq      %rax, %r15                                    #868.3
..LN10472:
        jb        ..B17.58      # Prob 81%                      #868.3
..LN10473:
                                # LOE rax rbx r15 xmm0 xmm1 xmm2 xmm3
..B17.78:                       # Preds ..B17.77                # Infreq
..LN10474:
        movq      2480(%rsp), %r12                              #
..LN10475:
        movq      %rbx, %rcx                                    #
..LN10476:
        movq      2488(%rsp), %rbx                              #
..LN10477:
        movq      2072(%rsp), %r15                              #
..LN10478:
        movq      2064(%rsp), %r13                              #
..LN10479:
        movq      1656(%rsp), %r14                              #
..LN10480:
                                # LOE rcx rbx r12 r13 r14 r15
..B17.79:                       # Preds ..B17.78 ..B17.56       # Infreq
..LN10481:
	.loc    1  714  is_stmt 1
        movl      %ecx, 912(%rsp)                               #714.22
..LN10482:
        testl     %ecx, %ecx                                    #714.94
..LN10483:
        jle       ..B17.119     # Prob 40%                      #714.94
..LN10484:
                                # LOE rcx rbx r12 r13 r14 r15 ecx cl ch
..B17.80:                       # Preds ..B17.79                # Infreq
..LN10485:
	.loc    1  715  is_stmt 1
        vzeroupper                                              #715.10
..LN10486:
        lea       3296(%rsp), %rdi                              #715.10
..LN10487:
        movl      %ecx, %edx                                    #715.10
..LN10488:
        lea       3712(%rsp), %rsi                              #715.10
..LN10489:
        movq      %rcx, -2776(%rsi)                             #715.10
..___tag_value_create_xgrid_2dx2d_order2_.931:
..LN10490:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #715.10
..___tag_value_create_xgrid_2dx2d_order2_.932:
..LN10491:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B17.162:                      # Preds ..B17.80                # Infreq
..LN10492:
        movq      936(%rsp), %rcx                               #
..LN10493:
                                # LOE rcx rbx r12 r13 r14 r15 ecx cl ch xmm0
..B17.81:                       # Preds ..B17.162               # Infreq
..LN10494:
        movq      5032(%rsp), %rax                              #715.45
..LN10495:
        movq      5024(%rsp), %rsi                              #715.45
..LN10496:
	.loc    1  716  is_stmt 1
        movq      5008(%rsp), %rdx                              #716.13
..LN10497:
	.loc    1  717  is_stmt 1
        movq      5240(%rsp), %rdi                              #717.2
..LN10498:
	.loc    1  715  is_stmt 1
        vmulsd    (%rax,%rsi,8), %xmm0, %xmm2                   #715.45
..LN10499:
	.loc    1  716  is_stmt 1
        vmovsd    (%rdx,%rsi,8), %xmm0                          #716.13
..LN10500:
	.loc    1  717  is_stmt 1
        vminsd    (%rdi,%r14,8), %xmm0, %xmm0                   #717.2
..LN10501:
        vdivsd    %xmm0, %xmm2, %xmm1                           #717.12
..LN10502:
        vcomisd   .L_2il0floatpacket.2(%rip), %xmm1             #717.23
..LN10503:
        jbe       ..B17.119     # Prob 78%                      #717.23
..LN10504:
                                # LOE rcx rbx r12 r13 r14 r15 ecx cl ch xmm2
..B17.82:                       # Preds ..B17.81                # Infreq
..LN10505:
	.loc    1  718  is_stmt 1
        movslq    944(%rsp), %rax                               #718.4
..LN10506:
        movq      72(%rbp), %rdx                                #718.4
..LN10507:
	.loc    1  956  is_stmt 1
        vxorpd    %xmm0, %xmm0, %xmm0                           #956.17
..LN10508:
	.loc    1  960  is_stmt 1
        movslq    %ecx, %rcx                                    #960.3
..LN10509:
        movq      %r12, 2480(%rsp)                              #960.3
..LN10510:
	.loc    1  718  is_stmt 1
        vmovsd    %xmm2, (%rdx,%rax,8)                          #718.4
..LN10511:
	.loc    1  960  is_stmt 1
        xorl      %edx, %edx                                    #960.3
..LN10512:
        vmovsd    %xmm0, 904(%rsp)                              #960.3
..LN10513:
        movq      %r15, 2072(%rsp)                              #960.3
..LN10514:
        movq      %rcx, %r15                                    #960.3
..LN10515:
        movq      %r13, 2064(%rsp)                              #960.3
..LN10516:
        movq      %rdx, %r13                                    #960.3
..LN10517:
        movq      %r14, 1656(%rsp)                              #960.3
..LN10518:
        movq      %rbx, %r14                                    #960.3
..LN10519:
        movl      912(%rsp), %r12d                              #960.3
..LN10520:
        movq      %rax, %rbx                                    #960.3
..LN10521:
                                # LOE rbx r13 r14 r15 r12d
..B17.83:                       # Preds ..B17.82 ..B17.87       # Infreq
..L933:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN10522:
	.loc    1  961  is_stmt 1
        movl      %r13d, %eax                                   #961.22
..LN10523:
        incl      %eax                                          #961.17
..LN10524:
        cltd                                                    #961.22
..LN10525:
        idivl     %r12d                                         #961.22
..LN10526:
	.loc    1  719  is_stmt 1
        vmovsd    3296(%rsp,%r13,8), %xmm3                      #719.37
..LN10527:
	.loc    1  970  is_stmt 1
        vxorpd    %xmm5, %xmm5, %xmm5                           #970.20
..LN10528:
	.loc    1  961  is_stmt 1
        movslq    %edx, %rdx                                    #961.22
..LN10529:
	.loc    1  719  is_stmt 1
        vmovsd    3712(%rsp,%r13,8), %xmm1                      #719.44
..LN10530:
        vmovsd    %xmm3, 976(%rsp)                              #719.37
..LN10531:
        vmovsd    %xmm1, 992(%rsp)                              #719.44
..LN10532:
        vmovsd    3296(%rsp,%rdx,8), %xmm2                      #719.37
..LN10533:
        vmovsd    3712(%rsp,%rdx,8), %xmm0                      #719.44
..LN10534:
	.loc    1  968  is_stmt 1
        vsubsd    %xmm3, %xmm2, %xmm4                           #968.21
..LN10535:
	.loc    1  719  is_stmt 1
        vmovsd    %xmm2, 984(%rsp)                              #719.37
..LN10536:
        vmovsd    %xmm0, 1000(%rsp)                             #719.44
..LN10537:
	.loc    1  968  is_stmt 1
        vmovsd    %xmm4, 1008(%rsp)                             #968.21
..LN10538:
	.loc    1  970  is_stmt 1
        vucomisd  %xmm5, %xmm4                                  #970.20
..LN10539:
        jp        ..B17.84      # Prob 0%                       #970.20
..LN10540:
        je        ..B17.87      # Prob 16%                      #970.20
..LN10541:
                                # LOE rbx r13 r14 r15 r12d xmm0 ymm0 zmm0
..B17.84:                       # Preds ..B17.83                # Infreq
..LN10542:
	.loc    1  972  is_stmt 1
        call      __libm_sse2_sincos                            #972.5
..LN10543:
                                # LOE rbx r13 r14 r15 r12d xmm0 xmm1
..B17.164:                      # Preds ..B17.84                # Infreq
..LN10544:
        vfmadd213sd 1000(%rsp), %xmm0, %xmm1                    #972.5
..LN10545:
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm1, %xmm2      #972.35
..LN10546:
        vmovsd    %xmm2, 928(%rsp)                              #972.35
..LN10547:
	.loc    1  973  is_stmt 1
        vmovsd    992(%rsp), %xmm0                              #973.5
..LN10548:
        call      __libm_sse2_sincos                            #973.5
..LN10549:
                                # LOE rbx r13 r14 r15 r12d xmm0 xmm1
..B17.163:                      # Preds ..B17.164               # Infreq
..LN10550:
	.loc    1  977  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm10            #977.22
..LN10551:
        vmovsd    1008(%rsp), %xmm6                             #977.22
..LN10552:
        vcomisd   %xmm10, %xmm6                                 #977.22
..LN10553:
	.loc    1  973  is_stmt 1
        vfmadd213sd 992(%rsp), %xmm0, %xmm1                     #973.5
..LN10554:
	.loc    1  977  is_stmt 1
        vmovsd    .L_2il0floatpacket.4(%rip), %xmm13            #977.36
..LN10555:
	.loc    1  978  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm12            #978.22
..LN10556:
	.loc    1  977  is_stmt 1
        vsubsd    %xmm13, %xmm6, %xmm7                          #977.36
..LN10557:
	.loc    1  973  is_stmt 1
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm1, %xmm2      #973.35
..LN10558:
	.loc    1  977  is_stmt 1
        ja        ..L934        # Prob 50%                      #977.22
..LN10559:
        vmovaps   %xmm6, %xmm7                                  #977.22
..L934:                                                         #
..LN10560:
	.loc    1  978  is_stmt 1
        vcomisd   %xmm7, %xmm12                                 #978.22
..LN10561:
	.loc    1  979  is_stmt 1
        vmovsd    5208(%rsp), %xmm5                             #979.20
..LN10562:
        vmovsd    984(%rsp), %xmm4                              #979.20
..LN10563:
	.loc    1  982  is_stmt 1
        vmovsd    976(%rsp), %xmm3                              #982.19
..LN10564:
	.loc    1  979  is_stmt 1
        vsubsd    %xmm5, %xmm4, %xmm8                           #979.20
..LN10565:
	.loc    1  978  is_stmt 1
        vaddsd    %xmm13, %xmm7, %xmm4                          #978.36
..LN10566:
	.loc    1  982  is_stmt 1
        vsubsd    %xmm5, %xmm3, %xmm11                          #982.19
..LN10567:
	.loc    1  980  is_stmt 1
        vsubsd    %xmm13, %xmm8, %xmm9                          #980.23
..LN10568:
	.loc    1  983  is_stmt 1
        vsubsd    %xmm13, %xmm11, %xmm14                        #983.23
..LN10569:
	.loc    1  978  is_stmt 1
        ja        ..L935        # Prob 50%                      #978.22
..LN10570:
        vmovaps   %xmm7, %xmm4                                  #978.22
..L935:                                                         #
..LN10571:
	.loc    1  980  is_stmt 1
        vcomisd   %xmm10, %xmm8                                 #980.23
..LN10572:
        ja        ..L936        # Prob 50%                      #980.23
..LN10573:
        vmovaps   %xmm8, %xmm9                                  #980.23
..L936:                                                         #
..LN10574:
	.loc    1  981  is_stmt 1
        vcomisd   %xmm9, %xmm12                                 #981.23
..LN10575:
        vaddsd    %xmm13, %xmm9, %xmm1                          #981.23
..LN10576:
        ja        ..L937        # Prob 50%                      #981.23
..LN10577:
        vmovaps   %xmm9, %xmm1                                  #981.23
..L937:                                                         #
..LN10578:
	.loc    1  983  is_stmt 1
        vcomisd   %xmm10, %xmm11                                #983.23
..LN10579:
        ja        ..L938        # Prob 50%                      #983.23
..LN10580:
        vmovaps   %xmm11, %xmm14                                #983.23
..L938:                                                         #
..LN10581:
	.loc    1  984  is_stmt 1
        vcomisd   %xmm14, %xmm12                                #984.23
..LN10582:
        vaddsd    %xmm13, %xmm14, %xmm8                         #984.23
..LN10583:
        ja        ..L939        # Prob 50%                      #984.23
..LN10584:
        vmovaps   %xmm14, %xmm8                                 #984.23
..L939:                                                         #
..LN10585:
	.loc    1  986  is_stmt 1
        vsubsd    %xmm1, %xmm8, %xmm15                          #986.19
..LN10586:
        vcvttsd2si %xmm15, %edi                                 #986.19
..LN10587:
        movl      %edi, %esi                                    #986.8
..LN10588:
        sarl      $31, %esi                                     #986.8
..LN10589:
        xorl      %esi, %edi                                    #986.8
..LN10590:
        subl      %esi, %edi                                    #986.8
..LN10591:
        cmpl      $3, %edi                                      #986.28
..LN10592:
        jg        ..B17.86      # Prob 50%                      #986.28
..LN10593:
                                # LOE rbx r13 r14 r15 r12d xmm1 xmm2 xmm4 xmm8
..B17.85:                       # Preds ..B17.163               # Infreq
..LN10594:
	.loc    1  987  is_stmt 1
        vmulsd    928(%rsp), %xmm1, %xmm0                       #987.7
..LN10595:
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm4, %xmm1      #987.7
..LN10596:
        vfmadd213sd %xmm0, %xmm8, %xmm2                         #987.7
..LN10597:
        vmovsd    904(%rsp), %xmm3                              #987.7
..LN10598:
        vfnmadd231sd %xmm2, %xmm1, %xmm3                        #987.7
..LN10599:
        vmovsd    %xmm3, 904(%rsp)                              #987.7
..LN10600:
        jmp       ..B17.87      # Prob 100%                     #987.7
..LN10601:
                                # LOE rbx r13 r14 r15 r12d
..B17.86:                       # Preds ..B17.163               # Infreq
..LN10602:
	.loc    1  994  is_stmt 1
        vcvttsd2si %xmm4, %edi                                  #994.43
..LN10603:
	.loc    1  996  is_stmt 1
        vaddsd    %xmm8, %xmm1, %xmm7                           #996.19
..LN10604:
	.loc    1  993  is_stmt 1
        vxorpd    %xmm5, %xmm5, %xmm5                           #993.2
..LN10605:
	.loc    1  994  is_stmt 1
        movl      %edi, %esi                                    #994.39
..LN10606:
	.loc    1  993  is_stmt 1
        vcomisd   %xmm5, %xmm1                                  #993.2
..LN10607:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm6             #993.2
..LN10608:
	.loc    1  994  is_stmt 1
        vxorpd    %xmm4, %xmm4, %xmm4                           #994.39
..LN10609:
	.loc    1  993  is_stmt 1
        ja        ..L940        # Prob 50%                      #993.2
..LN10610:
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm6             #993.2
..L940:                                                         #
..LN10611:
	.loc    1  995  is_stmt 1
        vmovsd    928(%rsp), %xmm0                              #995.34
..LN10612:
        vsubsd    %xmm6, %xmm1, %xmm11                          #995.34
..LN10613:
        vmulsd    %xmm1, %xmm0, %xmm1                           #995.34
..LN10614:
        vaddsd    %xmm6, %xmm8, %xmm9                           #995.61
..LN10615:
        vmulsd    %xmm8, %xmm2, %xmm8                           #995.61
..LN10616:
	.loc    1  994  is_stmt 1
        vsubsd    %xmm0, %xmm2, %xmm2                           #994.23
..LN10617:
	.loc    1  996  is_stmt 1
        vmulsd    %xmm6, %xmm7, %xmm3                           #996.19
..LN10618:
	.loc    1  995  is_stmt 1
        vmulsd    %xmm11, %xmm2, %xmm12                         #995.7
..LN10619:
        vmulsd    %xmm9, %xmm8, %xmm10                          #995.66
..LN10620:
	.loc    1  994  is_stmt 1
        sarl      $31, %esi                                     #994.39
..LN10621:
        xorl      %esi, %edi                                    #994.39
..LN10622:
        subl      %esi, %edi                                    #994.39
..LN10623:
        vcvtsi2sd %edi, %xmm4, %xmm4                            #994.39
..LN10624:
	.loc    1  995  is_stmt 1
        vfnmadd213sd %xmm10, %xmm11, %xmm1                      #995.7
..LN10625:
        vxorpd    .L_2il0floatpacket.8(%rip), %xmm12, %xmm13    #995.7
..LN10626:
	.loc    1  994  is_stmt 1
        vdivsd    %xmm4, %xmm13, %xmm14                         #994.39
..LN10627:
        vaddsd    %xmm14, %xmm0, %xmm15                         #994.39
..LN10628:
	.loc    1  995  is_stmt 1
        vmovsd    904(%rsp), %xmm0                              #995.7
..LN10629:
        vfnmadd213sd %xmm1, %xmm15, %xmm3                       #995.7
..LN10630:
        vfmadd231sd .L_2il0floatpacket.1(%rip), %xmm3, %xmm0    #995.7
..LN10631:
        vmovsd    %xmm0, 904(%rsp)                              #995.7
..LN10632:
                                # LOE rbx r13 r14 r15 r12d
..B17.87:                       # Preds ..B17.85 ..B17.86 ..B17.83 # Infreq
..LN10633:
	.loc    1  960  is_stmt 1
        incq      %r13                                          #960.3
..LN10634:
        cmpq      %r15, %r13                                    #960.3
..LN10635:
        jb        ..B17.83      # Prob 82%                      #960.3
..LN10636:
                                # LOE rbx r13 r14 r15 r12d
..B17.88:                       # Preds ..B17.87                # Infreq
..LN10637:
        vmovsd    904(%rsp), %xmm0                              #
..LN10638:
        movq      %rbx, %rax                                    #
..LN10639:
	.loc    1  714  is_stmt 1
        lea       912(%rsp), %rdi                               #714.22
..LN10640:
        movl      (%rdi), %ecx                                  #714.22
..LN10641:
        movq      %r14, %rbx                                    #
..LN10642:
	.loc    1  1000  is_stmt 1
        vmulsd    .L_2il0floatpacket.5(%rip), %xmm0, %xmm0      #1000.25
..LN10643:
	.loc    1  925  is_stmt 1
        vxorpd    %xmm2, %xmm2, %xmm2                           #925.17
..LN10644:
	.loc    1  719  is_stmt 1
        movq      80(%rbp), %rdx                                #719.4
..LN10645:
	.loc    1  714  is_stmt 1
        vmovd     %ecx, %xmm1                                   #714.22
..LN10646:
	.loc    1  928  is_stmt 1
        lea       63(%rcx), %r8d                                #928.3
..LN10647:
	.loc    1  719  is_stmt 1
        vmovsd    %xmm0, (%rdx,%rax,8)                          #719.4
..LN10648:
	.loc    1  928  is_stmt 1
        xorl      %edx, %edx                                    #928.3
..LN10649:
	.loc    1  714  is_stmt 1
        vpbroadcastd %xmm1, %ymm0                               #714.22
..LN10650:
	.loc    1  929  is_stmt 1
        xorl      %ecx, %ecx                                    #929.22
..LN10651:
        movq      2064(%rsp), %r13                              #
..LN10652:
        xorl      %esi, %esi                                    #929.22
..LN10653:
        movl      %edx, %r12d                                   #929.22
..LN10654:
	.loc    1  928  is_stmt 1
        shrl      $6, %r8d                                      #928.3
..LN10655:
	.loc    1  929  is_stmt 1
        movl      %ecx, %r15d                                   #929.22
..LN10656:
        movl      (%rdi), %ecx                                  #929.22
..LN10657:
        vmovdqu   %ymm0, 768(%rsp)                              #929.22
..LN10658:
        vmovsd    %xmm2, 896(%rsp)                              #929.22
..LN10659:
        movq      %rax, 816(%rsp)                               #929.22
..LN10660:
        movq      %rbx, 2488(%rsp)                              #929.22
..LN10661:
                                # LOE ecx esi r8d r12d r15d
..B17.89:                       # Preds ..B17.88 ..B17.117      # Infreq
..L941:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # %s was not vectorized: inner loop was already vectorized
..LN10662:
	.loc    1  928  is_stmt 1
        lea       64(%r15), %r14d                               #928.3
..LN10663:
        cmpl      %r14d, %ecx                                   #928.3
..LN10664:
        cmovl     %ecx, %r14d                                   #928.3
..LN10665:
        movslq    %r14d, %rbx                                   #928.3
..LN10666:
        addl      %esi, %r14d                                   #928.3
..LN10667:
        cmpl      $16, %r14d                                    #928.3
..LN10668:
        jl        ..B17.128     # Prob 10%                      #928.3
..LN10669:
                                # LOE rbx ecx esi r8d r12d r14d r15d
..B17.90:                       # Preds ..B17.89                # Infreq
..LN10670:
        movl      %r14d, %eax                                   #928.3
..LN10671:
        xorl      %r10d, %r10d                                  #928.3
..LN10672:
        andl      $-16, %eax                                    #928.3
..LN10673:
	.loc    1  934  is_stmt 1
        movslq    %r15d, %r9                                    #934.12
..LN10674:
	.loc    1  928  is_stmt 1
        movslq    %eax, %rdi                                    #928.3
..LN10675:
        .align    16,0x90
..LN10676:
                                # LOE rbx rdi r9 r10 eax ecx esi r8d r12d r14d r15d
..B17.91:                       # Preds ..B17.91 ..B17.90       # Infreq
..L942:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 4
                # LOOP WAS STRIPMINED BY 64
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 3.958984
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.042969
                # MAIN VECTOR TYPE: 64-bits floating point
..LN10677:
	.loc    1  720  is_stmt 1
        vmovupd   3712(%rsp,%r9,8), %ymm0                       #720.45
..LN10678:
        vmovupd   3744(%rsp,%r9,8), %ymm1                       #720.45
..LN10679:
        vmovupd   3776(%rsp,%r9,8), %ymm2                       #720.45
..LN10680:
        vmovupd   3808(%rsp,%r9,8), %ymm3                       #720.45
..LN10681:
	.loc    1  934  is_stmt 1
        vmovupd   %ymm0, (%rsp,%r10,8)                          #934.5
..LN10682:
        vmovupd   %ymm1, 32(%rsp,%r10,8)                        #934.5
..LN10683:
        vmovupd   %ymm2, 64(%rsp,%r10,8)                        #934.5
..LN10684:
        vmovupd   %ymm3, 96(%rsp,%r10,8)                        #934.5
..LN10685:
	.loc    1  928  is_stmt 1
        addq      $16, %r10                                     #928.3
..LN10686:
        addq      $16, %r9                                      #928.3
..LN10687:
        cmpq      %rdi, %r10                                    #928.3
..LN10688:
        jb        ..B17.91      # Prob 82%                      #928.3
..LN10689:
                                # LOE rbx rdi r9 r10 eax ecx esi r8d r12d r14d r15d
..B17.92:                       # Preds ..B17.91                # Infreq
..LN10690:
        lea       1(%rax), %edi                                 #928.3
..LN10691:
        cmpl      %edi, %r14d                                   #928.3
..LN10692:
        jb        ..B17.102     # Prob 50%                      #928.3
..LN10693:
                                # LOE rbx eax ecx esi r8d r12d r14d r15d
..B17.93:                       # Preds ..B17.92 ..B17.128      # Infreq
..LN10694:
        movslq    %eax, %r10                                    #928.3
..LN10695:
        movslq    %r14d, %rdx                                   #928.3
..LN10696:
        subq      %r10, %rdx                                    #928.3
..LN10697:
        cmpq      $4, %rdx                                      #928.3
..LN10698:
        jl        ..B17.122     # Prob 10%                      #928.3
..LN10699:
                                # LOE rdx rbx r10 eax ecx esi r8d r12d r14d r15d
..B17.94:                       # Preds ..B17.93                # Infreq
..LN10700:
	.loc    1  934  is_stmt 1
        movslq    %r15d, %r9                                    #934.12
..LN10701:
	.loc    1  928  is_stmt 1
        movl      %edx, %edi                                    #928.3
..LN10702:
	.loc    1  934  is_stmt 1
        movslq    %eax, %rax                                    #934.12
..LN10703:
	.loc    1  928  is_stmt 1
        andl      $-4, %edi                                     #928.3
..LN10704:
	.loc    1  934  is_stmt 1
        addq      %rax, %r9                                     #934.12
..LN10705:
	.loc    1  928  is_stmt 1
        xorl      %r11d, %r11d                                  #928.3
..LN10706:
        movslq    %edi, %rdi                                    #928.3
..LN10707:
        lea       (%rsp,%r10,8), %r13                           #
..LN10708:
	.loc    1  720  is_stmt 1
        lea       3712(%rsp,%r9,8), %r9                         #720.45
..LN10709:
                                # LOE rdx rbx rdi r9 r10 r11 r13 eax ecx esi r8d r12d r14d r15d
..B17.95:                       # Preds ..B17.95 ..B17.94       # Infreq
..L943:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS STRIPMINED BY 64
                # LOOP WAS VECTORIZED
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 1.915039
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 1.875000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN10710:
        vmovupd   (%r9,%r11,8), %ymm0                           #720.45
..LN10711:
	.loc    1  934  is_stmt 1
        vmovupd   %ymm0, (%r13,%r11,8)                          #934.5
..LN10712:
	.loc    1  928  is_stmt 1
        addq      $4, %r11                                      #928.3
..LN10713:
        cmpq      %rdi, %r11                                    #928.3
..LN10714:
        jb        ..B17.95      # Prob 82%                      #928.3
..LN10715:
                                # LOE rdx rbx rdi r9 r10 r11 r13 eax ecx esi r8d r12d r14d r15d
..B17.97:                       # Preds ..B17.95 ..B17.122      # Infreq
..LN10716:
        cmpq      %rdx, %rdi                                    #928.3
..LN10717:
        jae       ..B17.101     # Prob 9%                       #928.3
..LN10718:
                                # LOE rdx rbx rdi r10 eax ecx esi r8d r12d r14d r15d
..B17.98:                       # Preds ..B17.97                # Infreq
..LN10719:
	.loc    1  934  is_stmt 1
        movslq    %eax, %rax                                    #934.12
..LN10720:
        lea       (%rsp,%r10,8), %r9                            #
..LN10721:
        movslq    %r15d, %r10                                   #934.12
..LN10722:
        addq      %rax, %r10                                    #934.12
..LN10723:
	.loc    1  720  is_stmt 1
        lea       3712(%rsp,%r10,8), %rax                       #720.45
..LN10724:
                                # LOE rax rdx rbx rdi r9 ecx esi r8d r12d r14d r15d
..B17.99:                       # Preds ..B17.99 ..B17.98       # Infreq
..L944:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS STRIPMINED BY 64
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 1.915039
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 1.875000
..LN10725:
        movq      (%rax,%rdi,8), %r10                           #720.45
..LN10726:
	.loc    1  934  is_stmt 1
        movq      %r10, (%r9,%rdi,8)                            #934.5
..LN10727:
	.loc    1  928  is_stmt 1
        incq      %rdi                                          #928.3
..LN10728:
        cmpq      %rdx, %rdi                                    #928.3
..LN10729:
        jb        ..B17.99      # Prob 82%                      #928.3
..LN10730:
                                # LOE rax rdx rbx rdi r9 ecx esi r8d r12d r14d r15d
..B17.101:                      # Preds ..B17.99 ..B17.97 ..B17.128 # Infreq
..LN10731:
        cmpl      $8, %r14d                                     #928.3
..LN10732:
        jl        ..B17.136     # Prob 10%                      #928.3
..LN10733:
                                # LOE rbx ecx esi r8d r12d r14d r15d
..B17.102:                      # Preds ..B17.92 ..B17.101      # Infreq
..LN10734:
        movl      %r14d, %r13d                                  #928.3
..LN10735:
        xorl      %edi, %edi                                    #928.3
..LN10736:
        andl      $-8, %r13d                                    #928.3
..LN10737:
	.loc    1  929  is_stmt 1
        lea       1(%r15), %eax                                 #929.17
..LN10738:
	.loc    1  928  is_stmt 1
        movslq    %r13d, %r13                                   #928.3
..LN10739:
        movl      %r8d, 800(%rsp)                               #928.3
..LN10740:
        vmovdqu   768(%rsp), %ymm9                              #928.3
..LN10741:
	.loc    1  929  is_stmt 1
        vmovd     %eax, %xmm0                                   #929.17
..LN10742:
	.loc    1  928  is_stmt 1
        vmovdqu   832(%rsp), %ymm10                             #928.3
..LN10743:
	.loc    1  929  is_stmt 1
        vpbroadcastd %xmm0, %ymm1                               #929.17
..LN10744:
        vpaddd    .L_2il0floatpacket.7(%rip), %ymm1, %ymm8      #929.17
..LN10745:
                                # LOE rbx rdi r13 esi r12d r14d r15d ymm8 ymm9 ymm10
..B17.103:                      # Preds ..B17.165 ..B17.102     # Infreq
..L945:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS STRIPMINED BY 64
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 1.774414
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 8
                # NORMALIZED VECTORIZATION OVERHEAD 0.017578
                # MAIN VECTOR TYPE: 32-bits integer
..LN10746:
        vmovdqa   %ymm8, %ymm0                                  #929.22
..LN10747:
        vmovdqa   %ymm9, %ymm1                                  #929.22
..LN10748:
        call      __svml_irem8                                  #929.12
..LN10749:
                                # LOE rbx rdi r13 esi r12d r14d r15d ymm0 ymm8 ymm9 ymm10
..B17.165:                      # Preds ..B17.103               # Infreq
..LN10750:
        vmovdqu   %ymm0, 512(%rsp,%rdi,4)                       #929.12
..LN10751:
	.loc    1  928  is_stmt 1
        addq      $8, %rdi                                      #928.3
..LN10752:
	.loc    1  929  is_stmt 1
        vpaddd    %ymm10, %ymm8, %ymm8                          #929.17
..LN10753:
	.loc    1  928  is_stmt 1
        cmpq      %r13, %rdi                                    #928.3
..LN10754:
        jb        ..B17.103     # Prob 82%                      #928.3
..LN10755:
                                # LOE rbx rdi r13 esi r12d r14d r15d ymm8 ymm9 ymm10
..B17.104:                      # Preds ..B17.165               # Infreq
..LN10756:
        movl      800(%rsp), %r8d                               #
..LN10757:
        movl      912(%rsp), %ecx                               #
..LN10758:
                                # LOE rbx r13 ecx esi r8d r12d r14d r15d
..B17.105:                      # Preds ..B17.104 ..B17.136     # Infreq
..LN10759:
        movl      %r13d, %r9d                                   #928.3
..LN10760:
	.loc    1  929  is_stmt 1
        lea       1(%r15,%r9), %edi                             #929.17
..LN10761:
	.loc    1  928  is_stmt 1
        cmpl      %r14d, %r9d                                   #928.3
..LN10762:
        jae       ..B17.109     # Prob 9%                       #928.3
..LN10763:
                                # LOE rbx r13 ecx esi edi r8d r9d r12d r14d r15d
..B17.107:                      # Preds ..B17.105 ..B17.107     # Infreq
..L946:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS STRIPMINED BY 64
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 1.774414
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 8
                # NORMALIZED VECTORIZATION OVERHEAD 0.017578
..LN10764:
	.loc    1  929  is_stmt 1
        movl      %edi, %eax                                    #929.22
..LN10765:
        cltd                                                    #929.22
..LN10766:
        idivl     %ecx                                          #929.22
..LN10767:
	.loc    1  928  is_stmt 1
        incl      %r9d                                          #928.3
..LN10768:
        incl      %edi                                          #928.3
..LN10769:
	.loc    1  929  is_stmt 1
        movl      %edx, 512(%rsp,%r13,4)                        #929.22
..LN10770:
	.loc    1  928  is_stmt 1
        incq      %r13                                          #928.3
..LN10771:
        cmpl      %r14d, %r9d                                   #928.3
..LN10772:
        jb        ..B17.107     # Prob 82%                      #928.3
..LN10773:
                                # LOE rbx r13 ecx esi edi r8d r9d r12d r14d r15d
..B17.109:                      # Preds ..B17.107 ..B17.105     # Infreq
..LN10774:
        movslq    %r12d, %r13                                   #928.3
..LN10775:
        xorl      %r14d, %r14d                                  #928.3
..LN10776:
        shlq      $6, %r13                                      #928.3
..LN10777:
        negq      %r13                                          #928.3
..LN10778:
        addq      %rbx, %r13                                    #928.3
..LN10779:
        je        ..B17.117     # Prob 9%                       #928.3
..LN10780:
                                # LOE r13 r14 ecx esi r8d r12d r15d
..B17.110:                      # Preds ..B17.109               # Infreq
..LN10781:
	.loc    1  930  is_stmt 1
        movslq    %r15d, %r15                                   #930.24
..LN10782:
	.loc    1  720  is_stmt 1
        movl      %esi, 808(%rsp)                               #720.38
..LN10783:
        movl      %r8d, 800(%rsp)                               #720.38
..LN10784:
        lea       3296(%rsp,%r15,8), %rbx                       #720.38
..LN10785:
                                # LOE rbx r13 r14 r12d r15d
..B17.111:                      # Preds ..B17.115 ..B17.110     # Infreq
..L947:         # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 3
                # LOOP WAS STRIPMINED BY 64
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN10786:
	.loc    1  933  is_stmt 1
        movslq    512(%rsp,%r14,4), %rax                        #933.5
..LN10787:
	.loc    1  938  is_stmt 1
        vxorpd    %xmm7, %xmm7, %xmm7                           #938.18
..LN10788:
	.loc    1  937  is_stmt 1
        vmovsd    (%rsp,%r14,8), %xmm1                          #937.5
..LN10789:
        vmovsd    %xmm1, 968(%rsp)                              #937.5
..LN10790:
	.loc    1  720  is_stmt 1
        vmovsd    3712(%rsp,%rax,8), %xmm2                      #720.45
..LN10791:
        vmovsd    3296(%rsp,%rax,8), %xmm6                      #720.38
..LN10792:
	.loc    1  935  is_stmt 1
        vsubsd    %xmm2, %xmm1, %xmm4                           #935.17
..LN10793:
	.loc    1  937  is_stmt 1
        vaddsd    %xmm1, %xmm2, %xmm0                           #937.19
..LN10794:
	.loc    1  930  is_stmt 1
        vsubsd    (%rbx,%r14,8), %xmm6, %xmm1                   #930.24
..LN10795:
	.loc    1  937  is_stmt 1
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm3             #937.25
..LN10796:
	.loc    1  936  is_stmt 1
        vmulsd    %xmm4, %xmm3, %xmm5                           #936.14
..LN10797:
	.loc    1  938  is_stmt 1
        vucomisd  %xmm7, %xmm1                                  #938.18
..LN10798:
	.loc    1  937  is_stmt 1
        vmulsd    %xmm0, %xmm3, %xmm0                           #937.25
..LN10799:
	.loc    1  720  is_stmt 1
        vmovsd    %xmm2, 952(%rsp)                              #720.45
..LN10800:
	.loc    1  936  is_stmt 1
        vmovsd    %xmm5, 960(%rsp)                              #936.14
..LN10801:
	.loc    1  938  is_stmt 1
        jp        ..B17.112     # Prob 0%                       #938.18
..LN10802:
        je        ..B17.115     # Prob 16%                      #938.18
..LN10803:
                                # LOE rbx r13 r14 r12d r15d xmm0 xmm1 xmm5 ymm5 zmm5
..B17.112:                      # Preds ..B17.111               # Infreq
..LN10804:
	.loc    1  939  is_stmt 1
        vcomisd   .L_2il0floatpacket.0(%rip), %xmm1             #939.20
..LN10805:
        vmovsd    .L_2il0floatpacket.4(%rip), %xmm2             #939.30
..LN10806:
        vsubsd    %xmm2, %xmm1, %xmm3                           #939.30
..LN10807:
        ja        ..L948        # Prob 50%                      #939.20
..LN10808:
        vmovaps   %xmm1, %xmm3                                  #939.20
..L948:                                                         #
..LN10809:
	.loc    1  940  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm1             #940.20
..LN10810:
        vaddsd    %xmm2, %xmm3, %xmm4                           #940.30
..LN10811:
        vcomisd   %xmm3, %xmm1                                  #940.20
..LN10812:
	.loc    1  942  is_stmt 1
        vandpd    .L_2il0floatpacket.9(%rip), %xmm5, %xmm7      #942.10
..LN10813:
        vmovsd    .L_2il0floatpacket.6(%rip), %xmm6             #942.21
..LN10814:
	.loc    1  940  is_stmt 1
        ja        ..L949        # Prob 50%                      #940.20
..LN10815:
        vmovaps   %xmm3, %xmm4                                  #940.20
..L949:                                                         #
..LN10816:
        vmovsd    %xmm4, 920(%rsp)                              #940.20
..LN10817:
	.loc    1  942  is_stmt 1
        vcomisd   %xmm7, %xmm6                                  #942.21
..LN10818:
        jbe       ..B17.114     # Prob 50%                      #942.21
..LN10819:
                                # LOE rbx r13 r14 r12d r15d xmm0 xmm4 xmm5 ymm4 ymm5 zmm4 zmm5
..B17.113:                      # Preds ..B17.112               # Infreq
..LN10820:
	.loc    1  943  is_stmt 1
        vzeroupper                                              #943.23
..LN10821:
        call      __libm_sse2_sincos                            #943.23
..LN10822:
                                # LOE rbx r13 r14 r12d r15d xmm0 xmm1
..B17.167:                      # Preds ..B17.113               # Infreq
..LN10823:
        vmovsd    %xmm0, 872(%rsp)                              #943.23
..LN10824:
        vmovsd    %xmm1, 888(%rsp)                              #943.23
..LN10825:
        vmovsd    952(%rsp), %xmm0                              #943.54
..LN10826:
        call      cos                                           #943.54
..LN10827:
                                # LOE rbx r13 r14 r12d r15d xmm0
..B17.166:                      # Preds ..B17.167               # Infreq
..LN10828:
        vmovsd    968(%rsp), %xmm2                              #943.7
..LN10829:
        vmovapd   %xmm0, %xmm1                                  #943.54
..LN10830:
        vmovsd    888(%rsp), %xmm0                              #943.7
..LN10831:
        vfmadd132sd 872(%rsp), %xmm0, %xmm2                     #943.7
..LN10832:
        vsubsd    %xmm1, %xmm0, %xmm3                           #943.7
..LN10833:
        vmovsd    896(%rsp), %xmm5                              #943.7
..LN10834:
        vaddsd    %xmm3, %xmm2, %xmm4                           #943.7
..LN10835:
        vfnmadd231sd 920(%rsp), %xmm4, %xmm5                    #943.7
..LN10836:
        vmovsd    %xmm5, 896(%rsp)                              #943.7
..LN10837:
        jmp       ..B17.115     # Prob 100%                     #943.7
..LN10838:
                                # LOE rbx r13 r14 r12d r15d
..B17.114:                      # Preds ..B17.112               # Infreq
..LN10839:
	.loc    1  945  is_stmt 1
        vzeroupper                                              #945.40
..LN10840:
        call      __libm_sse2_sincos                            #945.40
..LN10841:
                                # LOE rbx r13 r14 r12d r15d xmm0 xmm1
..B17.170:                      # Preds ..B17.114               # Infreq
..LN10842:
        vmovsd    %xmm0, 824(%rsp)                              #945.40
..LN10843:
        vmovsd    %xmm1, 880(%rsp)                              #945.40
..LN10844:
        vmovsd    960(%rsp), %xmm0                              #945.23
..LN10845:
        call      sin                                           #945.23
..LN10846:
                                # LOE rbx r13 r14 r12d r15d xmm0
..B17.169:                      # Preds ..B17.170               # Infreq
..LN10847:
        vmovsd    %xmm0, 864(%rsp)                              #945.23
..LN10848:
        vmovsd    952(%rsp), %xmm0                              #945.72
..LN10849:
        call      cos                                           #945.72
..LN10850:
                                # LOE rbx r13 r14 r12d r15d xmm0
..B17.168:                      # Preds ..B17.169               # Infreq
..LN10851:
        vmovapd   %xmm0, %xmm1                                  #945.72
..LN10852:
        vmovsd    864(%rsp), %xmm0                              #945.32
..LN10853:
        vdivsd    960(%rsp), %xmm0, %xmm2                       #945.32
..LN10854:
        vmovsd    880(%rsp), %xmm3                              #945.7
..LN10855:
        vmovsd    968(%rsp), %xmm4                              #945.7
..LN10856:
        vfmadd132sd 824(%rsp), %xmm3, %xmm4                     #945.7
..LN10857:
        vfmsub213sd %xmm1, %xmm2, %xmm3                         #945.7
..LN10858:
        vmovsd    896(%rsp), %xmm5                              #945.7
..LN10859:
        vfmadd213sd %xmm3, %xmm2, %xmm4                         #945.7
..LN10860:
        vfnmadd231sd 920(%rsp), %xmm4, %xmm5                    #945.7
..LN10861:
        vmovsd    %xmm5, 896(%rsp)                              #945.7
..LN10862:
                                # LOE rbx r13 r14 r12d r15d
..B17.115:                      # Preds ..B17.166 ..B17.168 ..B17.111 # Infreq
..LN10863:
	.loc    1  928  is_stmt 1
        incq      %r14                                          #928.3
..LN10864:
        cmpq      %r13, %r14                                    #928.3
..LN10865:
        jb        ..B17.111     # Prob 82%                      #928.3
..LN10866:
                                # LOE rbx r13 r14 r12d r15d
..B17.116:                      # Preds ..B17.115               # Infreq
..LN10867:
        movl      808(%rsp), %esi                               #
..LN10868:
        movl      800(%rsp), %r8d                               #
..LN10869:
        movl      912(%rsp), %ecx                               #
..LN10870:
                                # LOE ecx esi r8d r12d r15d
..B17.117:                      # Preds ..B17.116 ..B17.109     # Infreq
..LN10871:
        incl      %r12d                                         #928.3
..LN10872:
        addl      $64, %r15d                                    #928.3
..LN10873:
        addl      $-64, %esi                                    #928.3
..LN10874:
        cmpl      %r8d, %r12d                                   #928.3
..LN10875:
        jb        ..B17.89      # Prob 82%                      #928.3
..LN10876:
                                # LOE ecx esi r8d r12d r15d
..B17.118:                      # Preds ..B17.117               # Infreq
..LN10877:
        vmovsd    896(%rsp), %xmm2                              #
..LN10878:
	.loc    1  947  is_stmt 1
        vmulsd    .L_2il0floatpacket.5(%rip), %xmm2, %xmm0      #947.25
..LN10879:
	.loc    1  721  is_stmt 1
        movq      40(%rbp), %rsi                                #721.4
..LN10880:
	.loc    1  722  is_stmt 1
        movq      48(%rbp), %r8                                 #722.4
..LN10881:
	.loc    1  723  is_stmt 1
        movq      56(%rbp), %r9                                 #723.4
..LN10882:
	.loc    1  720  is_stmt 1
        movq      88(%rbp), %rdx                                #720.4
..LN10883:
	.loc    1  724  is_stmt 1
        movq      64(%rbp), %r11                                #724.4
..LN10884:
        movq      816(%rsp), %rax                               #
..LN10885:
	.loc    1  721  is_stmt 1
        movq      5024(%rsp), %rcx                              #721.4
..LN10886:
	.loc    1  722  is_stmt 1
        movl      4960(%rsp), %edi                              #722.4
..LN10887:
        movq      1656(%rsp), %r14                              #
..LN10888:
	.loc    1  724  is_stmt 1
        movl      5288(%rsp), %r10d                             #724.4
..LN10889:
	.loc    1  721  is_stmt 1
        movl      %ecx, (%rsi,%rax,4)                           #721.4
..LN10890:
	.loc    1  722  is_stmt 1
        movl      %edi, (%r8,%rax,4)                            #722.4
..LN10891:
	.loc    1  723  is_stmt 1
        movl      %r14d, (%r9,%rax,4)                           #723.4
..LN10892:
	.loc    1  720  is_stmt 1
        vmovsd    %xmm0, (%rdx,%rax,8)                          #720.4
..LN10893:
	.loc    1  724  is_stmt 1
        movl      %r10d, (%r11,%rax,4)                          #724.4
..LN10894:
	.loc    1  725  is_stmt 1
        movl      944(%rsp), %eax                               #725.6
..LN10895:
        incl      %eax                                          #725.6
..LN10896:
        movq      2488(%rsp), %rbx                              #
..LN10897:
        movq      2480(%rsp), %r12                              #
..LN10898:
        movq      2072(%rsp), %r15                              #
..LN10899:
        movq      2064(%rsp), %r13                              #
..LN10900:
        movl      %eax, 944(%rsp)                               #725.6
..LN10901:
	.loc    1  726  is_stmt 1
        cmpl      $10000000, %eax                               #726.16
..LN10902:
        jg        ..B17.127     # Prob 0%                       #726.16
..LN10903:
                                # LOE rbx r12 r13 r14 r15 ebx r12d r13d r14d r15d bl bh r12b r13b r14b r15b xmm2 ymm2 zmm2
..B17.119:                      # Preds ..B17.130 ..B17.127 ..B17.118 ..B17.81 ..B17.79
                                #       ..B17.46 ..B17.45 ..B17.41 ..B17.40 # Infreq
..LN10904:
	.loc    1  692  is_stmt 1
        incq      %r14                                          #692.29
..LN10905:
        cmpq      5320(%rsp), %r14                              #692.29
..LN10906:
        jb        ..B17.38      # Prob 82%                      #692.29
..LN10907:
                                # LOE rbx r12 r13 r14 r15
..B17.120:                      # Preds ..B17.119               # Infreq
..LN10908:
        movq      5304(%rsp), %rax                              #
..LN10909:
        movq      5296(%rsp), %rcx                              #
..LN10910:
        movl      5288(%rsp), %edx                              #
..LN10911:
        incl      %edx                                          #692.5
..LN10912:
        addq      5272(%rsp), %rcx                              #692.5
..LN10913:
        addq      5320(%rsp), %rax                              #692.5
..LN10914:
        movq      5280(%rsp), %rsi                              #
..LN10915:
        movq      5264(%rsp), %r9                               #
..LN10916:
        movl      5248(%rsp), %r10d                             #
..LN10917:
        movq      24(%rbp), %rdi                                #
..LN10918:
        movq      16(%rbp), %r8                                 #
..LN10919:
        cmpl      5256(%rsp), %edx                              #692.5
..LN10920:
        jb        ..B17.36      # Prob 82%                      #692.5
..LN10921:
                                # LOE rax rcx rsi rdi r8 r9 edx esi r10d sil
..B17.121:                      # Preds ..B17.120               # Infreq
..LN10922:
        movq      %rsi, 5280(%rsp)                              #
..LN10923:
        movq      5040(%rsp), %r15                              #
..LN10924:
        movq      5032(%rsp), %r13                              #
..LN10925:
        movq      5024(%rsp), %r14                              #
..LN10926:
        movq      5016(%rsp), %r12                              #
..LN10927:
        jmp       ..B17.26      # Prob 100%                     #
..LN10928:
                                # LOE r12 r13 r14 r15
..B17.122:                      # Preds ..B17.93                # Infreq
..LN10929:
	.loc    1  928  is_stmt 1
        xorl      %edi, %edi                                    #928.3
..LN10930:
        jmp       ..B17.97      # Prob 100%                     #928.3
..LN10931:
                                # LOE rdx rbx rdi r10 eax ecx esi r8d r12d r14d r15d
..B17.124:                      # Preds ..B17.137 ..B17.27 ..B17.21 # Infreq
..LN10932:
	.loc    1  732  is_stmt 1
        movq      %rdx, %rdi                                    #732.3
..LN10933:
        vzeroupper                                              #732.3
..LN10934:
#       free(void *)
        call      free                                          #732.3
..LN10935:
                                # LOE
..B17.125:                      # Preds ..B17.124               # Infreq
..LN10936:
	.loc    1  733  is_stmt 1
        movq      5264(%rsp), %rdi                              #733.3
..LN10937:
#       free(void *)
        call      free                                          #733.3
..LN10938:
                                # LOE
..B17.126:                      # Preds ..B17.125               # Infreq
..LN10939:
	.loc    1  646  is_stmt 1
        movl      944(%rsp), %eax                               #646.10
..LN10940:
	.loc    1  646  epilogue_begin  is_stmt 1
        addq      $5368, %rsp                                   #646.10
	.cfi_restore 3
..LN10941:
        popq      %rbx                                          #646.10
	.cfi_restore 15
..LN10942:
        popq      %r15                                          #646.10
	.cfi_restore 14
..LN10943:
        popq      %r14                                          #646.10
	.cfi_restore 13
..LN10944:
        popq      %r13                                          #646.10
	.cfi_restore 12
..LN10945:
        popq      %r12                                          #646.10
..LN10946:
        movq      %rbp, %rsp                                    #646.10
..LN10947:
        popq      %rbp                                          #646.10
	.cfi_def_cfa 7, 8
	.cfi_restore 6
..LN10948:
        ret                                                     #646.10
	.cfi_def_cfa 6, 16
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_offset 6, -16
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN10949:
                                # LOE
..B17.127:                      # Preds ..B17.118               # Infreq
..LN10950:
	.loc    1  726  is_stmt 1
        movl      $.L_2__STRING.0, %edi                         #726.26
..LN10951:
        vzeroupper                                              #726.26
..___tag_value_create_xgrid_2dx2d_order2_.965:
..LN10952:
#       error_handler(const char *)
        call      error_handler                                 #726.26
..___tag_value_create_xgrid_2dx2d_order2_.966:
..LN10953:
        jmp       ..B17.119     # Prob 100%                     #726.26
..LN10954:
                                # LOE rbx r12 r13 r14 r15
..B17.128:                      # Preds ..B17.89                # Infreq
..LN10955:
	.loc    1  928  is_stmt 1
        xorl      %eax, %eax                                    #928.3
..LN10956:
        cmpl      $1, %r14d                                     #928.3
..LN10957:
        jae       ..B17.93      # Prob 50%                      #928.3
..LN10958:
        jmp       ..B17.101     # Prob 100%                     #928.3
..LN10959:
                                # LOE rbx eax ecx esi r8d r12d r14d r15d
..B17.129:                      # Preds ..B17.69                # Infreq
..LN10960:
	.loc    1  906  is_stmt 1
        xorl      %edi, %edi                                    #906.5
..LN10961:
        jmp       ..B17.73      # Prob 100%                     #906.5
..LN10962:
                                # LOE rax rbx rdi r8 r15 xmm1 xmm2 xmm9 xmm10
..B17.130:                      # Preds ..B17.58 ..B17.67       # Infreq
..LN10963:
        movq      2488(%rsp), %rbx                              #
..LN10964:
        movq      2480(%rsp), %r12                              #
..LN10965:
        movq      2072(%rsp), %r15                              #
..LN10966:
        movq      2064(%rsp), %r13                              #
..LN10967:
        movq      1656(%rsp), %r14                              #
..LN10968:
        jmp       ..B17.119     # Prob 100%                     #
..LN10969:
                                # LOE rbx r12 r13 r14 r15
..B17.131:                      # Preds ..B17.63                # Infreq
..LN10970:
	.loc    1  889  is_stmt 1
        movl      $.L_2__STRING.1, %edi                         #889.4
..LN10971:
        vzeroupper                                              #889.4
..LN10972:
        vmovsd    %xmm9, 5072(%rsp)                             #889.4
..LN10973:
        vmovsd    %xmm10, 5080(%rsp)                            #889.4
..LN10974:
        vmovsd    %xmm11, 5088(%rsp)                            #889.4
..LN10975:
        vmovsd    %xmm12, 5096(%rsp)                            #889.4
..LN10976:
        vmovsd    %xmm13, 5104(%rsp)                            #889.4
..LN10977:
        vmovsd    %xmm4, 5112(%rsp)                             #889.4
..LN10978:
        vmovsd    %xmm5, 5120(%rsp)                             #889.4
..LN10979:
        vmovsd    %xmm8, 5128(%rsp)                             #889.4
..LN10980:
        vmovsd    %xmm7, 5136(%rsp)                             #889.4
..LN10981:
        vmovsd    %xmm6, 5144(%rsp)                             #889.4
..LN10982:
        vmovsd    %xmm0, 5152(%rsp)                             #889.4
..LN10983:
        vmovsd    %xmm3, 5160(%rsp)                             #889.4
..___tag_value_create_xgrid_2dx2d_order2_.967:
..LN10984:
#       error_handler(const char *)
        call      error_handler                                 #889.4
..___tag_value_create_xgrid_2dx2d_order2_.968:
..LN10985:
                                # LOE rbx r12 r13 r15 r14d
..B17.171:                      # Preds ..B17.131               # Infreq
..LN10986:
        vmovsd    .L_2il0floatpacket.10(%rip), %xmm2            #
..LN10987:
        vmovsd    .L_2il0floatpacket.11(%rip), %xmm1            #
..LN10988:
        vmovsd    5160(%rsp), %xmm3                             #
..LN10989:
        vmovsd    5152(%rsp), %xmm0                             #
..LN10990:
        vmovsd    5144(%rsp), %xmm6                             #
..LN10991:
        vmovsd    5136(%rsp), %xmm7                             #
..LN10992:
        vmovsd    5128(%rsp), %xmm8                             #
..LN10993:
        vmovsd    5120(%rsp), %xmm5                             #
..LN10994:
        vmovsd    5112(%rsp), %xmm4                             #
..LN10995:
        vmovsd    5104(%rsp), %xmm13                            #
..LN10996:
        vmovsd    5096(%rsp), %xmm12                            #
..LN10997:
        vmovsd    5088(%rsp), %xmm11                            #
..LN10998:
        vmovsd    5080(%rsp), %xmm10                            #
..LN10999:
        vmovsd    5072(%rsp), %xmm9                             #
..LN11000:
        jmp       ..B17.64      # Prob 100%                     #
..LN11001:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm9 xmm10 xmm11 xmm12 xmm13
..B17.133:                      # Preds ..B17.48                # Infreq
..LN11002:
	.loc    1  862  is_stmt 1
        xorl      %eax, %eax                                    #862.3
..LN11003:
        jmp       ..B17.52      # Prob 100%                     #862.3
..LN11004:
                                # LOE rax rcx rbx r12 r13 r14 r15
..B17.134:                      # Preds ..B17.36                # Infreq
..LN11005:
	.loc    1  692  is_stmt 1
        incl      %edx                                          #692.5
..LN11006:
        addq      5272(%rsp), %rcx                              #692.5
..LN11007:
        addq      5320(%rsp), %rax                              #692.5
..LN11008:
        cmpl      5256(%rsp), %edx                              #692.5
..LN11009:
        jb        ..B17.36      # Prob 82%                      #692.5
..LN11010:
                                # LOE rax rcx rsi rdi r8 r9 edx r10d
..B17.135:                      # Preds ..B17.134               # Infreq
..LN11011:
        movq      %rsi, 5280(%rsp)                              #
..LN11012:
        movq      5040(%rsp), %r15                              #
..LN11013:
        movq      5032(%rsp), %r13                              #
..LN11014:
        movq      5024(%rsp), %r14                              #
..LN11015:
        movq      5016(%rsp), %r12                              #
..LN11016:
        jmp       ..B17.26      # Prob 100%                     #
..LN11017:
                                # LOE r12 r13 r14 r15
..B17.136:                      # Preds ..B17.101               # Infreq
..LN11018:
	.loc    1  928  is_stmt 1
        xorl      %r13d, %r13d                                  #928.3
..LN11019:
        jmp       ..B17.105     # Prob 100%                     #928.3
..LN11020:
                                # LOE rbx r13 ecx esi r8d r12d r14d r15d
..B17.137:                      # Preds ..B17.23                # Infreq
..LN11021:
	.loc    1  678  is_stmt 1
        incl      %ecx                                          #678.3
..LN11022:
        addq      %r12, %rax                                    #678.3
..LN11023:
        addq      4976(%rsp), %rsi                              #678.3
..LN11024:
        cmpl      4536(%rsp), %ecx                              #678.3
..LN11025:
        jb        ..B17.23      # Prob 82%                      #678.3
..LN11026:
        jmp       ..B17.124     # Prob 100%                     #678.3
..LN11027:
                                # LOE rax rdx rsi r8 r12 ecx ebx
..B17.139:                      # Preds ..B17.14                # Infreq
..LN11028:
	.loc    1  75  is_stmt 1
        incl      %esi                                          #75.18
..LN11029:
        addq      %r8, %rcx                                     #75.18
..LN11030:
        lea       1(%rax,%r9), %eax                             #75.18
..LN11031:
        cmpl      8(%rsp), %esi                                 #75.14
..LN11032:
        jl        ..B17.14      # Prob 82%                      #75.14
..LN11033:
        jmp       ..B17.20      # Prob 100%                     #75.14
..LN11034:
                                # LOE rdx rcx rdi r8 r10 eax esi r9d
..B17.141:                      # Preds ..B17.5                 # Infreq
..LN11035:
        incl      %r8d                                          #75.18
..LN11036:
        addq      %rdi, %rsi                                    #75.18
..LN11037:
        lea       1(%rcx,%rax), %ecx                            #75.18
..LN11038:
        cmpl      24(%rsp), %r8d                                #75.14
..LN11039:
        jl        ..B17.5       # Prob 82%                      #75.14
..LN11040:
        jmp       ..B17.11      # Prob 100%                     #75.14
..LN11041:
        .align    16,0x90
	.cfi_endproc
..LN11042:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..LN11043:
# mark_end;
	.type	create_xgrid_2dx2d_order2_,@function
	.size	create_xgrid_2dx2d_order2_,.-create_xgrid_2dx2d_order2_
..LNcreate_xgrid_2dx2d_order2_.11044:
.LNcreate_xgrid_2dx2d_order2_:
	.data
# -- End  create_xgrid_2dx2d_order2_
	.text
.L_2__routine_start_create_xgrid_2dx2d_order2_17:
# -- Begin  create_xgrid_2dx2d_order2
	.text
# mark_begin;
       .align    16,0x90
	.globl create_xgrid_2dx2d_order2
# --- create_xgrid_2dx2d_order2(const int *, const int *, const int *, const int *, const double *, const double *, const double *, const double *, const double *, int *, int *, int *, int *, double *, double *, double *)
create_xgrid_2dx2d_order2:
# parameter 1(nlon_in): %rdi
# parameter 2(nlat_in): %rsi
# parameter 3(nlon_out): %rdx
# parameter 4(nlat_out): %rcx
# parameter 5(lon_in): %r8
# parameter 6(lat_in): %r9
# parameter 7(lon_out): 16 + %rbp
# parameter 8(lat_out): 24 + %rbp
# parameter 9(mask_in): 32 + %rbp
# parameter 10(i_in): 40 + %rbp
# parameter 11(j_in): 48 + %rbp
# parameter 12(i_out): 56 + %rbp
# parameter 13(j_out): 64 + %rbp
# parameter 14(xgrid_area): 72 + %rbp
# parameter 15(xgrid_clon): 80 + %rbp
# parameter 16(xgrid_clat): 88 + %rbp
..B18.1:                        # Preds ..B18.0
	.cfi_startproc
..___tag_value_create_xgrid_2dx2d_order2.973:
..L974:
                                                        #654.1
..LN11045:
	.loc    1  654  is_stmt 1
        pushq     %rbp                                          #654.1
	.cfi_def_cfa_offset 16
..LN11046:
        movq      %rsp, %rbp                                    #654.1
	.cfi_def_cfa 6, 16
	.cfi_offset 6, -16
..LN11047:
        andq      $-32, %rsp                                    #654.1
..LN11048:
        pushq     %r12                                          #654.1
..LN11049:
        pushq     %r13                                          #654.1
..LN11050:
        pushq     %r14                                          #654.1
..LN11051:
        pushq     %r15                                          #654.1
..LN11052:
        pushq     %rbx                                          #654.1
..LN11053:
        subq      $5368, %rsp                                   #654.1
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN11054:
        movq      %rsi, %r13                                    #654.1
..LN11055:
	.loc    1  663  prologue_end  is_stmt 1
        movl      (%rdi), %ebx                                  #663.10
..LN11056:
	.loc    1  654  is_stmt 1
        movq      %rdx, %r14                                    #654.1
..LN11057:
        movq      %rdi, (%rsp)                                  #654.1
..LN11058:
	.loc    1  673  is_stmt 1
        movl      %ebx, %edi                                    #673.24
..LN11059:
	.loc    1  654  is_stmt 1
        movq      %rcx, %r15                                    #654.1
..LN11060:
	.loc    1  664  is_stmt 1
        movl      (%r13), %r11d                                 #664.10
..LN11061:
	.loc    1  673  is_stmt 1
        imull     %r11d, %edi                                   #673.24
..LN11062:
        movslq    %edi, %rdi                                    #673.24
..LN11063:
	.loc    1  665  is_stmt 1
        movl      (%r14), %eax                                  #665.10
..LN11064:
	.loc    1  666  is_stmt 1
        movl      (%r15), %r10d                                 #666.10
..LN11065:
	.loc    1  673  is_stmt 1
        shlq      $3, %rdi                                      #673.24
..LN11066:
	.loc    1  665  is_stmt 1
        movl      %eax, 5248(%rsp)                              #665.10
..LN11067:
	.loc    1  692  is_stmt 1
        movslq    %eax, %rax                                    #692.33
..LN11068:
	.loc    1  654  is_stmt 1
        movq      %r9, 4120(%rsp)                               #654.1
..LN11069:
        movq      %r8, 4528(%rsp)                               #654.1
..LN11070:
	.loc    1  678  is_stmt 1
        movslq    %ebx, %r12                                    #678.31
..LN11071:
	.loc    1  664  is_stmt 1
        movl      %r11d, 4536(%rsp)                             #664.10
..LN11072:
	.loc    1  692  is_stmt 1
        movq      %rax, 5320(%rsp)                              #692.33
..LN11073:
	.loc    1  666  is_stmt 1
        movl      %r10d, 5256(%rsp)                             #666.10
..LN11074:
	.loc    1  667  is_stmt 1
        movl      $0, 944(%rsp)                                 #667.3
..LN11075:
	.loc    1  673  is_stmt 1
#       malloc(size_t)
        call      malloc                                        #673.24
..LN11076:
                                # LOE rax r12 r13 r14 r15 ebx
..B18.145:                      # Preds ..B18.1
..LN11077:
        movq      %rax, %rdx                                    #673.24
..LN11078:
                                # LOE rdx r12 r13 r14 r15 ebx
..B18.2:                        # Preds ..B18.145
..LN11079:
	.loc    1  674  is_stmt 1
        movl      5248(%rsp), %edi                              #674.24
..LN11080:
        imull     5256(%rsp), %edi                              #674.24
..LN11081:
        movslq    %edi, %rdi                                    #674.24
..LN11082:
        shlq      $3, %rdi                                      #674.24
..LN11083:
        movq      %rdx, 4944(%rsp)                              #674.24
..LN11084:
#       malloc(size_t)
        call      malloc                                        #674.24
..LN11085:
                                # LOE rax r12 r13 r14 r15 ebx
..B18.146:                      # Preds ..B18.2
..LN11086:
        movq      4944(%rsp), %rdx                              #
..LN11087:
        movq      %rax, 5264(%rsp)                              #674.24
..LN11088:
                                # LOE rdx r12 r13 r14 r15 edx ebx dl dh
..B18.3:                        # Preds ..B18.146
..LN11089:
	.loc    1  71  is_stmt 1
        movq      (%rsp), %rax                                  #71.9
..LN11090:
	.loc    1  75  is_stmt 1
        xorl      %r8d, %r8d                                    #75.7
..LN11091:
	.loc    1  72  is_stmt 1
        movl      (%r13), %r9d                                  #72.9
..LN11092:
	.loc    1  75  is_stmt 1
        xorl      %esi, %esi                                    #75.9
..LN11093:
	.loc    1  71  is_stmt 1
        movl      (%rax), %eax                                  #71.9
..LN11094:
	.loc    1  75  is_stmt 1
        movslq    %eax, %rdi                                    #75.18
..LN11095:
        testl     %r9d, %r9d                                    #75.14
..LN11096:
        jle       ..B18.12      # Prob 10%                      #75.14
..LN11097:
                                # LOE rdx rsi rdi r12 r14 r15 eax edx ebx r8d r9d dl dh
..B18.4:                        # Preds ..B18.3
..LN11098:
        movl      %r9d, 24(%rsp)                                #75.9
..LN11099:
        xorl      %ecx, %ecx                                    #75.9
..LN11100:
        movq      %r12, 5016(%rsp)                              #75.9
..LN11101:
        movl      %ebx, 4952(%rsp)                              #75.9
..LN11102:
        movq      %r14, 8(%rsp)                                 #75.9
..LN11103:
        movq      %r15, (%rsp)                                  #75.9
..LN11104:
        movq      4528(%rsp), %r9                               #75.9
..LN11105:
        movq      4120(%rsp), %r10                              #75.9
..LN11106:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..B18.5:                        # Preds ..B18.10 ..B18.141 ..B18.4
..L984:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN11107:
        xorl      %r12d, %r12d                                  #75.27
..LN11108:
        testl     %eax, %eax                                    #75.36
..LN11109:
        jle       ..B18.141     # Prob 10%                      #75.36
..LN11110:
                                # LOE rdx rsi rdi r9 r10 r12 eax ecx r8d
..B18.6:                        # Preds ..B18.5
..LN11111:
	.loc    1  85  is_stmt 1
        movq      %rsi, 40(%rsp)                                #85.5
..LN11112:
	.loc    1  78  is_stmt 1
        lea       (%rax,%rcx), %r13d                            #78.25
..LN11113:
        movslq    %r13d, %r13                                   #78.15
..LN11114:
	.loc    1  85  is_stmt 1
        lea       (%rdx,%rsi,8), %r11                           #85.5
..LN11115:
	.loc    1  76  is_stmt 1
        movslq    %ecx, %rcx                                    #76.15
..LN11116:
	.loc    1  85  is_stmt 1
        movq      %r11, 64(%rsp)                                #85.5
..LN11117:
        movl      %ecx, 48(%rsp)                                #85.5
..LN11118:
        movl      %r8d, 32(%rsp)                                #85.5
..LN11119:
	.loc    1  78  is_stmt 1
        lea       (%r9,%r13,8), %rbx                            #78.15
..LN11120:
	.loc    1  85  is_stmt 1
        movq      %rdi, 56(%rsp)                                #85.5
..LN11121:
	.loc    1  82  is_stmt 1
        lea       (%r10,%r13,8), %r13                           #82.15
..LN11122:
	.loc    1  85  is_stmt 1
        movl      %eax, 16(%rsp)                                #85.5
..LN11123:
	.loc    1  80  is_stmt 1
        lea       (%r10,%rcx,8), %r14                           #80.15
..LN11124:
	.loc    1  85  is_stmt 1
        movq      %rdx, 4944(%rsp)                              #85.5
..LN11125:
	.loc    1  76  is_stmt 1
        lea       (%r9,%rcx,8), %r15                            #76.15
..LN11126:
                                # LOE rbx r12 r13 r14 r15
..B18.7:                        # Preds ..B18.9 ..B18.6
..L985:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN11127:
	.loc    1  84  is_stmt 1
        lea       1016(%rsp), %rdi                              #84.12
..LN11128:
	.loc    1  76  is_stmt 1
        movq      (%r15,%r12,8), %rax                           #76.15
..LN11129:
	.loc    1  84  is_stmt 1
        lea       1176(%rsp), %rsi                              #84.12
..LN11130:
	.loc    1  83  is_stmt 1
        movq      8(%r13,%r12,8), %rdx                          #83.15
..LN11131:
	.loc    1  76  is_stmt 1
        movq      %rax, -160(%rsi)                              #76.5
..LN11132:
	.loc    1  77  is_stmt 1
        movq      8(%r15,%r12,8), %rcx                          #77.15
..LN11133:
	.loc    1  78  is_stmt 1
        movq      16(%rbx,%r12,8), %r8                          #78.15
..LN11134:
	.loc    1  79  is_stmt 1
        movq      8(%rbx,%r12,8), %r9                           #79.15
..LN11135:
	.loc    1  80  is_stmt 1
        movq      (%r14,%r12,8), %r10                           #80.15
..LN11136:
	.loc    1  81  is_stmt 1
        movq      8(%r14,%r12,8), %r11                          #81.15
..LN11137:
	.loc    1  82  is_stmt 1
        movq      16(%r13,%r12,8), %rax                         #82.15
..LN11138:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN11139:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN11140:
	.loc    1  77  is_stmt 1
        movq      %rcx, -152(%rsi)                              #77.5
..LN11141:
	.loc    1  78  is_stmt 1
        movq      %r8, -144(%rsi)                               #78.5
..LN11142:
	.loc    1  79  is_stmt 1
        movq      %r9, -136(%rsi)                               #79.5
..LN11143:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN11144:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN11145:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN11146:
	.loc    1  84  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_2dx2d_order2.986:
..LN11147:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_2dx2d_order2.987:
..LN11148:
                                # LOE rbx r12 r13 r14 r15 eax
..B18.8:                        # Preds ..B18.7
..LN11149:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN11150:
        lea       1016(%rsp), %rdi                              #85.20
..LN11151:
        lea       1176(%rsp), %rsi                              #85.20
..___tag_value_create_xgrid_2dx2d_order2.988:
..LN11152:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_2dx2d_order2.989:
..LN11153:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B18.9:                        # Preds ..B18.8
..LN11154:
        movq      64(%rsp), %rax                                #85.5
..LN11155:
        vmovsd    %xmm0, (%rax,%r12,8)                          #85.5
..LN11156:
	.loc    1  75  is_stmt 1
        incq      %r12                                          #75.40
..LN11157:
        cmpq      56(%rsp), %r12                                #75.36
..LN11158:
        jl        ..B18.7       # Prob 82%                      #75.36
..LN11159:
                                # LOE rbx r12 r13 r14 r15
..B18.10:                       # Preds ..B18.9
..LN11160:
        movl      32(%rsp), %r8d                                #
..LN11161:
        incl      %r8d                                          #75.18
..LN11162:
        movq      40(%rsp), %rsi                                #
..LN11163:
        movq      56(%rsp), %rdi                                #
..LN11164:
        addq      %rdi, %rsi                                    #75.18
..LN11165:
        movl      48(%rsp), %ecx                                #
..LN11166:
        movl      16(%rsp), %eax                                #
..LN11167:
        lea       1(%rcx,%rax), %ecx                            #75.18
..LN11168:
        movq      4944(%rsp), %rdx                              #
..LN11169:
        movq      4528(%rsp), %r9                               #
..LN11170:
        movq      4120(%rsp), %r10                              #
..LN11171:
        cmpl      24(%rsp), %r8d                                #75.14
..LN11172:
        jl        ..B18.5       # Prob 82%                      #75.14
..LN11173:
                                # LOE rdx rsi rdi r9 r10 eax edx ecx r8d dl dh
..B18.11:                       # Preds ..B18.141 ..B18.10      # Infreq
..LN11174:
        movq      5016(%rsp), %r12                              #
..LN11175:
        movl      4952(%rsp), %ebx                              #
..LN11176:
        movq      8(%rsp), %r14                                 #
..LN11177:
        movq      (%rsp), %r15                                  #
..LN11178:
                                # LOE rdx r12 r14 r15 ebx
..B18.12:                       # Preds ..B18.11 ..B18.3        # Infreq
..LN11179:
	.loc    1  71  is_stmt 1
        movl      (%r14), %r9d                                  #71.9
..LN11180:
	.loc    1  75  is_stmt 1
        xorl      %esi, %esi                                    #75.7
..LN11181:
	.loc    1  72  is_stmt 1
        movl      (%r15), %r10d                                 #72.9
..LN11182:
	.loc    1  75  is_stmt 1
        xorl      %ecx, %ecx                                    #75.9
..LN11183:
        movslq    %r9d, %r8                                     #75.18
..LN11184:
        testl     %r10d, %r10d                                  #75.14
..LN11185:
        jle       ..B18.21      # Prob 10%                      #75.14
..LN11186:
                                # LOE rdx rcx r8 r12 ebx esi r9d r10d
..B18.13:                       # Preds ..B18.12                # Infreq
..LN11187:
        movl      %r10d, 8(%rsp)                                #75.9
..LN11188:
        xorl      %eax, %eax                                    #75.9
..LN11189:
        movq      %rdx, 4944(%rsp)                              #75.9
..LN11190:
        movq      %r12, 5016(%rsp)                              #75.9
..LN11191:
        movl      %ebx, 4952(%rsp)                              #75.9
..LN11192:
        movq      24(%rbp), %r10                                #75.9
..LN11193:
        movq      16(%rbp), %rdx                                #75.9
..LN11194:
        movq      5264(%rsp), %rdi                              #75.9
..LN11195:
                                # LOE rdx rcx rdi r8 r10 eax esi r9d
..B18.14:                       # Preds ..B18.19 ..B18.139 ..B18.13 # Infreq
..L990:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN11196:
        xorl      %r13d, %r13d                                  #75.27
..LN11197:
        testl     %r9d, %r9d                                    #75.36
..LN11198:
        jle       ..B18.139     # Prob 10%                      #75.36
..LN11199:
                                # LOE rdx rcx rdi r8 r10 r13 eax esi r9d
..B18.15:                       # Preds ..B18.14                # Infreq
..LN11200:
	.loc    1  85  is_stmt 1
        movq      %rcx, 24(%rsp)                                #85.5
..LN11201:
	.loc    1  78  is_stmt 1
        lea       (%r9,%rax), %ebx                              #78.25
..LN11202:
        movslq    %ebx, %rbx                                    #78.15
..LN11203:
	.loc    1  85  is_stmt 1
        lea       (%rdi,%rcx,8), %r11                           #85.5
..LN11204:
	.loc    1  76  is_stmt 1
        movslq    %eax, %rax                                    #76.15
..LN11205:
	.loc    1  85  is_stmt 1
        movq      %r11, 48(%rsp)                                #85.5
..LN11206:
        movl      %eax, 32(%rsp)                                #85.5
..LN11207:
        movl      %esi, 16(%rsp)                                #85.5
..LN11208:
	.loc    1  78  is_stmt 1
        lea       (%rdx,%rbx,8), %r12                           #78.15
..LN11209:
	.loc    1  85  is_stmt 1
        movq      %r8, 40(%rsp)                                 #85.5
..LN11210:
	.loc    1  82  is_stmt 1
        lea       (%r10,%rbx,8), %rbx                           #82.15
..LN11211:
	.loc    1  85  is_stmt 1
        movl      %r9d, (%rsp)                                  #85.5
..LN11212:
	.loc    1  80  is_stmt 1
        lea       (%r10,%rax,8), %r14                           #80.15
..LN11213:
	.loc    1  76  is_stmt 1
        lea       (%rdx,%rax,8), %r15                           #76.15
..LN11214:
                                # LOE rbx r12 r13 r14 r15
..B18.16:                       # Preds ..B18.18 ..B18.15       # Infreq
..L991:         # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN11215:
	.loc    1  84  is_stmt 1
        lea       1336(%rsp), %rdi                              #84.12
..LN11216:
	.loc    1  76  is_stmt 1
        movq      (%r15,%r13,8), %rax                           #76.15
..LN11217:
	.loc    1  84  is_stmt 1
        lea       1496(%rsp), %rsi                              #84.12
..LN11218:
	.loc    1  83  is_stmt 1
        movq      8(%rbx,%r13,8), %rdx                          #83.15
..LN11219:
	.loc    1  76  is_stmt 1
        movq      %rax, -160(%rsi)                              #76.5
..LN11220:
	.loc    1  77  is_stmt 1
        movq      8(%r15,%r13,8), %rcx                          #77.15
..LN11221:
	.loc    1  78  is_stmt 1
        movq      16(%r12,%r13,8), %r8                          #78.15
..LN11222:
	.loc    1  79  is_stmt 1
        movq      8(%r12,%r13,8), %r9                           #79.15
..LN11223:
	.loc    1  80  is_stmt 1
        movq      (%r14,%r13,8), %r10                           #80.15
..LN11224:
	.loc    1  81  is_stmt 1
        movq      8(%r14,%r13,8), %r11                          #81.15
..LN11225:
	.loc    1  82  is_stmt 1
        movq      16(%rbx,%r13,8), %rax                         #82.15
..LN11226:
	.loc    1  83  is_stmt 1
        movq      %rdx, 24(%rsi)                                #83.5
..LN11227:
	.loc    1  84  is_stmt 1
        movl      $4, %edx                                      #84.12
..LN11228:
	.loc    1  77  is_stmt 1
        movq      %rcx, -152(%rsi)                              #77.5
..LN11229:
	.loc    1  78  is_stmt 1
        movq      %r8, -144(%rsi)                               #78.5
..LN11230:
	.loc    1  79  is_stmt 1
        movq      %r9, -136(%rsi)                               #79.5
..LN11231:
	.loc    1  80  is_stmt 1
        movq      %r10, (%rsi)                                  #80.5
..LN11232:
	.loc    1  81  is_stmt 1
        movq      %r11, 8(%rsi)                                 #81.5
..LN11233:
	.loc    1  82  is_stmt 1
        movq      %rax, 16(%rsi)                                #82.5
..LN11234:
	.loc    1  84  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #84.12
..___tag_value_create_xgrid_2dx2d_order2.992:
..LN11235:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #84.12
..___tag_value_create_xgrid_2dx2d_order2.993:
..LN11236:
                                # LOE rbx r12 r13 r14 r15 eax
..B18.17:                       # Preds ..B18.16                # Infreq
..LN11237:
	.loc    1  85  is_stmt 1
        movl      %eax, %edx                                    #85.20
..LN11238:
        lea       1336(%rsp), %rdi                              #85.20
..LN11239:
        lea       1496(%rsp), %rsi                              #85.20
..___tag_value_create_xgrid_2dx2d_order2.994:
..LN11240:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #85.20
..___tag_value_create_xgrid_2dx2d_order2.995:
..LN11241:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B18.18:                       # Preds ..B18.17                # Infreq
..LN11242:
        movq      48(%rsp), %rax                                #85.5
..LN11243:
        vmovsd    %xmm0, (%rax,%r13,8)                          #85.5
..LN11244:
	.loc    1  75  is_stmt 1
        incq      %r13                                          #75.40
..LN11245:
        cmpq      40(%rsp), %r13                                #75.36
..LN11246:
        jl        ..B18.16      # Prob 82%                      #75.36
..LN11247:
                                # LOE rbx r12 r13 r14 r15
..B18.19:                       # Preds ..B18.18                # Infreq
..LN11248:
        movl      16(%rsp), %esi                                #
..LN11249:
        incl      %esi                                          #75.18
..LN11250:
        movq      24(%rsp), %rcx                                #
..LN11251:
        movq      40(%rsp), %r8                                 #
..LN11252:
        addq      %r8, %rcx                                     #75.18
..LN11253:
        movl      32(%rsp), %eax                                #
..LN11254:
        movl      (%rsp), %r9d                                  #
..LN11255:
        lea       1(%rax,%r9), %eax                             #75.18
..LN11256:
        movq      5264(%rsp), %rdi                              #
..LN11257:
        movq      24(%rbp), %r10                                #
..LN11258:
        movq      16(%rbp), %rdx                                #
..LN11259:
        cmpl      8(%rsp), %esi                                 #75.14
..LN11260:
        jl        ..B18.14      # Prob 82%                      #75.14
..LN11261:
                                # LOE rdx rcx rdi r8 r10 eax esi r9d
..B18.20:                       # Preds ..B18.139 ..B18.19      # Infreq
..LN11262:
        movq      4944(%rsp), %rdx                              #
..LN11263:
        movq      5016(%rsp), %r12                              #
..LN11264:
        movl      4952(%rsp), %ebx                              #
..LN11265:
                                # LOE rdx r12 ebx
..B18.21:                       # Preds ..B18.20 ..B18.12       # Infreq
..LN11266:
	.loc    1  678  is_stmt 1
        xorl      %ecx, %ecx                                    #678.3
..LN11267:
        xorl      %eax, %eax                                    #678.31
..LN11268:
        cmpl      $0, 4536(%rsp)                                #678.16
..LN11269:
        jle       ..B18.124     # Prob 9%                       #678.16
..LN11270:
                                # LOE rax rdx r12 ecx ebx
..B18.22:                       # Preds ..B18.21                # Infreq
..LN11271:
	.loc    1  699  is_stmt 1
        movq      24(%rbp), %r9                                 #699.42
..LN11272:
	.loc    1  668  is_stmt 1
        lea       1(%rbx), %r14d                                #668.16
..LN11273:
	.loc    1  699  is_stmt 1
        movq      16(%rbp), %rsi                                #699.18
..LN11274:
        movq      5320(%rsp), %r15                              #699.42
..LN11275:
	.loc    1  956  is_stmt 1
        vxorpd    %xmm6, %xmm6, %xmm6                           #956.17
..LN11276:
	.loc    1  669  is_stmt 1
        movl      5248(%rsp), %r10d                             #669.16
..LN11277:
	.loc    1  683  is_stmt 1
        movq      4120(%rsp), %r13                              #683.39
..LN11278:
        movq      4528(%rsp), %r11                              #683.16
..LN11279:
	.loc    1  699  is_stmt 1
        lea       (%r9,%r15,8), %r9                             #699.42
..LN11280:
	.loc    1  678  is_stmt 1
        movslq    %r14d, %r14                                   #678.31
..LN11281:
	.loc    1  699  is_stmt 1
        lea       (%rsi,%r15,8), %r15                           #699.18
..LN11282:
	.loc    1  929  is_stmt 1
        movl      $8, %esi                                      #929.17
..LN11283:
	.loc    1  669  is_stmt 1
        lea       1(%r10), %r10d                                #669.16
..LN11284:
	.loc    1  692  is_stmt 1
        movslq    %r10d, %r10                                   #692.33
..LN11285:
	.loc    1  683  is_stmt 1
        lea       (%r13,%r12,8), %r13                           #683.39
..LN11286:
	.loc    1  678  is_stmt 1
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm9             #678.76
..LN11287:
	.loc    1  683  is_stmt 1
        lea       (%r11,%r12,8), %r11                           #683.16
..LN11288:
	.loc    1  687  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm8             #687.38
..LN11289:
	.loc    1  929  is_stmt 1
        vmovd     %esi, %xmm0                                   #929.17
..LN11290:
	.loc    1  678  is_stmt 1
        xorl      %esi, %esi                                    #678.31
..LN11291:
	.loc    1  929  is_stmt 1
        vpbroadcastd %xmm0, %ymm0                               #929.17
..LN11292:
	.loc    1  717  is_stmt 1
        vmovsd    .L_2il0floatpacket.2(%rip), %xmm7             #717.23
..LN11293:
	.loc    1  940  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm5             #940.13
..LN11294:
	.loc    1  939  is_stmt 1
        vmovsd    .L_2il0floatpacket.4(%rip), %xmm4             #939.30
..LN11295:
	.loc    1  942  is_stmt 1
        vmovsd    .L_2il0floatpacket.6(%rip), %xmm3             #942.21
..LN11296:
	.loc    1  1127  is_stmt 1
        vmovsd    .L_2il0floatpacket.10(%rip), %xmm2            #1127.23
..LN11297:
	.loc    1  888  is_stmt 1
        vmovsd    .L_2il0floatpacket.11(%rip), %xmm1            #888.27
..LN11298:
	.loc    1  654  is_stmt 1
        movq      32(%rbp), %r8                                 #654.1
..LN11299:
	.loc    1  678  is_stmt 1
        vmovdqu   %ymm0, 832(%rsp)                              #678.31
..LN11300:
        movq      %r15, 5232(%rsp)                              #678.31
..LN11301:
        movq      %r9, 5280(%rsp)                               #678.31
..LN11302:
        movq      %r10, 5272(%rsp)                              #678.31
..LN11303:
        movq      %r11, 4992(%rsp)                              #678.31
..LN11304:
        movq      %r13, 4984(%rsp)                              #678.31
..LN11305:
        movq      %r14, 4976(%rsp)                              #678.31
..LN11306:
                                # LOE rax rdx rsi r8 r12 ecx ebx
..B18.23:                       # Preds ..B18.27 ..B18.137 ..B18.22 # Infreq
..L996:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN11307:
        xorl      %r14d, %r14d                                  #678.27
..LN11308:
        testl     %ebx, %ebx                                    #678.40
..LN11309:
        jle       ..B18.137     # Prob 10%                      #678.40
..LN11310:
                                # LOE rax rdx rsi r8 r12 r14 ecx ebx
..B18.24:                       # Preds ..B18.23                # Infreq
..LN11311:
	.loc    1  681  is_stmt 1
        movq      4120(%rsp), %r11                              #681.39
..LN11312:
	.loc    1  716  is_stmt 1
        lea       (%rdx,%rax,8), %rdi                           #716.13
..LN11313:
	.loc    1  681  is_stmt 1
        movq      4528(%rsp), %r10                              #681.16
..LN11314:
	.loc    1  678  is_stmt 1
        lea       (%r8,%rax,8), %r13                            #678.55
..LN11315:
	.loc    1  683  is_stmt 1
        movq      4984(%rsp), %r9                               #683.39
..LN11316:
        movq      4992(%rsp), %r15                              #683.16
..LN11317:
	.loc    1  681  is_stmt 1
        lea       (%r11,%rsi,8), %r11                           #681.39
..LN11318:
	.loc    1  683  is_stmt 1
        movq      %r11, 5168(%rsp)                              #683.16
..LN11319:
	.loc    1  681  is_stmt 1
        lea       (%r10,%rsi,8), %r10                           #681.16
..LN11320:
	.loc    1  683  is_stmt 1
        movq      %r10, 5176(%rsp)                              #683.16
..LN11321:
        lea       (%r9,%rsi,8), %r9                             #683.39
..LN11322:
        movq      %r9, 5184(%rsp)                               #683.16
..LN11323:
        lea       (%r15,%rsi,8), %r15                           #683.16
..LN11324:
        movq      %rdi, 5008(%rsp)                              #683.16
..LN11325:
        movq      %rsi, 5000(%rsp)                              #683.16
..LN11326:
        movq      %rax, 4968(%rsp)                              #683.16
..LN11327:
        movl      %ecx, 4960(%rsp)                              #683.16
..LN11328:
        movq      %rdx, 4944(%rsp)                              #683.16
..LN11329:
        movl      %ebx, 4952(%rsp)                              #683.16
..LN11330:
                                # LOE r12 r13 r14 r15
..B18.25:                       # Preds ..B18.26 ..B18.24       # Infreq
..L997:         # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN11331:
	.loc    1  678  is_stmt 1
        vmovsd    (%r13,%r14,8), %xmm0                          #678.55
..LN11332:
        vcomisd   .L_2il0floatpacket.1(%rip), %xmm0             #678.76
..LN11333:
        ja        ..B18.28      # Prob 22%                      #678.76
..LN11334:
                                # LOE r12 r13 r14 r15
..B18.26:                       # Preds ..B18.121 ..B18.135 ..B18.34 ..B18.25 # Infreq
..LN11335:
        incq      %r14                                          #678.27
..LN11336:
        cmpq      %r12, %r14                                    #678.27
..LN11337:
        jb        ..B18.25      # Prob 82%                      #678.27
..LN11338:
                                # LOE r12 r13 r14 r15
..B18.27:                       # Preds ..B18.26                # Infreq
..LN11339:
        movq      5000(%rsp), %rsi                              #
..LN11340:
        movl      4960(%rsp), %ecx                              #
..LN11341:
        incl      %ecx                                          #678.3
..LN11342:
        movq      4968(%rsp), %rax                              #
..LN11343:
        addq      4976(%rsp), %rsi                              #678.3
..LN11344:
        addq      %r12, %rax                                    #678.3
..LN11345:
        movq      4944(%rsp), %rdx                              #
..LN11346:
        movl      4952(%rsp), %ebx                              #
..LN11347:
        movq      32(%rbp), %r8                                 #
..LN11348:
        cmpl      4536(%rsp), %ecx                              #678.3
..LN11349:
        jb        ..B18.23      # Prob 82%                      #678.3
..LN11350:
        jmp       ..B18.124     # Prob 100%                     #678.3
..LN11351:
                                # LOE rax rdx rsi r8 r12 edx ecx ebx dl dh
..B18.28:                       # Preds ..B18.25                # Infreq
..LN11352:
	.loc    1  681  is_stmt 1
        movq      5176(%rsp), %rcx                              #681.16
..LN11353:
	.loc    1  685  is_stmt 1
        movl      $4, %edi                                      #685.18
..LN11354:
	.loc    1  681  is_stmt 1
        movq      5168(%rsp), %r8                               #681.39
..LN11355:
	.loc    1  685  is_stmt 1
        lea       2080(%rsp), %rsi                              #685.18
..LN11356:
	.loc    1  683  is_stmt 1
        movq      16(%r15,%r14,8), %r10                         #683.16
..LN11357:
	.loc    1  681  is_stmt 1
        movq      (%rcx,%r14,8), %rax                           #681.16
..LN11358:
        movq      %rax, -416(%rsi)                              #681.5
..LN11359:
	.loc    1  683  is_stmt 1
        movq      3104(%rsi), %rax                              #683.39
..LN11360:
	.loc    1  681  is_stmt 1
        movq      (%r8,%r14,8), %rdx                            #681.39
..LN11361:
        movq      %rdx, (%rsi)                                  #681.28
..LN11362:
	.loc    1  683  is_stmt 1
        movq      16(%rax,%r14,8), %r11                         #683.39
..LN11363:
        movq      %r11, 16(%rsi)                                #683.28
..LN11364:
	.loc    1  682  is_stmt 1
        movq      8(%rcx,%r14,8), %rbx                          #682.16
..LN11365:
        movq      8(%r8,%r14,8), %r9                            #682.39
..LN11366:
	.loc    1  684  is_stmt 1
        movq      8(%r15,%r14,8), %r11                          #684.16
..LN11367:
        movq      8(%rax,%r14,8), %rdx                          #684.39
..LN11368:
	.loc    1  682  is_stmt 1
        movq      %rbx, -408(%rsi)                              #682.5
..LN11369:
        movq      %r9, 8(%rsi)                                  #682.28
..LN11370:
	.loc    1  683  is_stmt 1
        movq      %r10, -400(%rsi)                              #683.5
..LN11371:
	.loc    1  684  is_stmt 1
        movq      %r11, -392(%rsi)                              #684.5
..LN11372:
        movq      %rdx, 24(%rsi)                                #684.28
..LN11373:
	.loc    1  685  is_stmt 1
        vzeroupper                                              #685.18
..___tag_value_create_xgrid_2dx2d_order2.998:
..LN11374:
#       minval_double(int, const double *)
        call      minval_double                                 #685.18
..___tag_value_create_xgrid_2dx2d_order2.999:
..LN11375:
                                # LOE r12 r13 r14 r15 xmm0
..B18.151:                      # Preds ..B18.28                # Infreq
..LN11376:
        vmovsd    %xmm0, 5312(%rsp)                             #685.18
..LN11377:
                                # LOE r12 r13 r14 r15
..B18.29:                       # Preds ..B18.151               # Infreq
..LN11378:
	.loc    1  686  is_stmt 1
        movl      $4, %edi                                      #686.18
..LN11379:
        lea       2080(%rsp), %rsi                              #686.18
..___tag_value_create_xgrid_2dx2d_order2.1000:
..LN11380:
#       maxval_double(int, const double *)
        call      maxval_double                                 #686.18
..___tag_value_create_xgrid_2dx2d_order2.1001:
..LN11381:
                                # LOE r12 r13 r14 r15 xmm0
..B18.152:                      # Preds ..B18.29                # Infreq
..LN11382:
        vmovsd    %xmm0, 5328(%rsp)                             #686.18
..LN11383:
                                # LOE r12 r13 r14 r15
..B18.30:                       # Preds ..B18.152               # Infreq
..LN11384:
	.loc    1  687  is_stmt 1
        lea       1664(%rsp), %rdi                              #687.13
..LN11385:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #687.13
..LN11386:
        lea       2080(%rsp), %rsi                              #687.13
..LN11387:
        movl      $4, %edx                                      #687.13
..___tag_value_create_xgrid_2dx2d_order2.1002:
..LN11388:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #687.13
..___tag_value_create_xgrid_2dx2d_order2.1003:
..LN11389:
                                # LOE r12 r13 r14 r15 eax
..B18.153:                      # Preds ..B18.30                # Infreq
..LN11390:
        movl      %eax, %ebx                                    #687.13
..LN11391:
                                # LOE r12 r13 r14 r15 ebx
..B18.31:                       # Preds ..B18.153               # Infreq
..LN11392:
	.loc    1  688  is_stmt 1
        movl      %ebx, %edi                                    #688.18
..LN11393:
        lea       1664(%rsp), %rsi                              #688.18
..___tag_value_create_xgrid_2dx2d_order2.1004:
..LN11394:
#       minval_double(int, const double *)
        call      minval_double                                 #688.18
..___tag_value_create_xgrid_2dx2d_order2.1005:
..LN11395:
                                # LOE r12 r13 r14 r15 ebx xmm0
..B18.154:                      # Preds ..B18.31                # Infreq
..LN11396:
        vmovsd    %xmm0, 5192(%rsp)                             #688.18
..LN11397:
                                # LOE r12 r13 r14 r15 ebx
..B18.32:                       # Preds ..B18.154               # Infreq
..LN11398:
	.loc    1  689  is_stmt 1
        movl      %ebx, %edi                                    #689.18
..LN11399:
        lea       1664(%rsp), %rsi                              #689.18
..___tag_value_create_xgrid_2dx2d_order2.1006:
..LN11400:
#       maxval_double(int, const double *)
        call      maxval_double                                 #689.18
..___tag_value_create_xgrid_2dx2d_order2.1007:
..LN11401:
                                # LOE r12 r13 r14 r15 ebx xmm0
..B18.155:                      # Preds ..B18.32                # Infreq
..LN11402:
        vmovsd    %xmm0, 5200(%rsp)                             #689.18
..LN11403:
                                # LOE r12 r13 r14 r15 ebx
..B18.33:                       # Preds ..B18.155               # Infreq
..LN11404:
	.loc    1  690  is_stmt 1
        movl      %ebx, %edi                                    #690.18
..LN11405:
        lea       1664(%rsp), %rsi                              #690.18
..___tag_value_create_xgrid_2dx2d_order2.1008:
..LN11406:
#       avgval_double(int, const double *)
        call      avgval_double                                 #690.18
..___tag_value_create_xgrid_2dx2d_order2.1009:
..LN11407:
                                # LOE r12 r13 r14 r15 ebx xmm0
..B18.34:                       # Preds ..B18.33                # Infreq
..LN11408:
	.loc    1  692  is_stmt 1
        xorl      %ecx, %ecx                                    #692.33
..LN11409:
        xorl      %edx, %edx                                    #692.5
..LN11410:
        xorl      %eax, %eax                                    #692.33
..LN11411:
        cmpl      $0, 5256(%rsp)                                #692.18
..LN11412:
        jle       ..B18.26      # Prob 9%                       #692.18
..LN11413:
                                # LOE rax rcx r12 r13 r14 r15 edx ebx xmm0
..B18.35:                       # Preds ..B18.34                # Infreq
..LN11414:
	.loc    1  862  is_stmt 1
        movl      %ebx, %esi                                    #862.3
..LN11415:
        andl      $-4, %esi                                     #862.3
..LN11416:
	.loc    1  861  is_stmt 1
        movslq    %ebx, %r8                                     #861.3
..LN11417:
	.loc    1  862  is_stmt 1
        movslq    %esi, %rsi                                    #862.3
..LN11418:
        movq      %rsi, 5064(%rsp)                              #862.3
..LN11419:
        movq      %r8, 5056(%rsp)                               #862.3
..LN11420:
        vmovsd    %xmm0, 5208(%rsp)                             #862.3
..LN11421:
        movl      %ebx, 5048(%rsp)                              #862.3
..LN11422:
        movq      %r15, 5040(%rsp)                              #862.3
..LN11423:
        movq      %r13, 5032(%rsp)                              #862.3
..LN11424:
        movq      %r14, 5024(%rsp)                              #862.3
..LN11425:
        movq      %r12, 5016(%rsp)                              #862.3
..LN11426:
        movq      5280(%rsp), %rsi                              #862.3
..LN11427:
        movq      5264(%rsp), %r9                               #862.3
..LN11428:
        movl      5248(%rsp), %r10d                             #862.3
..LN11429:
        movq      24(%rbp), %rdi                                #862.3
..LN11430:
        movq      16(%rbp), %r8                                 #862.3
..LN11431:
                                # LOE rax rcx rsi rdi r8 r9 edx r10d
..B18.36:                       # Preds ..B18.120 ..B18.134 ..B18.35 # Infreq
..L1010:        # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN11432:
	.loc    1  692  is_stmt 1
        xorl      %r14d, %r14d                                  #692.29
..LN11433:
        testl     %r10d, %r10d                                  #692.42
..LN11434:
        jle       ..B18.134     # Prob 10%                      #692.42
..LN11435:
                                # LOE rax rcx rsi rdi r8 r9 r14 edx r10d
..B18.37:                       # Preds ..B18.36                # Infreq
..LN11436:
	.loc    1  699  is_stmt 1
        movq      5232(%rsp), %rbx                              #699.18
..LN11437:
	.loc    1  716  is_stmt 1
        lea       (%r9,%rax,8), %r11                            #716.13
..LN11438:
        movq      %r11, 5240(%rsp)                              #716.13
..LN11439:
	.loc    1  697  is_stmt 1
        lea       (%rdi,%rcx,8), %r13                           #697.42
..LN11440:
	.loc    1  716  is_stmt 1
        movq      %rax, 5304(%rsp)                              #716.13
..LN11441:
	.loc    1  697  is_stmt 1
        lea       (%r8,%rcx,8), %r15                            #697.18
..LN11442:
	.loc    1  716  is_stmt 1
        movq      %rcx, 5296(%rsp)                              #716.13
..LN11443:
	.loc    1  699  is_stmt 1
        lea       (%rsi,%rcx,8), %r12                           #699.42
..LN11444:
	.loc    1  716  is_stmt 1
        movl      %edx, 5288(%rsp)                              #716.13
..LN11445:
	.loc    1  699  is_stmt 1
        lea       (%rbx,%rcx,8), %rbx                           #699.18
..LN11446:
	.loc    1  716  is_stmt 1
        movq      %rsi, 5280(%rsp)                              #716.13
..LN11447:
                                # LOE rbx r12 r13 r14 r15
..B18.38:                       # Preds ..B18.119 ..B18.37      # Infreq
..L1011:        # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN11448:
	.loc    1  702  is_stmt 1
        lea       2896(%rsp), %rsi                              #702.21
..LN11449:
	.loc    1  697  is_stmt 1
        movq      (%r15,%r14,8), %rax                           #697.18
..LN11450:
	.loc    1  702  is_stmt 1
        movl      $4, %edi                                      #702.21
..LN11451:
	.loc    1  697  is_stmt 1
        movq      %rax, -400(%rsi)                              #697.7
..LN11452:
        movq      (%r13,%r14,8), %rdx                           #697.42
..LN11453:
	.loc    1  698  is_stmt 1
        movq      8(%r13,%r14,8), %r8                           #698.42
..LN11454:
        movq      8(%r15,%r14,8), %rcx                          #698.18
..LN11455:
	.loc    1  699  is_stmt 1
        movq      16(%rbx,%r14,8), %r9                          #699.18
..LN11456:
	.loc    1  700  is_stmt 1
        movq      8(%rbx,%r14,8), %r11                          #700.18
..LN11457:
	.loc    1  699  is_stmt 1
        movq      16(%r12,%r14,8), %r10                         #699.42
..LN11458:
	.loc    1  700  is_stmt 1
        movq      8(%r12,%r14,8), %rax                          #700.42
..LN11459:
	.loc    1  697  is_stmt 1
        movq      %rdx, (%rsi)                                  #697.31
..LN11460:
	.loc    1  698  is_stmt 1
        movq      %rcx, -392(%rsi)                              #698.7
..LN11461:
        movq      %r8, 8(%rsi)                                  #698.31
..LN11462:
	.loc    1  699  is_stmt 1
        movq      %r9, -384(%rsi)                               #699.7
..LN11463:
        movq      %r10, 16(%rsi)                                #699.31
..LN11464:
	.loc    1  700  is_stmt 1
        movq      %r11, -376(%rsi)                              #700.7
..LN11465:
        movq      %rax, 24(%rsi)                                #700.31
..LN11466:
	.loc    1  702  is_stmt 1
        vzeroupper                                              #702.21
..___tag_value_create_xgrid_2dx2d_order2.1012:
..LN11467:
#       minval_double(int, const double *)
        call      minval_double                                 #702.21
..___tag_value_create_xgrid_2dx2d_order2.1013:
..LN11468:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B18.157:                      # Preds ..B18.38                # Infreq
..LN11469:
        vmovsd    %xmm0, 5336(%rsp)                             #702.21
..LN11470:
                                # LOE rbx r12 r13 r14 r15
..B18.39:                       # Preds ..B18.157               # Infreq
..LN11471:
	.loc    1  703  is_stmt 1
        movl      $4, %edi                                      #703.21
..LN11472:
        lea       2896(%rsp), %rsi                              #703.21
..___tag_value_create_xgrid_2dx2d_order2.1014:
..LN11473:
#       maxval_double(int, const double *)
        call      maxval_double                                 #703.21
..___tag_value_create_xgrid_2dx2d_order2.1015:
..LN11474:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B18.158:                      # Preds ..B18.39                # Infreq
..LN11475:
        vmovapd   %xmm0, %xmm1                                  #703.21
..LN11476:
                                # LOE rbx r12 r13 r14 r15 xmm1
..B18.40:                       # Preds ..B18.158               # Infreq
..LN11477:
	.loc    1  704  is_stmt 1
        vmovsd    5336(%rsp), %xmm0                             #704.25
..LN11478:
        vcomisd   5328(%rsp), %xmm0                             #704.25
..LN11479:
        jae       ..B18.119     # Prob 50%                      #704.25
..LN11480:
                                # LOE rbx r12 r13 r14 r15 xmm1
..B18.41:                       # Preds ..B18.40                # Infreq
..LN11481:
        vmovsd    5312(%rsp), %xmm0                             #704.54
..LN11482:
        vcomisd   %xmm1, %xmm0                                  #704.54
..LN11483:
        jae       ..B18.119     # Prob 78%                      #704.54
..LN11484:
                                # LOE rbx r12 r13 r14 r15
..B18.42:                       # Preds ..B18.41                # Infreq
..LN11485:
	.loc    1  705  is_stmt 1
        lea       2496(%rsp), %rdi                              #705.15
..LN11486:
        vmovsd    2712(%rdi), %xmm0                             #705.15
..LN11487:
        lea       2896(%rsp), %rsi                              #705.15
..LN11488:
        movl      $4, %edx                                      #705.15
..___tag_value_create_xgrid_2dx2d_order2.1016:
..LN11489:
#       fix_lon(double *, double *, int, double)
        call      fix_lon                                       #705.15
..___tag_value_create_xgrid_2dx2d_order2.1017:
..LN11490:
                                # LOE rbx r12 r13 r14 r15 eax
..B18.159:                      # Preds ..B18.42                # Infreq
..LN11491:
        movl      %eax, 5224(%rsp)                              #705.15
..LN11492:
                                # LOE rax rbx r12 r13 r14 r15 eax al ah
..B18.43:                       # Preds ..B18.159               # Infreq
..LN11493:
	.loc    1  706  is_stmt 1
        lea       2496(%rsp), %rsi                              #706.21
..LN11494:
        movl      %eax, %edi                                    #706.21
..___tag_value_create_xgrid_2dx2d_order2.1018:
..LN11495:
#       minval_double(int, const double *)
        call      minval_double                                 #706.21
..___tag_value_create_xgrid_2dx2d_order2.1019:
..LN11496:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B18.160:                      # Preds ..B18.43                # Infreq
..LN11497:
        vmovsd    %xmm0, 5216(%rsp)                             #706.21
..LN11498:
                                # LOE rbx r12 r13 r14 r15
..B18.44:                       # Preds ..B18.160               # Infreq
..LN11499:
	.loc    1  707  is_stmt 1
        lea       2496(%rsp), %rsi                              #707.21
..LN11500:
        movl      2728(%rsi), %edi                              #707.21
..___tag_value_create_xgrid_2dx2d_order2.1020:
..LN11501:
#       maxval_double(int, const double *)
        call      maxval_double                                 #707.21
..___tag_value_create_xgrid_2dx2d_order2.1021:
..LN11502:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B18.161:                      # Preds ..B18.44                # Infreq
..LN11503:
        vmovapd   %xmm0, %xmm1                                  #707.21
..LN11504:
                                # LOE rbx r12 r13 r14 r15 xmm1
..B18.45:                       # Preds ..B18.161               # Infreq
..LN11505:
	.loc    1  712  is_stmt 1
        vmovsd    5216(%rsp), %xmm0                             #712.25
..LN11506:
        vcomisd   5200(%rsp), %xmm0                             #712.25
..LN11507:
        jae       ..B18.119     # Prob 50%                      #712.25
..LN11508:
                                # LOE rbx r12 r13 r14 r15 xmm1
..B18.46:                       # Preds ..B18.45                # Infreq
..LN11509:
        vmovsd    5192(%rsp), %xmm0                             #712.54
..LN11510:
        vcomisd   %xmm1, %xmm0                                  #712.54
..LN11511:
        jae       ..B18.119     # Prob 78%                      #712.54
..LN11512:
                                # LOE rbx r12 r13 r14 r15
..B18.47:                       # Preds ..B18.46                # Infreq
..LN11513:
	.loc    1  861  is_stmt 1
        movq      5056(%rsp), %rcx                              #861.3
..LN11514:
	.loc    1  862  is_stmt 1
        cmpl      $0, 5048(%rsp)                                #862.16
..LN11515:
        jle       ..B18.56      # Prob 50%                      #862.16
..LN11516:
                                # LOE rcx rbx r12 r13 r14 r15 ecx cl ch
..B18.48:                       # Preds ..B18.47                # Infreq
..LN11517:
        cmpq      $4, 5056(%rsp)                                #862.3
..LN11518:
        jl        ..B18.133     # Prob 10%                      #862.3
..LN11519:
                                # LOE rcx rbx r12 r13 r14 r15 ecx cl ch
..B18.49:                       # Preds ..B18.48                # Infreq
..LN11520:
        movq      5064(%rsp), %rax                              #862.3
..LN11521:
        xorl      %edx, %edx                                    #862.3
..LN11522:
        movq      %rax, %rsi                                    #862.3
..LN11523:
                                # LOE rax rdx rcx rbx rsi r12 r13 r14 r15
..B18.50:                       # Preds ..B18.50 ..B18.49       # Infreq
..L1022:        # optimization report
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 4.070312
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # MAIN VECTOR TYPE: 64-bits floating point
..LN11524:
	.loc    1  714  is_stmt 1
        vmovupd   1664(%rsp,%rdx,8), %ymm0                      #714.34
..LN11525:
        vmovupd   2080(%rsp,%rdx,8), %ymm1                      #714.41
..LN11526:
	.loc    1  863  is_stmt 1
        vmovupd   %ymm0, 4128(%rsp,%rdx,8)                      #863.5
..LN11527:
	.loc    1  864  is_stmt 1
        vmovupd   %ymm1, 4544(%rsp,%rdx,8)                      #864.5
..LN11528:
	.loc    1  862  is_stmt 1
        addq      $4, %rdx                                      #862.3
..LN11529:
        cmpq      %rsi, %rdx                                    #862.3
..LN11530:
        jb        ..B18.50      # Prob 98%                      #862.3
..LN11531:
                                # LOE rax rdx rcx rbx rsi r12 r13 r14 r15
..B18.51:                       # Preds ..B18.50                # Infreq
..LN11532:
        movq      %rsi, 5064(%rsp)                              #
..LN11533:
                                # LOE rax rcx rbx r12 r13 r14 r15
..B18.52:                       # Preds ..B18.51 ..B18.133      # Infreq
..LN11534:
        cmpq      5056(%rsp), %rax                              #862.3
..LN11535:
        jae       ..B18.56      # Prob 9%                       #862.3
..LN11536:
                                # LOE rax rcx rbx r12 r13 r14 r15
..B18.53:                       # Preds ..B18.52                # Infreq
..LN11537:
        movq      5056(%rsp), %rdi                              #
..LN11538:
                                # LOE rax rcx rbx rdi r12 r13 r14 r15
..B18.54:                       # Preds ..B18.54 ..B18.53       # Infreq
..L1023:        # optimization report
                # LOOP WAS UNROLLED BY 1
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 4.070312
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
..LN11539:
	.loc    1  714  is_stmt 1
        movq      1664(%rsp,%rax,8), %rdx                       #714.34
..LN11540:
        movq      2080(%rsp,%rax,8), %rsi                       #714.41
..LN11541:
	.loc    1  863  is_stmt 1
        movq      %rdx, 4128(%rsp,%rax,8)                       #863.5
..LN11542:
	.loc    1  864  is_stmt 1
        movq      %rsi, 4544(%rsp,%rax,8)                       #864.5
..LN11543:
	.loc    1  862  is_stmt 1
        incq      %rax                                          #862.3
..LN11544:
        cmpq      %rdi, %rax                                    #862.3
..LN11545:
        jb        ..B18.54      # Prob 98%                      #862.3
..LN11546:
                                # LOE rax rcx rbx rdi r12 r13 r14 r15
..B18.55:                       # Preds ..B18.54                # Infreq
..LN11547:
        movq      %rdi, 5056(%rsp)                              #
..LN11548:
                                # LOE rcx rbx r12 r13 r14 r15
..B18.56:                       # Preds ..B18.47 ..B18.52 ..B18.55 # Infreq
..LN11549:
	.loc    1  868  is_stmt 1
        movl      5224(%rsp), %eax                              #868.16
..LN11550:
        xorl      %edx, %edx                                    #868.3
..LN11551:
        testl     %eax, %eax                                    #868.16
..LN11552:
	.loc    1  866  is_stmt 1
        movslq    %eax, %rax                                    #866.10
..LN11553:
	.loc    1  714  is_stmt 1
        vmovsd    2488(%rsp,%rax,8), %xmm3                      #714.55
..LN11554:
        vmovsd    2888(%rsp,%rax,8), %xmm0                      #714.62
..LN11555:
	.loc    1  868  is_stmt 1
        jle       ..B18.79      # Prob 4%                       #868.16
..LN11556:
                                # LOE rax rdx rcx rbx r12 r13 r14 r15 xmm0 xmm3
..B18.57:                       # Preds ..B18.56                # Infreq
..LN11557:
        movq      %rbx, 2488(%rsp)                              #
..LN11558:
        movq      %rcx, %rbx                                    #
..LN11559:
        movq      %r12, 2480(%rsp)                              #
..LN11560:
        movq      %r15, 2072(%rsp)                              #
..LN11561:
        movq      %rdx, %r15                                    #
..LN11562:
        movq      %r13, 2064(%rsp)                              #
..LN11563:
        movq      %r14, 1656(%rsp)                              #
..LN11564:
        vmovsd    .L_2il0floatpacket.11(%rip), %xmm1            #
..LN11565:
        vmovsd    .L_2il0floatpacket.10(%rip), %xmm2            #
..LN11566:
                                # LOE rax rbx r15 xmm0 xmm1 xmm2 xmm3
..B18.58:                       # Preds ..B18.77 ..B18.57       # Infreq
..L1024:        # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN11567:
	.loc    1  874  is_stmt 1
        xorl      %r12d, %r12d                                  #874.15
..LN11568:
	.loc    1  714  is_stmt 1
        vmovsd    2896(%rsp,%r15,8), %xmm9                      #714.62
..LN11569:
	.loc    1  874  is_stmt 1
        xorl      %r13d, %r13d                                  #874.5
..LN11570:
	.loc    1  871  is_stmt 1
        vmovsd    4120(%rsp,%rbx,8), %xmm14                     #871.12
..LN11571:
	.loc    1  1130  is_stmt 1
        vsubsd    %xmm0, %xmm9, %xmm7                           #1130.27
..LN11572:
        vsubsd    %xmm3, %xmm14, %xmm5                          #1130.18
..LN11573:
	.loc    1  872  is_stmt 1
        vmovsd    4536(%rsp,%rbx,8), %xmm4                      #872.12
..LN11574:
	.loc    1  714  is_stmt 1
        vmovsd    2496(%rsp,%r15,8), %xmm10                     #714.55
..LN11575:
	.loc    1  1130  is_stmt 1
        vsubsd    %xmm0, %xmm4, %xmm11                          #1130.44
..LN11576:
        vmulsd    %xmm7, %xmm5, %xmm8                           #1130.27
..LN11577:
        vsubsd    %xmm10, %xmm3, %xmm6                          #1130.37
..LN11578:
	.loc    1  1131  is_stmt 1
        vfmadd213sd %xmm8, %xmm6, %xmm11                        #1131.21
..LN11579:
        vcmpgesd  %xmm11, %xmm2, %xmm12                         #1131.21
..LN11580:
        vmovd     %xmm12, %r14d                                 #1131.21
..LN11581:
        negl      %r14d                                         #1131.21
..LN11582:
	.loc    1  874  is_stmt 1
        testq     %rbx, %rbx                                    #874.27
..LN11583:
        jle       ..B18.130     # Prob 10%                      #874.27
..LN11584:
                                # LOE rax rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm6 xmm7 xmm9 xmm10 xmm14
..B18.59:                       # Preds ..B18.58                # Infreq
..LN11585:
	.loc    1  886  is_stmt 1
        vmulsd    %xmm9, %xmm3, %xmm5                           #886.25
..LN11586:
	.loc    1  884  is_stmt 1
        vxorpd    .L_2il0floatpacket.8(%rip), %xmm6, %xmm8      #884.13
..LN11587:
	.loc    1  886  is_stmt 1
        vfmsub231sd %xmm0, %xmm10, %xmm5                        #886.2
..LN11588:
        vmovsd    %xmm9, 4112(%rsp)                             #886.2
..LN11589:
        vmovsd    %xmm10, 3704(%rsp)                            #886.2
..LN11590:
        movq      %rax, 3696(%rsp)                              #886.2
..LN11591:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm14
..B18.60:                       # Preds ..B18.66 ..B18.59       # Infreq
..L1025:        # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN11592:
	.loc    1  876  is_stmt 1
        vmovsd    4544(%rsp,%r13,8), %xmm13                     #876.14
..LN11593:
	.loc    1  875  is_stmt 1
        vmovsd    4128(%rsp,%r13,8), %xmm12                     #875.14
..LN11594:
	.loc    1  1130  is_stmt 1
        vsubsd    %xmm0, %xmm13, %xmm9                          #1130.44
..LN11595:
        vsubsd    %xmm3, %xmm12, %xmm10                         #1130.18
..LN11596:
        vmulsd    %xmm9, %xmm6, %xmm11                          #1130.44
..LN11597:
	.loc    1  1131  is_stmt 1
        vfmadd231sd %xmm7, %xmm10, %xmm11                       #1131.21
..LN11598:
        vcomisd   %xmm11, %xmm2                                 #1131.21
..LN11599:
        jb        ..B18.62      # Prob 50%                      #1131.21
..LN11600:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13 xmm14
..B18.61:                       # Preds ..B18.60                # Infreq
..LN11601:
	.loc    1  877  is_stmt 1
        cmpl      $1, %r14d                                     #877.72
..LN11602:
	.loc    1  1131  is_stmt 1
        movl      $1, %r14d                                     #1131.21
..LN11603:
	.loc    1  877  is_stmt 1
        jne       ..B18.63      # Prob 50%                      #877.72
..LN11604:
        jmp       ..B18.65      # Prob 100%                     #877.72
..LN11605:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13 xmm14
..B18.62:                       # Preds ..B18.60                # Infreq
..LN11606:
        testl     %r14d, %r14d                                  #877.72
..LN11607:
	.loc    1  1131  is_stmt 1
        movl      $0, %r14d                                     #1131.21
..LN11608:
	.loc    1  877  is_stmt 1
        je        ..B18.66      # Prob 50%                      #877.72
..LN11609:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13 xmm14
..B18.63:                       # Preds ..B18.61 ..B18.62       # Infreq
..LN11610:
	.loc    1  885  is_stmt 1
        vmulsd    %xmm13, %xmm14, %xmm9                         #885.25
..LN11611:
	.loc    1  881  is_stmt 1
        vsubsd    %xmm4, %xmm13, %xmm11                         #881.13
..LN11612:
	.loc    1  883  is_stmt 1
        vsubsd    %xmm14, %xmm12, %xmm10                        #883.13
..LN11613:
	.loc    1  885  is_stmt 1
        vfmsub213sd %xmm9, %xmm12, %xmm4                        #885.2
..LN11614:
	.loc    1  887  is_stmt 1
        vmulsd    %xmm8, %xmm11, %xmm9                          #887.25
..LN11615:
        vfmsub231sd %xmm10, %xmm7, %xmm9                        #887.2
..LN11616:
	.loc    1  888  is_stmt 1
        vandpd    .L_2il0floatpacket.9(%rip), %xmm9, %xmm14     #888.12
..LN11617:
        vcomisd   %xmm14, %xmm1                                 #888.27
..LN11618:
        ja        ..B18.131     # Prob 5%                       #888.27
..LN11619:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm9 xmm10 xmm11 xmm12 xmm13
..B18.64:                       # Preds ..B18.171 ..B18.63      # Infreq
..LN11620:
	.loc    1  892  is_stmt 1
        vmulsd    %xmm5, %xmm10, %xmm10                         #892.36
..LN11621:
	.loc    1  893  is_stmt 1
        vmulsd    %xmm5, %xmm11, %xmm11                         #893.36
..LN11622:
	.loc    1  892  is_stmt 1
        vfmsub231sd %xmm8, %xmm4, %xmm10                        #892.2
..LN11623:
	.loc    1  893  is_stmt 1
        vfmsub231sd %xmm7, %xmm4, %xmm11                        #893.2
..LN11624:
	.loc    1  892  is_stmt 1
        vdivsd    %xmm9, %xmm10, %xmm14                         #892.41
..LN11625:
	.loc    1  893  is_stmt 1
        vdivsd    %xmm9, %xmm11, %xmm4                          #893.41
..LN11626:
	.loc    1  714  is_stmt 1
        vmovsd    %xmm14, 3296(%rsp,%r12,8)                     #714.76
..LN11627:
        vmovsd    %xmm4, 3712(%rsp,%r12,8)                      #714.83
..LN11628:
	.loc    1  893  is_stmt 1
        incq      %r12                                          #893.10
..LN11629:
	.loc    1  897  is_stmt 1
        testl     %r14d, %r14d                                  #897.10
..LN11630:
        je        ..B18.66      # Prob 50%                      #897.10
..LN11631:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13
..B18.65:                       # Preds ..B18.61 ..B18.64       # Infreq
..LN11632:
	.loc    1  714  is_stmt 1
        vmovsd    %xmm12, 3296(%rsp,%r12,8)                     #714.76
..LN11633:
        vmovsd    %xmm13, 3712(%rsp,%r12,8)                     #714.83
..LN11634:
	.loc    1  899  is_stmt 1
        incq      %r12                                          #899.10
..LN11635:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13
..B18.66:                       # Preds ..B18.64 ..B18.62 ..B18.65 # Infreq
..LN11636:
	.loc    1  874  is_stmt 1
        incq      %r13                                          #874.5
..LN11637:
	.loc    1  901  is_stmt 1
        vmovapd   %xmm12, %xmm14                                #901.7
..LN11638:
	.loc    1  902  is_stmt 1
        vmovapd   %xmm13, %xmm4                                 #902.7
..LN11639:
	.loc    1  874  is_stmt 1
        cmpq      %rbx, %r13                                    #874.5
..LN11640:
        jb        ..B18.60      # Prob 98%                      #874.5
..LN11641:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm14
..B18.67:                       # Preds ..B18.66                # Infreq
..LN11642:
        vmovsd    4112(%rsp), %xmm9                             #
..LN11643:
	.loc    1  905  is_stmt 1
        movq      %r12, %rbx                                    #905.10
..LN11644:
        vmovsd    3704(%rsp), %xmm10                            #
..LN11645:
        movq      3696(%rsp), %rax                              #
..LN11646:
        testq     %r12, %r12                                    #905.10
..LN11647:
        je        ..B18.130     # Prob 20%                      #905.10
..LN11648:
                                # LOE rax rbx r12 r15 eax al ah xmm1 xmm2 xmm9 xmm10 ymm9 ymm10 zmm9 zmm10
..B18.68:                       # Preds ..B18.67                # Infreq
..LN11649:
	.loc    1  906  is_stmt 1
        jle       ..B18.77      # Prob 50%                      #906.18
..LN11650:
                                # LOE rax rbx r12 r15 eax al ah xmm1 xmm2 xmm9 xmm10 ymm9 ymm10 zmm9 zmm10
..B18.69:                       # Preds ..B18.68                # Infreq
..LN11651:
        movslq    %r12d, %r8                                    #906.5
..LN11652:
        cmpq      $4, %r8                                       #906.5
..LN11653:
        jl        ..B18.129     # Prob 10%                      #906.5
..LN11654:
                                # LOE rax rbx r8 r15 eax al ah xmm1 xmm2 xmm9 xmm10 ymm9 ymm10 zmm9 zmm10
..B18.70:                       # Preds ..B18.69                # Infreq
..LN11655:
        movl      %r8d, %edi                                    #906.5
..LN11656:
        xorl      %esi, %esi                                    #906.5
..LN11657:
        andl      $-4, %edi                                     #906.5
..LN11658:
        movslq    %edi, %rdi                                    #906.5
..LN11659:
                                # LOE rax rbx rsi rdi r8 r15 xmm1 xmm2 xmm9 xmm10
..B18.71:                       # Preds ..B18.71 ..B18.70       # Infreq
..L1026:        # optimization report
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 4.070312
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # MAIN VECTOR TYPE: 64-bits floating point
..LN11660:
	.loc    1  714  is_stmt 1
        vmovupd   3296(%rsp,%rsi,8), %ymm0                      #714.76
..LN11661:
        vmovupd   3712(%rsp,%rsi,8), %ymm3                      #714.83
..LN11662:
	.loc    1  907  is_stmt 1
        vmovupd   %ymm0, 4128(%rsp,%rsi,8)                      #907.7
..LN11663:
	.loc    1  908  is_stmt 1
        vmovupd   %ymm3, 4544(%rsp,%rsi,8)                      #908.7
..LN11664:
	.loc    1  906  is_stmt 1
        addq      $4, %rsi                                      #906.5
..LN11665:
        cmpq      %rdi, %rsi                                    #906.5
..LN11666:
        jb        ..B18.71      # Prob 98%                      #906.5
..LN11667:
                                # LOE rax rbx rsi rdi r8 r15 xmm1 xmm2 xmm9 xmm10
..B18.73:                       # Preds ..B18.71 ..B18.129      # Infreq
..LN11668:
        cmpq      %r8, %rdi                                     #906.5
..LN11669:
        jae       ..B18.77      # Prob 10%                      #906.5
..LN11670:
                                # LOE rax rbx rdi r8 r15 xmm1 xmm2 xmm9 xmm10
..B18.75:                       # Preds ..B18.73 ..B18.75       # Infreq
..L1027:        # optimization report
                # LOOP WAS UNROLLED BY 1
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 4.070312
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
..LN11671:
	.loc    1  714  is_stmt 1
        movq      3296(%rsp,%rdi,8), %rsi                       #714.76
..LN11672:
        movq      3712(%rsp,%rdi,8), %r9                        #714.83
..LN11673:
	.loc    1  907  is_stmt 1
        movq      %rsi, 4128(%rsp,%rdi,8)                       #907.7
..LN11674:
	.loc    1  908  is_stmt 1
        movq      %r9, 4544(%rsp,%rdi,8)                        #908.7
..LN11675:
	.loc    1  906  is_stmt 1
        incq      %rdi                                          #906.5
..LN11676:
        cmpq      %r8, %rdi                                     #906.5
..LN11677:
        jb        ..B18.75      # Prob 98%                      #906.5
..LN11678:
                                # LOE rax rbx rdi r8 r15 xmm1 xmm2 xmm9 xmm10
..B18.77:                       # Preds ..B18.75 ..B18.68 ..B18.73 # Infreq
..LN11679:
	.loc    1  868  is_stmt 1
        incq      %r15                                          #868.3
..LN11680:
	.loc    1  911  is_stmt 1
        vmovapd   %xmm10, %xmm3                                 #911.5
..LN11681:
	.loc    1  912  is_stmt 1
        vmovapd   %xmm9, %xmm0                                  #912.5
..LN11682:
	.loc    1  868  is_stmt 1
        cmpq      %rax, %r15                                    #868.3
..LN11683:
        jb        ..B18.58      # Prob 81%                      #868.3
..LN11684:
                                # LOE rax rbx r15 xmm0 xmm1 xmm2 xmm3
..B18.78:                       # Preds ..B18.77                # Infreq
..LN11685:
        movq      2480(%rsp), %r12                              #
..LN11686:
        movq      %rbx, %rcx                                    #
..LN11687:
        movq      2488(%rsp), %rbx                              #
..LN11688:
        movq      2072(%rsp), %r15                              #
..LN11689:
        movq      2064(%rsp), %r13                              #
..LN11690:
        movq      1656(%rsp), %r14                              #
..LN11691:
                                # LOE rcx rbx r12 r13 r14 r15
..B18.79:                       # Preds ..B18.78 ..B18.56       # Infreq
..LN11692:
	.loc    1  714  is_stmt 1
        movl      %ecx, 912(%rsp)                               #714.22
..LN11693:
        testl     %ecx, %ecx                                    #714.94
..LN11694:
        jle       ..B18.119     # Prob 40%                      #714.94
..LN11695:
                                # LOE rcx rbx r12 r13 r14 r15 ecx cl ch
..B18.80:                       # Preds ..B18.79                # Infreq
..LN11696:
	.loc    1  715  is_stmt 1
        vzeroupper                                              #715.10
..LN11697:
        lea       3296(%rsp), %rdi                              #715.10
..LN11698:
        movl      %ecx, %edx                                    #715.10
..LN11699:
        lea       3712(%rsp), %rsi                              #715.10
..LN11700:
        movq      %rcx, -2776(%rsi)                             #715.10
..___tag_value_create_xgrid_2dx2d_order2.1028:
..LN11701:
#       poly_area(const double *, const double *, int)
        call      poly_area                                     #715.10
..___tag_value_create_xgrid_2dx2d_order2.1029:
..LN11702:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B18.162:                      # Preds ..B18.80                # Infreq
..LN11703:
        movq      936(%rsp), %rcx                               #
..LN11704:
                                # LOE rcx rbx r12 r13 r14 r15 ecx cl ch xmm0
..B18.81:                       # Preds ..B18.162               # Infreq
..LN11705:
        movq      5032(%rsp), %rax                              #715.45
..LN11706:
        movq      5024(%rsp), %rsi                              #715.45
..LN11707:
	.loc    1  716  is_stmt 1
        movq      5008(%rsp), %rdx                              #716.13
..LN11708:
	.loc    1  717  is_stmt 1
        movq      5240(%rsp), %rdi                              #717.2
..LN11709:
	.loc    1  715  is_stmt 1
        vmulsd    (%rax,%rsi,8), %xmm0, %xmm2                   #715.45
..LN11710:
	.loc    1  716  is_stmt 1
        vmovsd    (%rdx,%rsi,8), %xmm0                          #716.13
..LN11711:
	.loc    1  717  is_stmt 1
        vminsd    (%rdi,%r14,8), %xmm0, %xmm0                   #717.2
..LN11712:
        vdivsd    %xmm0, %xmm2, %xmm1                           #717.12
..LN11713:
        vcomisd   .L_2il0floatpacket.2(%rip), %xmm1             #717.23
..LN11714:
        jbe       ..B18.119     # Prob 78%                      #717.23
..LN11715:
                                # LOE rcx rbx r12 r13 r14 r15 ecx cl ch xmm2
..B18.82:                       # Preds ..B18.81                # Infreq
..LN11716:
	.loc    1  718  is_stmt 1
        movslq    944(%rsp), %rax                               #718.4
..LN11717:
        movq      72(%rbp), %rdx                                #718.4
..LN11718:
	.loc    1  956  is_stmt 1
        vxorpd    %xmm0, %xmm0, %xmm0                           #956.17
..LN11719:
	.loc    1  960  is_stmt 1
        movslq    %ecx, %rcx                                    #960.3
..LN11720:
        movq      %r12, 2480(%rsp)                              #960.3
..LN11721:
	.loc    1  718  is_stmt 1
        vmovsd    %xmm2, (%rdx,%rax,8)                          #718.4
..LN11722:
	.loc    1  960  is_stmt 1
        xorl      %edx, %edx                                    #960.3
..LN11723:
        vmovsd    %xmm0, 904(%rsp)                              #960.3
..LN11724:
        movq      %r15, 2072(%rsp)                              #960.3
..LN11725:
        movq      %rcx, %r15                                    #960.3
..LN11726:
        movq      %r13, 2064(%rsp)                              #960.3
..LN11727:
        movq      %rdx, %r13                                    #960.3
..LN11728:
        movq      %r14, 1656(%rsp)                              #960.3
..LN11729:
        movq      %rbx, %r14                                    #960.3
..LN11730:
        movl      912(%rsp), %r12d                              #960.3
..LN11731:
        movq      %rax, %rbx                                    #960.3
..LN11732:
                                # LOE rbx r13 r14 r15 r12d
..B18.83:                       # Preds ..B18.82 ..B18.87       # Infreq
..L1030:        # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN11733:
	.loc    1  961  is_stmt 1
        movl      %r13d, %eax                                   #961.22
..LN11734:
        incl      %eax                                          #961.17
..LN11735:
        cltd                                                    #961.22
..LN11736:
        idivl     %r12d                                         #961.22
..LN11737:
	.loc    1  719  is_stmt 1
        vmovsd    3296(%rsp,%r13,8), %xmm3                      #719.37
..LN11738:
	.loc    1  970  is_stmt 1
        vxorpd    %xmm5, %xmm5, %xmm5                           #970.20
..LN11739:
	.loc    1  961  is_stmt 1
        movslq    %edx, %rdx                                    #961.22
..LN11740:
	.loc    1  719  is_stmt 1
        vmovsd    3712(%rsp,%r13,8), %xmm1                      #719.44
..LN11741:
        vmovsd    %xmm3, 976(%rsp)                              #719.37
..LN11742:
        vmovsd    %xmm1, 992(%rsp)                              #719.44
..LN11743:
        vmovsd    3296(%rsp,%rdx,8), %xmm2                      #719.37
..LN11744:
        vmovsd    3712(%rsp,%rdx,8), %xmm0                      #719.44
..LN11745:
	.loc    1  968  is_stmt 1
        vsubsd    %xmm3, %xmm2, %xmm4                           #968.21
..LN11746:
	.loc    1  719  is_stmt 1
        vmovsd    %xmm2, 984(%rsp)                              #719.37
..LN11747:
        vmovsd    %xmm0, 1000(%rsp)                             #719.44
..LN11748:
	.loc    1  968  is_stmt 1
        vmovsd    %xmm4, 1008(%rsp)                             #968.21
..LN11749:
	.loc    1  970  is_stmt 1
        vucomisd  %xmm5, %xmm4                                  #970.20
..LN11750:
        jp        ..B18.84      # Prob 0%                       #970.20
..LN11751:
        je        ..B18.87      # Prob 16%                      #970.20
..LN11752:
                                # LOE rbx r13 r14 r15 r12d xmm0 ymm0 zmm0
..B18.84:                       # Preds ..B18.83                # Infreq
..LN11753:
	.loc    1  972  is_stmt 1
        call      __libm_sse2_sincos                            #972.5
..LN11754:
                                # LOE rbx r13 r14 r15 r12d xmm0 xmm1
..B18.164:                      # Preds ..B18.84                # Infreq
..LN11755:
        vfmadd213sd 1000(%rsp), %xmm0, %xmm1                    #972.5
..LN11756:
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm1, %xmm2      #972.35
..LN11757:
        vmovsd    %xmm2, 928(%rsp)                              #972.35
..LN11758:
	.loc    1  973  is_stmt 1
        vmovsd    992(%rsp), %xmm0                              #973.5
..LN11759:
        call      __libm_sse2_sincos                            #973.5
..LN11760:
                                # LOE rbx r13 r14 r15 r12d xmm0 xmm1
..B18.163:                      # Preds ..B18.164               # Infreq
..LN11761:
	.loc    1  977  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm10            #977.22
..LN11762:
        vmovsd    1008(%rsp), %xmm6                             #977.22
..LN11763:
        vcomisd   %xmm10, %xmm6                                 #977.22
..LN11764:
	.loc    1  973  is_stmt 1
        vfmadd213sd 992(%rsp), %xmm0, %xmm1                     #973.5
..LN11765:
	.loc    1  977  is_stmt 1
        vmovsd    .L_2il0floatpacket.4(%rip), %xmm13            #977.36
..LN11766:
	.loc    1  978  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm12            #978.22
..LN11767:
	.loc    1  977  is_stmt 1
        vsubsd    %xmm13, %xmm6, %xmm7                          #977.36
..LN11768:
	.loc    1  973  is_stmt 1
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm1, %xmm2      #973.35
..LN11769:
	.loc    1  977  is_stmt 1
        ja        ..L1031       # Prob 50%                      #977.22
..LN11770:
        vmovaps   %xmm6, %xmm7                                  #977.22
..L1031:                                                        #
..LN11771:
	.loc    1  978  is_stmt 1
        vcomisd   %xmm7, %xmm12                                 #978.22
..LN11772:
	.loc    1  979  is_stmt 1
        vmovsd    5208(%rsp), %xmm5                             #979.20
..LN11773:
        vmovsd    984(%rsp), %xmm4                              #979.20
..LN11774:
	.loc    1  982  is_stmt 1
        vmovsd    976(%rsp), %xmm3                              #982.19
..LN11775:
	.loc    1  979  is_stmt 1
        vsubsd    %xmm5, %xmm4, %xmm8                           #979.20
..LN11776:
	.loc    1  978  is_stmt 1
        vaddsd    %xmm13, %xmm7, %xmm4                          #978.36
..LN11777:
	.loc    1  982  is_stmt 1
        vsubsd    %xmm5, %xmm3, %xmm11                          #982.19
..LN11778:
	.loc    1  980  is_stmt 1
        vsubsd    %xmm13, %xmm8, %xmm9                          #980.23
..LN11779:
	.loc    1  983  is_stmt 1
        vsubsd    %xmm13, %xmm11, %xmm14                        #983.23
..LN11780:
	.loc    1  978  is_stmt 1
        ja        ..L1032       # Prob 50%                      #978.22
..LN11781:
        vmovaps   %xmm7, %xmm4                                  #978.22
..L1032:                                                        #
..LN11782:
	.loc    1  980  is_stmt 1
        vcomisd   %xmm10, %xmm8                                 #980.23
..LN11783:
        ja        ..L1033       # Prob 50%                      #980.23
..LN11784:
        vmovaps   %xmm8, %xmm9                                  #980.23
..L1033:                                                        #
..LN11785:
	.loc    1  981  is_stmt 1
        vcomisd   %xmm9, %xmm12                                 #981.23
..LN11786:
        vaddsd    %xmm13, %xmm9, %xmm1                          #981.23
..LN11787:
        ja        ..L1034       # Prob 50%                      #981.23
..LN11788:
        vmovaps   %xmm9, %xmm1                                  #981.23
..L1034:                                                        #
..LN11789:
	.loc    1  983  is_stmt 1
        vcomisd   %xmm10, %xmm11                                #983.23
..LN11790:
        ja        ..L1035       # Prob 50%                      #983.23
..LN11791:
        vmovaps   %xmm11, %xmm14                                #983.23
..L1035:                                                        #
..LN11792:
	.loc    1  984  is_stmt 1
        vcomisd   %xmm14, %xmm12                                #984.23
..LN11793:
        vaddsd    %xmm13, %xmm14, %xmm8                         #984.23
..LN11794:
        ja        ..L1036       # Prob 50%                      #984.23
..LN11795:
        vmovaps   %xmm14, %xmm8                                 #984.23
..L1036:                                                        #
..LN11796:
	.loc    1  986  is_stmt 1
        vsubsd    %xmm1, %xmm8, %xmm15                          #986.19
..LN11797:
        vcvttsd2si %xmm15, %edi                                 #986.19
..LN11798:
        movl      %edi, %esi                                    #986.8
..LN11799:
        sarl      $31, %esi                                     #986.8
..LN11800:
        xorl      %esi, %edi                                    #986.8
..LN11801:
        subl      %esi, %edi                                    #986.8
..LN11802:
        cmpl      $3, %edi                                      #986.28
..LN11803:
        jg        ..B18.86      # Prob 50%                      #986.28
..LN11804:
                                # LOE rbx r13 r14 r15 r12d xmm1 xmm2 xmm4 xmm8
..B18.85:                       # Preds ..B18.163               # Infreq
..LN11805:
	.loc    1  987  is_stmt 1
        vmulsd    928(%rsp), %xmm1, %xmm0                       #987.7
..LN11806:
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm4, %xmm1      #987.7
..LN11807:
        vfmadd213sd %xmm0, %xmm8, %xmm2                         #987.7
..LN11808:
        vmovsd    904(%rsp), %xmm3                              #987.7
..LN11809:
        vfnmadd231sd %xmm2, %xmm1, %xmm3                        #987.7
..LN11810:
        vmovsd    %xmm3, 904(%rsp)                              #987.7
..LN11811:
        jmp       ..B18.87      # Prob 100%                     #987.7
..LN11812:
                                # LOE rbx r13 r14 r15 r12d
..B18.86:                       # Preds ..B18.163               # Infreq
..LN11813:
	.loc    1  994  is_stmt 1
        vcvttsd2si %xmm4, %edi                                  #994.43
..LN11814:
	.loc    1  996  is_stmt 1
        vaddsd    %xmm8, %xmm1, %xmm7                           #996.19
..LN11815:
	.loc    1  993  is_stmt 1
        vxorpd    %xmm5, %xmm5, %xmm5                           #993.2
..LN11816:
	.loc    1  994  is_stmt 1
        movl      %edi, %esi                                    #994.39
..LN11817:
	.loc    1  993  is_stmt 1
        vcomisd   %xmm5, %xmm1                                  #993.2
..LN11818:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm6             #993.2
..LN11819:
	.loc    1  994  is_stmt 1
        vxorpd    %xmm4, %xmm4, %xmm4                           #994.39
..LN11820:
	.loc    1  993  is_stmt 1
        ja        ..L1037       # Prob 50%                      #993.2
..LN11821:
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm6             #993.2
..L1037:                                                        #
..LN11822:
	.loc    1  995  is_stmt 1
        vmovsd    928(%rsp), %xmm0                              #995.34
..LN11823:
        vsubsd    %xmm6, %xmm1, %xmm11                          #995.34
..LN11824:
        vmulsd    %xmm1, %xmm0, %xmm1                           #995.34
..LN11825:
        vaddsd    %xmm6, %xmm8, %xmm9                           #995.61
..LN11826:
        vmulsd    %xmm8, %xmm2, %xmm8                           #995.61
..LN11827:
	.loc    1  994  is_stmt 1
        vsubsd    %xmm0, %xmm2, %xmm2                           #994.23
..LN11828:
	.loc    1  996  is_stmt 1
        vmulsd    %xmm6, %xmm7, %xmm3                           #996.19
..LN11829:
	.loc    1  995  is_stmt 1
        vmulsd    %xmm11, %xmm2, %xmm12                         #995.7
..LN11830:
        vmulsd    %xmm9, %xmm8, %xmm10                          #995.66
..LN11831:
	.loc    1  994  is_stmt 1
        sarl      $31, %esi                                     #994.39
..LN11832:
        xorl      %esi, %edi                                    #994.39
..LN11833:
        subl      %esi, %edi                                    #994.39
..LN11834:
        vcvtsi2sd %edi, %xmm4, %xmm4                            #994.39
..LN11835:
	.loc    1  995  is_stmt 1
        vfnmadd213sd %xmm10, %xmm11, %xmm1                      #995.7
..LN11836:
        vxorpd    .L_2il0floatpacket.8(%rip), %xmm12, %xmm13    #995.7
..LN11837:
	.loc    1  994  is_stmt 1
        vdivsd    %xmm4, %xmm13, %xmm14                         #994.39
..LN11838:
        vaddsd    %xmm14, %xmm0, %xmm15                         #994.39
..LN11839:
	.loc    1  995  is_stmt 1
        vmovsd    904(%rsp), %xmm0                              #995.7
..LN11840:
        vfnmadd213sd %xmm1, %xmm15, %xmm3                       #995.7
..LN11841:
        vfmadd231sd .L_2il0floatpacket.1(%rip), %xmm3, %xmm0    #995.7
..LN11842:
        vmovsd    %xmm0, 904(%rsp)                              #995.7
..LN11843:
                                # LOE rbx r13 r14 r15 r12d
..B18.87:                       # Preds ..B18.85 ..B18.86 ..B18.83 # Infreq
..LN11844:
	.loc    1  960  is_stmt 1
        incq      %r13                                          #960.3
..LN11845:
        cmpq      %r15, %r13                                    #960.3
..LN11846:
        jb        ..B18.83      # Prob 82%                      #960.3
..LN11847:
                                # LOE rbx r13 r14 r15 r12d
..B18.88:                       # Preds ..B18.87                # Infreq
..LN11848:
        vmovsd    904(%rsp), %xmm0                              #
..LN11849:
        movq      %rbx, %rax                                    #
..LN11850:
	.loc    1  714  is_stmt 1
        lea       912(%rsp), %rdi                               #714.22
..LN11851:
        movl      (%rdi), %ecx                                  #714.22
..LN11852:
        movq      %r14, %rbx                                    #
..LN11853:
	.loc    1  1000  is_stmt 1
        vmulsd    .L_2il0floatpacket.5(%rip), %xmm0, %xmm0      #1000.25
..LN11854:
	.loc    1  925  is_stmt 1
        vxorpd    %xmm2, %xmm2, %xmm2                           #925.17
..LN11855:
	.loc    1  719  is_stmt 1
        movq      80(%rbp), %rdx                                #719.4
..LN11856:
	.loc    1  714  is_stmt 1
        vmovd     %ecx, %xmm1                                   #714.22
..LN11857:
	.loc    1  928  is_stmt 1
        lea       63(%rcx), %r8d                                #928.3
..LN11858:
	.loc    1  719  is_stmt 1
        vmovsd    %xmm0, (%rdx,%rax,8)                          #719.4
..LN11859:
	.loc    1  928  is_stmt 1
        xorl      %edx, %edx                                    #928.3
..LN11860:
	.loc    1  714  is_stmt 1
        vpbroadcastd %xmm1, %ymm0                               #714.22
..LN11861:
	.loc    1  929  is_stmt 1
        xorl      %ecx, %ecx                                    #929.22
..LN11862:
        movq      2064(%rsp), %r13                              #
..LN11863:
        xorl      %esi, %esi                                    #929.22
..LN11864:
        movl      %edx, %r12d                                   #929.22
..LN11865:
	.loc    1  928  is_stmt 1
        shrl      $6, %r8d                                      #928.3
..LN11866:
	.loc    1  929  is_stmt 1
        movl      %ecx, %r15d                                   #929.22
..LN11867:
        movl      (%rdi), %ecx                                  #929.22
..LN11868:
        vmovdqu   %ymm0, 768(%rsp)                              #929.22
..LN11869:
        vmovsd    %xmm2, 896(%rsp)                              #929.22
..LN11870:
        movq      %rax, 816(%rsp)                               #929.22
..LN11871:
        movq      %rbx, 2488(%rsp)                              #929.22
..LN11872:
                                # LOE ecx esi r8d r12d r15d
..B18.89:                       # Preds ..B18.88 ..B18.117      # Infreq
..L1038:        # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # %s was not vectorized: inner loop was already vectorized
..LN11873:
	.loc    1  928  is_stmt 1
        lea       64(%r15), %r14d                               #928.3
..LN11874:
        cmpl      %r14d, %ecx                                   #928.3
..LN11875:
        cmovl     %ecx, %r14d                                   #928.3
..LN11876:
        movslq    %r14d, %rbx                                   #928.3
..LN11877:
        addl      %esi, %r14d                                   #928.3
..LN11878:
        cmpl      $16, %r14d                                    #928.3
..LN11879:
        jl        ..B18.128     # Prob 10%                      #928.3
..LN11880:
                                # LOE rbx ecx esi r8d r12d r14d r15d
..B18.90:                       # Preds ..B18.89                # Infreq
..LN11881:
        movl      %r14d, %eax                                   #928.3
..LN11882:
        xorl      %r10d, %r10d                                  #928.3
..LN11883:
        andl      $-16, %eax                                    #928.3
..LN11884:
	.loc    1  934  is_stmt 1
        movslq    %r15d, %r9                                    #934.12
..LN11885:
	.loc    1  928  is_stmt 1
        movslq    %eax, %rdi                                    #928.3
..LN11886:
        .align    16,0x90
..LN11887:
                                # LOE rbx rdi r9 r10 eax ecx esi r8d r12d r14d r15d
..B18.91:                       # Preds ..B18.91 ..B18.90       # Infreq
..L1039:        # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 4
                # LOOP WAS STRIPMINED BY 64
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 3.958984
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.042969
                # MAIN VECTOR TYPE: 64-bits floating point
..LN11888:
	.loc    1  720  is_stmt 1
        vmovupd   3712(%rsp,%r9,8), %ymm0                       #720.45
..LN11889:
        vmovupd   3744(%rsp,%r9,8), %ymm1                       #720.45
..LN11890:
        vmovupd   3776(%rsp,%r9,8), %ymm2                       #720.45
..LN11891:
        vmovupd   3808(%rsp,%r9,8), %ymm3                       #720.45
..LN11892:
	.loc    1  934  is_stmt 1
        vmovupd   %ymm0, (%rsp,%r10,8)                          #934.5
..LN11893:
        vmovupd   %ymm1, 32(%rsp,%r10,8)                        #934.5
..LN11894:
        vmovupd   %ymm2, 64(%rsp,%r10,8)                        #934.5
..LN11895:
        vmovupd   %ymm3, 96(%rsp,%r10,8)                        #934.5
..LN11896:
	.loc    1  928  is_stmt 1
        addq      $16, %r10                                     #928.3
..LN11897:
        addq      $16, %r9                                      #928.3
..LN11898:
        cmpq      %rdi, %r10                                    #928.3
..LN11899:
        jb        ..B18.91      # Prob 82%                      #928.3
..LN11900:
                                # LOE rbx rdi r9 r10 eax ecx esi r8d r12d r14d r15d
..B18.92:                       # Preds ..B18.91                # Infreq
..LN11901:
        lea       1(%rax), %edi                                 #928.3
..LN11902:
        cmpl      %edi, %r14d                                   #928.3
..LN11903:
        jb        ..B18.102     # Prob 50%                      #928.3
..LN11904:
                                # LOE rbx eax ecx esi r8d r12d r14d r15d
..B18.93:                       # Preds ..B18.92 ..B18.128      # Infreq
..LN11905:
        movslq    %eax, %r10                                    #928.3
..LN11906:
        movslq    %r14d, %rdx                                   #928.3
..LN11907:
        subq      %r10, %rdx                                    #928.3
..LN11908:
        cmpq      $4, %rdx                                      #928.3
..LN11909:
        jl        ..B18.122     # Prob 10%                      #928.3
..LN11910:
                                # LOE rdx rbx r10 eax ecx esi r8d r12d r14d r15d
..B18.94:                       # Preds ..B18.93                # Infreq
..LN11911:
	.loc    1  934  is_stmt 1
        movslq    %r15d, %r9                                    #934.12
..LN11912:
	.loc    1  928  is_stmt 1
        movl      %edx, %edi                                    #928.3
..LN11913:
	.loc    1  934  is_stmt 1
        movslq    %eax, %rax                                    #934.12
..LN11914:
	.loc    1  928  is_stmt 1
        andl      $-4, %edi                                     #928.3
..LN11915:
	.loc    1  934  is_stmt 1
        addq      %rax, %r9                                     #934.12
..LN11916:
	.loc    1  928  is_stmt 1
        xorl      %r11d, %r11d                                  #928.3
..LN11917:
        movslq    %edi, %rdi                                    #928.3
..LN11918:
        lea       (%rsp,%r10,8), %r13                           #
..LN11919:
	.loc    1  720  is_stmt 1
        lea       3712(%rsp,%r9,8), %r9                         #720.45
..LN11920:
                                # LOE rdx rbx rdi r9 r10 r11 r13 eax ecx esi r8d r12d r14d r15d
..B18.95:                       # Preds ..B18.95 ..B18.94       # Infreq
..L1040:        # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS STRIPMINED BY 64
                # LOOP WAS VECTORIZED
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 1.915039
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 1.875000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN11921:
        vmovupd   (%r9,%r11,8), %ymm0                           #720.45
..LN11922:
	.loc    1  934  is_stmt 1
        vmovupd   %ymm0, (%r13,%r11,8)                          #934.5
..LN11923:
	.loc    1  928  is_stmt 1
        addq      $4, %r11                                      #928.3
..LN11924:
        cmpq      %rdi, %r11                                    #928.3
..LN11925:
        jb        ..B18.95      # Prob 82%                      #928.3
..LN11926:
                                # LOE rdx rbx rdi r9 r10 r11 r13 eax ecx esi r8d r12d r14d r15d
..B18.97:                       # Preds ..B18.95 ..B18.122      # Infreq
..LN11927:
        cmpq      %rdx, %rdi                                    #928.3
..LN11928:
        jae       ..B18.101     # Prob 9%                       #928.3
..LN11929:
                                # LOE rdx rbx rdi r10 eax ecx esi r8d r12d r14d r15d
..B18.98:                       # Preds ..B18.97                # Infreq
..LN11930:
	.loc    1  934  is_stmt 1
        movslq    %eax, %rax                                    #934.12
..LN11931:
        lea       (%rsp,%r10,8), %r9                            #
..LN11932:
        movslq    %r15d, %r10                                   #934.12
..LN11933:
        addq      %rax, %r10                                    #934.12
..LN11934:
	.loc    1  720  is_stmt 1
        lea       3712(%rsp,%r10,8), %rax                       #720.45
..LN11935:
                                # LOE rax rdx rbx rdi r9 ecx esi r8d r12d r14d r15d
..B18.99:                       # Preds ..B18.99 ..B18.98       # Infreq
..L1041:        # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS STRIPMINED BY 64
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 1.915039
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 1.875000
..LN11936:
        movq      (%rax,%rdi,8), %r10                           #720.45
..LN11937:
	.loc    1  934  is_stmt 1
        movq      %r10, (%r9,%rdi,8)                            #934.5
..LN11938:
	.loc    1  928  is_stmt 1
        incq      %rdi                                          #928.3
..LN11939:
        cmpq      %rdx, %rdi                                    #928.3
..LN11940:
        jb        ..B18.99      # Prob 82%                      #928.3
..LN11941:
                                # LOE rax rdx rbx rdi r9 ecx esi r8d r12d r14d r15d
..B18.101:                      # Preds ..B18.99 ..B18.97 ..B18.128 # Infreq
..LN11942:
        cmpl      $8, %r14d                                     #928.3
..LN11943:
        jl        ..B18.136     # Prob 10%                      #928.3
..LN11944:
                                # LOE rbx ecx esi r8d r12d r14d r15d
..B18.102:                      # Preds ..B18.92 ..B18.101      # Infreq
..LN11945:
        movl      %r14d, %r13d                                  #928.3
..LN11946:
        xorl      %edi, %edi                                    #928.3
..LN11947:
        andl      $-8, %r13d                                    #928.3
..LN11948:
	.loc    1  929  is_stmt 1
        lea       1(%r15), %eax                                 #929.17
..LN11949:
	.loc    1  928  is_stmt 1
        movslq    %r13d, %r13                                   #928.3
..LN11950:
        movl      %r8d, 800(%rsp)                               #928.3
..LN11951:
        vmovdqu   768(%rsp), %ymm9                              #928.3
..LN11952:
	.loc    1  929  is_stmt 1
        vmovd     %eax, %xmm0                                   #929.17
..LN11953:
	.loc    1  928  is_stmt 1
        vmovdqu   832(%rsp), %ymm10                             #928.3
..LN11954:
	.loc    1  929  is_stmt 1
        vpbroadcastd %xmm0, %ymm1                               #929.17
..LN11955:
        vpaddd    .L_2il0floatpacket.7(%rip), %ymm1, %ymm8      #929.17
..LN11956:
                                # LOE rbx rdi r13 esi r12d r14d r15d ymm8 ymm9 ymm10
..B18.103:                      # Preds ..B18.165 ..B18.102     # Infreq
..L1042:        # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS STRIPMINED BY 64
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 1.774414
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 8
                # NORMALIZED VECTORIZATION OVERHEAD 0.017578
                # MAIN VECTOR TYPE: 32-bits integer
..LN11957:
        vmovdqa   %ymm8, %ymm0                                  #929.22
..LN11958:
        vmovdqa   %ymm9, %ymm1                                  #929.22
..LN11959:
        call      __svml_irem8                                  #929.12
..LN11960:
                                # LOE rbx rdi r13 esi r12d r14d r15d ymm0 ymm8 ymm9 ymm10
..B18.165:                      # Preds ..B18.103               # Infreq
..LN11961:
        vmovdqu   %ymm0, 512(%rsp,%rdi,4)                       #929.12
..LN11962:
	.loc    1  928  is_stmt 1
        addq      $8, %rdi                                      #928.3
..LN11963:
	.loc    1  929  is_stmt 1
        vpaddd    %ymm10, %ymm8, %ymm8                          #929.17
..LN11964:
	.loc    1  928  is_stmt 1
        cmpq      %r13, %rdi                                    #928.3
..LN11965:
        jb        ..B18.103     # Prob 82%                      #928.3
..LN11966:
                                # LOE rbx rdi r13 esi r12d r14d r15d ymm8 ymm9 ymm10
..B18.104:                      # Preds ..B18.165               # Infreq
..LN11967:
        movl      800(%rsp), %r8d                               #
..LN11968:
        movl      912(%rsp), %ecx                               #
..LN11969:
                                # LOE rbx r13 ecx esi r8d r12d r14d r15d
..B18.105:                      # Preds ..B18.104 ..B18.136     # Infreq
..LN11970:
        movl      %r13d, %r9d                                   #928.3
..LN11971:
	.loc    1  929  is_stmt 1
        lea       1(%r15,%r9), %edi                             #929.17
..LN11972:
	.loc    1  928  is_stmt 1
        cmpl      %r14d, %r9d                                   #928.3
..LN11973:
        jae       ..B18.109     # Prob 9%                       #928.3
..LN11974:
                                # LOE rbx r13 ecx esi edi r8d r9d r12d r14d r15d
..B18.107:                      # Preds ..B18.105 ..B18.107     # Infreq
..L1043:        # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS STRIPMINED BY 64
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 1.774414
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 8
                # NORMALIZED VECTORIZATION OVERHEAD 0.017578
..LN11975:
	.loc    1  929  is_stmt 1
        movl      %edi, %eax                                    #929.22
..LN11976:
        cltd                                                    #929.22
..LN11977:
        idivl     %ecx                                          #929.22
..LN11978:
	.loc    1  928  is_stmt 1
        incl      %r9d                                          #928.3
..LN11979:
        incl      %edi                                          #928.3
..LN11980:
	.loc    1  929  is_stmt 1
        movl      %edx, 512(%rsp,%r13,4)                        #929.22
..LN11981:
	.loc    1  928  is_stmt 1
        incq      %r13                                          #928.3
..LN11982:
        cmpl      %r14d, %r9d                                   #928.3
..LN11983:
        jb        ..B18.107     # Prob 82%                      #928.3
..LN11984:
                                # LOE rbx r13 ecx esi edi r8d r9d r12d r14d r15d
..B18.109:                      # Preds ..B18.107 ..B18.105     # Infreq
..LN11985:
        movslq    %r12d, %r13                                   #928.3
..LN11986:
        xorl      %r14d, %r14d                                  #928.3
..LN11987:
        shlq      $6, %r13                                      #928.3
..LN11988:
        negq      %r13                                          #928.3
..LN11989:
        addq      %rbx, %r13                                    #928.3
..LN11990:
        je        ..B18.117     # Prob 9%                       #928.3
..LN11991:
                                # LOE r13 r14 ecx esi r8d r12d r15d
..B18.110:                      # Preds ..B18.109               # Infreq
..LN11992:
	.loc    1  930  is_stmt 1
        movslq    %r15d, %r15                                   #930.24
..LN11993:
	.loc    1  720  is_stmt 1
        movl      %esi, 808(%rsp)                               #720.38
..LN11994:
        movl      %r8d, 800(%rsp)                               #720.38
..LN11995:
        lea       3296(%rsp,%r15,8), %rbx                       #720.38
..LN11996:
                                # LOE rbx r13 r14 r12d r15d
..B18.111:                      # Preds ..B18.115 ..B18.110     # Infreq
..L1044:        # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 3
                # LOOP WAS STRIPMINED BY 64
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN11997:
	.loc    1  933  is_stmt 1
        movslq    512(%rsp,%r14,4), %rax                        #933.5
..LN11998:
	.loc    1  938  is_stmt 1
        vxorpd    %xmm7, %xmm7, %xmm7                           #938.18
..LN11999:
	.loc    1  937  is_stmt 1
        vmovsd    (%rsp,%r14,8), %xmm1                          #937.5
..LN12000:
        vmovsd    %xmm1, 968(%rsp)                              #937.5
..LN12001:
	.loc    1  720  is_stmt 1
        vmovsd    3712(%rsp,%rax,8), %xmm2                      #720.45
..LN12002:
        vmovsd    3296(%rsp,%rax,8), %xmm6                      #720.38
..LN12003:
	.loc    1  935  is_stmt 1
        vsubsd    %xmm2, %xmm1, %xmm4                           #935.17
..LN12004:
	.loc    1  937  is_stmt 1
        vaddsd    %xmm1, %xmm2, %xmm0                           #937.19
..LN12005:
	.loc    1  930  is_stmt 1
        vsubsd    (%rbx,%r14,8), %xmm6, %xmm1                   #930.24
..LN12006:
	.loc    1  937  is_stmt 1
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm3             #937.25
..LN12007:
	.loc    1  936  is_stmt 1
        vmulsd    %xmm4, %xmm3, %xmm5                           #936.14
..LN12008:
	.loc    1  938  is_stmt 1
        vucomisd  %xmm7, %xmm1                                  #938.18
..LN12009:
	.loc    1  937  is_stmt 1
        vmulsd    %xmm0, %xmm3, %xmm0                           #937.25
..LN12010:
	.loc    1  720  is_stmt 1
        vmovsd    %xmm2, 952(%rsp)                              #720.45
..LN12011:
	.loc    1  936  is_stmt 1
        vmovsd    %xmm5, 960(%rsp)                              #936.14
..LN12012:
	.loc    1  938  is_stmt 1
        jp        ..B18.112     # Prob 0%                       #938.18
..LN12013:
        je        ..B18.115     # Prob 16%                      #938.18
..LN12014:
                                # LOE rbx r13 r14 r12d r15d xmm0 xmm1 xmm5 ymm5 zmm5
..B18.112:                      # Preds ..B18.111               # Infreq
..LN12015:
	.loc    1  939  is_stmt 1
        vcomisd   .L_2il0floatpacket.0(%rip), %xmm1             #939.20
..LN12016:
        vmovsd    .L_2il0floatpacket.4(%rip), %xmm2             #939.30
..LN12017:
        vsubsd    %xmm2, %xmm1, %xmm3                           #939.30
..LN12018:
        ja        ..L1045       # Prob 50%                      #939.20
..LN12019:
        vmovaps   %xmm1, %xmm3                                  #939.20
..L1045:                                                        #
..LN12020:
	.loc    1  940  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm1             #940.20
..LN12021:
        vaddsd    %xmm2, %xmm3, %xmm4                           #940.30
..LN12022:
        vcomisd   %xmm3, %xmm1                                  #940.20
..LN12023:
	.loc    1  942  is_stmt 1
        vandpd    .L_2il0floatpacket.9(%rip), %xmm5, %xmm7      #942.10
..LN12024:
        vmovsd    .L_2il0floatpacket.6(%rip), %xmm6             #942.21
..LN12025:
	.loc    1  940  is_stmt 1
        ja        ..L1046       # Prob 50%                      #940.20
..LN12026:
        vmovaps   %xmm3, %xmm4                                  #940.20
..L1046:                                                        #
..LN12027:
        vmovsd    %xmm4, 920(%rsp)                              #940.20
..LN12028:
	.loc    1  942  is_stmt 1
        vcomisd   %xmm7, %xmm6                                  #942.21
..LN12029:
        jbe       ..B18.114     # Prob 50%                      #942.21
..LN12030:
                                # LOE rbx r13 r14 r12d r15d xmm0 xmm4 xmm5 ymm4 ymm5 zmm4 zmm5
..B18.113:                      # Preds ..B18.112               # Infreq
..LN12031:
	.loc    1  943  is_stmt 1
        vzeroupper                                              #943.23
..LN12032:
        call      __libm_sse2_sincos                            #943.23
..LN12033:
                                # LOE rbx r13 r14 r12d r15d xmm0 xmm1
..B18.167:                      # Preds ..B18.113               # Infreq
..LN12034:
        vmovsd    %xmm0, 872(%rsp)                              #943.23
..LN12035:
        vmovsd    %xmm1, 888(%rsp)                              #943.23
..LN12036:
        vmovsd    952(%rsp), %xmm0                              #943.54
..LN12037:
        call      cos                                           #943.54
..LN12038:
                                # LOE rbx r13 r14 r12d r15d xmm0
..B18.166:                      # Preds ..B18.167               # Infreq
..LN12039:
        vmovsd    968(%rsp), %xmm2                              #943.7
..LN12040:
        vmovapd   %xmm0, %xmm1                                  #943.54
..LN12041:
        vmovsd    888(%rsp), %xmm0                              #943.7
..LN12042:
        vfmadd132sd 872(%rsp), %xmm0, %xmm2                     #943.7
..LN12043:
        vsubsd    %xmm1, %xmm0, %xmm3                           #943.7
..LN12044:
        vmovsd    896(%rsp), %xmm5                              #943.7
..LN12045:
        vaddsd    %xmm3, %xmm2, %xmm4                           #943.7
..LN12046:
        vfnmadd231sd 920(%rsp), %xmm4, %xmm5                    #943.7
..LN12047:
        vmovsd    %xmm5, 896(%rsp)                              #943.7
..LN12048:
        jmp       ..B18.115     # Prob 100%                     #943.7
..LN12049:
                                # LOE rbx r13 r14 r12d r15d
..B18.114:                      # Preds ..B18.112               # Infreq
..LN12050:
	.loc    1  945  is_stmt 1
        vzeroupper                                              #945.40
..LN12051:
        call      __libm_sse2_sincos                            #945.40
..LN12052:
                                # LOE rbx r13 r14 r12d r15d xmm0 xmm1
..B18.170:                      # Preds ..B18.114               # Infreq
..LN12053:
        vmovsd    %xmm0, 824(%rsp)                              #945.40
..LN12054:
        vmovsd    %xmm1, 880(%rsp)                              #945.40
..LN12055:
        vmovsd    960(%rsp), %xmm0                              #945.23
..LN12056:
        call      sin                                           #945.23
..LN12057:
                                # LOE rbx r13 r14 r12d r15d xmm0
..B18.169:                      # Preds ..B18.170               # Infreq
..LN12058:
        vmovsd    %xmm0, 864(%rsp)                              #945.23
..LN12059:
        vmovsd    952(%rsp), %xmm0                              #945.72
..LN12060:
        call      cos                                           #945.72
..LN12061:
                                # LOE rbx r13 r14 r12d r15d xmm0
..B18.168:                      # Preds ..B18.169               # Infreq
..LN12062:
        vmovapd   %xmm0, %xmm1                                  #945.72
..LN12063:
        vmovsd    864(%rsp), %xmm0                              #945.32
..LN12064:
        vdivsd    960(%rsp), %xmm0, %xmm2                       #945.32
..LN12065:
        vmovsd    880(%rsp), %xmm3                              #945.7
..LN12066:
        vmovsd    968(%rsp), %xmm4                              #945.7
..LN12067:
        vfmadd132sd 824(%rsp), %xmm3, %xmm4                     #945.7
..LN12068:
        vfmsub213sd %xmm1, %xmm2, %xmm3                         #945.7
..LN12069:
        vmovsd    896(%rsp), %xmm5                              #945.7
..LN12070:
        vfmadd213sd %xmm3, %xmm2, %xmm4                         #945.7
..LN12071:
        vfnmadd231sd 920(%rsp), %xmm4, %xmm5                    #945.7
..LN12072:
        vmovsd    %xmm5, 896(%rsp)                              #945.7
..LN12073:
                                # LOE rbx r13 r14 r12d r15d
..B18.115:                      # Preds ..B18.166 ..B18.168 ..B18.111 # Infreq
..LN12074:
	.loc    1  928  is_stmt 1
        incq      %r14                                          #928.3
..LN12075:
        cmpq      %r13, %r14                                    #928.3
..LN12076:
        jb        ..B18.111     # Prob 82%                      #928.3
..LN12077:
                                # LOE rbx r13 r14 r12d r15d
..B18.116:                      # Preds ..B18.115               # Infreq
..LN12078:
        movl      808(%rsp), %esi                               #
..LN12079:
        movl      800(%rsp), %r8d                               #
..LN12080:
        movl      912(%rsp), %ecx                               #
..LN12081:
                                # LOE ecx esi r8d r12d r15d
..B18.117:                      # Preds ..B18.116 ..B18.109     # Infreq
..LN12082:
        incl      %r12d                                         #928.3
..LN12083:
        addl      $64, %r15d                                    #928.3
..LN12084:
        addl      $-64, %esi                                    #928.3
..LN12085:
        cmpl      %r8d, %r12d                                   #928.3
..LN12086:
        jb        ..B18.89      # Prob 82%                      #928.3
..LN12087:
                                # LOE ecx esi r8d r12d r15d
..B18.118:                      # Preds ..B18.117               # Infreq
..LN12088:
        vmovsd    896(%rsp), %xmm2                              #
..LN12089:
	.loc    1  947  is_stmt 1
        vmulsd    .L_2il0floatpacket.5(%rip), %xmm2, %xmm0      #947.25
..LN12090:
	.loc    1  721  is_stmt 1
        movq      40(%rbp), %rsi                                #721.4
..LN12091:
	.loc    1  722  is_stmt 1
        movq      48(%rbp), %r8                                 #722.4
..LN12092:
	.loc    1  723  is_stmt 1
        movq      56(%rbp), %r9                                 #723.4
..LN12093:
	.loc    1  720  is_stmt 1
        movq      88(%rbp), %rdx                                #720.4
..LN12094:
	.loc    1  724  is_stmt 1
        movq      64(%rbp), %r11                                #724.4
..LN12095:
        movq      816(%rsp), %rax                               #
..LN12096:
	.loc    1  721  is_stmt 1
        movq      5024(%rsp), %rcx                              #721.4
..LN12097:
	.loc    1  722  is_stmt 1
        movl      4960(%rsp), %edi                              #722.4
..LN12098:
        movq      1656(%rsp), %r14                              #
..LN12099:
	.loc    1  724  is_stmt 1
        movl      5288(%rsp), %r10d                             #724.4
..LN12100:
	.loc    1  721  is_stmt 1
        movl      %ecx, (%rsi,%rax,4)                           #721.4
..LN12101:
	.loc    1  722  is_stmt 1
        movl      %edi, (%r8,%rax,4)                            #722.4
..LN12102:
	.loc    1  723  is_stmt 1
        movl      %r14d, (%r9,%rax,4)                           #723.4
..LN12103:
	.loc    1  720  is_stmt 1
        vmovsd    %xmm0, (%rdx,%rax,8)                          #720.4
..LN12104:
	.loc    1  724  is_stmt 1
        movl      %r10d, (%r11,%rax,4)                          #724.4
..LN12105:
	.loc    1  725  is_stmt 1
        movl      944(%rsp), %eax                               #725.6
..LN12106:
        incl      %eax                                          #725.6
..LN12107:
        movq      2488(%rsp), %rbx                              #
..LN12108:
        movq      2480(%rsp), %r12                              #
..LN12109:
        movq      2072(%rsp), %r15                              #
..LN12110:
        movq      2064(%rsp), %r13                              #
..LN12111:
        movl      %eax, 944(%rsp)                               #725.6
..LN12112:
	.loc    1  726  is_stmt 1
        cmpl      $10000000, %eax                               #726.16
..LN12113:
        jg        ..B18.127     # Prob 0%                       #726.16
..LN12114:
                                # LOE rbx r12 r13 r14 r15 ebx r12d r13d r14d r15d bl bh r12b r13b r14b r15b xmm2 ymm2 zmm2
..B18.119:                      # Preds ..B18.130 ..B18.127 ..B18.118 ..B18.81 ..B18.79
                                #       ..B18.46 ..B18.45 ..B18.41 ..B18.40 # Infreq
..LN12115:
	.loc    1  692  is_stmt 1
        incq      %r14                                          #692.29
..LN12116:
        cmpq      5320(%rsp), %r14                              #692.29
..LN12117:
        jb        ..B18.38      # Prob 82%                      #692.29
..LN12118:
                                # LOE rbx r12 r13 r14 r15
..B18.120:                      # Preds ..B18.119               # Infreq
..LN12119:
        movq      5304(%rsp), %rax                              #
..LN12120:
        movq      5296(%rsp), %rcx                              #
..LN12121:
        movl      5288(%rsp), %edx                              #
..LN12122:
        incl      %edx                                          #692.5
..LN12123:
        addq      5272(%rsp), %rcx                              #692.5
..LN12124:
        addq      5320(%rsp), %rax                              #692.5
..LN12125:
        movq      5280(%rsp), %rsi                              #
..LN12126:
        movq      5264(%rsp), %r9                               #
..LN12127:
        movl      5248(%rsp), %r10d                             #
..LN12128:
        movq      24(%rbp), %rdi                                #
..LN12129:
        movq      16(%rbp), %r8                                 #
..LN12130:
        cmpl      5256(%rsp), %edx                              #692.5
..LN12131:
        jb        ..B18.36      # Prob 82%                      #692.5
..LN12132:
                                # LOE rax rcx rsi rdi r8 r9 edx esi r10d sil
..B18.121:                      # Preds ..B18.120               # Infreq
..LN12133:
        movq      %rsi, 5280(%rsp)                              #
..LN12134:
        movq      5040(%rsp), %r15                              #
..LN12135:
        movq      5032(%rsp), %r13                              #
..LN12136:
        movq      5024(%rsp), %r14                              #
..LN12137:
        movq      5016(%rsp), %r12                              #
..LN12138:
        jmp       ..B18.26      # Prob 100%                     #
..LN12139:
                                # LOE r12 r13 r14 r15
..B18.122:                      # Preds ..B18.93                # Infreq
..LN12140:
	.loc    1  928  is_stmt 1
        xorl      %edi, %edi                                    #928.3
..LN12141:
        jmp       ..B18.97      # Prob 100%                     #928.3
..LN12142:
                                # LOE rdx rbx rdi r10 eax ecx esi r8d r12d r14d r15d
..B18.124:                      # Preds ..B18.137 ..B18.27 ..B18.21 # Infreq
..LN12143:
	.loc    1  732  is_stmt 1
        movq      %rdx, %rdi                                    #732.3
..LN12144:
        vzeroupper                                              #732.3
..LN12145:
#       free(void *)
        call      free                                          #732.3
..LN12146:
                                # LOE
..B18.125:                      # Preds ..B18.124               # Infreq
..LN12147:
	.loc    1  733  is_stmt 1
        movq      5264(%rsp), %rdi                              #733.3
..LN12148:
#       free(void *)
        call      free                                          #733.3
..LN12149:
                                # LOE
..B18.126:                      # Preds ..B18.125               # Infreq
..LN12150:
	.loc    1  735  is_stmt 1
        movl      944(%rsp), %eax                               #735.10
..LN12151:
	.loc    1  735  epilogue_begin  is_stmt 1
        addq      $5368, %rsp                                   #735.10
	.cfi_restore 3
..LN12152:
        popq      %rbx                                          #735.10
	.cfi_restore 15
..LN12153:
        popq      %r15                                          #735.10
	.cfi_restore 14
..LN12154:
        popq      %r14                                          #735.10
	.cfi_restore 13
..LN12155:
        popq      %r13                                          #735.10
	.cfi_restore 12
..LN12156:
        popq      %r12                                          #735.10
..LN12157:
        movq      %rbp, %rsp                                    #735.10
..LN12158:
        popq      %rbp                                          #735.10
	.cfi_def_cfa 7, 8
	.cfi_restore 6
..LN12159:
        ret                                                     #735.10
	.cfi_def_cfa 6, 16
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_offset 6, -16
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN12160:
                                # LOE
..B18.127:                      # Preds ..B18.118               # Infreq
..LN12161:
	.loc    1  726  is_stmt 1
        movl      $.L_2__STRING.0, %edi                         #726.26
..LN12162:
        vzeroupper                                              #726.26
..___tag_value_create_xgrid_2dx2d_order2.1062:
..LN12163:
#       error_handler(const char *)
        call      error_handler                                 #726.26
..___tag_value_create_xgrid_2dx2d_order2.1063:
..LN12164:
        jmp       ..B18.119     # Prob 100%                     #726.26
..LN12165:
                                # LOE rbx r12 r13 r14 r15
..B18.128:                      # Preds ..B18.89                # Infreq
..LN12166:
	.loc    1  928  is_stmt 1
        xorl      %eax, %eax                                    #928.3
..LN12167:
        cmpl      $1, %r14d                                     #928.3
..LN12168:
        jae       ..B18.93      # Prob 50%                      #928.3
..LN12169:
        jmp       ..B18.101     # Prob 100%                     #928.3
..LN12170:
                                # LOE rbx eax ecx esi r8d r12d r14d r15d
..B18.129:                      # Preds ..B18.69                # Infreq
..LN12171:
	.loc    1  906  is_stmt 1
        xorl      %edi, %edi                                    #906.5
..LN12172:
        jmp       ..B18.73      # Prob 100%                     #906.5
..LN12173:
                                # LOE rax rbx rdi r8 r15 xmm1 xmm2 xmm9 xmm10
..B18.130:                      # Preds ..B18.58 ..B18.67       # Infreq
..LN12174:
        movq      2488(%rsp), %rbx                              #
..LN12175:
        movq      2480(%rsp), %r12                              #
..LN12176:
        movq      2072(%rsp), %r15                              #
..LN12177:
        movq      2064(%rsp), %r13                              #
..LN12178:
        movq      1656(%rsp), %r14                              #
..LN12179:
        jmp       ..B18.119     # Prob 100%                     #
..LN12180:
                                # LOE rbx r12 r13 r14 r15
..B18.131:                      # Preds ..B18.63                # Infreq
..LN12181:
	.loc    1  889  is_stmt 1
        movl      $.L_2__STRING.1, %edi                         #889.4
..LN12182:
        vzeroupper                                              #889.4
..LN12183:
        vmovsd    %xmm9, 5072(%rsp)                             #889.4
..LN12184:
        vmovsd    %xmm10, 5080(%rsp)                            #889.4
..LN12185:
        vmovsd    %xmm11, 5088(%rsp)                            #889.4
..LN12186:
        vmovsd    %xmm12, 5096(%rsp)                            #889.4
..LN12187:
        vmovsd    %xmm13, 5104(%rsp)                            #889.4
..LN12188:
        vmovsd    %xmm4, 5112(%rsp)                             #889.4
..LN12189:
        vmovsd    %xmm5, 5120(%rsp)                             #889.4
..LN12190:
        vmovsd    %xmm8, 5128(%rsp)                             #889.4
..LN12191:
        vmovsd    %xmm7, 5136(%rsp)                             #889.4
..LN12192:
        vmovsd    %xmm6, 5144(%rsp)                             #889.4
..LN12193:
        vmovsd    %xmm0, 5152(%rsp)                             #889.4
..LN12194:
        vmovsd    %xmm3, 5160(%rsp)                             #889.4
..___tag_value_create_xgrid_2dx2d_order2.1064:
..LN12195:
#       error_handler(const char *)
        call      error_handler                                 #889.4
..___tag_value_create_xgrid_2dx2d_order2.1065:
..LN12196:
                                # LOE rbx r12 r13 r15 r14d
..B18.171:                      # Preds ..B18.131               # Infreq
..LN12197:
        vmovsd    .L_2il0floatpacket.10(%rip), %xmm2            #
..LN12198:
        vmovsd    .L_2il0floatpacket.11(%rip), %xmm1            #
..LN12199:
        vmovsd    5160(%rsp), %xmm3                             #
..LN12200:
        vmovsd    5152(%rsp), %xmm0                             #
..LN12201:
        vmovsd    5144(%rsp), %xmm6                             #
..LN12202:
        vmovsd    5136(%rsp), %xmm7                             #
..LN12203:
        vmovsd    5128(%rsp), %xmm8                             #
..LN12204:
        vmovsd    5120(%rsp), %xmm5                             #
..LN12205:
        vmovsd    5112(%rsp), %xmm4                             #
..LN12206:
        vmovsd    5104(%rsp), %xmm13                            #
..LN12207:
        vmovsd    5096(%rsp), %xmm12                            #
..LN12208:
        vmovsd    5088(%rsp), %xmm11                            #
..LN12209:
        vmovsd    5080(%rsp), %xmm10                            #
..LN12210:
        vmovsd    5072(%rsp), %xmm9                             #
..LN12211:
        jmp       ..B18.64      # Prob 100%                     #
..LN12212:
                                # LOE rbx r12 r13 r15 r14d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm9 xmm10 xmm11 xmm12 xmm13
..B18.133:                      # Preds ..B18.48                # Infreq
..LN12213:
	.loc    1  862  is_stmt 1
        xorl      %eax, %eax                                    #862.3
..LN12214:
        jmp       ..B18.52      # Prob 100%                     #862.3
..LN12215:
                                # LOE rax rcx rbx r12 r13 r14 r15
..B18.134:                      # Preds ..B18.36                # Infreq
..LN12216:
	.loc    1  692  is_stmt 1
        incl      %edx                                          #692.5
..LN12217:
        addq      5272(%rsp), %rcx                              #692.5
..LN12218:
        addq      5320(%rsp), %rax                              #692.5
..LN12219:
        cmpl      5256(%rsp), %edx                              #692.5
..LN12220:
        jb        ..B18.36      # Prob 82%                      #692.5
..LN12221:
                                # LOE rax rcx rsi rdi r8 r9 edx r10d
..B18.135:                      # Preds ..B18.134               # Infreq
..LN12222:
        movq      %rsi, 5280(%rsp)                              #
..LN12223:
        movq      5040(%rsp), %r15                              #
..LN12224:
        movq      5032(%rsp), %r13                              #
..LN12225:
        movq      5024(%rsp), %r14                              #
..LN12226:
        movq      5016(%rsp), %r12                              #
..LN12227:
        jmp       ..B18.26      # Prob 100%                     #
..LN12228:
                                # LOE r12 r13 r14 r15
..B18.136:                      # Preds ..B18.101               # Infreq
..LN12229:
	.loc    1  928  is_stmt 1
        xorl      %r13d, %r13d                                  #928.3
..LN12230:
        jmp       ..B18.105     # Prob 100%                     #928.3
..LN12231:
                                # LOE rbx r13 ecx esi r8d r12d r14d r15d
..B18.137:                      # Preds ..B18.23                # Infreq
..LN12232:
	.loc    1  678  is_stmt 1
        incl      %ecx                                          #678.3
..LN12233:
        addq      %r12, %rax                                    #678.3
..LN12234:
        addq      4976(%rsp), %rsi                              #678.3
..LN12235:
        cmpl      4536(%rsp), %ecx                              #678.3
..LN12236:
        jb        ..B18.23      # Prob 82%                      #678.3
..LN12237:
        jmp       ..B18.124     # Prob 100%                     #678.3
..LN12238:
                                # LOE rax rdx rsi r8 r12 ecx ebx
..B18.139:                      # Preds ..B18.14                # Infreq
..LN12239:
	.loc    1  75  is_stmt 1
        incl      %esi                                          #75.18
..LN12240:
        addq      %r8, %rcx                                     #75.18
..LN12241:
        lea       1(%rax,%r9), %eax                             #75.18
..LN12242:
        cmpl      8(%rsp), %esi                                 #75.14
..LN12243:
        jl        ..B18.14      # Prob 82%                      #75.14
..LN12244:
        jmp       ..B18.20      # Prob 100%                     #75.14
..LN12245:
                                # LOE rdx rcx rdi r8 r10 eax esi r9d
..B18.141:                      # Preds ..B18.5                 # Infreq
..LN12246:
        incl      %r8d                                          #75.18
..LN12247:
        addq      %rdi, %rsi                                    #75.18
..LN12248:
        lea       1(%rcx,%rax), %ecx                            #75.18
..LN12249:
        cmpl      24(%rsp), %r8d                                #75.14
..LN12250:
        jl        ..B18.5       # Prob 82%                      #75.14
..LN12251:
        jmp       ..B18.11      # Prob 100%                     #75.14
..LN12252:
        .align    16,0x90
	.cfi_endproc
..LN12253:
                                # LOE rdx rsi rdi r9 r10 eax ecx r8d
..LN12254:
# mark_end;
	.type	create_xgrid_2dx2d_order2,@function
	.size	create_xgrid_2dx2d_order2,.-create_xgrid_2dx2d_order2
..LNcreate_xgrid_2dx2d_order2.12255:
.LNcreate_xgrid_2dx2d_order2:
	.data
# -- End  create_xgrid_2dx2d_order2
	.text
.L_2__routine_start_clip_2dx2d_18:
# -- Begin  clip_2dx2d
	.text
# mark_begin;
       .align    16,0x90
	.globl clip_2dx2d
# --- clip_2dx2d(const double *, const double *, int, const double *, const double *, int, double *, double *)
clip_2dx2d:
# parameter 1(lon1_in): %rdi
# parameter 2(lat1_in): %rsi
# parameter 3(n1_in): %edx
# parameter 4(lon2_in): %rcx
# parameter 5(lat2_in): %r8
# parameter 6(n2_in): %r9d
# parameter 7(lon_out): 16 + %rbp
# parameter 8(lat_out): 24 + %rbp
..B19.1:                        # Preds ..B19.0
	.cfi_startproc
..___tag_value_clip_2dx2d.1070:
..L1071:
                                                       #853.1
..LN12256:
	.loc    1  853  is_stmt 1
        pushq     %rbp                                          #853.1
	.cfi_def_cfa_offset 16
..LN12257:
        movq      %rsp, %rbp                                    #853.1
	.cfi_def_cfa 6, 16
	.cfi_offset 6, -16
..LN12258:
        andq      $-32, %rsp                                    #853.1
..LN12259:
        pushq     %r12                                          #853.1
..LN12260:
        pushq     %r13                                          #853.1
..LN12261:
        pushq     %r14                                          #853.1
..LN12262:
        pushq     %r15                                          #853.1
..LN12263:
        pushq     %rbx                                          #853.1
..LN12264:
        subq      $952, %rsp                                    #853.1
..LN12265:
        movq      %rdi, %rax                                    #853.1
..LN12266:
        movslq    %r9d, %r9                                     #853.1
..LN12267:
	.loc    1  861  prologue_end  is_stmt 1
        movslq    %edx, %rdi                                    #861.3
..LN12268:
	.loc    1  862  is_stmt 1
        testl     %edx, %edx                                    #862.16
..LN12269:
        jle       ..B19.10      # Prob 50%                      #862.16
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN12270:
                                # LOE rax rcx rbx rsi rdi r8 r9 r12 r13 r14 r15 edx
..B19.2:                        # Preds ..B19.1
..LN12271:
        cmpq      $4, %rdi                                      #862.3
..LN12272:
        jl        ..B19.39      # Prob 10%                      #862.3
..LN12273:
                                # LOE rax rcx rbx rsi rdi r8 r9 r12 r13 r14 r15 edx
..B19.3:                        # Preds ..B19.2
..LN12274:
        andl      $-4, %edx                                     #862.3
..LN12275:
        xorl      %r10d, %r10d                                  #862.3
..LN12276:
        movslq    %edx, %rdx                                    #862.3
..LN12277:
                                # LOE rax rdx rcx rbx rsi rdi r8 r9 r10 r12 r13 r14 r15
..B19.4:                        # Preds ..B19.4 ..B19.3
..L1081:        # optimization report
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS VECTORIZED
                # VECTORIZATION HAS UNALIGNED MEMORY REFERENCES
                # VECTORIZATION SPEEDUP COEFFECIENT 4.101562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.750000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN12278:
	.loc    1  863  is_stmt 1
        vmovupd   (%rax,%r10,8), %ymm0                          #863.19
..LN12279:
	.loc    1  864  is_stmt 1
        vmovupd   (%rsi,%r10,8), %ymm1                          #864.19
..LN12280:
	.loc    1  863  is_stmt 1
        vmovupd   %ymm0, 64(%rsp,%r10,8)                        #863.5
..LN12281:
	.loc    1  864  is_stmt 1
        vmovupd   %ymm1, 480(%rsp,%r10,8)                       #864.5
..LN12282:
	.loc    1  862  is_stmt 1
        addq      $4, %r10                                      #862.3
..LN12283:
        cmpq      %rdx, %r10                                    #862.3
..LN12284:
        jb        ..B19.4       # Prob 97%                      #862.3
..LN12285:
                                # LOE rax rdx rcx rbx rsi rdi r8 r9 r10 r12 r13 r14 r15
..B19.6:                        # Preds ..B19.4 ..B19.39
..LN12286:
        cmpq      %rdi, %rdx                                    #862.3
..LN12287:
        jae       ..B19.10      # Prob 9%                       #862.3
..LN12288:
                                # LOE rax rdx rcx rbx rsi rdi r8 r9 r12 r13 r14 r15
..B19.8:                        # Preds ..B19.6 ..B19.8
..L1082:        # optimization report
                # LOOP WAS UNROLLED BY 1
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 4.101562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.750000
..LN12289:
	.loc    1  863  is_stmt 1
        movq      (%rax,%rdx,8), %r10                           #863.19
..LN12290:
	.loc    1  864  is_stmt 1
        movq      (%rsi,%rdx,8), %r11                           #864.19
..LN12291:
	.loc    1  863  is_stmt 1
        movq      %r10, 64(%rsp,%rdx,8)                         #863.5
..LN12292:
	.loc    1  864  is_stmt 1
        movq      %r11, 480(%rsp,%rdx,8)                        #864.5
..LN12293:
	.loc    1  862  is_stmt 1
        incq      %rdx                                          #862.3
..LN12294:
        cmpq      %rdi, %rdx                                    #862.3
..LN12295:
        jb        ..B19.8       # Prob 97%                      #862.3
..LN12296:
                                # LOE rax rdx rcx rbx rsi rdi r8 r9 r12 r13 r14 r15
..B19.10:                       # Preds ..B19.8 ..B19.1 ..B19.6
..LN12297:
	.loc    1  866  is_stmt 1
        vmovsd    -8(%rcx,%r9,8), %xmm4                         #866.10
..LN12298:
	.loc    1  867  is_stmt 1
        vmovsd    -8(%r8,%r9,8), %xmm1                          #867.10
..LN12299:
	.loc    1  868  is_stmt 1
        testq     %r9, %r9                                      #868.16
..LN12300:
        jle       ..B19.33      # Prob 4%                       #868.16
..LN12301:
                                # LOE rcx rbx rdi r8 r9 r12 r13 r14 r15 xmm1 xmm4
..B19.11:                       # Preds ..B19.10
..LN12302:
	.loc    1  853  is_stmt 1
        movq      16(%rbp), %rsi                                #853.1
..LN12303:
	.loc    1  868  is_stmt 1
        xorl      %edx, %edx                                    #868.3
..LN12304:
	.loc    1  853  is_stmt 1
        movq      24(%rbp), %rax                                #853.1
..LN12305:
	.loc    1  888  is_stmt 1
        movq      %rdi, %rbx                                    #888.27
..LN12306:
	.loc    1  1127  is_stmt 1
        vmovsd    .L_2il0floatpacket.10(%rip), %xmm3            #1127.23
..LN12307:
	.loc    1  888  is_stmt 1
        vmovsd    .L_2il0floatpacket.11(%rip), %xmm0            #888.27
..LN12308:
                                # LOE rax rdx rcx rbx rsi r8 r9 xmm0 xmm1 xmm3 xmm4
..B19.12:                       # Preds ..B19.31 ..B19.11
..L1083:        # optimization report
                # %s was not vectorized: inner loop was already vectorized
..LN12309:
	.loc    1  874  is_stmt 1
        xorl      %r15d, %r15d                                  #874.15
..LN12310:
	.loc    1  870  is_stmt 1
        vmovsd    (%r8,%rdx,8), %xmm9                           #870.12
..LN12311:
	.loc    1  874  is_stmt 1
        xorl      %r14d, %r14d                                  #874.5
..LN12312:
	.loc    1  871  is_stmt 1
        vmovsd    56(%rsp,%rbx,8), %xmm14                       #871.12
..LN12313:
	.loc    1  874  is_stmt 1
        xorl      %r13d, %r13d                                  #874.15
..LN12314:
	.loc    1  872  is_stmt 1
        vmovsd    472(%rsp,%rbx,8), %xmm2                       #872.12
..LN12315:
	.loc    1  1130  is_stmt 1
        vsubsd    %xmm1, %xmm9, %xmm7                           #1130.27
..LN12316:
        vsubsd    %xmm4, %xmm14, %xmm5                          #1130.18
..LN12317:
        vsubsd    %xmm1, %xmm2, %xmm11                          #1130.44
..LN12318:
        vmulsd    %xmm7, %xmm5, %xmm8                           #1130.27
..LN12319:
	.loc    1  869  is_stmt 1
        vmovsd    (%rcx,%rdx,8), %xmm10                         #869.12
..LN12320:
	.loc    1  1130  is_stmt 1
        vsubsd    %xmm10, %xmm4, %xmm6                          #1130.37
..LN12321:
	.loc    1  1131  is_stmt 1
        vfmadd213sd %xmm8, %xmm6, %xmm11                        #1131.21
..LN12322:
        vcmpgesd  %xmm11, %xmm3, %xmm12                         #1131.21
..LN12323:
        vmovd     %xmm12, %r12d                                 #1131.21
..LN12324:
        negl      %r12d                                         #1131.21
..LN12325:
	.loc    1  874  is_stmt 1
        testq     %rbx, %rbx                                    #874.27
..LN12326:
        jle       ..B19.36      # Prob 10%                      #874.27
..LN12327:
                                # LOE rax rdx rcx rbx rsi r8 r9 r13 r14 r15 r12d xmm0 xmm1 xmm2 xmm3 xmm4 xmm6 xmm7 xmm9 xmm10 xmm14
..B19.13:                       # Preds ..B19.12
..LN12328:
	.loc    1  886  is_stmt 1
        vmulsd    %xmm9, %xmm4, %xmm5                           #886.25
..LN12329:
	.loc    1  884  is_stmt 1
        vxorpd    .L_2il0floatpacket.8(%rip), %xmm6, %xmm8      #884.13
..LN12330:
	.loc    1  886  is_stmt 1
        vfmsub231sd %xmm1, %xmm10, %xmm5                        #886.2
..LN12331:
        vmovsd    %xmm9, 8(%rsp)                                #886.2
..LN12332:
        vmovsd    %xmm10, (%rsp)                                #886.2
..LN12333:
        movq      %rdx, 40(%rsp)                                #886.2
..LN12334:
        movq      %r9, 32(%rsp)                                 #886.2
..LN12335:
        movq      %rcx, 24(%rsp)                                #886.2
..LN12336:
        movq      %r8, 16(%rsp)                                 #886.2
..LN12337:
                                # LOE rax rbx rsi r13 r14 r15 r12d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm14
..B19.14:                       # Preds ..B19.20 ..B19.13
..L1084:        # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN12338:
	.loc    1  876  is_stmt 1
        vmovsd    480(%rsp,%r14,8), %xmm13                      #876.14
..LN12339:
	.loc    1  875  is_stmt 1
        vmovsd    64(%rsp,%r14,8), %xmm12                       #875.14
..LN12340:
	.loc    1  1130  is_stmt 1
        vsubsd    %xmm1, %xmm13, %xmm9                          #1130.44
..LN12341:
        vsubsd    %xmm4, %xmm12, %xmm10                         #1130.18
..LN12342:
        vmulsd    %xmm9, %xmm6, %xmm11                          #1130.44
..LN12343:
	.loc    1  1131  is_stmt 1
        vfmadd231sd %xmm7, %xmm10, %xmm11                       #1131.21
..LN12344:
        vcomisd   %xmm11, %xmm3                                 #1131.21
..LN12345:
        jb        ..B19.16      # Prob 50%                      #1131.21
..LN12346:
                                # LOE rax rbx rsi r13 r14 r15 r12d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13 xmm14
..B19.15:                       # Preds ..B19.14
..LN12347:
	.loc    1  877  is_stmt 1
        cmpl      $1, %r12d                                     #877.72
..LN12348:
	.loc    1  1131  is_stmt 1
        movl      $1, %r12d                                     #1131.21
..LN12349:
	.loc    1  877  is_stmt 1
        jne       ..B19.17      # Prob 50%                      #877.72
..LN12350:
        jmp       ..B19.19      # Prob 100%                     #877.72
..LN12351:
                                # LOE rax rbx rsi r13 r14 r15 r12d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13 xmm14
..B19.16:                       # Preds ..B19.14
..LN12352:
        testl     %r12d, %r12d                                  #877.72
..LN12353:
	.loc    1  1131  is_stmt 1
        movl      $0, %r12d                                     #1131.21
..LN12354:
	.loc    1  877  is_stmt 1
        je        ..B19.20      # Prob 50%                      #877.72
..LN12355:
                                # LOE rax rbx rsi r13 r14 r15 r12d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13 xmm14
..B19.17:                       # Preds ..B19.15 ..B19.16
..LN12356:
	.loc    1  885  is_stmt 1
        vmulsd    %xmm13, %xmm14, %xmm9                         #885.25
..LN12357:
	.loc    1  881  is_stmt 1
        vsubsd    %xmm2, %xmm13, %xmm11                         #881.13
..LN12358:
	.loc    1  883  is_stmt 1
        vsubsd    %xmm14, %xmm12, %xmm10                        #883.13
..LN12359:
	.loc    1  885  is_stmt 1
        vfmsub213sd %xmm9, %xmm12, %xmm2                        #885.2
..LN12360:
	.loc    1  887  is_stmt 1
        vmulsd    %xmm8, %xmm11, %xmm9                          #887.25
..LN12361:
        vfmsub231sd %xmm10, %xmm7, %xmm9                        #887.2
..LN12362:
	.loc    1  888  is_stmt 1
        vandpd    .L_2il0floatpacket.9(%rip), %xmm9, %xmm14     #888.12
..LN12363:
        vcomisd   %xmm14, %xmm0                                 #888.27
..LN12364:
        ja        ..B19.37      # Prob 5%                       #888.27
..LN12365:
                                # LOE rax rbx rsi r13 r14 r15 r12d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm9 xmm10 xmm11 xmm12 xmm13
..B19.18:                       # Preds ..B19.42 ..B19.17
..LN12366:
	.loc    1  892  is_stmt 1
        vmulsd    %xmm5, %xmm10, %xmm10                         #892.36
..LN12367:
	.loc    1  893  is_stmt 1
        incq      %r15                                          #893.10
..LN12368:
        vmulsd    %xmm5, %xmm11, %xmm11                         #893.36
..LN12369:
	.loc    1  892  is_stmt 1
        vfmsub231sd %xmm8, %xmm2, %xmm10                        #892.2
..LN12370:
	.loc    1  893  is_stmt 1
        vfmsub231sd %xmm7, %xmm2, %xmm11                        #893.2
..LN12371:
	.loc    1  892  is_stmt 1
        vdivsd    %xmm9, %xmm10, %xmm14                         #892.41
..LN12372:
	.loc    1  893  is_stmt 1
        vdivsd    %xmm9, %xmm11, %xmm2                          #893.41
..LN12373:
	.loc    1  892  is_stmt 1
        vmovsd    %xmm14, (%r13,%rsi)                           #892.2
..LN12374:
	.loc    1  893  is_stmt 1
        vmovsd    %xmm2, (%r13,%rax)                            #893.2
..LN12375:
        addq      $8, %r13                                      #893.10
..LN12376:
	.loc    1  897  is_stmt 1
        testl     %r12d, %r12d                                  #897.10
..LN12377:
        je        ..B19.20      # Prob 50%                      #897.10
..LN12378:
                                # LOE rax rbx rsi r13 r14 r15 r12d xmm0 xmm1 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13
..B19.19:                       # Preds ..B19.15 ..B19.18
..LN12379:
	.loc    1  898  is_stmt 1
        vmovsd    %xmm12, (%r13,%rsi)                           #898.2
..LN12380:
	.loc    1  899  is_stmt 1
        incq      %r15                                          #899.10
..LN12381:
        vmovsd    %xmm13, (%r13,%rax)                           #899.2
..LN12382:
        addq      $8, %r13                                      #899.10
..LN12383:
                                # LOE rax rbx rsi r13 r14 r15 r12d xmm0 xmm1 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm12 xmm13
..B19.20:                       # Preds ..B19.18 ..B19.16 ..B19.19
..LN12384:
	.loc    1  874  is_stmt 1
        incq      %r14                                          #874.5
..LN12385:
	.loc    1  901  is_stmt 1
        vmovapd   %xmm12, %xmm14                                #901.7
..LN12386:
	.loc    1  902  is_stmt 1
        vmovapd   %xmm13, %xmm2                                 #902.7
..LN12387:
	.loc    1  874  is_stmt 1
        cmpq      %rbx, %r14                                    #874.5
..LN12388:
        jb        ..B19.14      # Prob 98%                      #874.5
..LN12389:
                                # LOE rax rbx rsi r13 r14 r15 r12d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm14
..B19.21:                       # Preds ..B19.20
..LN12390:
        vmovsd    8(%rsp), %xmm9                                #
..LN12391:
	.loc    1  905  is_stmt 1
        movq      %r15, %rbx                                    #905.10
..LN12392:
        vmovsd    (%rsp), %xmm10                                #
..LN12393:
        movq      40(%rsp), %rdx                                #
..LN12394:
        movq      32(%rsp), %r9                                 #
..LN12395:
        movq      24(%rsp), %rcx                                #
..LN12396:
        movq      16(%rsp), %r8                                 #
..LN12397:
        testq     %r15, %r15                                    #905.10
..LN12398:
        je        ..B19.36      # Prob 20%                      #905.10
..LN12399:
                                # LOE rax rdx rcx rbx rsi r8 r9 r15 edx ecx r8d r9d dl cl dh ch r8b r9b xmm0 xmm3 xmm9 xmm10 ymm9 ymm10 zmm9 zmm10
..B19.22:                       # Preds ..B19.21
..LN12400:
	.loc    1  906  is_stmt 1
        jle       ..B19.31      # Prob 50%                      #906.18
..LN12401:
                                # LOE rax rdx rcx rbx rsi r8 r9 r15 edx ecx r8d r9d dl cl dh ch r8b r9b xmm0 xmm3 xmm9 xmm10 ymm9 ymm10 zmm9 zmm10
..B19.23:                       # Preds ..B19.22
..LN12402:
        movslq    %r15d, %r12                                   #906.5
..LN12403:
        cmpq      $4, %r12                                      #906.5
..LN12404:
        jl        ..B19.34      # Prob 10%                      #906.5
..LN12405:
                                # LOE rax rdx rcx rbx rsi r8 r9 r12 edx ecx r8d r9d dl cl dh ch r8b r9b xmm0 xmm3 xmm9 xmm10 ymm9 ymm10 zmm9 zmm10
..B19.24:                       # Preds ..B19.23
..LN12406:
        movl      %r12d, %r11d                                  #906.5
..LN12407:
        xorl      %r10d, %r10d                                  #906.5
..LN12408:
        andl      $-4, %r11d                                    #906.5
..LN12409:
        movslq    %r11d, %r11                                   #906.5
..LN12410:
                                # LOE rax rdx rcx rbx rsi r8 r9 r10 r11 r12 xmm0 xmm3 xmm9 xmm10
..B19.25:                       # Preds ..B19.25 ..B19.24
..L1085:        # optimization report
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS VECTORIZED
                # VECTORIZATION HAS UNALIGNED MEMORY REFERENCES
                # VECTORIZATION SPEEDUP COEFFECIENT 4.101562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.750000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN12411:
	.loc    1  907  is_stmt 1
        vmovupd   (%rsi,%r10,8), %ymm1                          #907.21
..LN12412:
	.loc    1  908  is_stmt 1
        vmovupd   (%rax,%r10,8), %ymm2                          #908.21
..LN12413:
	.loc    1  907  is_stmt 1
        vmovupd   %ymm1, 64(%rsp,%r10,8)                        #907.7
..LN12414:
	.loc    1  908  is_stmt 1
        vmovupd   %ymm2, 480(%rsp,%r10,8)                       #908.7
..LN12415:
	.loc    1  906  is_stmt 1
        addq      $4, %r10                                      #906.5
..LN12416:
        cmpq      %r11, %r10                                    #906.5
..LN12417:
        jb        ..B19.25      # Prob 97%                      #906.5
..LN12418:
                                # LOE rax rdx rcx rbx rsi r8 r9 r10 r11 r12 xmm0 xmm3 xmm9 xmm10
..B19.27:                       # Preds ..B19.25 ..B19.34
..LN12419:
        cmpq      %r12, %r11                                    #906.5
..LN12420:
        jae       ..B19.31      # Prob 9%                       #906.5
..LN12421:
                                # LOE rax rdx rcx rbx rsi r8 r9 r11 r12 xmm0 xmm3 xmm9 xmm10
..B19.29:                       # Preds ..B19.27 ..B19.29
..L1086:        # optimization report
                # LOOP WAS UNROLLED BY 1
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 4.101562
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.750000
..LN12422:
	.loc    1  907  is_stmt 1
        movq      (%rsi,%r11,8), %r10                           #907.21
..LN12423:
	.loc    1  908  is_stmt 1
        movq      (%rax,%r11,8), %r13                           #908.21
..LN12424:
	.loc    1  907  is_stmt 1
        movq      %r10, 64(%rsp,%r11,8)                         #907.7
..LN12425:
	.loc    1  908  is_stmt 1
        movq      %r13, 480(%rsp,%r11,8)                        #908.7
..LN12426:
	.loc    1  906  is_stmt 1
        incq      %r11                                          #906.5
..LN12427:
        cmpq      %r12, %r11                                    #906.5
..LN12428:
        jb        ..B19.29      # Prob 97%                      #906.5
..LN12429:
                                # LOE rax rdx rcx rbx rsi r8 r9 r11 r12 xmm0 xmm3 xmm9 xmm10
..B19.31:                       # Preds ..B19.29 ..B19.22 ..B19.27
..LN12430:
	.loc    1  868  is_stmt 1
        incq      %rdx                                          #868.3
..LN12431:
	.loc    1  911  is_stmt 1
        vmovapd   %xmm10, %xmm4                                 #911.5
..LN12432:
	.loc    1  912  is_stmt 1
        vmovapd   %xmm9, %xmm1                                  #912.5
..LN12433:
	.loc    1  868  is_stmt 1
        cmpq      %r9, %rdx                                     #868.3
..LN12434:
        jb        ..B19.12      # Prob 82%                      #868.3
..LN12435:
                                # LOE rax rdx rcx rbx rsi r8 r9 xmm0 xmm1 xmm3 xmm4
..B19.32:                       # Preds ..B19.31
..LN12436:
        movq      %rbx, %rdi                                    #
..LN12437:
                                # LOE rbx rdi r12 r13 r14 r15
..B19.33:                       # Preds ..B19.32 ..B19.10
..LN12438:
	.loc    1  914  is_stmt 1
        vzeroupper                                              #914.9
..LN12439:
        movl      %edi, %eax                                    #914.9
..LN12440:
	.loc    1  914  epilogue_begin  is_stmt 1
        addq      $952, %rsp                                    #914.9
	.cfi_restore 3
..LN12441:
        popq      %rbx                                          #914.9
	.cfi_restore 15
..LN12442:
        popq      %r15                                          #914.9
	.cfi_restore 14
..LN12443:
        popq      %r14                                          #914.9
	.cfi_restore 13
..LN12444:
        popq      %r13                                          #914.9
	.cfi_restore 12
..LN12445:
        popq      %r12                                          #914.9
..LN12446:
        movq      %rbp, %rsp                                    #914.9
..LN12447:
        popq      %rbp                                          #914.9
	.cfi_def_cfa 7, 8
	.cfi_restore 6
..LN12448:
        ret                                                     #914.9
	.cfi_def_cfa 6, 16
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_offset 6, -16
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN12449:
                                # LOE
..B19.34:                       # Preds ..B19.23                # Infreq
..LN12450:
	.loc    1  906  is_stmt 1
        xorl      %r11d, %r11d                                  #906.5
..LN12451:
        jmp       ..B19.27      # Prob 100%                     #906.5
..LN12452:
                                # LOE rax rdx rcx rbx rsi r8 r9 r11 r12 xmm0 xmm3 xmm9 xmm10
..B19.36:                       # Preds ..B19.12 ..B19.21       # Infreq
..LN12453:
	.loc    1  905  is_stmt 1
        vzeroupper                                              #905.31
..LN12454:
        xorl      %eax, %eax                                    #905.31
..LN12455:
	.loc    1  905  epilogue_begin  is_stmt 1
        addq      $952, %rsp                                    #905.31
	.cfi_restore 3
..LN12456:
        popq      %rbx                                          #905.31
	.cfi_restore 15
..LN12457:
        popq      %r15                                          #905.31
	.cfi_restore 14
..LN12458:
        popq      %r14                                          #905.31
	.cfi_restore 13
..LN12459:
        popq      %r13                                          #905.31
	.cfi_restore 12
..LN12460:
        popq      %r12                                          #905.31
..LN12461:
        movq      %rbp, %rsp                                    #905.31
..LN12462:
        popq      %rbp                                          #905.31
	.cfi_def_cfa 7, 8
	.cfi_restore 6
..LN12463:
        ret                                                     #905.31
	.cfi_def_cfa 6, 16
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xd8, 0xff, 0xff, 0xff, 0x22
	.cfi_offset 6, -16
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xf0, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe8, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x22
..LN12464:
                                # LOE
..B19.37:                       # Preds ..B19.17                # Infreq
..LN12465:
	.loc    1  889  is_stmt 1
        movl      $.L_2__STRING.1, %edi                         #889.4
..LN12466:
        vzeroupper                                              #889.4
..LN12467:
        vmovsd    %xmm9, 48(%rsp)                               #889.4
..LN12468:
        vmovsd    %xmm10, 56(%rsp)                              #889.4
..LN12469:
        vmovsd    %xmm11, 464(%rsp)                             #889.4
..LN12470:
        vmovsd    %xmm12, 472(%rsp)                             #889.4
..LN12471:
        vmovsd    %xmm13, 880(%rsp)                             #889.4
..LN12472:
        vmovsd    %xmm2, 888(%rsp)                              #889.4
..LN12473:
        vmovsd    %xmm5, 896(%rsp)                              #889.4
..LN12474:
        vmovsd    %xmm8, 904(%rsp)                              #889.4
..LN12475:
        vmovsd    %xmm7, 912(%rsp)                              #889.4
..LN12476:
        vmovsd    %xmm6, 920(%rsp)                              #889.4
..LN12477:
        vmovsd    %xmm1, 928(%rsp)                              #889.4
..LN12478:
        vmovsd    %xmm4, 936(%rsp)                              #889.4
..___tag_value_clip_2dx2d.1117:
..LN12479:
#       error_handler(const char *)
        call      error_handler                                 #889.4
..___tag_value_clip_2dx2d.1118:
..LN12480:
                                # LOE rbx r13 r14 r15 r12d
..B19.42:                       # Preds ..B19.37                # Infreq
..LN12481:
        movq      16(%rbp), %rsi                                #
..LN12482:
        movq      24(%rbp), %rax                                #
..LN12483:
        vmovsd    936(%rsp), %xmm4                              #
..LN12484:
        vmovsd    928(%rsp), %xmm1                              #
..LN12485:
        vmovsd    920(%rsp), %xmm6                              #
..LN12486:
        vmovsd    912(%rsp), %xmm7                              #
..LN12487:
        vmovsd    904(%rsp), %xmm8                              #
..LN12488:
        vmovsd    896(%rsp), %xmm5                              #
..LN12489:
        vmovsd    888(%rsp), %xmm2                              #
..LN12490:
        vmovsd    880(%rsp), %xmm13                             #
..LN12491:
        vmovsd    472(%rsp), %xmm12                             #
..LN12492:
        vmovsd    464(%rsp), %xmm11                             #
..LN12493:
        vmovsd    56(%rsp), %xmm10                              #
..LN12494:
        vmovsd    48(%rsp), %xmm9                               #
..LN12495:
        vmovsd    .L_2il0floatpacket.10(%rip), %xmm3            #
..LN12496:
        vmovsd    .L_2il0floatpacket.11(%rip), %xmm0            #
..LN12497:
        jmp       ..B19.18      # Prob 100%                     #
..LN12498:
                                # LOE rax rbx rsi r13 r14 r15 r12d xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm8 xmm9 xmm10 xmm11 xmm12 xmm13
..B19.39:                       # Preds ..B19.2                 # Infreq
..LN12499:
	.loc    1  862  is_stmt 1
        xorl      %edx, %edx                                    #862.3
..LN12500:
        jmp       ..B19.6       # Prob 100%                     #862.3
..LN12501:
        .align    16,0x90
	.cfi_endproc
..LN12502:
                                # LOE rax rdx rcx rbx rsi rdi r8 r9 r12 r13 r14 r15
..LN12503:
# mark_end;
	.type	clip_2dx2d,@function
	.size	clip_2dx2d,.-clip_2dx2d
..LNclip_2dx2d.12504:
.LNclip_2dx2d:
	.data
# -- End  clip_2dx2d
	.text
.L_2__routine_start_poly_ctrlat_19:
# -- Begin  poly_ctrlat
	.text
# mark_begin;
       .align    16,0x90
	.globl poly_ctrlat
# --- poly_ctrlat(const double *, const double *, int)
poly_ctrlat:
# parameter 1(x): %rdi
# parameter 2(y): %rsi
# parameter 3(n): %edx
..B20.1:                        # Preds ..B20.0
	.cfi_startproc
..___tag_value_poly_ctrlat.1123:
..L1124:
                                                       #924.1
..LN12505:
	.loc    1  924  is_stmt 1
        pushq     %rbp                                          #924.1
	.cfi_def_cfa_offset 16
..LN12506:
        movq      %rsp, %rbp                                    #924.1
	.cfi_def_cfa 6, 16
	.cfi_offset 6, -16
..LN12507:
        andq      $-32, %rsp                                    #924.1
..LN12508:
        subq      $1024, %rsp                                   #924.1
..LN12509:
	.loc    1  928  prologue_end  is_stmt 1
        xorl      %r8d, %r8d                                    #928.3
..LN12510:
	.loc    1  929  is_stmt 1
        xorl      %ecx, %ecx                                    #929.22
..LN12511:
	.loc    1  925  is_stmt 1
        vxorpd    %xmm7, %xmm7, %xmm7                           #925.17
..LN12512:
	.loc    1  929  is_stmt 1
        xorl      %eax, %eax                                    #929.22
..LN12513:
	.loc    1  925  is_stmt 1
        vmovapd   %xmm7, %xmm8                                  #925.17
..LN12514:
	.loc    1  928  is_stmt 1
        testl     %edx, %edx                                    #928.14
..LN12515:
        jle       ..B20.33      # Prob 9%                       #928.14
..LN12516:
                                # LOE rbx rsi rdi r12 r13 r14 r15 eax edx ecx r8d xmm7 xmm8
..B20.2:                        # Preds ..B20.1
..LN12517:
	.loc    1  929  is_stmt 1
        movl      $8, %r9d                                      #929.17
..LN12518:
	.loc    1  928  is_stmt 1
        lea       63(%rdx), %r10d                               #928.3
..LN12519:
	.loc    1  923  is_stmt 1
        vmovd     %edx, %xmm1                                   #923.8
..LN12520:
        vpbroadcastd %xmm1, %ymm5                               #923.8
..LN12521:
	.loc    1  928  is_stmt 1
        shrl      $6, %r10d                                     #928.3
..LN12522:
	.loc    1  929  is_stmt 1
        vmovd     %r9d, %xmm0                                   #929.17
..LN12523:
	.loc    1  939  is_stmt 1
        xorl      %r9d, %r9d                                    #939.30
..LN12524:
	.loc    1  929  is_stmt 1
        vpbroadcastd %xmm0, %ymm6                               #929.17
..LN12525:
	.loc    1  937  is_stmt 1
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm4             #937.25
..LN12526:
	.loc    1  939  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm3             #939.13
..LN12527:
	.loc    1  940  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm2             #940.13
..LN12528:
	.loc    1  942  is_stmt 1
        vmovsd    .L_2il0floatpacket.6(%rip), %xmm1             #942.21
..LN12529:
	.loc    1  939  is_stmt 1
        vmovsd    .L_2il0floatpacket.4(%rip), %xmm0             #939.30
..LN12530:
        vmovdqu   %ymm5, 800(%rsp)                              #939.30
..LN12531:
        vmovsd    %xmm8, 960(%rsp)                              #939.30
..LN12532:
        vmovdqu   %ymm6, 768(%rsp)                              #939.30
..LN12533:
        movl      %r10d, 976(%rsp)                              #939.30
..LN12534:
        movl      %edx, 888(%rsp)                               #939.30
..LN12535:
        movq      %r12, 832(%rsp)                               #939.30
..LN12536:
        movq      %r13, 840(%rsp)                               #939.30
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0x40, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0x48, 0xff, 0xff, 0xff, 0x22
..LN12537:
        movq      %rsi, %r13                                    #939.30
..LN12538:
        movq      %r14, 848(%rsp)                               #939.30
..LN12539:
        movl      %eax, %esi                                    #939.30
..LN12540:
        movq      %r15, 856(%rsp)                               #939.30
..LN12541:
        movq      %rbx, 864(%rsp)                               #939.30
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0x60, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0x50, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0x58, 0xff, 0xff, 0xff, 0x22
..LN12542:
        movq      %rdi, %rbx                                    #939.30
..LN12543:
        movl      %ecx, %edi                                    #939.30
..LN12544:
        movl      %r8d, %ecx                                    #939.30
..LN12545:
                                # LOE rbx r13 ecx esi edi
..B20.3:                        # Preds ..B20.31 ..B20.2
..L1134:        # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # %s was not vectorized: inner loop was already vectorized
..LN12546:
	.loc    1  928  is_stmt 1
        lea       64(%rdi), %r15d                               #928.3
..LN12547:
        movl      888(%rsp), %edx                               #928.3
..LN12548:
        cmpl      %r15d, %edx                                   #928.3
..LN12549:
        cmovl     %edx, %r15d                                   #928.3
..LN12550:
        movslq    %r15d, %r12                                   #928.3
..LN12551:
        addl      %esi, %r15d                                   #928.3
..LN12552:
        cmpl      $16, %r15d                                    #928.3
..LN12553:
        jl        ..B20.36      # Prob 10%                      #928.3
..LN12554:
                                # LOE rbx r12 r13 ecx esi edi r15d
..B20.4:                        # Preds ..B20.3
..LN12555:
	.loc    1  934  is_stmt 1
        movslq    %edi, %rdi                                    #934.12
..LN12556:
	.loc    1  928  is_stmt 1
        movl      %r15d, %edx                                   #928.3
..LN12557:
        andl      $-16, %edx                                    #928.3
..LN12558:
        xorl      %r11d, %r11d                                  #928.3
..LN12559:
        movslq    %edx, %r9                                     #928.3
..LN12560:
	.loc    1  934  is_stmt 1
        lea       (%r13,%rdi,8), %r10                           #934.12
..LN12561:
                                # LOE rbx r9 r10 r11 r12 r13 edx ecx esi edi r15d
..B20.5:                        # Preds ..B20.5 ..B20.4
..L1135:        # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS UNROLLED BY 4
                # LOOP WAS STRIPMINED BY 64
                # LOOP WAS VECTORIZED
                # VECTORIZATION HAS UNALIGNED MEMORY REFERENCES
                # VECTORIZATION SPEEDUP COEFFECIENT 3.863281
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 0.140625
                # MAIN VECTOR TYPE: 64-bits floating point
..LN12562:
        vmovupd   (%r10,%r11,8), %ymm0                          #934.12
..LN12563:
        vmovupd   32(%r10,%r11,8), %ymm1                        #934.12
..LN12564:
        vmovupd   64(%r10,%r11,8), %ymm2                        #934.12
..LN12565:
        vmovupd   96(%r10,%r11,8), %ymm3                        #934.12
..LN12566:
        vmovupd   %ymm0, (%rsp,%r11,8)                          #934.5
..LN12567:
        vmovupd   %ymm1, 32(%rsp,%r11,8)                        #934.5
..LN12568:
        vmovupd   %ymm2, 64(%rsp,%r11,8)                        #934.5
..LN12569:
        vmovupd   %ymm3, 96(%rsp,%r11,8)                        #934.5
..LN12570:
	.loc    1  928  is_stmt 1
        addq      $16, %r11                                     #928.3
..LN12571:
        cmpq      %r9, %r11                                     #928.3
..LN12572:
        jb        ..B20.5       # Prob 82%                      #928.3
..LN12573:
                                # LOE rbx r9 r10 r11 r12 r13 edx ecx esi edi r15d
..B20.6:                        # Preds ..B20.5
..LN12574:
        lea       1(%rdx), %r9d                                 #928.3
..LN12575:
        cmpl      %r9d, %r15d                                   #928.3
..LN12576:
        jb        ..B20.16      # Prob 50%                      #928.3
..LN12577:
                                # LOE rbx r12 r13 edx ecx esi edi r15d
..B20.7:                        # Preds ..B20.6 ..B20.36
..LN12578:
        movslq    %edx, %r10                                    #928.3
..LN12579:
        movslq    %r15d, %r8                                    #928.3
..LN12580:
        subq      %r10, %r8                                     #928.3
..LN12581:
        cmpq      $4, %r8                                       #928.3
..LN12582:
        jl        ..B20.35      # Prob 10%                      #928.3
..LN12583:
                                # LOE rbx r8 r10 r12 r13 edx ecx esi edi r15d
..B20.8:                        # Preds ..B20.7
..LN12584:
	.loc    1  934  is_stmt 1
        movslq    %edi, %r9                                     #934.12
..LN12585:
	.loc    1  928  is_stmt 1
        movl      %r8d, %eax                                    #928.3
..LN12586:
	.loc    1  934  is_stmt 1
        movslq    %edx, %rdx                                    #934.12
..LN12587:
	.loc    1  928  is_stmt 1
        andl      $-4, %eax                                     #928.3
..LN12588:
	.loc    1  934  is_stmt 1
        addq      %rdx, %r9                                     #934.12
..LN12589:
	.loc    1  928  is_stmt 1
        xorl      %r11d, %r11d                                  #928.3
..LN12590:
        movslq    %eax, %rax                                    #928.3
..LN12591:
        lea       (%rsp,%r10,8), %r14                           #
..LN12592:
	.loc    1  934  is_stmt 1
        lea       (%r13,%r9,8), %r9                             #934.12
..LN12593:
                                # LOE rax rbx r8 r9 r10 r11 r12 r13 r14 edx ecx esi edi r15d
..B20.9:                        # Preds ..B20.9 ..B20.8
..L1136:        # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS STRIPMINED BY 64
                # LOOP WAS VECTORIZED
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION HAS UNALIGNED MEMORY REFERENCES
                # VECTORIZATION SPEEDUP COEFFECIENT 1.875000
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 2.000000
                # MAIN VECTOR TYPE: 64-bits floating point
..LN12594:
        vmovupd   (%r9,%r11,8), %ymm0                           #934.12
..LN12595:
        vmovupd   %ymm0, (%r14,%r11,8)                          #934.5
..LN12596:
	.loc    1  928  is_stmt 1
        addq      $4, %r11                                      #928.3
..LN12597:
        cmpq      %rax, %r11                                    #928.3
..LN12598:
        jb        ..B20.9       # Prob 82%                      #928.3
..LN12599:
                                # LOE rax rbx r8 r9 r10 r11 r12 r13 r14 edx ecx esi edi r15d
..B20.11:                       # Preds ..B20.9 ..B20.35
..LN12600:
        cmpq      %r8, %rax                                     #928.3
..LN12601:
        jae       ..B20.15      # Prob 9%                       #928.3
..LN12602:
                                # LOE rax rbx r8 r10 r12 r13 edx ecx esi edi r15d
..B20.12:                       # Preds ..B20.11
..LN12603:
	.loc    1  934  is_stmt 1
        movslq    %edx, %rdx                                    #934.12
..LN12604:
        lea       (%rsp,%r10,8), %r9                            #
..LN12605:
        movslq    %edi, %r10                                    #934.12
..LN12606:
        addq      %rdx, %r10                                    #934.12
..LN12607:
        lea       (%r13,%r10,8), %rdx                           #934.12
..LN12608:
                                # LOE rax rdx rbx r8 r9 r12 r13 ecx esi edi r15d
..B20.13:                       # Preds ..B20.13 ..B20.12
..L1137:        # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 1
                # LOOP WAS STRIPMINED BY 64
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 1.875000
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 4
                # NORMALIZED VECTORIZATION OVERHEAD 2.000000
..LN12609:
        movq      (%rdx,%rax,8), %r10                           #934.12
..LN12610:
        movq      %r10, (%r9,%rax,8)                            #934.5
..LN12611:
	.loc    1  928  is_stmt 1
        incq      %rax                                          #928.3
..LN12612:
        cmpq      %r8, %rax                                     #928.3
..LN12613:
        jb        ..B20.13      # Prob 82%                      #928.3
..LN12614:
                                # LOE rax rdx rbx r8 r9 r12 r13 ecx esi edi r15d
..B20.15:                       # Preds ..B20.13 ..B20.36 ..B20.11
..LN12615:
        cmpl      $8, %r15d                                     #928.3
..LN12616:
        jl        ..B20.34      # Prob 10%                      #928.3
..LN12617:
                                # LOE rbx r12 r13 ecx esi edi r15d
..B20.16:                       # Preds ..B20.6 ..B20.15
..LN12618:
        movl      %r15d, %r14d                                  #928.3
..LN12619:
        xorl      %eax, %eax                                    #928.3
..LN12620:
        andl      $-8, %r14d                                    #928.3
..LN12621:
	.loc    1  929  is_stmt 1
        lea       1(%rdi), %edx                                 #929.17
..LN12622:
	.loc    1  928  is_stmt 1
        movslq    %r14d, %r14                                   #928.3
..LN12623:
        movq      %rbx, 872(%rsp)                               #928.3
..LN12624:
        movl      %ecx, %ebx                                    #928.3
..LN12625:
        movq      %r13, 880(%rsp)                               #928.3
..LN12626:
        movq      %rax, %r13                                    #928.3
..LN12627:
	.loc    1  929  is_stmt 1
        vmovd     %edx, %xmm0                                   #929.17
..LN12628:
        vpbroadcastd %xmm0, %ymm1                               #929.17
..LN12629:
        vpaddd    .L_2il0floatpacket.7(%rip), %ymm1, %ymm8      #929.17
..LN12630:
	.loc    1  928  is_stmt 1
        vmovdqu   800(%rsp), %ymm9                              #928.3
..LN12631:
        vmovdqu   768(%rsp), %ymm10                             #928.3
..LN12632:
                                # LOE r12 r13 r14 ebx esi edi r15d ymm8 ymm9 ymm10
..B20.17:                       # Preds ..B20.39 ..B20.16
..L1138:        # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS STRIPMINED BY 64
                # LOOP WAS VECTORIZED
                # VECTORIZATION SPEEDUP COEFFECIENT 1.774414
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 8
                # NORMALIZED VECTORIZATION OVERHEAD 0.017578
                # MAIN VECTOR TYPE: 32-bits integer
..LN12633:
	.loc    1  929  is_stmt 1
        vmovdqa   %ymm8, %ymm0                                  #929.22
..LN12634:
        vmovdqa   %ymm9, %ymm1                                  #929.22
..LN12635:
        call      __svml_irem8                                  #929.12
..LN12636:
                                # LOE r12 r13 r14 ebx esi edi r15d ymm0 ymm8 ymm9 ymm10
..B20.39:                       # Preds ..B20.17
..LN12637:
        vmovdqu   %ymm0, 512(%rsp,%r13,4)                       #929.12
..LN12638:
	.loc    1  928  is_stmt 1
        addq      $8, %r13                                      #928.3
..LN12639:
	.loc    1  929  is_stmt 1
        vpaddd    %ymm10, %ymm8, %ymm8                          #929.17
..LN12640:
	.loc    1  928  is_stmt 1
        cmpq      %r14, %r13                                    #928.3
..LN12641:
        jb        ..B20.17      # Prob 82%                      #928.3
..LN12642:
                                # LOE r12 r13 r14 ebx esi edi r15d ymm8 ymm9 ymm10
..B20.18:                       # Preds ..B20.39
..LN12643:
        movq      880(%rsp), %r13                               #
..LN12644:
        movl      %ebx, %ecx                                    #
..LN12645:
        movq      872(%rsp), %rbx                               #
..LN12646:
                                # LOE rbx r12 r13 r14 ecx esi edi r15d
..B20.19:                       # Preds ..B20.18 ..B20.34
..LN12647:
        movl      %r14d, %r10d                                  #928.3
..LN12648:
	.loc    1  929  is_stmt 1
        lea       1(%rdi,%r10), %r9d                            #929.17
..LN12649:
	.loc    1  928  is_stmt 1
        cmpl      %r15d, %r10d                                  #928.3
..LN12650:
        jae       ..B20.23      # Prob 9%                       #928.3
..LN12651:
                                # LOE rbx r12 r13 r14 ecx esi edi r9d r10d r15d
..B20.20:                       # Preds ..B20.19
..LN12652:
        movl      888(%rsp), %r11d                              #
..LN12653:
                                # LOE rbx r12 r13 r14 ecx esi edi r9d r10d r11d r15d
..B20.21:                       # Preds ..B20.21 ..B20.20
..L1139:        # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 2
                # LOOP WAS UNROLLED BY 1
                # LOOP WAS STRIPMINED BY 64
                # REMAINDER LOOP FOR VECTORIZATION
                # VECTORIZATION SPEEDUP COEFFECIENT 1.774414
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
                # VECTOR LENGTH 8
                # NORMALIZED VECTORIZATION OVERHEAD 0.017578
..LN12654:
	.loc    1  929  is_stmt 1
        movl      %r9d, %eax                                    #929.22
..LN12655:
        cltd                                                    #929.22
..LN12656:
        idivl     %r11d                                         #929.22
..LN12657:
	.loc    1  928  is_stmt 1
        incl      %r10d                                         #928.3
..LN12658:
        incl      %r9d                                          #928.3
..LN12659:
	.loc    1  929  is_stmt 1
        movl      %edx, 512(%rsp,%r14,4)                        #929.22
..LN12660:
	.loc    1  928  is_stmt 1
        incq      %r14                                          #928.3
..LN12661:
        cmpl      %r15d, %r10d                                  #928.3
..LN12662:
        jb        ..B20.21      # Prob 82%                      #928.3
..LN12663:
                                # LOE rbx r12 r13 r14 ecx esi edi r9d r10d r11d r15d
..B20.23:                       # Preds ..B20.21 ..B20.19
..LN12664:
        movslq    %ecx, %r15                                    #928.3
..LN12665:
        xorl      %r14d, %r14d                                  #928.3
..LN12666:
        shlq      $6, %r15                                      #928.3
..LN12667:
        negq      %r15                                          #928.3
..LN12668:
        addq      %r12, %r15                                    #928.3
..LN12669:
        je        ..B20.31      # Prob 9%                       #928.3
..LN12670:
                                # LOE rbx r13 r14 r15 ecx esi edi
..B20.24:                       # Preds ..B20.23
..LN12671:
	.loc    1  930  is_stmt 1
        movslq    %edi, %rdi                                    #930.24
..LN12672:
        movl      %esi, 912(%rsp)                               #930.24
..LN12673:
        movl      %edi, 904(%rsp)                               #930.24
..LN12674:
        movl      %ecx, 896(%rsp)                               #930.24
..LN12675:
        lea       (%rbx,%rdi,8), %r12                           #930.24
..LN12676:
                                # LOE rbx r12 r13 r14 r15
..B20.25:                       # Preds ..B20.29 ..B20.24
..L1140:        # optimization report
                # PEELED LOOP
                # LOOP WAS DISTRIBUTED, CHUNK 3
                # LOOP WAS STRIPMINED BY 64
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN12677:
	.loc    1  933  is_stmt 1
        movslq    512(%rsp,%r14,4), %rax                        #933.5
..LN12678:
	.loc    1  938  is_stmt 1
        vxorpd    %xmm7, %xmm7, %xmm7                           #938.18
..LN12679:
	.loc    1  937  is_stmt 1
        vmovsd    (%rsp,%r14,8), %xmm1                          #937.5
..LN12680:
        vmovsd    %xmm1, 1000(%rsp)                             #937.5
..LN12681:
	.loc    1  933  is_stmt 1
        vmovsd    (%r13,%rax,8), %xmm2                          #933.12
..LN12682:
	.loc    1  930  is_stmt 1
        vmovsd    (%rbx,%rax,8), %xmm6                          #930.18
..LN12683:
	.loc    1  935  is_stmt 1
        vsubsd    %xmm2, %xmm1, %xmm4                           #935.17
..LN12684:
	.loc    1  937  is_stmt 1
        vaddsd    %xmm1, %xmm2, %xmm0                           #937.19
..LN12685:
	.loc    1  930  is_stmt 1
        vsubsd    (%r12,%r14,8), %xmm6, %xmm1                   #930.24
..LN12686:
	.loc    1  937  is_stmt 1
        vmovsd    .L_2il0floatpacket.1(%rip), %xmm3             #937.25
..LN12687:
	.loc    1  936  is_stmt 1
        vmulsd    %xmm4, %xmm3, %xmm5                           #936.14
..LN12688:
	.loc    1  938  is_stmt 1
        vucomisd  %xmm7, %xmm1                                  #938.18
..LN12689:
	.loc    1  937  is_stmt 1
        vmulsd    %xmm0, %xmm3, %xmm0                           #937.25
..LN12690:
	.loc    1  933  is_stmt 1
        vmovsd    %xmm2, 984(%rsp)                              #933.12
..LN12691:
	.loc    1  936  is_stmt 1
        vmovsd    %xmm5, 992(%rsp)                              #936.14
..LN12692:
	.loc    1  938  is_stmt 1
        jp        ..B20.26      # Prob 0%                       #938.18
..LN12693:
        je        ..B20.29      # Prob 16%                      #938.18
..LN12694:
                                # LOE rbx r12 r13 r14 r15 xmm0 xmm1 xmm5 ymm5 zmm5
..B20.26:                       # Preds ..B20.25
..LN12695:
	.loc    1  939  is_stmt 1
        vcomisd   .L_2il0floatpacket.0(%rip), %xmm1             #939.20
..LN12696:
        vmovsd    .L_2il0floatpacket.4(%rip), %xmm2             #939.30
..LN12697:
        vsubsd    %xmm2, %xmm1, %xmm3                           #939.30
..LN12698:
        ja        ..L1141       # Prob 50%                      #939.20
..LN12699:
        vmovaps   %xmm1, %xmm3                                  #939.20
..L1141:                                                        #
..LN12700:
	.loc    1  940  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm1             #940.20
..LN12701:
        vaddsd    %xmm2, %xmm3, %xmm4                           #940.30
..LN12702:
        vcomisd   %xmm3, %xmm1                                  #940.20
..LN12703:
	.loc    1  942  is_stmt 1
        vandpd    .L_2il0floatpacket.9(%rip), %xmm5, %xmm7      #942.10
..LN12704:
        vmovsd    .L_2il0floatpacket.6(%rip), %xmm6             #942.21
..LN12705:
	.loc    1  940  is_stmt 1
        ja        ..L1142       # Prob 50%                      #940.20
..LN12706:
        vmovaps   %xmm3, %xmm4                                  #940.20
..L1142:                                                        #
..LN12707:
        vmovsd    %xmm4, 968(%rsp)                              #940.20
..LN12708:
	.loc    1  942  is_stmt 1
        vcomisd   %xmm7, %xmm6                                  #942.21
..LN12709:
        jbe       ..B20.28      # Prob 50%                      #942.21
..LN12710:
                                # LOE rbx r12 r13 r14 r15 xmm0 xmm4 xmm5 ymm4 ymm5 zmm4 zmm5
..B20.27:                       # Preds ..B20.26
..LN12711:
	.loc    1  943  is_stmt 1
        vzeroupper                                              #943.23
..LN12712:
        call      __libm_sse2_sincos                            #943.23
..LN12713:
                                # LOE rbx r12 r13 r14 r15 xmm0 xmm1
..B20.41:                       # Preds ..B20.27
..LN12714:
        vmovsd    %xmm0, 936(%rsp)                              #943.23
..LN12715:
        vmovsd    %xmm1, 952(%rsp)                              #943.23
..LN12716:
        vmovsd    984(%rsp), %xmm0                              #943.54
..LN12717:
        call      cos                                           #943.54
..LN12718:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B20.40:                       # Preds ..B20.41
..LN12719:
        vmovsd    1000(%rsp), %xmm2                             #943.7
..LN12720:
        vmovapd   %xmm0, %xmm1                                  #943.54
..LN12721:
        vmovsd    952(%rsp), %xmm0                              #943.7
..LN12722:
        vfmadd132sd 936(%rsp), %xmm0, %xmm2                     #943.7
..LN12723:
        vsubsd    %xmm1, %xmm0, %xmm3                           #943.7
..LN12724:
        vmovsd    960(%rsp), %xmm5                              #943.7
..LN12725:
        vaddsd    %xmm3, %xmm2, %xmm4                           #943.7
..LN12726:
        vfnmadd231sd 968(%rsp), %xmm4, %xmm5                    #943.7
..LN12727:
        vmovsd    %xmm5, 960(%rsp)                              #943.7
..LN12728:
        jmp       ..B20.29      # Prob 100%                     #943.7
..LN12729:
                                # LOE rbx r12 r13 r14 r15
..B20.28:                       # Preds ..B20.26
..LN12730:
	.loc    1  945  is_stmt 1
        vzeroupper                                              #945.40
..LN12731:
        call      __libm_sse2_sincos                            #945.40
..LN12732:
                                # LOE rbx r12 r13 r14 r15 xmm0 xmm1
..B20.44:                       # Preds ..B20.28
..LN12733:
        vmovsd    %xmm0, 920(%rsp)                              #945.40
..LN12734:
        vmovsd    %xmm1, 944(%rsp)                              #945.40
..LN12735:
        vmovsd    992(%rsp), %xmm0                              #945.23
..LN12736:
        call      sin                                           #945.23
..LN12737:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B20.43:                       # Preds ..B20.44
..LN12738:
        vmovsd    %xmm0, 928(%rsp)                              #945.23
..LN12739:
        vmovsd    984(%rsp), %xmm0                              #945.72
..LN12740:
        call      cos                                           #945.72
..LN12741:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B20.42:                       # Preds ..B20.43
..LN12742:
        vmovapd   %xmm0, %xmm1                                  #945.72
..LN12743:
        vmovsd    928(%rsp), %xmm0                              #945.32
..LN12744:
        vdivsd    992(%rsp), %xmm0, %xmm2                       #945.32
..LN12745:
        vmovsd    944(%rsp), %xmm3                              #945.7
..LN12746:
        vmovsd    1000(%rsp), %xmm4                             #945.7
..LN12747:
        vfmadd132sd 920(%rsp), %xmm3, %xmm4                     #945.7
..LN12748:
        vfmsub213sd %xmm1, %xmm2, %xmm3                         #945.7
..LN12749:
        vmovsd    960(%rsp), %xmm5                              #945.7
..LN12750:
        vfmadd213sd %xmm3, %xmm2, %xmm4                         #945.7
..LN12751:
        vfnmadd231sd 968(%rsp), %xmm4, %xmm5                    #945.7
..LN12752:
        vmovsd    %xmm5, 960(%rsp)                              #945.7
..LN12753:
                                # LOE rbx r12 r13 r14 r15
..B20.29:                       # Preds ..B20.40 ..B20.42 ..B20.25
..LN12754:
	.loc    1  928  is_stmt 1
        incq      %r14                                          #928.3
..LN12755:
        cmpq      %r15, %r14                                    #928.3
..LN12756:
        jb        ..B20.25      # Prob 82%                      #928.3
..LN12757:
                                # LOE rbx r12 r13 r14 r15
..B20.30:                       # Preds ..B20.29
..LN12758:
        movl      912(%rsp), %esi                               #
..LN12759:
        movl      904(%rsp), %edi                               #
..LN12760:
        movl      896(%rsp), %ecx                               #
..LN12761:
                                # LOE rbx r13 ecx esi edi
..B20.31:                       # Preds ..B20.30 ..B20.23
..LN12762:
        incl      %ecx                                          #928.3
..LN12763:
        addl      $64, %edi                                     #928.3
..LN12764:
        addl      $-64, %esi                                    #928.3
..LN12765:
        cmpl      976(%rsp), %ecx                               #928.3
..LN12766:
        jb        ..B20.3       # Prob 82%                      #928.3
..LN12767:
                                # LOE rbx r13 ecx esi edi
..B20.32:                       # Preds ..B20.31
..LN12768:
        vmovsd    960(%rsp), %xmm8                              #
..LN12769:
        movq      832(%rsp), %r12                               #
	.cfi_restore 12
..LN12770:
        movq      840(%rsp), %r13                               #
	.cfi_restore 13
..LN12771:
        movq      848(%rsp), %r14                               #
	.cfi_restore 14
..LN12772:
        movq      856(%rsp), %r15                               #
	.cfi_restore 15
..LN12773:
        movq      864(%rsp), %rbx                               #
	.cfi_restore 3
..LN12774:
                                # LOE rbx r12 r13 r14 r15 xmm8
..B20.33:                       # Preds ..B20.32 ..B20.1
..LN12775:
	.loc    1  947  is_stmt 1
        vmulsd    .L_2il0floatpacket.5(%rip), %xmm8, %xmm0      #947.25
..LN12776:
        vzeroupper                                              #947.25
..LN12777:
	.loc    1  947  epilogue_begin  is_stmt 1
        movq      %rbp, %rsp                                    #947.25
..LN12778:
        popq      %rbp                                          #947.25
	.cfi_def_cfa 7, 8
	.cfi_restore 6
..LN12779:
        ret                                                     #947.25
	.cfi_def_cfa 6, 16
	.cfi_escape 0x10, 0x03, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0x60, 0xff, 0xff, 0xff, 0x22
	.cfi_offset 6, -16
	.cfi_escape 0x10, 0x0c, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0x40, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0d, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0x48, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0e, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0x50, 0xff, 0xff, 0xff, 0x22
	.cfi_escape 0x10, 0x0f, 0x0e, 0x38, 0x1c, 0x0d, 0xe0, 0xff, 0xff, 0xff, 0x1a, 0x0d, 0x58, 0xff, 0xff, 0xff, 0x22
..LN12780:
                                # LOE
..B20.34:                       # Preds ..B20.15                # Infreq
..LN12781:
	.loc    1  928  is_stmt 1
        xorl      %r14d, %r14d                                  #928.3
..LN12782:
        jmp       ..B20.19      # Prob 100%                     #928.3
..LN12783:
                                # LOE rbx r12 r13 r14 ecx esi edi r15d
..B20.35:                       # Preds ..B20.7                 # Infreq
..LN12784:
        xorl      %eax, %eax                                    #928.3
..LN12785:
        jmp       ..B20.11      # Prob 100%                     #928.3
..LN12786:
                                # LOE rax rbx r8 r10 r12 r13 edx ecx esi edi r15d
..B20.36:                       # Preds ..B20.3                 # Infreq
..LN12787:
        xorl      %edx, %edx                                    #928.3
..LN12788:
        cmpl      $1, %r15d                                     #928.3
..LN12789:
        jae       ..B20.7       # Prob 50%                      #928.3
..LN12790:
        jmp       ..B20.15      # Prob 100%                     #928.3
..LN12791:
        .align    16,0x90
	.cfi_endproc
..LN12792:
                                # LOE rbx r12 r13 edx ecx esi edi r15d
..LN12793:
# mark_end;
	.type	poly_ctrlat,@function
	.size	poly_ctrlat,.-poly_ctrlat
..LNpoly_ctrlat.12794:
.LNpoly_ctrlat:
	.data
# -- End  poly_ctrlat
	.text
.L_2__routine_start_poly_ctrlon_20:
# -- Begin  poly_ctrlon
	.text
# mark_begin;
       .align    16,0x90
	.globl poly_ctrlon
# --- poly_ctrlon(const double *, const double *, int, double)
poly_ctrlon:
# parameter 1(x): %rdi
# parameter 2(y): %rsi
# parameter 3(n): %edx
# parameter 4(clon): %xmm0
..B21.1:                        # Preds ..B21.0
	.cfi_startproc
..___tag_value_poly_ctrlon.1161:
..L1162:
                                                       #955.1
..LN12795:
	.loc    1  955  is_stmt 1
        subq      $120, %rsp                                    #955.1
	.cfi_def_cfa_offset 128
..LN12796:
        movl      %edx, %r8d                                    #955.1
..LN12797:
	.loc    1  960  prologue_end  is_stmt 1
        xorl      %ecx, %ecx                                    #960.8
..LN12798:
	.loc    1  955  is_stmt 1
        vmovapd   %xmm0, %xmm5                                  #955.1
..LN12799:
	.loc    1  956  is_stmt 1
        vxorpd    %xmm4, %xmm4, %xmm4                           #956.17
..LN12800:
	.loc    1  960  is_stmt 1
        xorl      %edx, %edx                                    #960.8
..LN12801:
	.loc    1  956  is_stmt 1
        vmovapd   %xmm4, %xmm6                                  #956.17
..LN12802:
	.loc    1  960  is_stmt 1
        testl     %r8d, %r8d                                    #960.14
..LN12803:
        jle       ..B21.9       # Prob 10%                      #960.14
..LN12804:
                                # LOE rdx rcx rbx rbp rsi rdi r12 r13 r14 r15 r8d xmm4 xmm5 xmm6
..B21.2:                        # Preds ..B21.1
..LN12805:
        movslq    %r8d, %rax                                    #960.3
..LN12806:
        vmovsd    %xmm6, 48(%rsp)                               #960.3
..LN12807:
        vmovsd    %xmm5, 56(%rsp)                               #960.3
..LN12808:
        movq      %r12, 40(%rsp)                                #960.3
	.cfi_offset 12, -88
..LN12809:
        movq      %rsi, %r12                                    #960.3
..LN12810:
        movq      %r13, 32(%rsp)                                #960.3
	.cfi_offset 13, -96
..LN12811:
        movl      %r8d, %r13d                                   #960.3
..LN12812:
        movq      %r14, 24(%rsp)                                #960.3
	.cfi_offset 14, -104
..LN12813:
        movq      %rdx, %r14                                    #960.3
..LN12814:
        movq      %r15, 16(%rsp)                                #960.3
	.cfi_offset 15, -112
..LN12815:
        movq      %rcx, %r15                                    #960.3
..LN12816:
        movq      %rbx, 8(%rsp)                                 #960.3
	.cfi_offset 3, -120
..LN12817:
        movq      %rax, %rbx                                    #960.3
..LN12818:
        movq      %rbp, (%rsp)                                  #960.3
	.cfi_offset 6, -128
..LN12819:
        movq      %rdi, %rbp                                    #960.3
..LN12820:
                                # LOE rbx rbp r12 r14 r15 r13d
..B21.3:                        # Preds ..B21.7 ..B21.2
..L1171:        # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN12821:
	.loc    1  961  is_stmt 1
        movl      %r15d, %eax                                   #961.22
..LN12822:
        incl      %eax                                          #961.17
..LN12823:
        cltd                                                    #961.22
..LN12824:
        idivl     %r13d                                         #961.22
..LN12825:
	.loc    1  965  is_stmt 1
        vmovsd    (%r14,%rbp), %xmm3                            #965.14
..LN12826:
	.loc    1  970  is_stmt 1
        vxorpd    %xmm5, %xmm5, %xmm5                           #970.20
..LN12827:
	.loc    1  961  is_stmt 1
        movslq    %edx, %rdx                                    #961.22
..LN12828:
	.loc    1  967  is_stmt 1
        vmovsd    (%r14,%r12), %xmm1                            #967.12
..LN12829:
	.loc    1  965  is_stmt 1
        vmovsd    %xmm3, 80(%rsp)                               #965.14
..LN12830:
	.loc    1  967  is_stmt 1
        vmovsd    %xmm1, 104(%rsp)                              #967.12
..LN12831:
	.loc    1  964  is_stmt 1
        vmovsd    (%rbp,%rdx,8), %xmm2                          #964.14
..LN12832:
	.loc    1  966  is_stmt 1
        vmovsd    (%r12,%rdx,8), %xmm0                          #966.12
..LN12833:
	.loc    1  968  is_stmt 1
        vsubsd    %xmm3, %xmm2, %xmm4                           #968.21
..LN12834:
	.loc    1  964  is_stmt 1
        vmovsd    %xmm2, 88(%rsp)                               #964.14
..LN12835:
	.loc    1  966  is_stmt 1
        vmovsd    %xmm0, 96(%rsp)                               #966.12
..LN12836:
	.loc    1  968  is_stmt 1
        vmovsd    %xmm4, 72(%rsp)                               #968.21
..LN12837:
	.loc    1  970  is_stmt 1
        vucomisd  %xmm5, %xmm4                                  #970.20
..LN12838:
        jp        ..B21.4       # Prob 0%                       #970.20
..LN12839:
        je        ..B21.7       # Prob 16%                      #970.20
..LN12840:
                                # LOE rbx rbp r12 r14 r15 r13d xmm0 ymm0 zmm0
..B21.4:                        # Preds ..B21.3
..LN12841:
	.loc    1  972  is_stmt 1
        call      __libm_sse2_sincos                            #972.5
..LN12842:
        vfmadd213sd 96(%rsp), %xmm0, %xmm1                      #972.5
..LN12843:
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm1, %xmm6      #972.35
..LN12844:
        vmovsd    %xmm6, 64(%rsp)                               #972.35
..LN12845:
	.loc    1  973  is_stmt 1
        vmovsd    104(%rsp), %xmm0                              #973.5
..LN12846:
        call      __libm_sse2_sincos                            #973.5
..LN12847:
	.loc    1  977  is_stmt 1
        vmovsd    72(%rsp), %xmm5                               #977.36
..LN12848:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm10            #977.22
..LN12849:
        vcomisd   %xmm10, %xmm5                                 #977.22
..LN12850:
	.loc    1  973  is_stmt 1
        vfmadd213sd 104(%rsp), %xmm0, %xmm1                     #973.5
..LN12851:
	.loc    1  977  is_stmt 1
        vmovsd    .L_2il0floatpacket.4(%rip), %xmm12            #977.36
..LN12852:
	.loc    1  978  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm13            #978.22
..LN12853:
	.loc    1  977  is_stmt 1
        vsubsd    %xmm12, %xmm5, %xmm4                          #977.36
..LN12854:
	.loc    1  973  is_stmt 1
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm1, %xmm6      #973.35
..LN12855:
	.loc    1  977  is_stmt 1
        ja        ..L1172       # Prob 50%                      #977.22
..LN12856:
        vmovaps   %xmm5, %xmm4                                  #977.22
..L1172:                                                        #
..LN12857:
	.loc    1  978  is_stmt 1
        vcomisd   %xmm4, %xmm13                                 #978.22
..LN12858:
        vaddsd    %xmm12, %xmm4, %xmm5                          #978.36
..LN12859:
	.loc    1  979  is_stmt 1
        vmovsd    56(%rsp), %xmm9                               #979.20
..LN12860:
        vmovsd    88(%rsp), %xmm3                               #979.20
..LN12861:
	.loc    1  978  is_stmt 1
        ja        ..L1173       # Prob 50%                      #978.22
..LN12862:
        vmovaps   %xmm4, %xmm5                                  #978.22
..L1173:                                                        #
..LN12863:
	.loc    1  982  is_stmt 1
        vmovsd    80(%rsp), %xmm8                               #982.19
..LN12864:
	.loc    1  979  is_stmt 1
        vsubsd    %xmm9, %xmm3, %xmm2                           #979.20
..LN12865:
	.loc    1  982  is_stmt 1
        vsubsd    %xmm9, %xmm8, %xmm11                          #982.19
..LN12866:
	.loc    1  980  is_stmt 1
        vcomisd   %xmm10, %xmm2                                 #980.23
..LN12867:
        vsubsd    %xmm12, %xmm2, %xmm7                          #980.23
..LN12868:
	.loc    1  983  is_stmt 1
        vsubsd    %xmm12, %xmm11, %xmm14                        #983.23
..LN12869:
	.loc    1  980  is_stmt 1
        ja        ..L1174       # Prob 50%                      #980.23
..LN12870:
        vmovaps   %xmm2, %xmm7                                  #980.23
..L1174:                                                        #
..LN12871:
	.loc    1  981  is_stmt 1
        vcomisd   %xmm7, %xmm13                                 #981.23
..LN12872:
        vaddsd    %xmm12, %xmm7, %xmm4                          #981.23
..LN12873:
        ja        ..L1175       # Prob 50%                      #981.23
..LN12874:
        vmovaps   %xmm7, %xmm4                                  #981.23
..L1175:                                                        #
..LN12875:
	.loc    1  983  is_stmt 1
        vcomisd   %xmm10, %xmm11                                #983.23
..LN12876:
        ja        ..L1176       # Prob 50%                      #983.23
..LN12877:
        vmovaps   %xmm11, %xmm14                                #983.23
..L1176:                                                        #
..LN12878:
	.loc    1  984  is_stmt 1
        vcomisd   %xmm14, %xmm13                                #984.23
..LN12879:
        vaddsd    %xmm12, %xmm14, %xmm3                         #984.23
..LN12880:
        ja        ..L1177       # Prob 50%                      #984.23
..LN12881:
        vmovaps   %xmm14, %xmm3                                 #984.23
..L1177:                                                        #
..LN12882:
	.loc    1  986  is_stmt 1
        vsubsd    %xmm4, %xmm3, %xmm15                          #986.19
..LN12883:
        vcvttsd2si %xmm15, %r10d                                #986.19
..LN12884:
        movl      %r10d, %r9d                                   #986.8
..LN12885:
        sarl      $31, %r9d                                     #986.8
..LN12886:
        xorl      %r9d, %r10d                                   #986.8
..LN12887:
        subl      %r9d, %r10d                                   #986.8
..LN12888:
        cmpl      $3, %r10d                                     #986.28
..LN12889:
        jg        ..B21.6       # Prob 50%                      #986.28
..LN12890:
                                # LOE rbx rbp r12 r14 r15 r13d xmm3 xmm4 xmm5 xmm6
..B21.5:                        # Preds ..B21.4
..LN12891:
	.loc    1  987  is_stmt 1
        vmulsd    64(%rsp), %xmm4, %xmm0                        #987.7
..LN12892:
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm5, %xmm1      #987.7
..LN12893:
        vfmadd213sd %xmm0, %xmm3, %xmm6                         #987.7
..LN12894:
        vmovsd    48(%rsp), %xmm2                               #987.7
..LN12895:
        vfnmadd231sd %xmm6, %xmm1, %xmm2                        #987.7
..LN12896:
        vmovsd    %xmm2, 48(%rsp)                               #987.7
..LN12897:
        jmp       ..B21.7       # Prob 100%                     #987.7
..LN12898:
                                # LOE rbx rbp r12 r14 r15 r13d
..B21.6:                        # Preds ..B21.4
..LN12899:
	.loc    1  994  is_stmt 1
        vcvttsd2si %xmm5, %r10d                                 #994.43
..LN12900:
	.loc    1  996  is_stmt 1
        vaddsd    %xmm3, %xmm4, %xmm8                           #996.19
..LN12901:
	.loc    1  993  is_stmt 1
        vxorpd    %xmm7, %xmm7, %xmm7                           #993.2
..LN12902:
	.loc    1  994  is_stmt 1
        movl      %r10d, %r9d                                   #994.39
..LN12903:
	.loc    1  993  is_stmt 1
        vcomisd   %xmm7, %xmm4                                  #993.2
..LN12904:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm0             #993.2
..LN12905:
	.loc    1  994  is_stmt 1
        vxorpd    %xmm11, %xmm11, %xmm11                        #994.39
..LN12906:
	.loc    1  993  is_stmt 1
        ja        ..L1178       # Prob 50%                      #993.2
..LN12907:
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm0             #993.2
..L1178:                                                        #
..LN12908:
	.loc    1  994  is_stmt 1
        vmovsd    64(%rsp), %xmm13                              #994.23
..LN12909:
	.loc    1  995  is_stmt 1
        vsubsd    %xmm0, %xmm4, %xmm2                           #995.34
..LN12910:
        vmulsd    %xmm4, %xmm13, %xmm15                         #995.34
..LN12911:
	.loc    1  994  is_stmt 1
        vsubsd    %xmm13, %xmm6, %xmm9                          #994.23
..LN12912:
	.loc    1  995  is_stmt 1
        vmulsd    %xmm3, %xmm6, %xmm6                           #995.61
..LN12913:
        vaddsd    %xmm0, %xmm3, %xmm3                           #995.61
..LN12914:
	.loc    1  996  is_stmt 1
        vmulsd    %xmm0, %xmm8, %xmm1                           #996.19
..LN12915:
	.loc    1  995  is_stmt 1
        vmulsd    %xmm2, %xmm9, %xmm5                           #995.7
..LN12916:
        vmulsd    %xmm3, %xmm6, %xmm4                           #995.66
..LN12917:
	.loc    1  994  is_stmt 1
        sarl      $31, %r9d                                     #994.39
..LN12918:
        xorl      %r9d, %r10d                                   #994.39
..LN12919:
        subl      %r9d, %r10d                                   #994.39
..LN12920:
        vcvtsi2sd %r10d, %xmm11, %xmm11                         #994.39
..LN12921:
	.loc    1  995  is_stmt 1
        vfnmadd213sd %xmm4, %xmm2, %xmm15                       #995.7
..LN12922:
        vxorpd    .L_2il0floatpacket.8(%rip), %xmm5, %xmm10     #995.7
..LN12923:
	.loc    1  994  is_stmt 1
        vdivsd    %xmm11, %xmm10, %xmm12                        #994.39
..LN12924:
	.loc    1  995  is_stmt 1
        vmovsd    48(%rsp), %xmm0                               #995.7
..LN12925:
	.loc    1  994  is_stmt 1
        vaddsd    %xmm12, %xmm13, %xmm14                        #994.39
..LN12926:
	.loc    1  995  is_stmt 1
        vfnmadd213sd %xmm15, %xmm14, %xmm1                      #995.7
..LN12927:
        vfmadd231sd .L_2il0floatpacket.1(%rip), %xmm1, %xmm0    #995.7
..LN12928:
        vmovsd    %xmm0, 48(%rsp)                               #995.7
..LN12929:
                                # LOE rbx rbp r12 r14 r15 r13d
..B21.7:                        # Preds ..B21.5 ..B21.6 ..B21.3
..LN12930:
	.loc    1  960  is_stmt 1
        incq      %r15                                          #960.16
..LN12931:
        addq      $8, %r14                                      #960.16
..LN12932:
        cmpq      %rbx, %r15                                    #960.14
..LN12933:
        jl        ..B21.3       # Prob 82%                      #960.14
..LN12934:
                                # LOE rbx rbp r12 r14 r15 r13d
..B21.8:                        # Preds ..B21.7
..LN12935:
        vmovsd    48(%rsp), %xmm6                               #
..LN12936:
        movq      40(%rsp), %r12                                #
	.cfi_restore 12
..LN12937:
        movq      32(%rsp), %r13                                #
	.cfi_restore 13
..LN12938:
        movq      24(%rsp), %r14                                #
	.cfi_restore 14
..LN12939:
        movq      16(%rsp), %r15                                #
	.cfi_restore 15
..LN12940:
        movq      8(%rsp), %rbx                                 #
	.cfi_restore 3
..LN12941:
        movq      (%rsp), %rbp                                  #
	.cfi_restore 6
..LN12942:
                                # LOE rbx rbp r12 r13 r14 r15 xmm6
..B21.9:                        # Preds ..B21.8 ..B21.1
..LN12943:
	.loc    1  1000  is_stmt 1
        vmulsd    .L_2il0floatpacket.5(%rip), %xmm6, %xmm0      #1000.25
..LN12944:
	.loc    1  1000  epilogue_begin  is_stmt 1
        addq      $120, %rsp                                    #1000.25
	.cfi_def_cfa_offset 8
..LN12945:
        ret                                                     #1000.25
..LN12946:
        .align    16,0x90
	.cfi_endproc
..LN12947:
                                # LOE
..LN12948:
# mark_end;
	.type	poly_ctrlon,@function
	.size	poly_ctrlon,.-poly_ctrlon
..LNpoly_ctrlon.12949:
.LNpoly_ctrlon:
	.data
# -- End  poly_ctrlon
	.text
.L_2__routine_start_box_ctrlat_21:
# -- Begin  box_ctrlat
	.text
# mark_begin;
       .align    16,0x90
	.globl box_ctrlat
# --- box_ctrlat(double, double, double, double)
box_ctrlat:
# parameter 1(ll_lon): %xmm0
# parameter 2(ll_lat): %xmm1
# parameter 3(ur_lon): %xmm2
# parameter 4(ur_lat): %xmm3
..B22.1:                        # Preds ..B22.0
	.cfi_startproc
..___tag_value_box_ctrlat.1191:
..L1192:
                                                       #1008.1
..LN12950:
	.loc    1  1008  is_stmt 1
        subq      $40, %rsp                                     #1008.1
	.cfi_def_cfa_offset 48
..LN12951:
	.loc    1  1009  prologue_end  is_stmt 1
        vsubsd    %xmm0, %xmm2, %xmm4                           #1009.24
..LN12952:
	.loc    1  1012  is_stmt 1
        vcomisd   .L_2il0floatpacket.0(%rip), %xmm4             #1012.20
..LN12953:
        vsubsd    .L_2il0floatpacket.4(%rip), %xmm4, %xmm6      #1012.34
..LN12954:
        ja        ..L1195       # Prob 50%                      #1012.20
..LN12955:
        vmovaps   %xmm4, %xmm6                                  #1012.20
..L1195:                                                        #
..LN12956:
	.loc    1  1013  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm5             #1013.13
..LN12957:
        vcomisd   %xmm6, %xmm5                                  #1013.20
..LN12958:
        vaddsd    .L_2il0floatpacket.4(%rip), %xmm6, %xmm7      #1013.34
..LN12959:
        ja        ..L1196       # Prob 50%                      #1013.20
..LN12960:
        vmovaps   %xmm6, %xmm7                                  #1013.20
..L1196:                                                        #
..LN12961:
	.loc    1  1008  is_stmt 1
        vmovsd    %xmm3, 32(%rsp)                               #1008.1
..LN12962:
        vmovsd    %xmm1, 16(%rsp)                               #1008.1
..LN12963:
	.loc    1  1013  is_stmt 1
        vmovsd    %xmm7, 24(%rsp)                               #1013.20
..LN12964:
	.loc    1  1015  is_stmt 1
        vmovapd   %xmm3, %xmm0                                  #1015.25
..LN12965:
        call      __libm_sse2_sincos                            #1015.25
..LN12966:
                                # LOE rbx rbp r12 r13 r14 r15 xmm0 xmm1
..B22.5:                        # Preds ..B22.1
..LN12967:
        vmovsd    %xmm0, (%rsp)                                 #1015.25
..LN12968:
        vmovsd    %xmm1, 8(%rsp)                                #1015.25
..LN12969:
        vmovsd    16(%rsp), %xmm0                               #1015.25
..LN12970:
        call      __libm_sse2_sincos                            #1015.25
..LN12971:
                                # LOE rbx rbp r12 r13 r14 r15 xmm0 xmm1
..B22.4:                        # Preds ..B22.5
..LN12972:
        vmovsd    32(%rsp), %xmm3                               #1015.25
..LN12973:
        vmovapd   %xmm1, %xmm2                                  #1015.25
..LN12974:
        vmovsd    8(%rsp), %xmm1                                #1015.25
..LN12975:
        vmovsd    16(%rsp), %xmm4                               #1015.25
..LN12976:
        vfmadd132sd (%rsp), %xmm1, %xmm3                        #1015.25
..LN12977:
        vfmadd213sd %xmm2, %xmm0, %xmm4                         #1015.25
..LN12978:
        vmovsd    .L_2il0floatpacket.12(%rip), %xmm8            #1015.18
..LN12979:
        vsubsd    %xmm4, %xmm3, %xmm5                           #1015.25
..LN12980:
        vmulsd    24(%rsp), %xmm5, %xmm6                        #1015.25
..LN12981:
        vmulsd    %xmm8, %xmm6, %xmm7                           #1015.18
..LN12982:
        vmulsd    %xmm8, %xmm7, %xmm0                           #1015.25
..LN12983:
	.loc    1  1015  epilogue_begin  is_stmt 1
        addq      $40, %rsp                                     #1015.25
	.cfi_def_cfa_offset 8
..LN12984:
        ret                                                     #1015.25
..LN12985:
        .align    16,0x90
	.cfi_endproc
..LN12986:
                                # LOE
..LN12987:
# mark_end;
	.type	box_ctrlat,@function
	.size	box_ctrlat,.-box_ctrlat
..LNbox_ctrlat.12988:
.LNbox_ctrlat:
	.data
# -- End  box_ctrlat
	.text
.L_2__routine_start_box_ctrlon_22:
# -- Begin  box_ctrlon
	.text
# mark_begin;
       .align    16,0x90
	.globl box_ctrlon
# --- box_ctrlon(double, double, double, double, double)
box_ctrlon:
# parameter 1(ll_lon): %xmm0
# parameter 2(ll_lat): %xmm1
# parameter 3(ur_lon): %xmm2
# parameter 4(ur_lat): %xmm3
# parameter 5(clon): %xmm4
..B23.1:                        # Preds ..B23.0
	.cfi_startproc
..___tag_value_box_ctrlon.1202:
..L1203:
                                                       #1023.1
..LN12989:
	.loc    1  1023  is_stmt 1
        subq      $88, %rsp                                     #1023.1
	.cfi_def_cfa_offset 96
..LN12990:
	.loc    1  1040  prologue_end  is_stmt 1
        vsubsd    %xmm0, %xmm2, %xmm5                           #1040.21
..LN12991:
	.loc    1  1023  is_stmt 1
        vmovsd    %xmm4, (%rsp)                                 #1023.1
..LN12992:
        vmovsd    %xmm3, 72(%rsp)                               #1023.1
..LN12993:
        vmovsd    %xmm2, 24(%rsp)                               #1023.1
..LN12994:
        vmovsd    %xmm1, 16(%rsp)                               #1023.1
..LN12995:
        vmovsd    %xmm0, 8(%rsp)                                #1023.1
..LN12996:
	.loc    1  1040  is_stmt 1
        vmovsd    %xmm5, 64(%rsp)                               #1040.21
..LN12997:
	.loc    1  1041  is_stmt 1
        vmovapd   %xmm1, %xmm0                                  #1041.5
..LN12998:
        call      __libm_sse2_sincos                            #1041.5
..LN12999:
                                # LOE rbx rbp r12 r13 r14 r15 xmm0 xmm1
..B23.10:                       # Preds ..B23.1
..LN13000:
	.loc    1  1044  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm10            #1044.15
..LN13001:
        vmovsd    64(%rsp), %xmm3                               #1044.36
..LN13002:
        vcomisd   %xmm10, %xmm3                                 #1044.22
..LN13003:
	.loc    1  1041  is_stmt 1
        vfmadd213sd 16(%rsp), %xmm0, %xmm1                      #1041.5
..LN13004:
	.loc    1  1045  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm13            #1045.15
..LN13005:
	.loc    1  1047  is_stmt 1
        vmovsd    (%rsp), %xmm9                                 #1047.20
..LN13006:
        vmovsd    24(%rsp), %xmm5                               #1047.20
..LN13007:
	.loc    1  1050  is_stmt 1
        vmovsd    8(%rsp), %xmm8                                #1050.19
..LN13008:
	.loc    1  1047  is_stmt 1
        vsubsd    %xmm9, %xmm5, %xmm7                           #1047.20
..LN13009:
	.loc    1  1041  is_stmt 1
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm1, %xmm2      #1041.35
..LN13010:
	.loc    1  1050  is_stmt 1
        vsubsd    %xmm9, %xmm8, %xmm12                          #1050.19
..LN13011:
	.loc    1  1044  is_stmt 1
        vsubsd    .L_2il0floatpacket.4(%rip), %xmm3, %xmm4      #1044.36
..LN13012:
	.loc    1  1048  is_stmt 1
        vsubsd    .L_2il0floatpacket.4(%rip), %xmm7, %xmm6      #1048.23
..LN13013:
	.loc    1  1051  is_stmt 1
        vsubsd    .L_2il0floatpacket.4(%rip), %xmm12, %xmm11    #1051.23
..LN13014:
	.loc    1  1044  is_stmt 1
        ja        ..L1206       # Prob 50%                      #1044.22
..LN13015:
        vmovaps   %xmm3, %xmm4                                  #1044.22
..L1206:                                                        #
..LN13016:
	.loc    1  1045  is_stmt 1
        vcomisd   %xmm4, %xmm13                                 #1045.22
..LN13017:
        vaddsd    .L_2il0floatpacket.4(%rip), %xmm4, %xmm1      #1045.36
..LN13018:
        ja        ..L1207       # Prob 50%                      #1045.22
..LN13019:
        vmovaps   %xmm4, %xmm1                                  #1045.22
..L1207:                                                        #
..LN13020:
	.loc    1  1048  is_stmt 1
        vcomisd   %xmm10, %xmm7                                 #1048.23
..LN13021:
        vmovsd    %xmm6, 48(%rsp)                               #1048.23
..LN13022:
        ja        ..L1208       # Prob 50%                      #1048.23
..LN13023:
        vmovaps   %xmm7, %xmm6                                  #1048.23
..L1208:                                                        #
..LN13024:
	.loc    1  1049  is_stmt 1
        vcomisd   %xmm6, %xmm13                                 #1049.23
..LN13025:
        vaddsd    .L_2il0floatpacket.4(%rip), %xmm6, %xmm0      #1049.23
..LN13026:
        ja        ..L1209       # Prob 50%                      #1049.23
..LN13027:
        vmovaps   %xmm6, %xmm0                                  #1049.23
..L1209:                                                        #
..LN13028:
	.loc    1  1051  is_stmt 1
        vcomisd   %xmm10, %xmm12                                #1051.23
..LN13029:
        vmovsd    %xmm11, 40(%rsp)                              #1051.23
..LN13030:
        ja        ..L1210       # Prob 50%                      #1051.23
..LN13031:
        vmovaps   %xmm12, %xmm11                                #1051.23
..L1210:                                                        #
..LN13032:
	.loc    1  1052  is_stmt 1
        vcomisd   %xmm11, %xmm13                                #1052.23
..LN13033:
        vaddsd    .L_2il0floatpacket.4(%rip), %xmm11, %xmm6     #1052.23
..LN13034:
        ja        ..L1211       # Prob 50%                      #1052.23
..LN13035:
        vmovaps   %xmm11, %xmm6                                 #1052.23
..L1211:                                                        #
..LN13036:
	.loc    1  1047  is_stmt 1
        vmovsd    %xmm7, 56(%rsp)                               #1047.20
..LN13037:
	.loc    1  1054  is_stmt 1
        vsubsd    %xmm0, %xmm6, %xmm14                          #1054.19
..LN13038:
        vcvttsd2si %xmm14, %edx                                 #1054.19
..LN13039:
        movl      %edx, %eax                                    #1054.8
..LN13040:
        sarl      $31, %eax                                     #1054.8
..LN13041:
        xorl      %eax, %edx                                    #1054.8
..LN13042:
        subl      %eax, %edx                                    #1054.8
..LN13043:
	.loc    1  1050  is_stmt 1
        vmovsd    %xmm12, 32(%rsp)                              #1050.19
..LN13044:
	.loc    1  1054  is_stmt 1
        cmpl      $3, %edx                                      #1054.28
..LN13045:
        jg        ..B23.3       # Prob 50%                      #1054.28
..LN13046:
                                # LOE rbx rbp r12 r13 r14 r15 xmm0 xmm1 xmm2 xmm6
..B23.2:                        # Preds ..B23.10
..LN13047:
	.loc    1  1055  is_stmt 1
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm1, %xmm1      #1055.40
..LN13048:
        vaddsd    %xmm6, %xmm0, %xmm0                           #1055.40
..LN13049:
        vmulsd    %xmm2, %xmm0, %xmm2                           #1055.40
..LN13050:
        vmulsd    %xmm2, %xmm1, %xmm3                           #1055.7
..LN13051:
        vxorpd    .L_2il0floatpacket.8(%rip), %xmm3, %xmm4      #1055.7
..LN13052:
        vmovsd    %xmm4, (%rsp)                                 #1055.7
..LN13053:
        jmp       ..B23.4       # Prob 100%                     #1055.7
..LN13054:
                                # LOE rbx rbp r12 r13 r14 r15
..B23.3:                        # Preds ..B23.10
..LN13055:
	.loc    1  1062  is_stmt 1
        vcvttsd2si %xmm1, %edx                                  #1062.43
..LN13056:
	.loc    1  1061  is_stmt 1
        vxorpd    %xmm7, %xmm7, %xmm7                           #1061.2
..LN13057:
	.loc    1  1062  is_stmt 1
        movl      %edx, %eax                                    #1062.39
..LN13058:
	.loc    1  1061  is_stmt 1
        vcomisd   %xmm7, %xmm0                                  #1061.2
..LN13059:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm3             #1061.2
..LN13060:
	.loc    1  1062  is_stmt 1
        vxorpd    %xmm8, %xmm8, %xmm8                           #1062.39
..LN13061:
	.loc    1  1061  is_stmt 1
        ja        ..L1212       # Prob 50%                      #1061.2
..LN13062:
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm3             #1061.2
..L1212:                                                        #
..LN13063:
	.loc    1  1062  is_stmt 1
        sarl      $31, %eax                                     #1062.39
..LN13064:
	.loc    1  1063  is_stmt 1
        vsubsd    %xmm3, %xmm0, %xmm4                           #1063.34
..LN13065:
        vaddsd    %xmm6, %xmm3, %xmm5                           #1063.7
..LN13066:
        vmulsd    %xmm4, %xmm0, %xmm1                           #1063.7
..LN13067:
	.loc    1  1064  is_stmt 1
        vaddsd    %xmm6, %xmm0, %xmm0                           #1064.19
..LN13068:
	.loc    1  1062  is_stmt 1
        xorl      %eax, %edx                                    #1062.39
..LN13069:
        subl      %eax, %edx                                    #1062.39
..LN13070:
        vcvtsi2sd %edx, %xmm8, %xmm8                            #1062.39
..LN13071:
	.loc    1  1063  is_stmt 1
        vfmsub213sd %xmm1, %xmm6, %xmm5                         #1063.7
..LN13072:
	.loc    1  1064  is_stmt 1
        vmulsd    %xmm3, %xmm0, %xmm11                          #1064.19
..LN13073:
	.loc    1  1063  is_stmt 1
        vmulsd    %xmm2, %xmm5, %xmm10                          #1063.7
..LN13074:
        vxorpd    .L_2il0floatpacket.8(%rip), %xmm7, %xmm6      #1063.7
..LN13075:
	.loc    1  1062  is_stmt 1
        vdivsd    %xmm8, %xmm6, %xmm9                           #1062.39
..LN13076:
        vaddsd    %xmm9, %xmm2, %xmm2                           #1062.39
..LN13077:
	.loc    1  1063  is_stmt 1
        vfnmadd213sd %xmm10, %xmm2, %xmm11                      #1063.7
..LN13078:
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm11, %xmm12    #1063.7
..LN13079:
        vmovsd    %xmm12, (%rsp)                                #1063.7
..LN13080:
                                # LOE rbx rbp r12 r13 r14 r15
..B23.4:                        # Preds ..B23.2 ..B23.3
..L1213:        # optimization report
                # %s was not vectorized: has only one iteration
                # VECTOR TRIP COUNT IS KNOWN CONSTANT
..LN13081:
	.loc    1  1040  is_stmt 1
        vmovsd    64(%rsp), %xmm3                               #1040.21
..LN13082:
        vxorpd    .L_2il0floatpacket.8(%rip), %xmm3, %xmm2      #1040.21
..LN13083:
        vmovsd    %xmm2, 8(%rsp)                                #1040.21
..LN13084:
	.loc    1  1041  is_stmt 1
        vmovsd    72(%rsp), %xmm0                               #1041.5
..LN13085:
        call      __libm_sse2_sincos                            #1041.5
..LN13086:
	.loc    1  1044  is_stmt 1
        vmovsd    8(%rsp), %xmm4                                #1044.36
..LN13087:
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm8             #1044.22
..LN13088:
        vcomisd   %xmm8, %xmm4                                  #1044.22
..LN13089:
	.loc    1  1041  is_stmt 1
        vfmadd213sd 72(%rsp), %xmm0, %xmm1                      #1041.5
..LN13090:
	.loc    1  1045  is_stmt 1
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm10            #1045.22
..LN13091:
	.loc    1  1048  is_stmt 1
        vmovsd    32(%rsp), %xmm6                               #1048.23
..LN13092:
        vmovsd    40(%rsp), %xmm7                               #1048.23
..LN13093:
	.loc    1  1051  is_stmt 1
        vmovsd    56(%rsp), %xmm9                               #1051.23
..LN13094:
	.loc    1  1041  is_stmt 1
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm1, %xmm3      #1041.35
..LN13095:
	.loc    1  1044  is_stmt 1
        vsubsd    .L_2il0floatpacket.4(%rip), %xmm4, %xmm5      #1044.36
..LN13096:
        ja        ..L1214       # Prob 50%                      #1044.22
..LN13097:
        vmovaps   %xmm4, %xmm5                                  #1044.22
..L1214:                                                        #
..LN13098:
	.loc    1  1045  is_stmt 1
        vcomisd   %xmm5, %xmm10                                 #1045.22
..LN13099:
        vaddsd    .L_2il0floatpacket.4(%rip), %xmm5, %xmm2      #1045.36
..LN13100:
        ja        ..L1215       # Prob 50%                      #1045.22
..LN13101:
        vmovaps   %xmm5, %xmm2                                  #1045.22
..L1215:                                                        #
..LN13102:
	.loc    1  1048  is_stmt 1
        vcomisd   %xmm8, %xmm6                                  #1048.23
..LN13103:
	.loc    1  1051  is_stmt 1
        vmovsd    48(%rsp), %xmm11                              #1051.23
..LN13104:
	.loc    1  1048  is_stmt 1
        ja        ..L1216       # Prob 50%                      #1048.23
..LN13105:
        vmovaps   %xmm6, %xmm7                                  #1048.23
..L1216:                                                        #
..LN13106:
	.loc    1  1049  is_stmt 1
        vcomisd   %xmm7, %xmm10                                 #1049.23
..LN13107:
        vaddsd    .L_2il0floatpacket.4(%rip), %xmm7, %xmm1      #1049.23
..LN13108:
        ja        ..L1217       # Prob 50%                      #1049.23
..LN13109:
        vmovaps   %xmm7, %xmm1                                  #1049.23
..L1217:                                                        #
..LN13110:
	.loc    1  1051  is_stmt 1
        vcomisd   %xmm8, %xmm9                                  #1051.23
..LN13111:
        ja        ..L1218       # Prob 50%                      #1051.23
..LN13112:
        vmovaps   %xmm9, %xmm11                                 #1051.23
..L1218:                                                        #
..LN13113:
	.loc    1  1052  is_stmt 1
        vcomisd   %xmm11, %xmm10                                #1052.23
..LN13114:
        vaddsd    .L_2il0floatpacket.4(%rip), %xmm11, %xmm0     #1052.23
..LN13115:
        ja        ..L1219       # Prob 50%                      #1052.23
..LN13116:
        vmovaps   %xmm11, %xmm0                                 #1052.23
..L1219:                                                        #
..LN13117:
	.loc    1  1054  is_stmt 1
        vsubsd    %xmm1, %xmm0, %xmm12                          #1054.19
..LN13118:
        vcvttsd2si %xmm12, %edx                                 #1054.19
..LN13119:
        movl      %edx, %eax                                    #1054.8
..LN13120:
        sarl      $31, %eax                                     #1054.8
..LN13121:
        xorl      %eax, %edx                                    #1054.8
..LN13122:
        subl      %eax, %edx                                    #1054.8
..LN13123:
        cmpl      $3, %edx                                      #1054.28
..LN13124:
        jg        ..B23.6       # Prob 50%                      #1054.28
..LN13125:
                                # LOE rbx rbp r12 r13 r14 r15 xmm0 xmm1 xmm2 xmm3
..B23.5:                        # Preds ..B23.4
..LN13126:
	.loc    1  1055  is_stmt 1
        vaddsd    %xmm0, %xmm1, %xmm0                           #1055.7
..LN13127:
        vmulsd    %xmm3, %xmm2, %xmm1                           #1055.7
..LN13128:
        vmulsd    .L_2il0floatpacket.1(%rip), %xmm0, %xmm4      #1055.7
..LN13129:
        vfnmadd213sd (%rsp), %xmm1, %xmm4                       #1055.7
..LN13130:
        jmp       ..B23.7       # Prob 100%                     #1055.7
..LN13131:
                                # LOE rbx rbp r12 r13 r14 r15 xmm4
..B23.6:                        # Preds ..B23.4
..LN13132:
	.loc    1  1062  is_stmt 1
        vcvttsd2si %xmm2, %edx                                  #1062.43
..LN13133:
        movl      %edx, %eax                                    #1062.39
..LN13134:
        vxorpd    %xmm2, %xmm2, %xmm2                           #1062.39
..LN13135:
        sarl      $31, %eax                                     #1062.39
..LN13136:
	.loc    1  1061  is_stmt 1
        vxorpd    %xmm8, %xmm8, %xmm8                           #1061.2
..LN13137:
	.loc    1  1062  is_stmt 1
        xorl      %eax, %edx                                    #1062.39
..LN13138:
        subl      %eax, %edx                                    #1062.39
..LN13139:
        vcvtsi2sd %edx, %xmm2, %xmm2                            #1062.39
..LN13140:
	.loc    1  1061  is_stmt 1
        vcomisd   %xmm8, %xmm1                                  #1061.2
..LN13141:
	.loc    1  1063  is_stmt 1
        vxorpd    .L_2il0floatpacket.8(%rip), %xmm8, %xmm9      #1063.7
..LN13142:
	.loc    1  1062  is_stmt 1
        vdivsd    %xmm2, %xmm9, %xmm10                          #1062.39
..LN13143:
	.loc    1  1061  is_stmt 1
        vmovsd    .L_2il0floatpacket.0(%rip), %xmm4             #1061.2
..LN13144:
        ja        ..L1220       # Prob 50%                      #1061.2
..LN13145:
        vmovsd    .L_2il0floatpacket.3(%rip), %xmm4             #1061.2
..L1220:                                                        #
..LN13146:
	.loc    1  1063  is_stmt 1
        vsubsd    %xmm4, %xmm1, %xmm5                           #1063.34
..LN13147:
        vaddsd    %xmm0, %xmm4, %xmm7                           #1063.7
..LN13148:
        vmulsd    %xmm5, %xmm1, %xmm6                           #1063.7
..LN13149:
        vfmsub213sd %xmm6, %xmm0, %xmm7                         #1063.7
..LN13150:
        vaddsd    %xmm0, %xmm1, %xmm0                           #1063.7
..LN13151:
        vmulsd    %xmm3, %xmm7, %xmm11                          #1063.7
..LN13152:
        vaddsd    %xmm10, %xmm3, %xmm3                          #1063.7
..LN13153:
        vmulsd    %xmm4, %xmm3, %xmm4                           #1063.7
..LN13154:
        vfmsub213sd %xmm11, %xmm0, %xmm4                        #1063.7
..LN13155:
        vmovsd    (%rsp), %xmm1                                 #1063.7
..LN13156:
        vfnmadd132sd .L_2il0floatpacket.1(%rip), %xmm1, %xmm4   #1063.7
..LN13157:
                                # LOE rbx rbp r12 r13 r14 r15 xmm4
..B23.7:                        # Preds ..B23.5 ..B23.6
..LN13158:
	.loc    1  1067  is_stmt 1
        vmulsd    .L_2il0floatpacket.5(%rip), %xmm4, %xmm0      #1067.25
..LN13159:
	.loc    1  1067  epilogue_begin  is_stmt 1
        addq      $88, %rsp                                     #1067.25
	.cfi_def_cfa_offset 8
..LN13160:
        ret                                                     #1067.25
..LN13161:
        .align    16,0x90
	.cfi_endproc
..LN13162:
                                # LOE
..LN13163:
# mark_end;
	.type	box_ctrlon,@function
	.size	box_ctrlon,.-box_ctrlon
..LNbox_ctrlon.13164:
.LNbox_ctrlon:
	.data
# -- End  box_ctrlon
	.text
.L_2__routine_start_grid_box_radius_23:
# -- Begin  grid_box_radius
	.text
# mark_begin;
       .align    16,0x90
	.globl grid_box_radius
# --- grid_box_radius(const double *, const double *, const double *, int)
grid_box_radius:
# parameter 1(x): %rdi
# parameter 2(y): %rsi
# parameter 3(z): %rdx
# parameter 4(n): %ecx
..B24.1:                        # Preds ..B24.0
	.cfi_startproc
..___tag_value_grid_box_radius.1226:
..L1227:
                                                       #1076.1
..LN13165:
	.loc    1  1076  prologue_end  is_stmt 1
..LN13166:
	.loc    1  1081  is_stmt 1
        lea       -1(%rcx), %eax                                #1081.16
..LN13167:
	.loc    1  1076  is_stmt 1
        movq      %rdi, %r8                                     #1076.1
..LN13168:
	.loc    1  1081  is_stmt 1
        xorl      %edi, %edi                                    #1081.7
..LN13169:
	.loc    1  1080  is_stmt 1
        vxorpd    %xmm0, %xmm0, %xmm0                           #1080.3
..LN13170:
	.loc    1  1081  is_stmt 1
        testl     %eax, %eax                                    #1081.16
..LN13171:
        jle       ..B24.9       # Prob 10%                      #1081.16
..LN13172:
                                # LOE rdx rbx rbp rsi rdi r8 r12 r13 r14 r15 ecx xmm0
..B24.2:                        # Preds ..B24.1
..LN13173:
	.loc    1  1082  is_stmt 1
        movslq    %ecx, %rcx                                    #1082.5
..LN13174:
	.loc    1  1081  is_stmt 1
        lea       -1(%rcx), %rax                                #1081.16
..LN13175:
                                # LOE rax rdx rcx rbx rbp rsi rdi r8 r12 r13 r14 r15 xmm0
..B24.3:                        # Preds ..B24.7 ..B24.2
..L1229:        # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN13176:
	.loc    1  1082  is_stmt 1
        movslq    %edi, %r9                                     #1082.9
..LN13177:
        incq      %r9                                           #1082.13
..LN13178:
        cmpq      %rcx, %r9                                     #1082.18
..LN13179:
        jge       ..B24.7       # Prob 10%                      #1082.18
..LN13180:
                                # LOE rax rdx rcx rbx rbp rsi rdi r8 r9 r12 r13 r14 r15 xmm0
..B24.4:                        # Preds ..B24.3
..LN13181:
	.loc    1  1083  is_stmt 1
        vmovsd    (%r8,%rdi,8), %xmm3                           #1083.16
..LN13182:
        vmovsd    (%rsi,%rdi,8), %xmm2                          #1083.16
..LN13183:
        vmovsd    (%rdx,%rdi,8), %xmm1                          #1083.16
..LN13184:
                                # LOE rax rdx rcx rbx rbp rsi rdi r8 r9 r12 r13 r14 r15 xmm0 xmm1 xmm2 xmm3
..B24.5:                        # Preds ..B24.5 ..B24.4
..L1230:        # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN13185:
        vsubsd    (%rsi,%r9,8), %xmm2, %xmm4                    #1083.16
..LN13186:
        vsubsd    (%r8,%r9,8), %xmm3, %xmm6                     #1083.16
..LN13187:
        vsubsd    (%rdx,%r9,8), %xmm1, %xmm7                    #1083.16
..LN13188:
        vmulsd    %xmm4, %xmm4, %xmm5                           #1083.16
..LN13189:
        vfmadd213sd %xmm5, %xmm6, %xmm6                         #1083.16
..LN13190:
	.loc    1  1082  is_stmt 1
        incq      %r9                                           #1082.21
..LN13191:
	.loc    1  1083  is_stmt 1
        vfmadd213sd %xmm6, %xmm7, %xmm7                         #1083.16
..LN13192:
        vcomisd   %xmm7, %xmm0                                  #1083.7
..LN13193:
        ja        ..L1231       # Prob 50%                      #1083.7
..LN13194:
        vmovaps   %xmm7, %xmm0                                  #1083.7
..L1231:                                                        #
..LN13195:
	.loc    1  1082  is_stmt 1
        cmpq      %rcx, %r9                                     #1082.18
..LN13196:
        jl        ..B24.5       # Prob 82%                      #1082.18
..LN13197:
                                # LOE rax rdx rcx rbx rbp rsi rdi r8 r9 r12 r13 r14 r15 xmm0 xmm1 xmm2 xmm3
..B24.7:                        # Preds ..B24.5 ..B24.3
..LN13198:
	.loc    1  1081  is_stmt 1
        incq      %rdi                                          #1081.19
..LN13199:
        cmpq      %rax, %rdi                                    #1081.16
..LN13200:
        jl        ..B24.3       # Prob 82%                      #1081.16
..LN13201:
                                # LOE rax rdx rcx rbx rbp rsi rdi r8 r12 r13 r14 r15 xmm0
..B24.9:                        # Preds ..B24.7 ..B24.1
..LN13202:
	.loc    1  1087  is_stmt 1
        vsqrtsd   %xmm0, %xmm0, %xmm0                           #1087.12
..LN13203:
	.loc    1  1089  epilogue_begin  is_stmt 1
        ret                                                     #1089.10
..LN13204:
        .align    16,0x90
	.cfi_endproc
..LN13205:
                                # LOE
..LN13206:
# mark_end;
	.type	grid_box_radius,@function
	.size	grid_box_radius,.-grid_box_radius
..LNgrid_box_radius.13207:
.LNgrid_box_radius:
	.data
# -- End  grid_box_radius
	.text
.L_2__routine_start_dist_between_boxes_24:
# -- Begin  dist_between_boxes
	.text
# mark_begin;
       .align    16,0x90
	.globl dist_between_boxes
# --- dist_between_boxes(const double *, const double *, const double *, int, const double *, const double *, const double *, int)
dist_between_boxes:
# parameter 1(x1): %rdi
# parameter 2(y1): %rsi
# parameter 3(z1): %rdx
# parameter 4(n1): %ecx
# parameter 5(x2): %r8
# parameter 6(y2): %r9
# parameter 7(z2): 8 + %rsp
# parameter 8(n2): 16 + %rsp
..B25.1:                        # Preds ..B25.0
	.cfi_startproc
..___tag_value_dist_between_boxes.1236:
..L1237:
                                                       #1101.1
..LN13208:
	.loc    1  1101  prologue_end  is_stmt 1
        movq      %rdi, %r11                                    #1101.1
..LN13209:
        movslq    %ecx, %r10                                    #1101.1
..LN13210:
	.loc    1  1105  is_stmt 1
        xorl      %ecx, %ecx                                    #1105.7
..LN13211:
	.loc    1  1102  is_stmt 1
        vxorpd    %xmm0, %xmm0, %xmm0                           #1102.3
..LN13212:
	.loc    1  1105  is_stmt 1
        testq     %r10, %r10                                    #1105.14
..LN13213:
        jle       ..B25.8       # Prob 10%                      #1105.14
..LN13214:
                                # LOE rdx rcx rbx rbp rsi r8 r9 r10 r11 r12 r13 r14 r15 xmm0
..B25.2:                        # Preds ..B25.1
..LN13215:
	.loc    1  1101  is_stmt 1
        movq      8(%rsp), %rdi                                 #1101.1
..LN13216:
        movslq    16(%rsp), %rax                                #1101.1
..LN13217:
        movq      %rbp, -8(%rsp)                                #1101.1
	.cfi_offset 6, -16
..LN13218:
                                # LOE rax rdx rcx rbx rsi rdi r8 r9 r10 r11 r12 r13 r14 r15 xmm0
..B25.3:                        # Preds ..B25.6 ..B25.9 ..B25.2
..L1240:        # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN13219:
	.loc    1  1106  is_stmt 1
        xorl      %ebp, %ebp                                    #1106.9
..LN13220:
        testq     %rax, %rax                                    #1106.16
..LN13221:
        jle       ..B25.9       # Prob 10%                      #1106.16
..LN13222:
                                # LOE rax rdx rcx rbx rbp rsi rdi r8 r9 r10 r11 r12 r13 r14 r15 xmm0
..B25.4:                        # Preds ..B25.3
..LN13223:
	.loc    1  1107  is_stmt 1
        vmovsd    (%r11,%rcx,8), %xmm3                          #1107.14
..LN13224:
        vmovsd    (%rsi,%rcx,8), %xmm2                          #1107.14
..LN13225:
        vmovsd    (%rdx,%rcx,8), %xmm1                          #1107.14
..LN13226:
                                # LOE rax rdx rcx rbx rbp rsi rdi r8 r9 r10 r11 r12 r13 r14 r15 xmm0 xmm1 xmm2 xmm3
..B25.5:                        # Preds ..B25.5 ..B25.4
..L1241:        # optimization report
                # %s was not vectorized: vector dependence prevents vectorization%s
                # VECTOR TRIP COUNT IS ESTIMATED CONSTANT
..LN13227:
        vsubsd    (%r9,%rbp,8), %xmm2, %xmm4                    #1107.14
..LN13228:
        vsubsd    (%r8,%rbp,8), %xmm3, %xmm6                    #1107.14
..LN13229:
        vsubsd    (%rdi,%rbp,8), %xmm1, %xmm7                   #1107.14
..LN13230:
        vmulsd    %xmm4, %xmm4, %xmm5                           #1107.14
..LN13231:
        vfmadd213sd %xmm5, %xmm6, %xmm6                         #1107.14
..LN13232:
	.loc    1  1106  is_stmt 1
        incq      %rbp                                          #1106.20
..LN13233:
	.loc    1  1107  is_stmt 1
        vfmadd213sd %xmm6, %xmm7, %xmm7                         #1107.14
..LN13234:
        vcomisd   %xmm7, %xmm0                                  #1107.7
..LN13235:
        ja        ..L1242       # Prob 50%                      #1107.7
..LN13236:
        vmovaps   %xmm7, %xmm0                                  #1107.7
..L1242:                                                        #
..LN13237:
	.loc    1  1106  is_stmt 1
        cmpq      %rax, %rbp                                    #1106.16
..LN13238:
        jl        ..B25.5       # Prob 82%                      #1106.16
..LN13239:
                                # LOE rax rdx rcx rbx rbp rsi rdi r8 r9 r10 r11 r12 r13 r14 r15 xmm0 xmm1 xmm2 xmm3
..B25.6:                        # Preds ..B25.5
..LN13240:
	.loc    1  1105  is_stmt 1
        incq      %rcx                                          #1105.18
..LN13241:
        cmpq      %r10, %rcx                                    #1105.14
..LN13242:
        jl        ..B25.3       # Prob 82%                      #1105.14
..LN13243:
                                # LOE rax rdx rcx rbx rsi rdi r8 r9 r10 r11 r12 r13 r14 r15 xmm0
..B25.7:                        # Preds ..B25.9 ..B25.6         # Infreq
..LN13244:
        movq      -8(%rsp), %rbp                                #
	.cfi_restore 6
..LN13245:
                                # LOE rbx rbp r12 r13 r14 r15 xmm0
..B25.8:                        # Preds ..B25.7 ..B25.1         # Infreq
..LN13246:
	.loc    1  1111  is_stmt 1
        vsqrtsd   %xmm0, %xmm0, %xmm0                           #1111.10
..LN13247:
	.loc    1  1112  epilogue_begin  is_stmt 1
        ret                                                     #1112.10
	.cfi_offset 6, -16
..LN13248:
                                # LOE
..B25.9:                        # Preds ..B25.3                 # Infreq
..LN13249:
	.loc    1  1105  is_stmt 1
        incq      %rcx                                          #1105.18
..LN13250:
        cmpq      %r10, %rcx                                    #1105.14
..LN13251:
        jl        ..B25.3       # Prob 82%                      #1105.14
..LN13252:
        jmp       ..B25.7       # Prob 100%                     #1105.14
..LN13253:
        .align    16,0x90
	.cfi_endproc
..LN13254:
                                # LOE rax rdx rcx rbx rsi rdi r8 r9 r10 r11 r12 r13 r14 r15 xmm0
..LN13255:
# mark_end;
	.type	dist_between_boxes,@function
	.size	dist_between_boxes,.-dist_between_boxes
..LNdist_between_boxes.13256:
.LNdist_between_boxes:
	.data
# -- End  dist_between_boxes
	.text
.L_2__routine_start_inside_edge_25:
# -- Begin  inside_edge
	.text
# mark_begin;
       .align    16,0x90
	.globl inside_edge
# --- inside_edge(double, double, double, double, double, double)
inside_edge:
# parameter 1(x0): %xmm0
# parameter 2(y0): %xmm1
# parameter 3(x1): %xmm2
# parameter 4(y1): %xmm3
# parameter 5(x): %xmm4
# parameter 6(y): %xmm5
..B26.1:                        # Preds ..B26.0
	.cfi_startproc
..___tag_value_inside_edge.1249:
..L1250:
                                                       #1126.2
..LN13257:
	.loc    1  1126  prologue_end  is_stmt 1
..LN13258:
	.loc    1  1130  is_stmt 1
        vsubsd    %xmm2, %xmm0, %xmm6                           #1130.37
..LN13259:
        vsubsd    %xmm1, %xmm5, %xmm7                           #1130.44
..LN13260:
        vsubsd    %xmm0, %xmm4, %xmm10                          #1130.18
..LN13261:
        vsubsd    %xmm1, %xmm3, %xmm8                           #1130.27
..LN13262:
        vmulsd    %xmm7, %xmm6, %xmm9                           #1130.44
..LN13263:
	.loc    1  1131  is_stmt 1
        vfmadd213sd %xmm9, %xmm8, %xmm10                        #1131.21
..LN13264:
        vcmplesd  .L_2il0floatpacket.10(%rip), %xmm10, %xmm11   #1131.21
..LN13265:
        vmovd     %xmm11, %eax                                  #1131.21
..LN13266:
        negl      %eax                                          #1131.21
..LN13267:
	.loc    1  1131  epilogue_begin  is_stmt 1
        ret                                                     #1131.21
..LN13268:
        .align    16,0x90
	.cfi_endproc
..LN13269:
                                # LOE
..LN13270:
# mark_end;
	.type	inside_edge,@function
	.size	inside_edge,.-inside_edge
..LNinside_edge.13271:
.LNinside_edge:
	.data
# -- End  inside_edge
	.section .rodata, "a"
	.align 32
.L_2il0floatpacket.7:
	.long	0x00000000,0x00000001,0x00000002,0x00000003,0x00000004,0x00000005,0x00000006,0x00000007
	.type	.L_2il0floatpacket.7,@object
	.size	.L_2il0floatpacket.7,32
	.align 16
.L_2il0floatpacket.8:
	.long	0x00000000,0x80000000,0x00000000,0x00000000
	.type	.L_2il0floatpacket.8,@object
	.size	.L_2il0floatpacket.8,16
	.align 16
.L_2il0floatpacket.9:
	.long	0xffffffff,0x7fffffff,0x00000000,0x00000000
	.type	.L_2il0floatpacket.9,@object
	.size	.L_2il0floatpacket.9,16
	.align 8
.L_2il0floatpacket.0:
	.long	0x54442d18,0x400921fb
	.type	.L_2il0floatpacket.0,@object
	.size	.L_2il0floatpacket.0,8
	.align 8
.L_2il0floatpacket.1:
	.long	0x00000000,0x3fe00000
	.type	.L_2il0floatpacket.1,@object
	.size	.L_2il0floatpacket.1,8
	.align 8
.L_2il0floatpacket.2:
	.long	0xa0b5ed8d,0x3eb0c6f7
	.type	.L_2il0floatpacket.2,@object
	.size	.L_2il0floatpacket.2,8
	.align 8
.L_2il0floatpacket.3:
	.long	0x54442d18,0xc00921fb
	.type	.L_2il0floatpacket.3,@object
	.size	.L_2il0floatpacket.3,8
	.align 8
.L_2il0floatpacket.4:
	.long	0x54442d18,0x401921fb
	.type	.L_2il0floatpacket.4,@object
	.size	.L_2il0floatpacket.4,8
	.align 8
.L_2il0floatpacket.5:
	.long	0x91122000,0x42c27541
	.type	.L_2il0floatpacket.5,@object
	.size	.L_2il0floatpacket.5,8
	.align 8
.L_2il0floatpacket.6:
	.long	0xd9d7bdbb,0x3ddb7cdf
	.type	.L_2il0floatpacket.6,@object
	.size	.L_2il0floatpacket.6,8
	.align 8
.L_2il0floatpacket.10:
	.long	0x812dea11,0x3d719799
	.type	.L_2il0floatpacket.10,@object
	.size	.L_2il0floatpacket.10,8
	.align 8
.L_2il0floatpacket.11:
	.long	0xfeebc2a0,0x39b4484b
	.type	.L_2il0floatpacket.11,@object
	.size	.L_2il0floatpacket.11,8
	.align 8
.L_2il0floatpacket.12:
	.long	0x00000000,0x41584dae
	.type	.L_2il0floatpacket.12,@object
	.size	.L_2il0floatpacket.12,8
	.section .rodata.str1.4, "aMS",@progbits,1
	.align 4
.L_2__STRING.0:
	.long	1919383662
	.long	1763730537
	.long	1919361139
	.long	1702125925
	.long	1752440946
	.long	1293971041
	.long	1196972097
	.long	742672722
	.long	1668180256
	.long	1935762802
	.long	1095573605
	.long	1380407384
	.word	17481
	.byte	0
	.type	.L_2__STRING.0,@object
	.size	.L_2__STRING.0,51
	.section .rodata.str1.32, "aMS",@progbits,1
	.align 32
.L_2__STRING.1:
	.long	543516788
	.long	1701734764
	.long	1952801312
	.long	1852138871
	.long	829963296
	.long	2032939103
	.long	1043357489
	.long	1684955424
	.long	2017206304
	.long	741433137
	.long	828322169
	.long	1752375358
	.long	1684829551
	.long	1953459744
	.long	1918988320
	.long	1701604449
	.long	1869881452
	.long	1701344288
	.long	1852402720
	.long	1700929637
	.long	1701148532
	.long	2017206382
	.long	741367602
	.long	811545209
	.long	1851859006
	.long	1008738404
	.long	828322424
	.long	1597143340
	.word	15921
	.byte	0
	.type	.L_2__STRING.1,@object
	.size	.L_2__STRING.1,115
	.data
	.section .debug_opt_report, ""
..L1255:
	.ascii ".itt_notify_tab\0"
	.word	258
	.word	48
	.long	266
	.long	..L1256 - ..L1255
	.long	48
	.long	..L1257 - ..L1255
	.long	4474
	.long	0x00000008,0x00000000
	.long	0
	.long	0
	.long	0
	.long	0
	.quad	..L26
	.long	28
	.long	4
	.quad	..L27
	.long	28
	.long	20
	.quad	..L61
	.long	28
	.long	36
	.quad	..L62
	.long	28
	.long	52
	.quad	..L96
	.long	28
	.long	68
	.quad	..L97
	.long	28
	.long	84
	.quad	..L130
	.long	28
	.long	100
	.quad	..L131
	.long	28
	.long	114
	.quad	..L132
	.long	28
	.long	133
	.quad	..L133
	.long	28
	.long	152
	.quad	..L134
	.long	28
	.long	171
	.quad	..L135
	.long	28
	.long	190
	.quad	..L136
	.long	28
	.long	209
	.quad	..L137
	.long	28
	.long	228
	.quad	..L138
	.long	28
	.long	247
	.quad	..L139
	.long	28
	.long	263
	.quad	..L144
	.long	28
	.long	279
	.quad	..L145
	.long	28
	.long	295
	.quad	..L148
	.long	28
	.long	311
	.quad	..L149
	.long	28
	.long	327
	.quad	..L154
	.long	28
	.long	343
	.quad	..L155
	.long	28
	.long	359
	.quad	..L156
	.long	28
	.long	375
	.quad	..L157
	.long	28
	.long	391
	.quad	..L196
	.long	28
	.long	407
	.quad	..L197
	.long	28
	.long	421
	.quad	..L198
	.long	28
	.long	440
	.quad	..L199
	.long	28
	.long	459
	.quad	..L200
	.long	28
	.long	478
	.quad	..L201
	.long	28
	.long	497
	.quad	..L202
	.long	28
	.long	516
	.quad	..L203
	.long	28
	.long	535
	.quad	..L204
	.long	28
	.long	554
	.quad	..L205
	.long	28
	.long	570
	.quad	..L210
	.long	28
	.long	586
	.quad	..L211
	.long	28
	.long	602
	.quad	..L214
	.long	28
	.long	618
	.quad	..L215
	.long	28
	.long	634
	.quad	..L220
	.long	28
	.long	650
	.quad	..L221
	.long	28
	.long	666
	.quad	..L222
	.long	28
	.long	682
	.quad	..L223
	.long	28
	.long	698
	.quad	..L255
	.long	28
	.long	714
	.quad	..L256
	.long	28
	.long	730
	.quad	..L257
	.long	28
	.long	746
	.quad	..L258
	.long	28
	.long	762
	.quad	..L279
	.long	28
	.long	778
	.quad	..L280
	.long	28
	.long	792
	.quad	..L281
	.long	28
	.long	811
	.quad	..L282
	.long	28
	.long	830
	.quad	..L283
	.long	28
	.long	849
	.quad	..L284
	.long	28
	.long	868
	.quad	..L285
	.long	28
	.long	887
	.quad	..L286
	.long	28
	.long	906
	.quad	..L287
	.long	28
	.long	925
	.quad	..L288
	.long	28
	.long	941
	.quad	..L293
	.long	28
	.long	957
	.quad	..L294
	.long	28
	.long	973
	.quad	..L299
	.long	28
	.long	989
	.quad	..L300
	.long	28
	.long	1003
	.quad	..L301
	.long	28
	.long	1017
	.quad	..L302
	.long	28
	.long	1031
	.quad	..L311
	.long	28
	.long	1045
	.quad	..L319
	.long	28
	.long	1061
	.quad	..L320
	.long	28
	.long	1075
	.quad	..L321
	.long	28
	.long	1094
	.quad	..L322
	.long	28
	.long	1113
	.quad	..L323
	.long	28
	.long	1132
	.quad	..L324
	.long	28
	.long	1151
	.quad	..L325
	.long	28
	.long	1170
	.quad	..L360
	.long	28
	.long	1186
	.quad	..L361
	.long	28
	.long	1200
	.quad	..L362
	.long	28
	.long	1219
	.quad	..L363
	.long	28
	.long	1238
	.quad	..L364
	.long	28
	.long	1257
	.quad	..L365
	.long	28
	.long	1276
	.quad	..L366
	.long	28
	.long	1295
	.quad	..L367
	.long	28
	.long	1314
	.quad	..L368
	.long	28
	.long	1333
	.quad	..L369
	.long	28
	.long	1349
	.quad	..L374
	.long	28
	.long	1365
	.quad	..L375
	.long	28
	.long	1381
	.quad	..L380
	.long	28
	.long	1397
	.quad	..L381
	.long	28
	.long	1411
	.quad	..L382
	.long	28
	.long	1425
	.quad	..L383
	.long	28
	.long	1439
	.quad	..L392
	.long	28
	.long	1453
	.quad	..L400
	.long	28
	.long	1469
	.quad	..L401
	.long	28
	.long	1483
	.quad	..L402
	.long	28
	.long	1502
	.quad	..L403
	.long	28
	.long	1521
	.quad	..L404
	.long	28
	.long	1540
	.quad	..L405
	.long	28
	.long	1559
	.quad	..L406
	.long	28
	.long	1578
	.quad	..L441
	.long	28
	.long	1594
	.quad	..L442
	.long	28
	.long	1608
	.quad	..L443
	.long	28
	.long	1627
	.quad	..L444
	.long	28
	.long	1646
	.quad	..L445
	.long	28
	.long	1665
	.quad	..L446
	.long	28
	.long	1684
	.quad	..L447
	.long	28
	.long	1703
	.quad	..L448
	.long	28
	.long	1722
	.quad	..L449
	.long	28
	.long	1741
	.quad	..L450
	.long	28
	.long	1757
	.quad	..L455
	.long	28
	.long	1773
	.quad	..L456
	.long	28
	.long	1789
	.quad	..L461
	.long	28
	.long	1805
	.quad	..L462
	.long	28
	.long	1821
	.quad	..L463
	.long	28
	.long	1837
	.quad	..L464
	.long	28
	.long	1853
	.quad	..L503
	.long	28
	.long	1869
	.quad	..L504
	.long	28
	.long	1883
	.quad	..L505
	.long	28
	.long	1902
	.quad	..L506
	.long	28
	.long	1921
	.quad	..L507
	.long	28
	.long	1940
	.quad	..L508
	.long	28
	.long	1959
	.quad	..L509
	.long	28
	.long	1978
	.quad	..L510
	.long	28
	.long	1997
	.quad	..L511
	.long	28
	.long	2016
	.quad	..L512
	.long	28
	.long	2032
	.quad	..L517
	.long	28
	.long	2048
	.quad	..L518
	.long	28
	.long	2064
	.quad	..L523
	.long	28
	.long	2080
	.quad	..L524
	.long	28
	.long	2096
	.quad	..L525
	.long	28
	.long	2112
	.quad	..L526
	.long	28
	.long	2128
	.quad	..L565
	.long	28
	.long	2144
	.quad	..L566
	.long	28
	.long	2158
	.quad	..L567
	.long	28
	.long	2177
	.quad	..L568
	.long	28
	.long	2196
	.quad	..L569
	.long	28
	.long	2215
	.quad	..L570
	.long	28
	.long	2234
	.quad	..L571
	.long	28
	.long	2253
	.quad	..L572
	.long	28
	.long	2272
	.quad	..L573
	.long	28
	.long	2291
	.quad	..L574
	.long	28
	.long	2307
	.quad	..L579
	.long	28
	.long	2323
	.quad	..L580
	.long	28
	.long	2339
	.quad	..L585
	.long	28
	.long	2355
	.quad	..L586
	.long	28
	.long	2369
	.quad	..L587
	.long	28
	.long	2383
	.quad	..L588
	.long	28
	.long	2397
	.quad	..L597
	.long	28
	.long	2411
	.quad	..L605
	.long	28
	.long	2427
	.quad	..L606
	.long	28
	.long	2441
	.quad	..L607
	.long	28
	.long	2460
	.quad	..L608
	.long	28
	.long	2479
	.quad	..L609
	.long	28
	.long	2498
	.quad	..L610
	.long	28
	.long	2517
	.quad	..L611
	.long	28
	.long	2536
	.quad	..L646
	.long	28
	.long	2552
	.quad	..L647
	.long	28
	.long	2566
	.quad	..L648
	.long	28
	.long	2585
	.quad	..L649
	.long	28
	.long	2604
	.quad	..L650
	.long	28
	.long	2623
	.quad	..L651
	.long	28
	.long	2642
	.quad	..L652
	.long	28
	.long	2661
	.quad	..L653
	.long	28
	.long	2680
	.quad	..L654
	.long	28
	.long	2699
	.quad	..L655
	.long	28
	.long	2715
	.quad	..L660
	.long	28
	.long	2731
	.quad	..L661
	.long	28
	.long	2747
	.quad	..L666
	.long	28
	.long	2763
	.quad	..L667
	.long	28
	.long	2777
	.quad	..L668
	.long	28
	.long	2791
	.quad	..L669
	.long	28
	.long	2805
	.quad	..L678
	.long	28
	.long	2819
	.quad	..L686
	.long	28
	.long	2835
	.quad	..L687
	.long	28
	.long	2849
	.quad	..L688
	.long	28
	.long	2868
	.quad	..L689
	.long	28
	.long	2887
	.quad	..L690
	.long	28
	.long	2906
	.quad	..L691
	.long	28
	.long	2925
	.quad	..L692
	.long	28
	.long	2944
	.quad	..L727
	.long	28
	.long	2960
	.quad	..L728
	.long	28
	.long	2976
	.quad	..L733
	.long	28
	.long	2992
	.quad	..L734
	.long	28
	.long	3008
	.quad	..L739
	.long	28
	.long	3024
	.quad	..L740
	.long	28
	.long	3038
	.quad	..L753
	.long	28
	.long	3052
	.quad	..L754
	.long	28
	.long	3066
	.quad	..L765
	.long	28
	.long	3080
	.quad	..L766
	.long	28
	.long	3099
	.quad	..L767
	.long	28
	.long	3118
	.quad	..L768
	.long	28
	.long	3132
	.quad	..L769
	.long	28
	.long	3148
	.quad	..L770
	.long	28
	.long	3167
	.quad	..L807
	.long	28
	.long	3186
	.quad	..L808
	.long	28
	.long	3202
	.quad	..L813
	.long	28
	.long	3218
	.quad	..L814
	.long	28
	.long	3234
	.quad	..L819
	.long	28
	.long	3250
	.quad	..L820
	.long	28
	.long	3264
	.quad	..L833
	.long	28
	.long	3278
	.quad	..L834
	.long	28
	.long	3292
	.quad	..L845
	.long	28
	.long	3306
	.quad	..L846
	.long	28
	.long	3325
	.quad	..L847
	.long	28
	.long	3344
	.quad	..L848
	.long	28
	.long	3358
	.quad	..L849
	.long	28
	.long	3374
	.quad	..L850
	.long	28
	.long	3393
	.quad	..L887
	.long	28
	.long	3412
	.quad	..L888
	.long	28
	.long	3428
	.quad	..L893
	.long	28
	.long	3444
	.quad	..L894
	.long	28
	.long	3460
	.quad	..L899
	.long	28
	.long	3476
	.quad	..L900
	.long	28
	.long	3490
	.quad	..L913
	.long	28
	.long	3504
	.quad	..L914
	.long	28
	.long	3518
	.quad	..L925
	.long	28
	.long	3532
	.quad	..L926
	.long	28
	.long	3551
	.quad	..L927
	.long	28
	.long	3570
	.quad	..L928
	.long	28
	.long	3584
	.quad	..L929
	.long	28
	.long	3600
	.quad	..L930
	.long	28
	.long	3619
	.quad	..L933
	.long	28
	.long	3638
	.quad	..L941
	.long	28
	.long	3654
	.quad	..L942
	.long	28
	.long	3668
	.quad	..L943
	.long	28
	.long	3687
	.quad	..L944
	.long	28
	.long	3706
	.quad	..L945
	.long	28
	.long	3725
	.quad	..L946
	.long	28
	.long	3744
	.quad	..L947
	.long	28
	.long	3763
	.quad	..L984
	.long	28
	.long	3779
	.quad	..L985
	.long	28
	.long	3795
	.quad	..L990
	.long	28
	.long	3811
	.quad	..L991
	.long	28
	.long	3827
	.quad	..L996
	.long	28
	.long	3843
	.quad	..L997
	.long	28
	.long	3857
	.quad	..L1010
	.long	28
	.long	3871
	.quad	..L1011
	.long	28
	.long	3885
	.quad	..L1022
	.long	28
	.long	3899
	.quad	..L1023
	.long	28
	.long	3918
	.quad	..L1024
	.long	28
	.long	3937
	.quad	..L1025
	.long	28
	.long	3951
	.quad	..L1026
	.long	28
	.long	3967
	.quad	..L1027
	.long	28
	.long	3986
	.quad	..L1030
	.long	28
	.long	4005
	.quad	..L1038
	.long	28
	.long	4021
	.quad	..L1039
	.long	28
	.long	4035
	.quad	..L1040
	.long	28
	.long	4054
	.quad	..L1041
	.long	28
	.long	4073
	.quad	..L1042
	.long	28
	.long	4092
	.quad	..L1043
	.long	28
	.long	4111
	.quad	..L1044
	.long	28
	.long	4130
	.quad	..L1081
	.long	28
	.long	4146
	.quad	..L1082
	.long	28
	.long	4165
	.quad	..L1083
	.long	28
	.long	4184
	.quad	..L1084
	.long	28
	.long	4198
	.quad	..L1085
	.long	28
	.long	4214
	.quad	..L1086
	.long	28
	.long	4233
	.quad	..L1134
	.long	28
	.long	4252
	.quad	..L1135
	.long	28
	.long	4266
	.quad	..L1136
	.long	28
	.long	4285
	.quad	..L1137
	.long	28
	.long	4304
	.quad	..L1138
	.long	28
	.long	4323
	.quad	..L1139
	.long	28
	.long	4342
	.quad	..L1140
	.long	28
	.long	4361
	.quad	..L1171
	.long	28
	.long	4377
	.quad	..L1213
	.long	28
	.long	4393
	.quad	..L1229
	.long	28
	.long	4410
	.quad	..L1230
	.long	28
	.long	4426
	.quad	..L1240
	.long	28
	.long	4442
	.quad	..L1241
	.long	28
	.long	4458
..L1256:
	.long	1769238639
	.long	1635412333
	.long	1852795252
	.long	1885696607
	.long	1601466991
	.long	1936876918
	.long	7237481
	.long	1769238639
	.long	1635412333
	.long	1852795252
	.long	1885696607
	.long	7631471
..L1257:
	.long	42078211
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090931
	.long	-2139062144
	.long	-2139062144
	.long	269617096
	.long	-1937735552
	.long	-2139061376
	.long	-394230656
	.long	-509294204
	.long	-2146430462
	.long	-2138275712
	.long	-2139062141
	.long	-2065137022
	.long	48342217
	.long	-2139090926
	.long	-2088727424
	.long	-2004844416
	.long	-914036608
	.long	302178724
	.long	-2139062256
	.long	-2138472300
	.long	-2138800000
	.long	-456555112
	.long	269615837
	.long	-1803517824
	.long	-2139059840
	.long	-1736408448
	.long	-572208763
	.long	-2146430462
	.long	-2137751424
	.long	-2139062144
	.long	-1850703222
	.long	48293064
	.long	-2139090926
	.long	-2139057024
	.long	-2004844416
	.long	-929976192
	.long	251846884
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	255885441
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	255885441
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	255885441
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	255885441
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	255885441
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	255885441
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	255885441
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	255885441
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	255885441
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	222331009
	.long	-2139062256
	.long	-2139062144
	.long	-931102592
	.long	-2146430457
	.long	-2138275712
	.long	-2139062141
	.long	-2065137532
	.long	48342217
	.long	-2139090926
	.long	-2088727424
	.long	-2105507712
	.long	-914036606
	.long	302178724
	.long	-2139062256
	.long	-2138865524
	.long	-2138537856
	.long	-1530297112
	.long	269615841
	.long	-1803517824
	.long	-2139059840
	.long	-1736407936
	.long	-572208763
	.long	-2146430462
	.long	-2137751424
	.long	-2139062135
	.long	-2053603198
	.long	48096457
	.long	-2139090926
	.long	-2139057024
	.long	-1971289984
	.long	-929976190
	.long	302178532
	.long	-2139062256
	.long	-2139062124
	.long	-2138537856
	.long	-456617552
	.long	269419232
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269435008
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269435008
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269435008
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269435008
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269435008
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269435008
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269435008
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269435008
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269435008
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269435008
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269435008
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269435008
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269435008
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269303936
	.long	-2139062144
	.long	-2139062144
	.long	130580608
	.long	-2139090926
	.long	-2088727424
	.long	-2071953280
	.long	-914036608
	.long	302178724
	.long	-2139062256
	.long	-2138865524
	.long	-2105376640
	.long	-1530297112
	.long	269615841
	.long	-1937735552
	.long	-2139061376
	.long	-394229632
	.long	-509294204
	.long	-2146430462
	.long	-2137751424
	.long	-2139062135
	.long	-2053603196
	.long	48096457
	.long	-2139090926
	.long	-1988062080
	.long	-2105507712
	.long	-913991552
	.long	302177764
	.long	-2139062256
	.long	-2139062124
	.long	-2104852352
	.long	-456617552
	.long	269615840
	.long	-1803517824
	.long	-2139062144
	.long	-1333753728
	.long	-521877359
	.long	-2146431230
	.long	-2139062144
	.long	-2139062144
	.long	-2138984320
	.long	-2146431168
	.long	-2139062144
	.long	-2139062144
	.long	-2138984320
	.long	-2146431168
	.long	-2139062144
	.long	-2139062144
	.long	-2138984320
	.long	-2146431168
	.long	-2139062144
	.long	-2139062144
	.long	-2138984320
	.long	-2146431680
	.long	-2139062144
	.long	-2139062144
	.long	218613888
	.long	-2139062256
	.long	-2139062144
	.long	-931102592
	.long	-2146431737
	.long	-2139062144
	.long	-2139062144
	.long	218613888
	.long	-2139062256
	.long	-2139062144
	.long	-931102592
	.long	-2146431225
	.long	-2139062144
	.long	-2139062144
	.long	-2138984320
	.long	-1609560768
	.long	-2138275712
	.long	-2139062144
	.long	302499968
	.long	-2139054064
	.long	-2121695092
	.long	-2138931071
	.long	-456605992
	.long	269615828
	.long	-1937735520
	.long	-2122219392
	.long	-931100032
	.long	-538654726
	.long	-1609559550
	.long	-2138275712
	.long	-2138996352
	.long	-87523192
	.long	48227527
	.long	-2136993774
	.long	-2088725376
	.long	-2105507455
	.long	-940455808
	.long	302092966
	.long	-2139054064
	.long	-2122088300
	.long	-2138537855
	.long	-1496845880
	.long	269418898
	.long	-1669300064
	.long	-2122219392
	.long	-2119139200
	.long	269303936
	.long	-2139062144
	.long	-2139062144
	.long	130580608
	.long	-2139090926
	.long	-2088727424
	.long	-2071953280
	.long	-914036608
	.long	302178724
	.long	-2139062256
	.long	-2138865524
	.long	-2105376640
	.long	-1530297112
	.long	269615841
	.long	-1937735552
	.long	-2139061376
	.long	-394229632
	.long	-509294204
	.long	-2146430462
	.long	-2137751424
	.long	-2139062135
	.long	-2053603196
	.long	48096457
	.long	-2139090926
	.long	-1988062080
	.long	-2105507712
	.long	-913991552
	.long	302177764
	.long	-2139062256
	.long	-2139062124
	.long	-2104852352
	.long	-456617552
	.long	269615840
	.long	-1803517824
	.long	-2139062144
	.long	-1333753728
	.long	-521877359
	.long	-2146431230
	.long	-2139062144
	.long	-2139062144
	.long	-2138984320
	.long	-2146431168
	.long	-2139062144
	.long	-2139062144
	.long	-2138984320
	.long	-2146431168
	.long	-2139062144
	.long	-2139062144
	.long	-2138984320
	.long	-2146431168
	.long	-2139062144
	.long	-2139062144
	.long	-2138984320
	.long	-2146431680
	.long	-2139062144
	.long	-2139062144
	.long	218613888
	.long	-2139062256
	.long	-2139062144
	.long	-931102592
	.long	-2146431737
	.long	-2139062144
	.long	-2139062144
	.long	218613888
	.long	-2139062256
	.long	-2139062144
	.long	-931102592
	.long	-2146431225
	.long	-2139062144
	.long	-2139062144
	.long	-2138984320
	.long	-1609560768
	.long	-2138275712
	.long	-2139062144
	.long	302499968
	.long	-2139054064
	.long	-2121695092
	.long	-2138931071
	.long	-456605992
	.long	269615828
	.long	-1937735520
	.long	-2122219392
	.long	-931100032
	.long	-538654726
	.long	-1609559550
	.long	-2138275712
	.long	-2138996352
	.long	-87523192
	.long	48227527
	.long	-2136993774
	.long	-2088725376
	.long	-2105507455
	.long	-940455808
	.long	302092966
	.long	-2139054064
	.long	-2122088300
	.long	-2138537855
	.long	-1496845880
	.long	269418898
	.long	-1669300064
	.long	-2122219392
	.long	-2119139200
	.long	269303936
	.long	-2139062144
	.long	-2139062144
	.long	130580608
	.long	-2139090926
	.long	-2088727424
	.long	-2071953280
	.long	-914036608
	.long	302178724
	.long	-2139062256
	.long	-2138865524
	.long	-2105376640
	.long	-1530297112
	.long	269615841
	.long	-1937735552
	.long	-2139061376
	.long	-394229632
	.long	-509294204
	.long	-2146430462
	.long	-2137751424
	.long	-2139062135
	.long	-2053603196
	.long	48096457
	.long	-2139090926
	.long	-1988062080
	.long	-2105507712
	.long	-913991552
	.long	302177764
	.long	-2139062256
	.long	-2139062124
	.long	-2104852352
	.long	-456617552
	.long	269615840
	.long	-1803517824
	.long	-2139062144
	.long	-1333753728
	.long	-521877359
	.long	-2146431230
	.long	-2139062144
	.long	-2139062144
	.long	-2138984320
	.long	-2146431168
	.long	-2139062144
	.long	-2139062144
	.long	-2138984320
	.long	-2146431168
	.long	-2139062144
	.long	-2139062144
	.long	-2138984320
	.long	-2146431168
	.long	-2139062144
	.long	-2139062144
	.long	-2138984320
	.long	-2146431168
	.long	-2139062144
	.long	-2139062144
	.long	-2138984320
	.long	-2146431168
	.long	-2139062144
	.long	-2139062144
	.long	-2138984320
	.long	-2146431168
	.long	-2139062144
	.long	-2139062144
	.long	-2138984320
	.long	-2146431168
	.long	-2139062144
	.long	-2139062144
	.long	-2138984320
	.long	-2146431680
	.long	-2139062144
	.long	-2139062144
	.long	302499968
	.long	-2139062256
	.long	-2138865524
	.long	-2138800000
	.long	-1530297112
	.long	269615841
	.long	-1937735552
	.long	-2139061376
	.long	-394100096
	.long	-509294204
	.long	-2146430462
	.long	-2138275712
	.long	-2139062141
	.long	-2065137528
	.long	48342217
	.long	-2139090926
	.long	-1988062080
	.long	-2071953280
	.long	-913991552
	.long	302177764
	.long	-2139062256
	.long	-2138472300
	.long	-2138931072
	.long	-456555112
	.long	269615837
	.long	-1803517824
	.long	-2139062144
	.long	-1333622144
	.long	-521877359
	.long	-2146430462
	.long	-2137751424
	.long	-2139062144
	.long	-1850703736
	.long	48293064
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090931
	.long	-2139062144
	.long	-2139062144
	.long	269617096
	.long	-1937735552
	.long	-2139061376
	.long	-394230656
	.long	-509294204
	.long	-2146430462
	.long	-2138275712
	.long	-2139062141
	.long	-2065137022
	.long	48342217
	.long	-2139090926
	.long	-2088727424
	.long	-2004844416
	.long	-914036608
	.long	302178724
	.long	-2139062256
	.long	-2138472300
	.long	-2138800000
	.long	-456555112
	.long	269615837
	.long	-1803517824
	.long	-2139059840
	.long	-1736408448
	.long	-572208763
	.long	-2146430462
	.long	-2137751424
	.long	-2139062144
	.long	-1850703222
	.long	48293064
	.long	-2139090926
	.long	-2139057024
	.long	-2004844416
	.long	-929976192
	.long	251846884
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	255885441
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	255885441
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	255885441
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	222331009
	.long	-2139062256
	.long	-2139062144
	.long	-931102592
	.long	-2146431737
	.long	-2139062144
	.long	-2139062144
	.long	218613888
	.long	-2139062256
	.long	-2139062144
	.long	-931102592
	.long	-2146431737
	.long	-2139062144
	.long	-2139062144
	.long	252168320
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	222331009
	.long	-2139054064
	.long	-2139062132
	.long	-931102592
	.long	-1609559545
	.long	-2138275712
	.long	-2138996343
	.long	-1093107582
	.long	47506632
	.long	-2136993774
	.long	-2139059072
	.long	-1971289727
	.long	-939865984
	.long	302178276
	.long	-2139054064
	.long	-2122284916
	.long	-2138537855
	.long	-456656184
	.long	269615839
	.long	-1803517792
	.long	-2122218624
	.long	-931102080
	.long	-1834563599
	.long	-1609559551
	.long	-2137751424
	.long	-2138996349
	.long	-238518136
	.long	26388167
	.long	-2136993777
	.long	-2139054976
	.long	-2139061887
	.long	1082163632
	.long	-2139090931
	.long	-2139062144
	.long	-2139062144
	.long	269617096
	.long	-1937735552
	.long	-2139061376
	.long	-394230656
	.long	-509294204
	.long	-2146430462
	.long	-2138275712
	.long	-2139062141
	.long	-2065137022
	.long	48342217
	.long	-2139090926
	.long	-2088727424
	.long	-2004844416
	.long	-914036608
	.long	302178724
	.long	-2139062256
	.long	-2138472300
	.long	-2138800000
	.long	-456555112
	.long	269615837
	.long	-1803517824
	.long	-2139059840
	.long	-1736408448
	.long	-572208763
	.long	-2146430462
	.long	-2137751424
	.long	-2139062144
	.long	-1850703222
	.long	48293064
	.long	-2139090926
	.long	-2139057024
	.long	-2004844416
	.long	-929976192
	.long	251846884
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	255885441
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	255885441
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	255885441
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	222331009
	.long	-2139062256
	.long	-2139062144
	.long	-931102592
	.long	-2146431737
	.long	-2139062144
	.long	-2139062144
	.long	218613888
	.long	-2139062256
	.long	-2139062144
	.long	-931102592
	.long	-2146431737
	.long	-2139062144
	.long	-2139062144
	.long	252168320
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	222331009
	.long	-2139054064
	.long	-2139062132
	.long	-931102592
	.long	-1609559545
	.long	-2138275712
	.long	-2138996343
	.long	-1093107582
	.long	47506632
	.long	-2136993774
	.long	-2139059072
	.long	-1971289727
	.long	-939865984
	.long	302178276
	.long	-2139054064
	.long	-2122284916
	.long	-2138537855
	.long	-456656184
	.long	269615839
	.long	-1803517792
	.long	-2122218624
	.long	-931102080
	.long	-1834563599
	.long	-1609559551
	.long	-2137751424
	.long	-2138996349
	.long	-238518136
	.long	26388167
	.long	-2136993777
	.long	-2139054976
	.long	-2139061887
	.long	1082163632
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090931
	.long	-2139062144
	.long	-2139062144
	.long	269289416
	.long	-2139062144
	.long	-2139062144
	.long	130580608
	.long	-2139090931
	.long	-2139062144
	.long	-2139062144
	.long	269289416
	.long	-2139062144
	.long	-2139062144
	.long	130580608
	.long	-2139090926
	.long	-2088730496
	.long	-2105507712
	.long	-926838656
	.long	302170244
	.long	-2139062256
	.long	-2138865536
	.long	-2138537856
	.long	-2067218032
	.long	269288128
	.long	-2139062144
	.long	-2139062144
	.long	130580608
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090926
	.long	-2088730496
	.long	-2105507712
	.long	-926838656
	.long	302170244
	.long	-2139062256
	.long	-2138865536
	.long	-2138537856
	.long	-2067218032
	.long	269419200
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269435008
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269435008
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269435008
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269303936
	.long	-2139062144
	.long	-2139062144
	.long	130580608
	.long	-2139090931
	.long	-2139062144
	.long	-2139062144
	.long	269289416
	.long	-2139062144
	.long	-2139062144
	.long	130580608
	.long	-2139090931
	.long	-2139062144
	.long	-2139062144
	.long	269617096
	.long	-2139062144
	.long	-2139061376
	.long	-1870626176
	.long	-1065039679
	.long	-2146430462
	.long	-2139062144
	.long	-2139062141
	.long	-1047494520
	.long	46171336
	.long	-2139090931
	.long	-2139062144
	.long	-2139062144
	.long	269420488
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269631616
	.long	-2139062144
	.long	-2139061376
	.long	-1870626176
	.long	-1065039679
	.long	-2146430462
	.long	-2139062144
	.long	-2139062141
	.long	-1047494520
	.long	46171336
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090931
	.long	-2139062144
	.long	-2139062144
	.long	269289416
	.long	-2139062144
	.long	-2139062144
	.long	130580608
	.long	-2139090931
	.long	-2139062144
	.long	-2139062144
	.long	269289416
	.long	-2139062144
	.long	-2139062144
	.long	130580608
	.long	-2139090926
	.long	-2088730496
	.long	-2105507712
	.long	-926838656
	.long	302170244
	.long	-2139062256
	.long	-2138865536
	.long	-2138537856
	.long	-2067218032
	.long	269288128
	.long	-2139062144
	.long	-2139062144
	.long	130580608
	.long	-2139090929
	.long	-2139062144
	.long	-2139062144
	.long	1082163632
	.long	-2139090926
	.long	-2088730496
	.long	-2105507712
	.long	-926838656
	.long	302170244
	.long	-2139062256
	.long	-2138865536
	.long	-2138537856
	.long	-2067218032
	.long	269419200
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269303936
	.long	-1937735520
	.long	-2139062144
	.long	130580608
	.long	-2136993774
	.long	-1988064128
	.long	-2105507455
	.long	-927016832
	.long	302175460
	.long	-2139054064
	.long	-2122284916
	.long	-2138406783
	.long	-456656184
	.long	269615839
	.long	-1937735520
	.long	-2122219392
	.long	-931100544
	.long	-538654726
	.long	-1609559550
	.long	-2137751424
	.long	-2138996349
	.long	-238518142
	.long	26388167
	.long	-2136993774
	.long	-2088725376
	.long	-2004844159
	.long	-940455808
	.long	251761318
	.long	-2139054064
	.long	-2122284900
	.long	-1333755775
	.long	255885441
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	255885441
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	255885441
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	255885441
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	222331009
	.long	-2139062256
	.long	-2139062144
	.long	-931102592
	.long	-2146431737
	.long	-2139062144
	.long	-2139062144
	.long	218613888
	.long	-2139062256
	.long	-2139062144
	.long	-931102592
	.long	-2146431737
	.long	-2139062144
	.long	-2139062144
	.long	302499968
	.long	-2139062256
	.long	-2138865536
	.long	-2138931072
	.long	-2067218032
	.long	269615808
	.long	-2139062144
	.long	-2139061376
	.long	-1870624640
	.long	-1065039679
	.long	-2146431742
	.long	-2139062144
	.long	-2139062144
	.long	252168320
	.long	-2139062256
	.long	-2139062144
	.long	-1333755776
	.long	306217089
	.long	-2139062256
	.long	-2138865536
	.long	-2138931072
	.long	-2067218032
	.long	269615808
	.long	-2139062144
	.long	-2139061376
	.long	-1870624640
	.long	-1065039679
	.long	-2146431230
	.long	-2139062144
	.long	-2139062144
	.long	-2138984320
	.long	-1609560768
	.long	-2138275712
	.long	-2139062144
	.long	302499968
	.long	-2139054064
	.long	-2121695092
	.long	-2138931071
	.long	-456605992
	.long	269615828
	.long	-1937735520
	.long	-2122219392
	.long	-931100032
	.long	-538654726
	.long	-1609559550
	.long	-2138275712
	.long	-2138996352
	.long	-87523192
	.long	48227527
	.long	-2136993774
	.long	-2088725376
	.long	-2105507455
	.long	-940455808
	.long	302092966
	.long	-2139054064
	.long	-2122088300
	.long	-2138537855
	.long	-1496845880
	.long	269418898
	.long	-1669300064
	.long	-2122219392
	.long	-2119139200
	.long	269631616
	.long	-2139062144
	.long	-2139061376
	.long	-796753280
	.long	-578500415
	.long	-2146430462
	.long	-2139062144
	.long	-2139062141
	.long	-1043300216
	.long	48071880
	.long	-2139090931
	.long	-2139062144
	.long	-2139062144
	.long	269420488
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269631616
	.long	-2139062144
	.long	-2139061376
	.long	-796753280
	.long	-578500415
	.long	-2146430462
	.long	-2139062144
	.long	-2139062141
	.long	-1043300216
	.long	48071880
	.long	-2136993779
	.long	-2139059072
	.long	-2139062144
	.long	269617096
	.long	-1937735520
	.long	-2122217088
	.long	-796753280
	.long	-660289349
	.long	-1609559550
	.long	-2138275712
	.long	-2138996352
	.long	-125795702
	.long	48268487
	.long	-2136993774
	.long	-2139059072
	.long	-2004844159
	.long	-940015488
	.long	302178436
	.long	-2139054064
	.long	-2122088300
	.long	-2138931071
	.long	-1496845880
	.long	269615506
	.long	-1803517792
	.long	-2122218624
	.long	-931100544
	.long	-1834563599
	.long	-1609560319
	.long	-2137227136
	.long	-2138996352
	.long	-2138984320
	.long	-2146431168
	.long	-2139062144
	.long	-2139062144
	.long	-2138984320
	.long	-2146430912
	.long	-2139062144
	.long	-2139062144
	.long	-2138837888
	.long	269418880
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269435008
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269435008
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.long	269435008
	.long	-2139062144
	.long	-2139062144
	.long	-2119139200
	.word	16512
	.section .note.GNU-stack, ""
// -- Begin DWARF2 SEGMENT .debug_info
	.section .debug_info
.debug_info_seg:
	.align 1
.debug_info_seg:
	.4byte 0x00005325
	.2byte 0x0003
	.4byte .debug_abbrev_seg
	.byte 0x08
//	DW_TAG_compile_unit:
	.byte 0x01
//	DW_AT_comp_dir:
	.4byte .debug_str
//	DW_AT_name:
	.4byte .debug_str+0x37
//	DW_AT_producer:
	.4byte .debug_str+0x82
	.4byte .debug_str+0xee
//	DW_AT_language:
	.byte 0x01
//	DW_AT_use_UTF8:
	.byte 0x01
//	DW_AT_low_pc:
	.8byte 0x0000000000000000
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x17f0
//	DW_AT_stmt_list:
	.4byte .debug_line_seg
//	DW_TAG_base_type:
	.byte 0x02
//	DW_AT_byte_size:
	.byte 0x04
//	DW_AT_encoding:
	.byte 0x05
//	DW_AT_name:
	.4byte 0x00746e69
//	DW_TAG_subprogram:
	.byte 0x03
//	DW_AT_decl_line:
	.byte 0x2f
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x4c8
	.4byte .debug_str+0x4c8
//	DW_AT_low_pc:
	.8byte ..L10
//	DW_AT_high_pc:
	.8byte ..LNget_maxxgrid.13
//	DW_AT_external:
	.byte 0x01
//	DW_TAG_subprogram:
	.byte 0x03
//	DW_AT_decl_line:
	.byte 0x34
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x4ba
	.4byte .debug_str+0x4ba
//	DW_AT_low_pc:
	.8byte ..L3
//	DW_AT_high_pc:
	.8byte ..LNget_maxxgrid_.6
//	DW_AT_external:
	.byte 0x01
//	DW_TAG_subprogram:
	.byte 0x04
//	DW_AT_decl_line:
	.byte 0x3d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x4d5
	.4byte .debug_str+0x4d5
//	DW_AT_frame_base:
	.2byte 0x7702
	.byte 0x00
//	DW_AT_low_pc:
	.8byte ..L17
//	DW_AT_high_pc:
	.8byte ..LNget_grid_area_.120
//	DW_AT_external:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x3d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x3d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_formal_parameter:
	.byte 0x06
//	DW_AT_decl_line:
	.byte 0x3d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_formal_parameter:
	.byte 0x06
//	DW_AT_decl_line:
	.byte 0x3d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x3d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_inlined_subroutine:
	.byte 0x07
//	DW_AT_ranges:
	.4byte .debug_ranges_seg
//	DW_AT_entry_pc:
	.8byte ..LN16
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.byte 0x3f
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5a01
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.2byte 0x9102
	.byte 0x30
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x01d09103
	.byte 0x00
	.byte 0x00
//	DW_TAG_pointer_type:
	.byte 0x0e
//	DW_AT_type:
	.4byte 0x00000189
//	DW_TAG_const_type:
	.byte 0x0f
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_pointer_type:
	.byte 0x0e
//	DW_AT_type:
	.4byte 0x00000193
//	DW_TAG_const_type:
	.byte 0x0f
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_base_type:
	.byte 0x10
//	DW_AT_byte_size:
	.byte 0x08
//	DW_AT_encoding:
	.byte 0x04
//	DW_AT_name:
	.4byte .debug_str+0x4ee
//	DW_TAG_pointer_type:
	.byte 0x0e
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_subprogram:
	.byte 0x11
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_declaration:
	.byte 0x01
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x4fa
	.4byte .debug_str+0x4fa
//	DW_AT_external:
	.byte 0x01
//	DW_AT_inline:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000019f
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x13
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.byte 0xa0
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x13
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x13
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.byte 0xa0
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x13
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x15
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_frame_base:
	.2byte 0x7702
	.byte 0x00
//	DW_AT_low_pc:
	.8byte ..L52
//	DW_AT_high_pc:
	.8byte ..LNget_grid_area.227
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_formal_parameter:
	.byte 0x06
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_formal_parameter:
	.byte 0x06
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5a01
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.2byte 0x9102
	.byte 0x30
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x01d09103
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x04
//	DW_AT_decl_line:
	.byte 0x5b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x517
	.4byte .debug_str+0x517
//	DW_AT_frame_base:
	.2byte 0x7702
	.byte 0x00
//	DW_AT_low_pc:
	.8byte ..L87
//	DW_AT_high_pc:
	.8byte ..LNget_grid_area_no_adjust.328
//	DW_AT_external:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x5b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x5b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_formal_parameter:
	.byte 0x06
//	DW_AT_decl_line:
	.byte 0x5b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_formal_parameter:
	.byte 0x06
//	DW_AT_decl_line:
	.byte 0x5b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x5b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x5d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x5d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x5d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x5d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x5d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5a01
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x5d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x5e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x0000035b
//	DW_AT_location:
	.2byte 0x9102
	.byte 0x30
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x5e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x00000364
//	DW_AT_location:
	.4byte 0x01d09103
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x13
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.byte 0xa0
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x13
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x13
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.byte 0xa0
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x13
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x11
//	DW_AT_decl_line:
	.byte 0x5b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_declaration:
	.byte 0x01
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x517
	.4byte .debug_str+0x517
//	DW_AT_external:
	.byte 0x01
//	DW_AT_inline:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000019f
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x16
//	DW_AT_decl_line:
	.byte 0x79
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x52f
	.4byte .debug_str+0x52f
//	DW_AT_frame_base:
	.2byte 0x7702
	.byte 0x00
//	DW_AT_low_pc:
	.8byte ..L120
//	DW_AT_high_pc:
	.8byte ..LNcreate_xgrid_1dx2d_order1_.1140
//	DW_AT_external:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x79
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x54a
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x79
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x552
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x79
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x55a
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x79
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x563
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x7a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x54b
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x7a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x553
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x7a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x10
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x7a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x18
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x7b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x56c
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x20
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x7b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x574
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x28
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x7b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x579
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x30
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x7b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x38
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x7b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x584
//	DW_AT_location:
	.4byte 0x00c07603
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x7b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x58a
//	DW_AT_location:
	.4byte 0x00c87603
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x7d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x595
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_inlined_subroutine:
	.byte 0x07
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x30
//	DW_AT_entry_pc:
	.8byte ..LN343
//	DW_AT_abstract_origin:
	.4byte 0x0000085b
//	DW_AT_call_line:
	.byte 0x7f
//	DW_AT_call_column:
	.byte 0x0c
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x85
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x54a
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x85
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x552
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x85
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x55a
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x85
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x563
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x85
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x54b
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x86
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x553
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x86
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x86
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x87
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x56c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x87
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x574
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x87
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x579
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x87
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x88
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x584
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x88
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x58a
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x8b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x8b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x8b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5001
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x8b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5a01
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x8b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5c9
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x8b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ce
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x8c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3169
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x8c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x316a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x8c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3269
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x8c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x326a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x8c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x595
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x8d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5d3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6601
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x8d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5da
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6101
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x8d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5e1
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6401
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x8d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5e8
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x8d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000008c8
//	DW_AT_location:
	.4byte 0x07c09103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x8d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000008d2
//	DW_AT_location:
	.4byte 0x11909103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x8d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ef
//	DW_AT_type:
	.4byte 0x000008dc
//	DW_AT_location:
	.4byte 0x0ad09103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x8d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5f5
//	DW_AT_type:
	.4byte 0x000008e6
//	DW_AT_location:
	.4byte 0x0de09103
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x8e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5fb
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x8e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x603
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x8e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x60c
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x8f
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x615
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x8f
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x61a
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_inlined_subroutine:
	.byte 0x07
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x90
//	DW_AT_entry_pc:
	.8byte ..LN582
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.byte 0xa4
//	DW_AT_call_column:
	.byte 0x06
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5301
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.2byte 0x9102
	.byte 0x00
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x01a09103
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x07
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0xc0
//	DW_AT_entry_pc:
	.8byte ..LN667
//	DW_AT_abstract_origin:
	.4byte 0x0000036d
//	DW_AT_call_line:
	.byte 0xa6
//	DW_AT_call_column:
	.byte 0x05
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x5b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x5b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x5b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x5b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x5b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x5d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x5d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5301
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x5d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x5d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x5d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x5d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x5e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x0000035b
//	DW_AT_location:
	.4byte 0x02c09103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x5e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x00000364
//	DW_AT_location:
	.4byte 0x03e09103
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x07
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0xf0
//	DW_AT_entry_pc:
	.8byte ..LN749
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.byte 0xa8
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5001
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.4byte 0x05809103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x06a09103
	.byte 0x00
	.byte 0x00
	.byte 0x00
//	DW_TAG_pointer_type:
	.byte 0x0e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_subprogram:
	.byte 0x17
//	DW_AT_decl_line:
	.byte 0x85
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_declaration:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x59c
	.4byte .debug_str+0x59c
//	DW_AT_external:
	.byte 0x01
//	DW_AT_inline:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000019f
	.byte 0x00
//	DW_TAG_base_type:
	.byte 0x10
//	DW_AT_byte_size:
	.byte 0x08
//	DW_AT_encoding:
	.byte 0x07
//	DW_AT_name:
	.4byte .debug_str+0x5b6
//	DW_TAG_pointer_type:
	.byte 0x0e
//	DW_AT_type:
	.4byte 0x000008c1
//	DW_TAG_base_type:
	.byte 0x10
//	DW_AT_byte_size:
	.byte 0x00
//	DW_AT_encoding:
	.byte 0x05
//	DW_AT_name:
	.4byte .debug_str+0x5c4
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x15
//	DW_AT_decl_line:
	.byte 0x85
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_abstract_origin:
	.4byte 0x0000085b
//	DW_AT_frame_base:
	.2byte 0x7702
	.byte 0x00
//	DW_AT_low_pc:
	.8byte ..L186
//	DW_AT_high_pc:
	.8byte ..LNcreate_xgrid_1dx2d_order1.1952
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x85
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x54a
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x85
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x552
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x85
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x55a
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x85
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x563
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x85
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x54b
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x86
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x553
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x86
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x10
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x86
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x18
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x87
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x56c
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x20
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x87
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x574
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x28
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x87
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x579
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x30
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x87
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x38
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x88
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x584
//	DW_AT_location:
	.4byte 0x00c07603
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0x88
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x58a
//	DW_AT_location:
	.4byte 0x00c87603
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x8b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x8b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x8b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5001
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x8b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5a01
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x8b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5c9
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x8b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ce
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x8c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3169
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x8c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x316a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x8c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3269
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x8c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x326a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x8c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x595
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x8d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5d3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6601
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x8d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5da
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6101
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x8d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5e1
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6401
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x8d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5e8
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x8d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000008c8
//	DW_AT_location:
	.4byte 0x07c09103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x8d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000008d2
//	DW_AT_location:
	.4byte 0x11909103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x8d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ef
//	DW_AT_type:
	.4byte 0x000008dc
//	DW_AT_location:
	.4byte 0x0ad09103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x8d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5f5
//	DW_AT_type:
	.4byte 0x000008e6
//	DW_AT_location:
	.4byte 0x0de09103
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x8e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5fb
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x8e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x603
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x8e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x60c
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x8f
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x615
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x8f
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x61a
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_lexical_block:
	.byte 0x19
//	DW_AT_decl_line:
	.byte 0xb0
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_low_pc:
	.8byte ..LN1665
//	DW_AT_high_pc:
	.8byte ..LN1874
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0xb1
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0xb1
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x55d
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0xb2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x61f
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6301
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x07
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x120
//	DW_AT_entry_pc:
	.8byte ..LN1561
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.byte 0xa8
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5001
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.4byte 0x05809103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x06a09103
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x07
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x150
//	DW_AT_entry_pc:
	.8byte ..LN1479
//	DW_AT_abstract_origin:
	.4byte 0x0000036d
//	DW_AT_call_line:
	.byte 0xa6
//	DW_AT_call_column:
	.byte 0x05
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x5b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x5b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x5b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x5b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x5b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x5d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x5d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5301
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x5d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x5d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x5d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x5d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x5e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x0000035b
//	DW_AT_location:
	.4byte 0x02c09103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x5e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x00000364
//	DW_AT_location:
	.4byte 0x03e09103
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x07
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x180
//	DW_AT_entry_pc:
	.8byte ..LN1394
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.byte 0xa4
//	DW_AT_call_column:
	.byte 0x06
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5301
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.2byte 0x9102
	.byte 0x00
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x01a09103
	.byte 0x00
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x16
//	DW_AT_decl_line:
	.byte 0xe1
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x657
	.4byte .debug_str+0x657
//	DW_AT_frame_base:
	.2byte 0x7702
	.byte 0x00
//	DW_AT_low_pc:
	.8byte ..L269
//	DW_AT_high_pc:
	.8byte ..LNcreate_xgrid_1dx2d_order2_.3325
//	DW_AT_external:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xe1
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x54a
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xe1
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x552
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xe1
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x55a
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xe1
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x563
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xe2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x54b
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xe2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x553
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xe2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x10
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xe2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x18
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xe3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x56c
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x20
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xe3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x574
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x28
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xe3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x579
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x30
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xe3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x38
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xe3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x584
//	DW_AT_location:
	.4byte 0x00c07603
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xe4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x58a
//	DW_AT_location:
	.4byte 0x00c87603
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xe4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x672
//	DW_AT_location:
	.4byte 0x00d07603
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xe4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x67d
//	DW_AT_location:
	.4byte 0x00d87603
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0xe6
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x595
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_inlined_subroutine:
	.byte 0x07
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x1b0
//	DW_AT_entry_pc:
	.8byte ..LN2206
//	DW_AT_abstract_origin:
	.4byte 0x00001214
//	DW_AT_call_line:
	.byte 0xe7
//	DW_AT_call_column:
	.byte 0x0c
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0xec
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x54a
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0xec
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x552
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0xec
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x55a
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0xec
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x563
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0xed
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x54b
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0xed
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x553
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0xed
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0xed
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0xee
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x56c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0xee
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x574
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0xee
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x579
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0xee
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0xee
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x584
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0xef
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x58a
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0xef
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x672
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0xef
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x67d
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0xf2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0xf2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0xf2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0xf2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5a01
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0xf2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5c9
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0xf2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ce
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0xf3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3169
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0xf3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x316a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0xf3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3269
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0xf3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x326a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0xf3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x595
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0xf3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0xf4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5d3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6601
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0xf4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5da
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6101
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0xf4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5e1
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6401
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0xf4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5e8
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0xf4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000049e9
//	DW_AT_location:
	.4byte 0x09a09103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0xf4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000049f3
//	DW_AT_location:
	.4byte 0x15a09103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0xf4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ef
//	DW_AT_type:
	.4byte 0x000049fd
//	DW_AT_location:
	.4byte 0x0cb09103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0xf4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5f5
//	DW_AT_type:
	.4byte 0x00004a07
//	DW_AT_location:
	.4byte 0x0fc09103
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0xf5
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5fb
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0xf5
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x603
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0xf5
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x60c
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0xf6
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x615
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0xf6
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x61a
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x210
//	DW_AT_entry_pc:
	.8byte ..LN2438
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.2byte 0x0109
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.2byte 0x9102
	.byte 0x10
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x01b09103
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x240
//	DW_AT_entry_pc:
	.8byte ..LN2526
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.2byte 0x010a
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5b01
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.4byte 0x02d09103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x03f09103
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x280
//	DW_AT_entry_pc:
	.8byte ..LN2629
//	DW_AT_abstract_origin:
	.4byte 0x00004dd1
//	DW_AT_call_line:
	.2byte 0x012b
//	DW_AT_call_column:
	.byte 0x19
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.2byte 0x006e
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.4byte .debug_str+0x678
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x03bc
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6a7
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x03bd
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x310
//	DW_AT_entry_pc:
	.8byte ..LN2627
//	DW_AT_abstract_origin:
	.4byte 0x00004cf0
//	DW_AT_call_line:
	.2byte 0x012c
//	DW_AT_call_column:
	.byte 0x19
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.2byte 0x006e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x039d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6b3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x039e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
	.byte 0x00
	.byte 0x00
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x17
//	DW_AT_decl_line:
	.byte 0xec
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_declaration:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x688
	.4byte .debug_str+0x688
//	DW_AT_external:
	.byte 0x01
//	DW_AT_inline:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000019f
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x15
//	DW_AT_decl_line:
	.byte 0xec
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_abstract_origin:
	.4byte 0x00001214
//	DW_AT_frame_base:
	.2byte 0x7702
	.byte 0x00
//	DW_AT_low_pc:
	.8byte ..L350
//	DW_AT_high_pc:
	.8byte ..LNcreate_xgrid_1dx2d_order2.4459
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xec
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x54a
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xec
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x552
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xec
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x55a
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xec
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x563
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xed
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x54b
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xed
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x553
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xed
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x10
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xed
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x18
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xee
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x56c
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x20
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xee
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x574
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x28
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xee
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x579
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x30
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xee
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x38
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xee
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x584
//	DW_AT_location:
	.4byte 0x00c07603
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xef
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x58a
//	DW_AT_location:
	.4byte 0x00c87603
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xef
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x672
//	DW_AT_location:
	.4byte 0x00d07603
//	DW_TAG_formal_parameter:
	.byte 0x05
//	DW_AT_decl_line:
	.byte 0xef
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x67d
//	DW_AT_location:
	.4byte 0x00d87603
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0xf2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0xf2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0xf2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0xf2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5a01
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0xf2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5c9
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0xf2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ce
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0xf3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3169
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0xf3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x316a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0xf3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3269
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0xf3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x326a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0xf3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x595
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0xf3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0xf4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5d3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6601
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0xf4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5da
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6101
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0xf4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5e1
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6401
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0xf4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5e8
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0xf4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000049e9
//	DW_AT_location:
	.4byte 0x09a09103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0xf4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000049f3
//	DW_AT_location:
	.4byte 0x15a09103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0xf4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ef
//	DW_AT_type:
	.4byte 0x000049fd
//	DW_AT_location:
	.4byte 0x0cb09103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0xf4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5f5
//	DW_AT_type:
	.4byte 0x00004a07
//	DW_AT_location:
	.4byte 0x0fc09103
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0xf5
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5fb
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0xf5
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x603
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0xf5
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x60c
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0xf6
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x615
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0xf6
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x61a
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_lexical_block:
	.byte 0x1f
//	DW_AT_decl_line:
	.2byte 0x0112
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_low_pc:
	.8byte ..LN3761
//	DW_AT_high_pc:
	.8byte ..LN4423
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0113
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0113
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x55d
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0114
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6ba
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6301
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0114
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6c0
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x470
//	DW_AT_entry_pc:
	.8byte ..LN3761
//	DW_AT_abstract_origin:
	.4byte 0x00004cf0
//	DW_AT_call_line:
	.2byte 0x012c
//	DW_AT_call_column:
	.byte 0x19
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.2byte 0x006e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x039d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6b3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x039e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x5d0
//	DW_AT_entry_pc:
	.8byte ..LN3763
//	DW_AT_abstract_origin:
	.4byte 0x00004dd1
//	DW_AT_call_line:
	.2byte 0x012b
//	DW_AT_call_column:
	.byte 0x19
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.2byte 0x006e
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.4byte .debug_str+0x678
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x03bc
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6a7
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x03bd
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
	.byte 0x00
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x660
//	DW_AT_entry_pc:
	.8byte ..LN3660
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.2byte 0x010a
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5b01
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.4byte 0x02d09103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x03f09103
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x6a0
//	DW_AT_entry_pc:
	.8byte ..LN3572
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.2byte 0x0109
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.2byte 0x9102
	.byte 0x10
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x01b09103
	.byte 0x00
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x21
//	DW_AT_decl_line:
	.2byte 0x0145
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6cb
	.4byte .debug_str+0x6cb
//	DW_AT_frame_base:
	.2byte 0x7702
	.byte 0x00
//	DW_AT_low_pc:
	.8byte ..L431
//	DW_AT_high_pc:
	.8byte ..LNcreate_xgrid_2dx1d_order1_.5181
//	DW_AT_external:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0145
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x54a
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0145
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x552
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0145
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x55a
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0145
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x563
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0146
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x54b
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0146
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x553
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0146
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x10
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0146
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x18
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0147
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x56c
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x20
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0147
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x574
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x28
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0147
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x579
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x30
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0147
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x38
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0148
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x584
//	DW_AT_location:
	.4byte 0x00c07603
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0148
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x58a
//	DW_AT_location:
	.4byte 0x00c87603
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x014a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x595
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x6d0
//	DW_AT_entry_pc:
	.8byte ..LN4472
//	DW_AT_abstract_origin:
	.4byte 0x00001b21
//	DW_AT_call_line:
	.2byte 0x014c
//	DW_AT_call_column:
	.byte 0x0c
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0151
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x54a
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0151
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x552
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0151
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x55a
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0151
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x563
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0151
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x54b
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0152
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x553
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0152
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0152
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0153
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x56c
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0153
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x574
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0153
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x579
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0153
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0154
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x584
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0154
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x58a
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0157
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0157
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5001
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0157
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0157
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5301
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0157
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5c9
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0157
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ce
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0158
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3169
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0158
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x316a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0158
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3269
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0158
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x326a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0158
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x595
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0159
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5d3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6601
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0159
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5da
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0159
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5e1
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6401
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0159
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5e8
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0159
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x00004dfa
//	DW_AT_location:
	.4byte 0x05a89103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0159
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x00004e04
//	DW_AT_location:
	.4byte 0x0ed89103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0159
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ef
//	DW_AT_type:
	.4byte 0x00004e0e
//	DW_AT_location:
	.4byte 0x08b89103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0159
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5f5
//	DW_AT_type:
	.4byte 0x00004e18
//	DW_AT_location:
	.4byte 0x0bc89103
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x015a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5fb
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x015a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x603
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x015a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x60c
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x015b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x615
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x015b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x61a
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x730
//	DW_AT_entry_pc:
	.8byte ..LN4700
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.2byte 0x016d
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5001
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.2byte 0x9102
	.byte 0x28
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x01c89103
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x760
//	DW_AT_entry_pc:
	.8byte ..LN4791
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.2byte 0x016e
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.4byte 0x02e89103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x04889103
	.byte 0x00
	.byte 0x00
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x24
//	DW_AT_decl_line:
	.2byte 0x0151
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_declaration:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6e6
	.4byte .debug_str+0x6e6
//	DW_AT_external:
	.byte 0x01
//	DW_AT_inline:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000019f
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x25
//	DW_AT_decl_line:
	.2byte 0x0151
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_abstract_origin:
	.4byte 0x00001b21
//	DW_AT_frame_base:
	.2byte 0x7702
	.byte 0x00
//	DW_AT_low_pc:
	.8byte ..L493
//	DW_AT_high_pc:
	.8byte ..LNcreate_xgrid_2dx1d_order1.5903
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0151
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x54a
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0151
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x552
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0151
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x55a
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0151
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x563
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0151
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x54b
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0152
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x553
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0152
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x10
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0152
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x18
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0153
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x56c
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x20
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0153
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x574
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x28
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0153
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x579
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x30
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0153
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x38
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0154
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x584
//	DW_AT_location:
	.4byte 0x00c07603
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0154
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x58a
//	DW_AT_location:
	.4byte 0x00c87603
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0157
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0157
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5001
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0157
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0157
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5301
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0157
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5c9
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0157
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ce
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0158
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3169
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0158
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x316a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0158
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3269
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0158
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x326a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0158
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x595
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0159
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5d3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6601
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0159
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5da
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0159
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5e1
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6401
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0159
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5e8
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0159
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x00004dfa
//	DW_AT_location:
	.4byte 0x05a89103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0159
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x00004e04
//	DW_AT_location:
	.4byte 0x0ed89103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0159
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ef
//	DW_AT_type:
	.4byte 0x00004e0e
//	DW_AT_location:
	.4byte 0x08b89103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0159
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5f5
//	DW_AT_type:
	.4byte 0x00004e18
//	DW_AT_location:
	.4byte 0x0bc89103
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x015a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5fb
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x015a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x603
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x015a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x60c
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x015b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x615
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x015b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x61a
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_lexical_block:
	.byte 0x1f
//	DW_AT_decl_line:
	.2byte 0x0177
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_low_pc:
	.8byte ..LN5613
//	DW_AT_high_pc:
	.8byte ..LN5839
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0178
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0178
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x55d
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0179
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x61f
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6301
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x790
//	DW_AT_entry_pc:
	.8byte ..LN5513
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.2byte 0x016e
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.4byte 0x02e89103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x04889103
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x7c0
//	DW_AT_entry_pc:
	.8byte ..LN5422
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.2byte 0x016d
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5001
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.2byte 0x9102
	.byte 0x28
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x01c89103
	.byte 0x00
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x21
//	DW_AT_decl_line:
	.2byte 0x01aa
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x700
	.4byte .debug_str+0x700
//	DW_AT_frame_base:
	.2byte 0x7702
	.byte 0x00
//	DW_AT_low_pc:
	.8byte ..L555
//	DW_AT_high_pc:
	.8byte ..LNcreate_xgrid_2dx1d_order2_.7062
//	DW_AT_external:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01aa
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x54a
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01aa
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x552
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01aa
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x55a
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01aa
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x563
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01ab
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x54b
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01ab
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x553
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01ab
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x10
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01ab
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x18
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01ac
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x56c
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x20
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01ac
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x574
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x28
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01ac
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x579
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x30
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01ac
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x38
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01ac
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x584
//	DW_AT_location:
	.4byte 0x00c07603
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01ad
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x58a
//	DW_AT_location:
	.4byte 0x00c87603
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01ad
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x672
//	DW_AT_location:
	.4byte 0x00d07603
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01ad
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x67d
//	DW_AT_location:
	.4byte 0x00d87603
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01af
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x595
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x7f0
//	DW_AT_entry_pc:
	.8byte ..LN5916
//	DW_AT_abstract_origin:
	.4byte 0x00002467
//	DW_AT_call_line:
	.2byte 0x01b0
//	DW_AT_call_column:
	.byte 0x0c
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x01b6
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x54a
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x01b6
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x552
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x01b6
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x55a
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x01b6
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x563
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x01b7
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x54b
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x01b7
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x553
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x01b7
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x01b7
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x01b8
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x56c
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x01b8
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x574
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x01b8
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x579
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x01b8
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x01b8
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x584
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x01b9
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x58a
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x01b9
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x672
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x01b9
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x67d
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x01bc
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x01bc
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5001
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x01bc
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x01bc
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5301
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01bc
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5c9
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01bc
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ce
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x01bd
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3169
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x01bd
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x316a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x01bd
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3269
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x01bd
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x326a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x01bd
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x595
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5e01
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x01bd
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x01be
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5d3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6601
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01be
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5da
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x01be
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5e1
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6401
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01be
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5e8
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x01be
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x00004e22
//	DW_AT_location:
	.4byte 0x09c09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x01be
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x00004e2c
//	DW_AT_location:
	.4byte 0x15a09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x01be
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ef
//	DW_AT_type:
	.4byte 0x00004e36
//	DW_AT_location:
	.4byte 0x0cd09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x01be
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5f5
//	DW_AT_type:
	.4byte 0x00004e40
//	DW_AT_location:
	.4byte 0x0fe09103
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01bf
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x615
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01bf
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x61a
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01c0
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5fb
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01c0
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x603
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01c0
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x60c
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01c1
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6c0
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x850
//	DW_AT_entry_pc:
	.8byte ..LN6150
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.2byte 0x01d4
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5a01
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.2byte 0x9102
	.byte 0x28
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x01c89103
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x880
//	DW_AT_entry_pc:
	.8byte ..LN6245
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.2byte 0x01d5
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5e01
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.4byte 0x02e89103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x04889103
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x8b0
//	DW_AT_entry_pc:
	.8byte ..LN6353
//	DW_AT_abstract_origin:
	.4byte 0x00004dd1
//	DW_AT_call_line:
	.2byte 0x01f8
//	DW_AT_call_column:
	.byte 0x19
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.2byte 0x006e
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.4byte .debug_str+0x678
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x03bc
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6a7
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x03bd
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x940
//	DW_AT_entry_pc:
	.8byte ..LN6351
//	DW_AT_abstract_origin:
	.4byte 0x00004cf0
//	DW_AT_call_line:
	.2byte 0x01f9
//	DW_AT_call_column:
	.byte 0x19
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.2byte 0x006e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x039d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6b3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x039e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
	.byte 0x00
	.byte 0x00
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x24
//	DW_AT_decl_line:
	.2byte 0x01b6
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_declaration:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x71b
	.4byte .debug_str+0x71b
//	DW_AT_external:
	.byte 0x01
//	DW_AT_inline:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000019f
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x25
//	DW_AT_decl_line:
	.2byte 0x01b6
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_abstract_origin:
	.4byte 0x00002467
//	DW_AT_frame_base:
	.2byte 0x7702
	.byte 0x00
//	DW_AT_low_pc:
	.8byte ..L636
//	DW_AT_high_pc:
	.8byte ..LNcreate_xgrid_2dx1d_order2.8221
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01b6
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x54a
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01b6
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x552
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01b6
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x55a
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01b6
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x563
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01b7
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x54b
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01b7
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x553
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01b7
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x10
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01b7
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x18
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01b8
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x56c
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x20
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01b8
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x574
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x28
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01b8
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x579
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x30
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01b8
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x38
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01b8
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x584
//	DW_AT_location:
	.4byte 0x00c07603
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01b9
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x58a
//	DW_AT_location:
	.4byte 0x00c87603
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01b9
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x672
//	DW_AT_location:
	.4byte 0x00d07603
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x01b9
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x67d
//	DW_AT_location:
	.4byte 0x00d87603
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x01bc
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x01bc
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5001
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x01bc
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x01bc
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5301
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01bc
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5c9
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01bc
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ce
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x01bd
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3169
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x01bd
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x316a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x01bd
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3269
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x01bd
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x326a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x01bd
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x595
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5e01
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x01bd
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x01be
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5d3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6601
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01be
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5da
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x01be
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5e1
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6401
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01be
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5e8
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x01be
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x00004e22
//	DW_AT_location:
	.4byte 0x09c09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x01be
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x00004e2c
//	DW_AT_location:
	.4byte 0x15a09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x01be
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ef
//	DW_AT_type:
	.4byte 0x00004e36
//	DW_AT_location:
	.4byte 0x0cd09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x01be
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5f5
//	DW_AT_type:
	.4byte 0x00004e40
//	DW_AT_location:
	.4byte 0x0fe09103
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01bf
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x615
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01bf
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x61a
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01c0
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5fb
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01c0
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x603
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01c0
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x60c
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01c1
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6c0
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_lexical_block:
	.byte 0x1f
//	DW_AT_decl_line:
	.2byte 0x01de
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_low_pc:
	.8byte ..LN7510
//	DW_AT_high_pc:
	.8byte ..LN8158
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01df
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x01df
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x55d
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x01e0
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6ba
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6301
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0xa50
//	DW_AT_entry_pc:
	.8byte ..LN7510
//	DW_AT_abstract_origin:
	.4byte 0x00004cf0
//	DW_AT_call_line:
	.2byte 0x01f9
//	DW_AT_call_column:
	.byte 0x19
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.2byte 0x006e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x039d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6b3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x039e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0xb60
//	DW_AT_entry_pc:
	.8byte ..LN7512
//	DW_AT_abstract_origin:
	.4byte 0x00004dd1
//	DW_AT_call_line:
	.2byte 0x01f8
//	DW_AT_call_column:
	.byte 0x19
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.2byte 0x006e
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.4byte .debug_str+0x678
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x03bc
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6a7
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x03bd
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
	.byte 0x00
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0xbf0
//	DW_AT_entry_pc:
	.8byte ..LN7404
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.2byte 0x01d5
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5e01
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.4byte 0x02e89103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x04889103
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0xc20
//	DW_AT_entry_pc:
	.8byte ..LN7309
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.2byte 0x01d4
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5a01
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.2byte 0x9102
	.byte 0x28
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x01c89103
	.byte 0x00
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x21
//	DW_AT_decl_line:
	.2byte 0x0214
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x735
	.4byte .debug_str+0x735
//	DW_AT_frame_base:
	.2byte 0x7702
	.byte 0x00
//	DW_AT_low_pc:
	.8byte ..L717
//	DW_AT_high_pc:
	.8byte ..LNcreate_xgrid_2dx2d_order1_.9027
//	DW_AT_external:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0214
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x54a
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0214
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x552
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0214
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x55a
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0214
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x563
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0215
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x54b
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0215
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x553
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0215
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x10
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0215
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x18
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0216
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x56c
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x20
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0216
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x574
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x28
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0216
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x579
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x30
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0216
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x38
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0217
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x584
//	DW_AT_location:
	.4byte 0x00c07603
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0217
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x58a
//	DW_AT_location:
	.4byte 0x00c87603
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0219
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x595
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0xc50
//	DW_AT_entry_pc:
	.8byte ..LN8232
//	DW_AT_abstract_origin:
	.4byte 0x000030d3
//	DW_AT_call_line:
	.2byte 0x021b
//	DW_AT_call_column:
	.byte 0x0c
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0221
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x54a
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0221
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x552
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0221
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x55a
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0221
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x563
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0222
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x54b
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0222
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x553
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0222
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0222
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0223
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x56c
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0223
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x574
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0223
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x579
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0223
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0224
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x584
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0224
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x58a
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5b01
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5a01
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5c9
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ce
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x76a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x76f
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x595
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5b01
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x774
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x77a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0228
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x306e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0228
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x316e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0228
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x326e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0228
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x336e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0228
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3169
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0228
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x316a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0228
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3269
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0228
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x326a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0228
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006c
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0229
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x780
//	DW_AT_type:
	.4byte 0x00004e4a
//	DW_AT_location:
	.4byte 0x05a09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0229
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x786
//	DW_AT_type:
	.4byte 0x00004e54
//	DW_AT_location:
	.4byte 0x08c09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0229
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x78c
//	DW_AT_type:
	.4byte 0x00004e5e
//	DW_AT_location:
	.4byte 0x0bd09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0229
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x792
//	DW_AT_type:
	.4byte 0x00004e68
//	DW_AT_location:
	.4byte 0x0ee09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0229
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ef
//	DW_AT_type:
	.4byte 0x00004e72
//	DW_AT_location:
	.4byte 0x12809103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0229
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5f5
//	DW_AT_type:
	.4byte 0x00004e7c
//	DW_AT_location:
	.4byte 0x15a09103
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x798
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7a3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7af
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7ba
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7c6
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7d1
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7dc
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7e8
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6c0
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5fb
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x603
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x60c
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0xcc0
//	DW_AT_entry_pc:
	.8byte ..LN8266
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.2byte 0x0239
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5001
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.2byte 0x9102
	.byte 0x18
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x01b89103
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0xcf0
//	DW_AT_entry_pc:
	.8byte ..LN8356
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.2byte 0x023a
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5a01
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.4byte 0x02d89103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x03f89103
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0xd20
//	DW_AT_entry_pc:
	.8byte ..LN8466
//	DW_AT_abstract_origin:
	.4byte 0x00004a11
//	DW_AT_call_line:
	.2byte 0x0260
//	DW_AT_call_column:
	.byte 0x15
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0352
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x7ff
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0352
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x807
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0352
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.4byte .debug_str+0x774
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0353
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x80f
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0353
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x817
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0353
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.4byte .debug_str+0x77a
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0354
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0354
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0356
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x81f
//	DW_AT_type:
	.4byte 0x00004e86
//	DW_AT_location:
	.4byte 0x18c09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0356
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x827
//	DW_AT_type:
	.4byte 0x00004e90
//	DW_AT_location:
	.4byte 0x1be09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x82f
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6f01
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x834
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6501
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x839
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6d01
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x83e
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6e01
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x843
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6401
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x848
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6101
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x84d
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6b01
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x852
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6a01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00317864
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6b01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00317964
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6c01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00327864
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6901
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00327964
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x857
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6a01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00317364
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6501
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00327364
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6601
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x55d
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5301
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x644
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5e01
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x650
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3169
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3269
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0xe00
//	DW_AT_entry_pc:
	.8byte ..LN8762
//	DW_AT_abstract_origin:
	.4byte 0x0000523c
//	DW_AT_call_line:
	.2byte 0x036d
//	DW_AT_call_column:
	.byte 0x14
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3078
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3079
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3178
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3179
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0467
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x86a
//	DW_AT_type:
	.4byte 0x00000193
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0468
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x870
//	DW_AT_type:
	.4byte 0x00000198
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0xe40
//	DW_AT_entry_pc:
	.8byte ..LN8466
//	DW_AT_abstract_origin:
	.4byte 0x0000523c
//	DW_AT_call_line:
	.2byte 0x0369
//	DW_AT_call_column:
	.byte 0x13
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3078
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3079
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3178
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3179
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0467
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x86a
//	DW_AT_type:
	.4byte 0x00000193
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0468
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x870
//	DW_AT_type:
	.4byte 0x00000198
	.byte 0x00
	.byte 0x00
	.byte 0x00
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x24
//	DW_AT_decl_line:
	.2byte 0x0221
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_declaration:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x750
	.4byte .debug_str+0x750
//	DW_AT_external:
	.byte 0x01
//	DW_AT_inline:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000019f
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x25
//	DW_AT_decl_line:
	.2byte 0x0221
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_abstract_origin:
	.4byte 0x000030d3
//	DW_AT_frame_base:
	.2byte 0x7702
	.byte 0x00
//	DW_AT_low_pc:
	.8byte ..L797
//	DW_AT_high_pc:
	.8byte ..LNcreate_xgrid_2dx2d_order1.9833
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0221
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x54a
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0221
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x552
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0221
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x55a
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0221
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x563
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0222
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x54b
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0222
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x553
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0222
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x10
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0222
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x18
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0223
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x56c
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x20
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0223
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x574
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x28
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0223
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x579
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x30
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0223
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x38
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0224
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x584
//	DW_AT_location:
	.4byte 0x00c07603
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0224
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x58a
//	DW_AT_location:
	.4byte 0x00c87603
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5b01
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5a01
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5c9
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ce
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x76a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x76f
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x595
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5b01
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x774
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0227
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x77a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0228
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x306e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0228
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x316e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0228
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x326e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0228
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x336e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0228
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3169
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0228
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x316a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0228
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3269
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0228
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x326a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0228
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006c
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0229
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x780
//	DW_AT_type:
	.4byte 0x00004e4a
//	DW_AT_location:
	.4byte 0x05a09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0229
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x786
//	DW_AT_type:
	.4byte 0x00004e54
//	DW_AT_location:
	.4byte 0x08c09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0229
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x78c
//	DW_AT_type:
	.4byte 0x00004e5e
//	DW_AT_location:
	.4byte 0x0bd09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0229
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x792
//	DW_AT_type:
	.4byte 0x00004e68
//	DW_AT_location:
	.4byte 0x0ee09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0229
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ef
//	DW_AT_type:
	.4byte 0x00004e72
//	DW_AT_location:
	.4byte 0x12809103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0229
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5f5
//	DW_AT_type:
	.4byte 0x00004e7c
//	DW_AT_location:
	.4byte 0x15a09103
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x798
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7a3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7af
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7ba
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7c6
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7d1
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7dc
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7e8
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6c0
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5fb
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x603
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x022c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x60c
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_lexical_block:
	.byte 0x1f
//	DW_AT_decl_line:
	.2byte 0x024a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_low_pc:
	.8byte ..LN9258
//	DW_AT_high_pc:
	.8byte ..LN9779
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x024b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x024b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x55d
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x024c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x61f
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6301
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0xe80
//	DW_AT_entry_pc:
	.8byte ..LN9272
//	DW_AT_abstract_origin:
	.4byte 0x00004a11
//	DW_AT_call_line:
	.2byte 0x0260
//	DW_AT_call_column:
	.byte 0x15
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0352
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x7ff
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0352
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x807
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0352
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.4byte .debug_str+0x774
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0353
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x80f
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0353
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x817
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0353
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.4byte .debug_str+0x77a
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0354
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0354
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0356
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x81f
//	DW_AT_type:
	.4byte 0x00004e86
//	DW_AT_location:
	.4byte 0x18c09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0356
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x827
//	DW_AT_type:
	.4byte 0x00004e90
//	DW_AT_location:
	.4byte 0x1be09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x82f
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6f01
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x834
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6501
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x839
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6d01
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x83e
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6e01
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x843
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6401
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x848
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6101
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x84d
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6b01
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x852
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6a01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00317864
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6b01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00317964
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6c01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00327864
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6901
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00327964
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x857
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6a01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00317364
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6501
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00327364
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6601
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x55d
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5301
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x644
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5e01
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x650
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3169
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3269
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0xf60
//	DW_AT_entry_pc:
	.8byte ..LN9272
//	DW_AT_abstract_origin:
	.4byte 0x0000523c
//	DW_AT_call_line:
	.2byte 0x0369
//	DW_AT_call_column:
	.byte 0x13
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3078
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3079
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3178
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3179
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0467
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x86a
//	DW_AT_type:
	.4byte 0x00000193
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0468
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x870
//	DW_AT_type:
	.4byte 0x00000198
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0xfa0
//	DW_AT_entry_pc:
	.8byte ..LN9568
//	DW_AT_abstract_origin:
	.4byte 0x0000523c
//	DW_AT_call_line:
	.2byte 0x036d
//	DW_AT_call_column:
	.byte 0x14
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3078
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3079
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3178
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3179
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0467
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x86a
//	DW_AT_type:
	.4byte 0x00000193
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0468
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x870
//	DW_AT_type:
	.4byte 0x00000198
	.byte 0x00
	.byte 0x00
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0xfe0
//	DW_AT_entry_pc:
	.8byte ..LN9162
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.2byte 0x023a
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5a01
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.4byte 0x02d89103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x03f89103
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x1010
//	DW_AT_entry_pc:
	.8byte ..LN9072
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.2byte 0x0239
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5001
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.2byte 0x9102
	.byte 0x18
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x01b89103
	.byte 0x00
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x21
//	DW_AT_decl_line:
	.2byte 0x027e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x878
	.4byte .debug_str+0x878
//	DW_AT_frame_base:
	.2byte 0x7702
	.byte 0x00
//	DW_AT_low_pc:
	.8byte ..L877
//	DW_AT_high_pc:
	.8byte ..LNcreate_xgrid_2dx2d_order2_.11044
//	DW_AT_external:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x027e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x54a
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x027e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x552
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x027e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x55a
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x027e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x563
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x027f
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x54b
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x027f
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x553
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x027f
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x10
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x027f
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x18
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0280
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x56c
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x20
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0280
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x574
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x28
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0280
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x579
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x30
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0280
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x38
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0280
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x584
//	DW_AT_location:
	.4byte 0x00c07603
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0281
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x58a
//	DW_AT_location:
	.4byte 0x00c87603
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0281
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x672
//	DW_AT_location:
	.4byte 0x00d07603
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0281
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x67d
//	DW_AT_location:
	.4byte 0x00d87603
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0283
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x595
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x1040
//	DW_AT_entry_pc:
	.8byte ..LN9844
//	DW_AT_abstract_origin:
	.4byte 0x0000408e
//	DW_AT_call_line:
	.2byte 0x0284
//	DW_AT_call_column:
	.byte 0x0c
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x028a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x54a
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x028a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x552
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x028a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x55a
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x028a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x563
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x028b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x54b
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x028b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x553
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x028b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x028b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x028c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x56c
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x028c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x574
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x028c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x579
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x028c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x028c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x584
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x028d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x58a
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x028d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x672
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x028d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x67d
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5b01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5a01
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5c9
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ce
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x76a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x76f
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x595
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5001
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x774
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x77a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0291
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x306e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0291
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x316e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0291
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x326e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0291
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x336e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0291
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3169
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0291
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x316a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0291
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3269
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0291
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x326a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0291
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006c
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0291
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0292
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x780
//	DW_AT_type:
	.4byte 0x0000526f
//	DW_AT_location:
	.4byte 0x0d809103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0292
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x786
//	DW_AT_type:
	.4byte 0x00005279
//	DW_AT_location:
	.4byte 0x10a09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0292
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x78c
//	DW_AT_type:
	.4byte 0x00005283
//	DW_AT_location:
	.4byte 0x13c09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0292
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x792
//	DW_AT_type:
	.4byte 0x0000528d
//	DW_AT_location:
	.4byte 0x16d09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0292
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ef
//	DW_AT_type:
	.4byte 0x00005297
//	DW_AT_location:
	.4byte 0x19e09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0292
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5f5
//	DW_AT_type:
	.4byte 0x000052a1
//	DW_AT_location:
	.4byte 0x1d809103
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0293
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x798
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0293
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7a3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0293
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7af
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0293
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7ba
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0293
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7c6
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0293
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7d1
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0293
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7dc
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0293
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7e8
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0294
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6c0
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0294
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8ad
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0294
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8b5
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0295
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5fb
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0295
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x603
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0295
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x60c
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x10b0
//	DW_AT_entry_pc:
	.8byte ..LN9878
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.2byte 0x02a3
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5001
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.4byte 0x07f89103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x09989103
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x10e0
//	DW_AT_entry_pc:
	.8byte ..LN9968
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.2byte 0x02a4
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5a01
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.4byte 0x0ab89103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x0bd89103
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x1110
//	DW_AT_entry_pc:
	.8byte ..LN10085
//	DW_AT_abstract_origin:
	.4byte 0x00004a11
//	DW_AT_call_line:
	.2byte 0x02ca
//	DW_AT_call_column:
	.byte 0x16
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0352
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x7ff
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0352
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x807
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0352
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.4byte .debug_str+0x774
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0353
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x80f
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0353
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x817
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0353
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.4byte .debug_str+0x77a
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0354
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0354
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0356
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x81f
//	DW_AT_type:
	.4byte 0x00004e86
//	DW_AT_location:
	.4byte 0x20a09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0356
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x827
//	DW_AT_type:
	.4byte 0x00004e90
//	DW_AT_location:
	.4byte 0x23c09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x82f
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6f01
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x834
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6501
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x839
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6d01
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x83e
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6e01
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x843
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6401
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x848
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6101
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x84d
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6b01
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x852
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6a01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00317864
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6b01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00317964
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6c01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00327864
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6901
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00327964
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x857
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6a01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00317364
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6501
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00327364
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6601
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x55d
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5301
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x644
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5e01
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x650
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3169
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3269
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x11f0
//	DW_AT_entry_pc:
	.8byte ..LN10383
//	DW_AT_abstract_origin:
	.4byte 0x0000523c
//	DW_AT_call_line:
	.2byte 0x036d
//	DW_AT_call_column:
	.byte 0x14
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3078
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3079
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3178
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3179
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0467
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x86a
//	DW_AT_type:
	.4byte 0x00000193
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0468
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x870
//	DW_AT_type:
	.4byte 0x00000198
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x1230
//	DW_AT_entry_pc:
	.8byte ..LN10085
//	DW_AT_abstract_origin:
	.4byte 0x0000523c
//	DW_AT_call_line:
	.2byte 0x0369
//	DW_AT_call_column:
	.byte 0x13
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3078
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3079
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3178
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3179
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0467
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x86a
//	DW_AT_type:
	.4byte 0x00000193
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0468
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x870
//	DW_AT_type:
	.4byte 0x00000198
	.byte 0x00
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x1270
//	DW_AT_entry_pc:
	.8byte ..LN10064
//	DW_AT_abstract_origin:
	.4byte 0x00004dd1
//	DW_AT_call_line:
	.2byte 0x02cf
//	DW_AT_call_column:
	.byte 0x19
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.2byte 0x006e
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.4byte .debug_str+0x678
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x03bc
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6a7
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x03bd
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x12f0
//	DW_AT_entry_pc:
	.8byte ..LN10071
//	DW_AT_abstract_origin:
	.4byte 0x00004cf0
//	DW_AT_call_line:
	.2byte 0x02d0
//	DW_AT_call_column:
	.byte 0x19
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.2byte 0x006e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x039d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6b3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x039e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
	.byte 0x00
	.byte 0x00
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x24
//	DW_AT_decl_line:
	.2byte 0x028a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_declaration:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x893
	.4byte .debug_str+0x893
//	DW_AT_external:
	.byte 0x01
//	DW_AT_inline:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000184
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000856
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000019f
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x25
//	DW_AT_decl_line:
	.2byte 0x028a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_abstract_origin:
	.4byte 0x0000408e
//	DW_AT_frame_base:
	.2byte 0x7702
	.byte 0x00
//	DW_AT_low_pc:
	.8byte ..L974
//	DW_AT_high_pc:
	.8byte ..LNcreate_xgrid_2dx2d_order2.12255
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x028a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x54a
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x028a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x552
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x028a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x55a
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x028a
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x563
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x028b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x54b
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x028b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x553
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x028b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x10
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x028b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x18
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x028c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x56c
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x20
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x028c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x574
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x28
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x028c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x579
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x30
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x028c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x38
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x028c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000856
//	DW_AT_name:
	.4byte .debug_str+0x584
//	DW_AT_location:
	.4byte 0x00c07603
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x028d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x58a
//	DW_AT_location:
	.4byte 0x00c87603
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x028d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x672
//	DW_AT_location:
	.4byte 0x00d07603
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x028d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x67d
//	DW_AT_location:
	.4byte 0x00d87603
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0031796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5b01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0032796e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5a01
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5c9
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ce
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x76a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x76f
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x595
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5001
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x774
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0290
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x77a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0291
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x306e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0291
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x316e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0291
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x326e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0291
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x336e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0291
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3169
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0291
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x316a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0291
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3269
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0291
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x326a
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0291
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006c
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0291
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0292
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x780
//	DW_AT_type:
	.4byte 0x0000526f
//	DW_AT_location:
	.4byte 0x0d809103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0292
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x786
//	DW_AT_type:
	.4byte 0x00005279
//	DW_AT_location:
	.4byte 0x10a09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0292
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x78c
//	DW_AT_type:
	.4byte 0x00005283
//	DW_AT_location:
	.4byte 0x13c09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0292
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x792
//	DW_AT_type:
	.4byte 0x0000528d
//	DW_AT_location:
	.4byte 0x16d09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0292
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5ef
//	DW_AT_type:
	.4byte 0x00005297
//	DW_AT_location:
	.4byte 0x19e09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0292
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5f5
//	DW_AT_type:
	.4byte 0x000052a1
//	DW_AT_location:
	.4byte 0x1d809103
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0293
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x798
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0293
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7a3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0293
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7af
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0293
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7ba
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0293
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7c6
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0293
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7d1
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0293
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7dc
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0293
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7e8
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0294
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6c0
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0294
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8ad
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0294
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8b5
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0295
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x5fb
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0295
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x603
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0295
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x60c
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_lexical_block:
	.byte 0x1f
//	DW_AT_decl_line:
	.2byte 0x02b4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_low_pc:
	.8byte ..LN11271
//	DW_AT_high_pc:
	.8byte ..LN12232
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x02b5
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x02b5
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x55d
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x02b6
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6ba
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6301
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x1410
//	DW_AT_entry_pc:
	.8byte ..LN11282
//	DW_AT_abstract_origin:
	.4byte 0x00004cf0
//	DW_AT_call_line:
	.2byte 0x02d0
//	DW_AT_call_column:
	.byte 0x19
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.2byte 0x006e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x039d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6b3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x039e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x1530
//	DW_AT_entry_pc:
	.8byte ..LN11275
//	DW_AT_abstract_origin:
	.4byte 0x00004dd1
//	DW_AT_call_line:
	.2byte 0x02cf
//	DW_AT_call_column:
	.byte 0x19
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.2byte 0x006e
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.4byte .debug_str+0x678
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x03bc
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6a7
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x03bd
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x15b0
//	DW_AT_entry_pc:
	.8byte ..LN11296
//	DW_AT_abstract_origin:
	.4byte 0x00004a11
//	DW_AT_call_line:
	.2byte 0x02ca
//	DW_AT_call_column:
	.byte 0x16
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0352
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x7ff
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0352
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x807
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0352
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.4byte .debug_str+0x774
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0353
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x80f
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0353
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x817
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0353
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.4byte .debug_str+0x77a
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0354
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_TAG_formal_parameter:
	.byte 0x1c
//	DW_AT_decl_line:
	.2byte 0x0354
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0356
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x81f
//	DW_AT_type:
	.4byte 0x00004e86
//	DW_AT_location:
	.4byte 0x20a09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0356
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x827
//	DW_AT_type:
	.4byte 0x00004e90
//	DW_AT_location:
	.4byte 0x23c09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x82f
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6f01
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x834
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6501
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x839
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6d01
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x83e
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6e01
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x843
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6401
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x848
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6101
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x84d
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6b01
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x852
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6a01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00317864
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6b01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00317964
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6c01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00327864
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6901
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00327964
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x857
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6a01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00317364
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6501
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00327364
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6601
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x55d
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5301
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x644
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5e01
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x650
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3169
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3269
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x1690
//	DW_AT_entry_pc:
	.8byte ..LN11296
//	DW_AT_abstract_origin:
	.4byte 0x0000523c
//	DW_AT_call_line:
	.2byte 0x0369
//	DW_AT_call_column:
	.byte 0x13
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3078
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3079
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3178
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3179
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0467
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x86a
//	DW_AT_type:
	.4byte 0x00000193
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0468
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x870
//	DW_AT_type:
	.4byte 0x00000198
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x16d0
//	DW_AT_entry_pc:
	.8byte ..LN11594
//	DW_AT_abstract_origin:
	.4byte 0x0000523c
//	DW_AT_call_line:
	.2byte 0x036d
//	DW_AT_call_column:
	.byte 0x14
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3078
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3079
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3178
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3179
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0467
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x86a
//	DW_AT_type:
	.4byte 0x00000193
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0468
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x870
//	DW_AT_type:
	.4byte 0x00000198
	.byte 0x00
	.byte 0x00
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x1710
//	DW_AT_entry_pc:
	.8byte ..LN11179
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.2byte 0x02a4
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5a01
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.4byte 0x0ab89103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x0bd89103
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x1740
//	DW_AT_entry_pc:
	.8byte ..LN11089
//	DW_AT_abstract_origin:
	.4byte 0x000001a4
//	DW_AT_call_line:
	.2byte 0x02a3
//	DW_AT_call_column:
	.byte 0x03
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e4
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000184
//	DW_AT_name:
	.4byte .debug_str+0x4e9
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x006e6f6c
//	DW_TAG_formal_parameter:
	.byte 0x09
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte 0x0074616c
//	DW_TAG_formal_parameter:
	.byte 0x08
//	DW_AT_decl_line:
	.byte 0x42
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x4f5
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x786e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5001
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x796e
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x0070786e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0b
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0a
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_variable:
	.byte 0x0c
//	DW_AT_decl_line:
	.byte 0x44
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x50d
//	DW_AT_type:
	.4byte 0x000001cd
//	DW_AT_location:
	.4byte 0x07f89103
//	DW_TAG_variable:
	.byte 0x0d
//	DW_AT_decl_line:
	.byte 0x45
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x512
//	DW_AT_type:
	.4byte 0x000001d6
//	DW_AT_location:
	.4byte 0x09989103
	.byte 0x00
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x21
//	DW_AT_decl_line:
	.2byte 0x02e7
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x625
	.4byte .debug_str+0x625
//	DW_AT_frame_base:
	.2byte 0x7702
	.byte 0x00
//	DW_AT_low_pc:
	.8byte ..L252
//	DW_AT_high_pc:
	.8byte ..LNclip.2191
//	DW_AT_external:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x02e7
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x54b
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x02e7
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x553
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x02e7
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.4byte .debug_str+0x508
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x02e7
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.4byte .debug_str+0x5d3
//	DW_AT_location:
	.2byte 0x6101
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x02e7
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.4byte .debug_str+0x5da
//	DW_AT_location:
	.2byte 0x6201
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x02e8
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.4byte .debug_str+0x5e1
//	DW_AT_location:
	.2byte 0x6301
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x02e8
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.4byte .debug_str+0x5e8
//	DW_AT_location:
	.2byte 0x6401
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x02e8
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x02e8
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x02ea
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x62a
//	DW_AT_type:
	.4byte 0x000049d5
//	DW_AT_location:
	.4byte 0x03909103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x02ea
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x630
//	DW_AT_type:
	.4byte 0x000049df
//	DW_AT_location:
	.2byte 0x9102
	.byte 0x00
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x02ea
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x636
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x02ea
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x63d
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6101
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x02eb
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x574
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x02eb
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x02eb
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x55d
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x02eb
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x644
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x02eb
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x650
//	DW_AT_type:
	.4byte 0x0000002e
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x24
//	DW_AT_decl_line:
	.2byte 0x0352
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_declaration:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x7f4
	.4byte .debug_str+0x7f4
//	DW_AT_external:
	.byte 0x01
//	DW_AT_inline:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000019f
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x25
//	DW_AT_decl_line:
	.2byte 0x0352
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_abstract_origin:
	.4byte 0x00004a11
//	DW_AT_frame_base:
	.2byte 0x7702
	.byte 0x00
//	DW_AT_low_pc:
	.8byte ..L1071
//	DW_AT_high_pc:
	.8byte ..LNclip_2dx2d.12504
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0352
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x7ff
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0352
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x807
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0352
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.4byte .debug_str+0x774
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0353
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x80f
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0353
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.4byte .debug_str+0x817
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0353
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.4byte .debug_str+0x77a
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0354
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x55b
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x10
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x0354
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000019f
//	DW_AT_name:
	.4byte .debug_str+0x564
//	DW_AT_location:
	.2byte 0x7602
	.byte 0x18
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0356
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x81f
//	DW_AT_type:
	.4byte 0x00004e86
//	DW_AT_location:
	.4byte 0x00c09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0356
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x827
//	DW_AT_type:
	.4byte 0x00004e90
//	DW_AT_location:
	.4byte 0x03e09103
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x82f
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6f01
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x834
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6301
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x839
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6d01
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x83e
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6e01
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x843
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6501
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x848
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6201
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x84d
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6b01
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0357
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x852
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6a01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00317864
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6b01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00317964
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6c01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00327864
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6901
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00327964
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x857
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6a01
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00317364
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6301
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x0358
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00327364
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6601
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x57e
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x55d
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x644
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_location:
	.2byte 0x5c01
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x650
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3169
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0359
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3269
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x1770
//	DW_AT_entry_pc:
	.8byte ..LN12340
//	DW_AT_abstract_origin:
	.4byte 0x0000523c
//	DW_AT_call_line:
	.2byte 0x036d
//	DW_AT_call_column:
	.byte 0x14
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3078
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3079
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3178
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3179
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0467
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x86a
//	DW_AT_type:
	.4byte 0x00000193
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0468
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x870
//	DW_AT_type:
	.4byte 0x00000198
	.byte 0x00
//	DW_TAG_inlined_subroutine:
	.byte 0x1a
//	DW_AT_ranges:
	.4byte .debug_ranges_seg+0x17b0
//	DW_AT_entry_pc:
	.8byte ..LN12306
//	DW_AT_abstract_origin:
	.4byte 0x0000523c
//	DW_AT_call_line:
	.2byte 0x0369
//	DW_AT_call_column:
	.byte 0x13
//	DW_AT_call_file:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3078
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3079
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3178
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3179
	.byte 0x00
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0078
//	DW_TAG_formal_parameter:
	.byte 0x1b
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0079
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0467
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x86a
//	DW_AT_type:
	.4byte 0x00000193
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0468
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x870
//	DW_AT_type:
	.4byte 0x00000198
	.byte 0x00
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x24
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_declaration:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6ae
	.4byte .debug_str+0x6ae
//	DW_AT_external:
	.byte 0x01
//	DW_AT_inline:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000002e
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x26
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_abstract_origin:
	.4byte 0x00004cf0
//	DW_AT_low_pc:
	.8byte ..L1124
//	DW_AT_high_pc:
	.8byte ..LNpoly_ctrlat.12794
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0078
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0079
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x039b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.2byte 0x006e
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x039d
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6b3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6801
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x039e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_lexical_block:
	.byte 0x1f
//	DW_AT_decl_line:
	.2byte 0x03a0
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_low_pc:
	.8byte ..LN12510
//	DW_AT_high_pc:
	.8byte ..LN12754
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x03a1
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x7069
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x03a2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x7864
	.byte 0x00
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x03a3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x7964
	.byte 0x00
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x03a3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8bd
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x03a3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00796468
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x03a4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8c3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6301
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x03a4
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8c8
//	DW_AT_type:
	.4byte 0x00000198
	.byte 0x00
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x24
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_declaration:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6a2
	.4byte .debug_str+0x6a2
//	DW_AT_external:
	.byte 0x01
//	DW_AT_inline:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000198
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x26
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_abstract_origin:
	.4byte 0x00004dd1
//	DW_AT_low_pc:
	.8byte ..L1162
//	DW_AT_high_pc:
	.8byte ..LNpoly_ctrlon.12949
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0078
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0079
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.2byte 0x006e
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x03ba
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.4byte .debug_str+0x678
//	DW_AT_location:
	.2byte 0x6101
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x03bc
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6a7
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x03bd
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_lexical_block:
	.byte 0x1f
//	DW_AT_decl_line:
	.2byte 0x03c0
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_low_pc:
	.8byte ..LN12821
//	DW_AT_high_pc:
	.8byte ..LN12930
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x03c1
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x7069
	.byte 0x00
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x03c2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8cd
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x03c2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8d2
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x03c2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8d7
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x03c2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8c3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x03c2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8c8
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x03c2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8dc
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x03c2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8e2
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x03c3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3166
	.byte 0x00
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x03c3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3266
	.byte 0x00
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6701
//	DW_TAG_variable:
	.byte 0x23
//	DW_AT_decl_line:
	.2byte 0x03c3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00636166
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6101
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x03c3
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8e8
//	DW_AT_type:
	.4byte 0x00000198
	.byte 0x00
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x28
//	DW_AT_decl_line:
	.2byte 0x03ef
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8ed
	.4byte .debug_str+0x8ed
//	DW_AT_low_pc:
	.8byte ..L1192
//	DW_AT_high_pc:
	.8byte ..LNbox_ctrlat.12988
//	DW_AT_external:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x03ef
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.4byte .debug_str+0x5d3
//	DW_AT_location:
	.2byte 0x6101
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x03ef
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.4byte .debug_str+0x5da
//	DW_AT_location:
	.2byte 0x6201
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x03ef
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.4byte .debug_str+0x5e1
//	DW_AT_location:
	.2byte 0x6301
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x03ef
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.4byte .debug_str+0x5e8
//	DW_AT_location:
	.2byte 0x6401
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x03f1
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8d7
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x03f2
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6b3
//	DW_AT_type:
	.4byte 0x00000198
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x28
//	DW_AT_decl_line:
	.2byte 0x03fe
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8f8
	.4byte .debug_str+0x8f8
//	DW_AT_low_pc:
	.8byte ..L1203
//	DW_AT_high_pc:
	.8byte ..LNbox_ctrlon.13164
//	DW_AT_external:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x03fe
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.4byte .debug_str+0x5d3
//	DW_AT_location:
	.2byte 0x6101
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x03fe
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.4byte .debug_str+0x5da
//	DW_AT_location:
	.2byte 0x6201
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x03fe
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.4byte .debug_str+0x5e1
//	DW_AT_location:
	.2byte 0x6301
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x03fe
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.4byte .debug_str+0x5e8
//	DW_AT_location:
	.2byte 0x6401
//	DW_TAG_formal_parameter:
	.byte 0x22
//	DW_AT_decl_line:
	.2byte 0x03fe
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.4byte .debug_str+0x678
//	DW_AT_location:
	.2byte 0x6501
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0400
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8cd
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0400
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8d2
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0400
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8d7
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0400
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8c3
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0400
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8c8
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0400
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8dc
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0400
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8e2
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0401
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3166
	.byte 0x00
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0401
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x3266
	.byte 0x00
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0401
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte 0x00636166
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0401
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x8e8
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0402
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x6a7
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0403
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x28
//	DW_AT_decl_line:
	.2byte 0x0433
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x903
	.4byte .debug_str+0x903
//	DW_AT_low_pc:
	.8byte ..L1227
//	DW_AT_high_pc:
	.8byte ..LNgrid_box_radius.13207
//	DW_AT_external:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x0433
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0078
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x0433
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x0079
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x0433
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x007a
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x0433
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.2byte 0x006e
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x0435
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x90c
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6101
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0436
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x0436
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x21
//	DW_AT_decl_line:
	.2byte 0x044b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x913
	.4byte .debug_str+0x913
//	DW_AT_frame_base:
	.2byte 0x7702
	.byte 0x00
//	DW_AT_low_pc:
	.8byte ..L1237
//	DW_AT_high_pc:
	.8byte ..LNdist_between_boxes.13256
//	DW_AT_external:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x044b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x3178
	.byte 0x00
//	DW_AT_location:
	.2byte 0x5501
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x044b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x3179
	.byte 0x00
//	DW_AT_location:
	.2byte 0x5401
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x044b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x317a
	.byte 0x00
//	DW_AT_location:
	.2byte 0x5101
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x044b
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.2byte 0x316e
	.byte 0x00
//	DW_AT_location:
	.2byte 0x5201
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x044c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x3278
	.byte 0x00
//	DW_AT_location:
	.2byte 0x5801
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x044c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x3279
	.byte 0x00
//	DW_AT_location:
	.2byte 0x5901
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x044c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000018e
//	DW_AT_name:
	.2byte 0x327a
	.byte 0x00
//	DW_AT_location:
	.2byte 0x9102
	.byte 0x10
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x044c
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_name:
	.2byte 0x326e
	.byte 0x00
//	DW_AT_location:
	.2byte 0x9102
	.byte 0x18
//	DW_TAG_variable:
	.byte 0x20
//	DW_AT_decl_line:
	.2byte 0x044e
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x926
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_location:
	.2byte 0x6101
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x044f
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x0069
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_TAG_variable:
	.byte 0x1e
//	DW_AT_decl_line:
	.2byte 0x044f
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.2byte 0x006a
//	DW_AT_type:
	.4byte 0x0000002e
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x24
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_declaration:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x0000002e
//	DW_AT_prototyped:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x85e
	.4byte .debug_str+0x85e
//	DW_AT_external:
	.byte 0x01
//	DW_AT_inline:
	.byte 0x01
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000198
//	DW_TAG_formal_parameter:
	.byte 0x12
//	DW_AT_type:
	.4byte 0x00000198
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_array_type:
	.byte 0x18
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_byte_size:
	.2byte 0x0190
//	DW_TAG_subrange_type:
	.byte 0x14
//	DW_AT_upper_bound:
	.byte 0x31
	.byte 0x00
//	DW_TAG_subprogram:
	.byte 0x26
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_abstract_origin:
	.4byte 0x0000523c
//	DW_AT_low_pc:
	.8byte ..L1250
//	DW_AT_high_pc:
	.8byte ..LNinside_edge.13271
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3078
	.byte 0x00
//	DW_AT_location:
	.2byte 0x6101
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3079
	.byte 0x00
//	DW_AT_location:
	.2byte 0x6201
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3178
	.byte 0x00
//	DW_AT_location:
	.2byte 0x6301
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x3179
	.byte 0x00
//	DW_AT_location:
	.2byte 0x6401
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0078
//	DW_AT_location:
	.2byte 0x6501
//	DW_TAG_formal_parameter:
	.byte 0x27
//	DW_AT_decl_line:
	.2byte 0x0465
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_type:
	.4byte 0x00000198
//	DW_AT_name:
	.2byte 0x0079
//	DW_AT_location:
	.2byte 0x6601
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0467
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x86a
//	DW_AT_type:
	.4byte 0x00000193
//	DW_TAG_variable:
	.byte 0x1d
//	DW_AT_decl_line:
	.2byte 0x0468
//	DW_AT_decl_file:
	.byte 0x01
//	DW_AT_name:
	.4byte .debug_str+0x870
//	DW_AT_type:
	.4byte 0x00000198
	.byte 0x00
	.byte 0x00
// -- Begin DWARF2 SEGMENT .debug_line
	.section .debug_line
.debug_line_seg:
	.align 1
// -- Begin DWARF2 SEGMENT .debug_abbrev
	.section .debug_abbrev
.debug_abbrev_seg:
	.align 1
	.byte 0x01
	.byte 0x11
	.byte 0x01
	.byte 0x1b
	.byte 0x0e
	.byte 0x03
	.byte 0x0e
	.byte 0x25
	.byte 0x0e
	.2byte 0x7681
	.byte 0x0e
	.byte 0x13
	.byte 0x0b
	.byte 0x53
	.byte 0x0c
	.byte 0x11
	.byte 0x01
	.byte 0x55
	.byte 0x06
	.byte 0x10
	.byte 0x06
	.2byte 0x0000
	.byte 0x02
	.byte 0x24
	.byte 0x00
	.byte 0x0b
	.byte 0x0b
	.byte 0x3e
	.byte 0x0b
	.byte 0x03
	.byte 0x08
	.2byte 0x0000
	.byte 0x03
	.byte 0x2e
	.byte 0x00
	.byte 0x3b
	.byte 0x0b
	.byte 0x3a
	.byte 0x0b
	.byte 0x49
	.byte 0x13
	.byte 0x27
	.byte 0x0c
	.byte 0x03
	.byte 0x0e
	.2byte 0x4087
	.byte 0x0e
	.byte 0x11
	.byte 0x01
	.byte 0x12
	.byte 0x01
	.byte 0x3f
	.byte 0x0c
	.2byte 0x0000
	.byte 0x04
	.byte 0x2e
	.byte 0x01
	.byte 0x3b
	.byte 0x0b
	.byte 0x3a
	.byte 0x0b
	.byte 0x27
	.byte 0x0c
	.byte 0x03
	.byte 0x0e
	.2byte 0x4087
	.byte 0x0e
	.byte 0x40
	.byte 0x0a
	.byte 0x11
	.byte 0x01
	.byte 0x12
	.byte 0x01
	.byte 0x3f
	.byte 0x0c
	.2byte 0x0000
	.byte 0x05
	.byte 0x05
	.byte 0x00
	.byte 0x3b
	.byte 0x0b
	.byte 0x3a
	.byte 0x0b
	.byte 0x49
	.byte 0x13
	.byte 0x03
	.byte 0x0e
	.byte 0x02
	.byte 0x0a
	.2byte 0x0000
	.byte 0x06
	.byte 0x05
	.byte 0x00
	.byte 0x3b
	.byte 0x0b
	.byte 0x3a
	.byte 0x0b
	.byte 0x49
	.byte 0x13
	.byte 0x03
	.byte 0x08
	.byte 0x02
	.byte 0x0a
	.2byte 0x0000
	.byte 0x07
	.byte 0x1d
	.byte 0x01
	.byte 0x55
	.byte 0x06
	.byte 0x52
	.byte 0x01
	.byte 0x31
	.byte 0x13
	.byte 0x59
	.byte 0x0b
	.byte 0x57
	.byte 0x0b
	.byte 0x58
	.byte 0x0b
	.2byte 0x0000
	.byte 0x08
	.byte 0x05
	.byte 0x00
	.byte 0x3b
	.byte 0x0b
	.byte 0x3a
	.byte 0x0b
	.byte 0x49
	.byte 0x13
	.byte 0x03
	.byte 0x0e
	.2byte 0x0000
	.byte 0x09
	.byte 0x05
	.byte 0x00
	.byte 0x3b
	.byte 0x0b
	.byte 0x3a
	.byte 0x0b
	.byte 0x49
	.byte 0x13
	.byte 0x03
	.byte 0x08
	.2byte 0x0000
	.byte 0x0a
	.byte 0x34
	.byte 0x00
	.byte 0x3b
	.byte 0x0b
	.byte 0x3a
	.byte 0x0b
	.byte 0x03
	.byte 0x08
	.byte 0x49
	.byte 0x13
	.byte 0x02
	.byte 0x0a
	.2byte 0x0000
	.byte 0x0b
	.byte 0x34
	.byte 0x00
	.byte 0x3b
	.byte 0x0b
	.byte 0x3a
	.byte 0x0b
	.byte 0x03
	.byte 0x08
	.byte 0x49
	.byte 0x13
	.2byte 0x0000
	.byte 0x0c
	.byte 0x34
	.byte 0x00
	.byte 0x3b
	.byte 0x0b
	.byte 0x3a
	.byte 0x0b
	.byte 0x03
	.byte 0x0e
	.byte 0x49
	.byte 0x13
	.2byte 0x0000
	.byte 0x0d
	.byte 0x34
	.byte 0x00
	.byte 0x3b
	.byte 0x0b
	.byte 0x3a
	.byte 0x0b
	.byte 0x03
	.byte 0x0e
	.byte 0x49
	.byte 0x13
	.byte 0x02
	.byte 0x0a
	.2byte 0x0000
	.byte 0x0e
	.byte 0x0f
	.byte 0x00
	.byte 0x49
	.byte 0x13
	.2byte 0x0000
	.byte 0x0f
	.byte 0x26
	.byte 0x00
	.byte 0x49
	.byte 0x13
	.2byte 0x0000
	.byte 0x10
	.byte 0x24
	.byte 0x00
	.byte 0x0b
	.byte 0x0b
	.byte 0x3e
	.byte 0x0b
	.byte 0x03
	.byte 0x0e
	.2byte 0x0000
	.byte 0x11
	.byte 0x2e
	.byte 0x01
	.byte 0x3b
	.byte 0x0b
	.byte 0x3a
	.byte 0x0b
	.byte 0x3c
	.byte 0x0c
	.byte 0x27
	.byte 0x0c
	.byte 0x03
	.byte 0x0e
	.2byte 0x4087
	.byte 0x0e
	.byte 0x3f
	.byte 0x0c
	.byte 0x20
	.byte 0x0b
	.2byte 0x0000
	.byte 0x12
	.byte 0x05
	.byte 0x00
	.byte 0x49
	.byte 0x13
	.2byte 0x0000
	.byte 0x13
	.byte 0x01
	.byte 0x01
	.byte 0x49
	.byte 0x13
	.byte 0x0b
	.byte 0x0b
	.2byte 0x0000
	.byte 0x14
	.byte 0x21
	.byte 0x00
	.byte 0x2f
	.byte 0x0b
	.2byte 0x0000
	.byte 0x15
	.byte 0x2e
	.byte 0x01
	.byte 0x3b
	.byte 0x0b
	.byte 0x3a
	.byte 0x0b
	.byte 0x31
	.byte 0x13
	.byte 0x40
	.byte 0x0a
	.byte 0x11
	.byte 0x01
	.byte 0x12
	.byte 0x01
	.2byte 0x0000
	.byte 0x16
	.byte 0x2e
	.byte 0x01
	.byte 0x3b
	.byte 0x0b
	.byte 0x3a
	.byte 0x0b
	.byte 0x49
	.byte 0x13
	.byte 0x27
	.byte 0x0c
	.byte 0x03
	.byte 0x0e
	.2byte 0x4087
	.byte 0x0e
	.byte 0x40
	.byte 0x0a
	.byte 0x11
	.byte 0x01
	.byte 0x12
	.byte 0x01
	.byte 0x3f
	.byte 0x0c
	.2byte 0x0000
	.byte 0x17
	.byte 0x2e
	.byte 0x01
	.byte 0x3b
	.byte 0x0b
	.byte 0x3a
	.byte 0x0b
	.byte 0x3c
	.byte 0x0c
	.byte 0x49
	.byte 0x13
	.byte 0x27
	.byte 0x0c
	.byte 0x03
	.byte 0x0e
	.2byte 0x4087
	.byte 0x0e
	.byte 0x3f
	.byte 0x0c
	.byte 0x20
	.byte 0x0b
	.2byte 0x0000
	.byte 0x18
	.byte 0x01
	.byte 0x01
	.byte 0x49
	.byte 0x13
	.byte 0x0b
	.byte 0x05
	.2byte 0x0000
	.byte 0x19
	.byte 0x0b
	.byte 0x01
	.byte 0x3b
	.byte 0x0b
	.byte 0x3a
	.byte 0x0b
	.byte 0x11
	.byte 0x01
	.byte 0x12
	.byte 0x01
	.2byte 0x0000
	.byte 0x1a
	.byte 0x1d
	.byte 0x01
	.byte 0x55
	.byte 0x06
	.byte 0x52
	.byte 0x01
	.byte 0x31
	.byte 0x13
	.byte 0x59
	.byte 0x05
	.byte 0x57
	.byte 0x0b
	.byte 0x58
	.byte 0x0b
	.2byte 0x0000
	.byte 0x1b
	.byte 0x05
	.byte 0x00
	.byte 0x3b
	.byte 0x05
	.byte 0x3a
	.byte 0x0b
	.byte 0x49
	.byte 0x13
	.byte 0x03
	.byte 0x08
	.2byte 0x0000
	.byte 0x1c
	.byte 0x05
	.byte 0x00
	.byte 0x3b
	.byte 0x05
	.byte 0x3a
	.byte 0x0b
	.byte 0x49
	.byte 0x13
	.byte 0x03
	.byte 0x0e
	.2byte 0x0000
	.byte 0x1d
	.byte 0x34
	.byte 0x00
	.byte 0x3b
	.byte 0x05
	.byte 0x3a
	.byte 0x0b
	.byte 0x03
	.byte 0x0e
	.byte 0x49
	.byte 0x13
	.2byte 0x0000
	.byte 0x1e
	.byte 0x34
	.byte 0x00
	.byte 0x3b
	.byte 0x05
	.byte 0x3a
	.byte 0x0b
	.byte 0x03
	.byte 0x08
	.byte 0x49
	.byte 0x13
	.2byte 0x0000
	.byte 0x1f
	.byte 0x0b
	.byte 0x01
	.byte 0x3b
	.byte 0x05
	.byte 0x3a
	.byte 0x0b
	.byte 0x11
	.byte 0x01
	.byte 0x12
	.byte 0x01
	.2byte 0x0000
	.byte 0x20
	.byte 0x34
	.byte 0x00
	.byte 0x3b
	.byte 0x05
	.byte 0x3a
	.byte 0x0b
	.byte 0x03
	.byte 0x0e
	.byte 0x49
	.byte 0x13
	.byte 0x02
	.byte 0x0a
	.2byte 0x0000
	.byte 0x21
	.byte 0x2e
	.byte 0x01
	.byte 0x3b
	.byte 0x05
	.byte 0x3a
	.byte 0x0b
	.byte 0x49
	.byte 0x13
	.byte 0x27
	.byte 0x0c
	.byte 0x03
	.byte 0x0e
	.2byte 0x4087
	.byte 0x0e
	.byte 0x40
	.byte 0x0a
	.byte 0x11
	.byte 0x01
	.byte 0x12
	.byte 0x01
	.byte 0x3f
	.byte 0x0c
	.2byte 0x0000
	.byte 0x22
	.byte 0x05
	.byte 0x00
	.byte 0x3b
	.byte 0x05
	.byte 0x3a
	.byte 0x0b
	.byte 0x49
	.byte 0x13
	.byte 0x03
	.byte 0x0e
	.byte 0x02
	.byte 0x0a
	.2byte 0x0000
	.byte 0x23
	.byte 0x34
	.byte 0x00
	.byte 0x3b
	.byte 0x05
	.byte 0x3a
	.byte 0x0b
	.byte 0x03
	.byte 0x08
	.byte 0x49
	.byte 0x13
	.byte 0x02
	.byte 0x0a
	.2byte 0x0000
	.byte 0x24
	.byte 0x2e
	.byte 0x01
	.byte 0x3b
	.byte 0x05
	.byte 0x3a
	.byte 0x0b
	.byte 0x3c
	.byte 0x0c
	.byte 0x49
	.byte 0x13
	.byte 0x27
	.byte 0x0c
	.byte 0x03
	.byte 0x0e
	.2byte 0x4087
	.byte 0x0e
	.byte 0x3f
	.byte 0x0c
	.byte 0x20
	.byte 0x0b
	.2byte 0x0000
	.byte 0x25
	.byte 0x2e
	.byte 0x01
	.byte 0x3b
	.byte 0x05
	.byte 0x3a
	.byte 0x0b
	.byte 0x31
	.byte 0x13
	.byte 0x40
	.byte 0x0a
	.byte 0x11
	.byte 0x01
	.byte 0x12
	.byte 0x01
	.2byte 0x0000
	.byte 0x26
	.byte 0x2e
	.byte 0x01
	.byte 0x3b
	.byte 0x05
	.byte 0x3a
	.byte 0x0b
	.byte 0x31
	.byte 0x13
	.byte 0x11
	.byte 0x01
	.byte 0x12
	.byte 0x01
	.2byte 0x0000
	.byte 0x27
	.byte 0x05
	.byte 0x00
	.byte 0x3b
	.byte 0x05
	.byte 0x3a
	.byte 0x0b
	.byte 0x49
	.byte 0x13
	.byte 0x03
	.byte 0x08
	.byte 0x02
	.byte 0x0a
	.2byte 0x0000
	.byte 0x28
	.byte 0x2e
	.byte 0x01
	.byte 0x3b
	.byte 0x05
	.byte 0x3a
	.byte 0x0b
	.byte 0x49
	.byte 0x13
	.byte 0x27
	.byte 0x0c
	.byte 0x03
	.byte 0x0e
	.2byte 0x4087
	.byte 0x0e
	.byte 0x11
	.byte 0x01
	.byte 0x12
	.byte 0x01
	.byte 0x3f
	.byte 0x0c
	.2byte 0x0000
	.byte 0x00
// -- Begin DWARF2 SEGMENT .debug_frame
	.section .debug_frame
.debug_frame_seg:
	.align 1
// -- Begin DWARF2 SEGMENT .debug_str
	.section .debug_str,"MS",@progbits,1
.debug_str_seg:
	.align 1
	.8byte 0x4d432f656d6f682f
	.8byte 0x656a6172702f5049
	.8byte 0x4d5449492f687365
	.8byte 0x732f32764d53452d
	.8byte 0x70346d6f6d2f6372
	.8byte 0x6c2f636578652f31
	.4byte 0x665f6269
	.2byte 0x736d
	.byte 0x00
	.8byte 0x4d432f656d6f682f
	.8byte 0x656a6172702f5049
	.8byte 0x4d5449492f687365
	.8byte 0x732f32764d53452d
	.8byte 0x70346d6f6d2f6372
	.8byte 0x68732f6372732f31
	.8byte 0x736f6d2f64657261
	.8byte 0x616572632f636961
	.8byte 0x64697267785f6574
	.2byte 0x632e
	.byte 0x00
	.8byte 0x2952286c65746e49
	.8byte 0x6c65746e49204320
	.8byte 0x4320343620295228
	.8byte 0x2072656c69706d6f
	.8byte 0x6c70706120726f66
	.8byte 0x736e6f6974616369
	.8byte 0x676e696e6e757220
	.8byte 0x65746e49206e6f20
	.8byte 0x2c3436202952286c
	.8byte 0x6e6f697372655620
	.8byte 0x2e332e302e363120
	.8byte 0x6c69754220303132
	.8byte 0x3430363130322064
	.4byte 0x000a3531
	.8byte 0x2f656d6f682f492d
	.8byte 0x6172702f50494d43
	.8byte 0x49492f687365656a
	.8byte 0x32764d53452d4d54
	.8byte 0x6d6f6d2f6372732f
	.8byte 0x2f6372732f317034
	.8byte 0x6d2f646572616873
	.8byte 0x492d20636961736f
	.8byte 0x6172632f74706f2f
	.8byte 0x62696c2f65702f79
	.8byte 0x302e37312f696373
	.8byte 0x45544e492f312e39
	.8byte 0x782f302e36312f4c
	.8byte 0x6e692f34365f3638
	.8byte 0x492d206564756c63
	.8byte 0x6172632f74706f2f
	.8byte 0x74656e2f65702f79
	.8byte 0x2e342e342f666463
	.8byte 0x4e492f332e312e31
	.8byte 0x302e36312f4c4554
	.8byte 0x6564756c636e692f
	.8byte 0x2f74706f2f492d20
	.8byte 0x2f65702f79617263
	.8byte 0x2e362e372f74706d
	.8byte 0x706d2f696e672f33
	.8byte 0x65746e692d686369
	.8byte 0x692f302e36312f6c
	.8byte 0x2d206564756c636e
	.8byte 0x72632f74706f2f49
	.8byte 0x64682f65702f7961
	.8byte 0x2e30312e312f3566
	.8byte 0x45544e492f332e30
	.8byte 0x692f302e36312f4c
	.8byte 0x2d206564756c636e
	.8byte 0x72632f74706f2f49
	.8byte 0x322f6163722f7961
	.8byte 0x2e362d31312e322e
	.8byte 0x33315f302e342e30
	.8byte 0x643438675f5f322e
	.8byte 0x6972612e61373665
	.8byte 0x6564756c636e692f
	.8byte 0x2f74706f2f492d20
	.8byte 0x706c612f79617263
	.8byte 0x2d332e342e362f73
	.8byte 0x5f312e342e302e36
	.8byte 0x3239675f5f312e32
	.8byte 0x72612e3063663261
	.8byte 0x64756c636e692f69
	.8byte 0x74706f2f492d2065
	.8byte 0x70782f796172632f
	.8byte 0x2e322e322f6d656d
	.8byte 0x2e342e302e362d32
	.8byte 0x5f5f312e38315f31
	.8byte 0x3533353062333467
	.8byte 0x636e692f6972612e
	.8byte 0x2f492d206564756c
	.8byte 0x796172632f74706f
	.8byte 0x6165682d696e672f
	.8byte 0x302e352f73726564
	.8byte 0x2e302e362d31312e
	.8byte 0x5f322e375f302e34
	.8byte 0x383936333137675f
	.8byte 0x6e692f6972612e38
	.8byte 0x492d206564756c63
	.8byte 0x6172632f74706f2f
	.8byte 0x696d702f65702f79
	.8byte 0x2f32312e302e352f
	.8byte 0x206564756c636e69
	.8byte 0x632f74706f2f492d
	.8byte 0x696e67752f796172
	.8byte 0x2d34312e302e362f
	.8byte 0x5f302e342e302e36
	.8byte 0x65675f5f312e3431
	.8byte 0x612e326134626437
	.8byte 0x756c636e692f6972
	.8byte 0x706f2f492d206564
	.8byte 0x752f796172632f74
	.8byte 0x332e322f67657264
	.8byte 0x342e302e362d322e
	.8byte 0x5f322e32315f302e
	.8byte 0x653363396632675f
	.8byte 0x6e692f6972612e65
	.8byte 0x492d206564756c63
	.8byte 0x6172632f74706f2f
	.8byte 0x65645f6d6c772f79
	.8byte 0x322e312f74636574
	.8byte 0x342e302e362d312e
	.8byte 0x5f312e32325f302e
	.8byte 0x643361363264675f
	.8byte 0x6e692f6972612e63
	.8byte 0x492d206564756c63
	.8byte 0x6172632f74706f2f
	.8byte 0x322f6163726b2f79
	.8byte 0x302e362d322e322e
	.8byte 0x2e38315f312e342e
	.8byte 0x34313634675f5f33
	.8byte 0x2f6972612e336663
	.8byte 0x206564756c636e69
	.8byte 0x632f74706f2f492d
	.8byte 0x2d7373682d796172
	.8byte 0x2e382f6c65766564
	.8byte 0x6c636e692f302e30
	.8byte 0x4f43782d20656475
	.8byte 0x20325856412d4552
	.8byte 0x594152435f5f442d
	.8byte 0x435f5f442d204358
	.8byte 0x414f52425f594152
	.8byte 0x442d204c4c455744
	.8byte 0x5458594152435f5f
	.8byte 0x455455504d4f435f
	.8byte 0x545f58554e494c5f
	.8byte 0x442d205445475241
	.8byte 0x4374656e5f657375
	.8byte 0x7375442d20344644
	.8byte 0x49504d62696c5f65
	.8byte 0x4c42414e45442d20
	.8byte 0x442d2041444f5f45
	.8byte 0x4145434f5f455355
	.8byte 0x672d204347425f4e
	.8byte 0x61732d20334f2d20
	.8byte 0x73706d65742d6576
	.4byte 0x00632d20
	.8byte 0x7878616d5f746567
	.4byte 0x64697267
	.2byte 0x005f
	.8byte 0x7878616d5f746567
	.4byte 0x64697267
	.byte 0x00
	.8byte 0x646972675f746567
	.4byte 0x6572615f
	.2byte 0x5f61
	.byte 0x00
	.4byte 0x6e6f6c6e
	.byte 0x00
	.4byte 0x74616c6e
	.byte 0x00
	.4byte 0x62756f64
	.2byte 0x656c
	.byte 0x00
	.4byte 0x61657261
	.byte 0x00
	.8byte 0x646972675f746567
	.4byte 0x6572615f
	.2byte 0x0061
	.4byte 0x6e695f6e
	.byte 0x00
	.4byte 0x6e695f78
	.byte 0x00
	.4byte 0x6e695f79
	.byte 0x00
	.8byte 0x646972675f746567
	.8byte 0x6f6e5f616572615f
	.8byte 0x007473756a64615f
	.8byte 0x785f657461657263
	.8byte 0x7864315f64697267
	.8byte 0x726564726f5f6432
	.2byte 0x5f31
	.byte 0x00
	.8byte 0x006e695f6e6f6c6e
	.8byte 0x006e695f74616c6e
	.8byte 0x74756f5f6e6f6c6e
	.byte 0x00
	.8byte 0x74756f5f74616c6e
	.byte 0x00
	.8byte 0x006e695f6b73616d
	.4byte 0x6e695f69
	.byte 0x00
	.4byte 0x6e695f6a
	.byte 0x00
	.4byte 0x756f5f69
	.2byte 0x0074
	.4byte 0x756f5f6a
	.2byte 0x0074
	.8byte 0x72615f6469726778
	.2byte 0x6165
	.byte 0x00
	.4byte 0x7267786e
	.2byte 0x6469
	.byte 0x00
	.8byte 0x785f657461657263
	.8byte 0x7864315f64697267
	.8byte 0x726564726f5f6432
	.2byte 0x0031
	.8byte 0x64656e6769736e75
	.4byte 0x6e6f6c20
	.2byte 0x0067
	.4byte 0x64696f76
	.byte 0x00
	.4byte 0x7031786e
	.byte 0x00
	.4byte 0x7032786e
	.byte 0x00
	.4byte 0x6c5f6c6c
	.2byte 0x6e6f
	.byte 0x00
	.4byte 0x6c5f6c6c
	.2byte 0x7461
	.byte 0x00
	.4byte 0x6c5f7275
	.2byte 0x6e6f
	.byte 0x00
	.4byte 0x6c5f7275
	.2byte 0x7461
	.byte 0x00
	.4byte 0x756f5f78
	.2byte 0x0074
	.4byte 0x756f5f79
	.2byte 0x0074
	.8byte 0x006e695f61657261
	.8byte 0x74756f5f61657261
	.byte 0x00
	.8byte 0x616572615f6e696d
	.byte 0x00
	.4byte 0x78706d74
	.byte 0x00
	.4byte 0x79706d74
	.byte 0x00
	.4byte 0x65726158
	.2byte 0x0061
	.4byte 0x70696c63
	.byte 0x00
	.4byte 0x6d745f78
	.2byte 0x0070
	.4byte 0x6d745f79
	.2byte 0x0070
	.4byte 0x616c5f78
	.2byte 0x7473
	.byte 0x00
	.4byte 0x616c5f79
	.2byte 0x7473
	.byte 0x00
	.8byte 0x6c5f656469736e69
	.4byte 0x00747361
	.4byte 0x69736e69
	.2byte 0x6564
	.byte 0x00
	.8byte 0x785f657461657263
	.8byte 0x7864315f64697267
	.8byte 0x726564726f5f6432
	.2byte 0x5f32
	.byte 0x00
	.8byte 0x6c635f6469726778
	.2byte 0x6e6f
	.byte 0x00
	.8byte 0x6c635f6469726778
	.2byte 0x7461
	.byte 0x00
	.8byte 0x785f657461657263
	.8byte 0x7864315f64697267
	.8byte 0x726564726f5f6432
	.2byte 0x0032
	.8byte 0x7274635f796c6f70
	.4byte 0x006e6f6c
	.8byte 0x7274635f796c6f70
	.4byte 0x0074616c
	.4byte 0x65726178
	.2byte 0x0061
	.8byte 0x615f6e695f6e6f6c
	.2byte 0x6776
	.byte 0x00
	.8byte 0x785f657461657263
	.8byte 0x7864325f64697267
	.8byte 0x726564726f5f6431
	.2byte 0x5f31
	.byte 0x00
	.8byte 0x785f657461657263
	.8byte 0x7864325f64697267
	.8byte 0x726564726f5f6431
	.2byte 0x0031
	.8byte 0x785f657461657263
	.8byte 0x7864325f64697267
	.8byte 0x726564726f5f6431
	.2byte 0x5f32
	.byte 0x00
	.8byte 0x785f657461657263
	.8byte 0x7864325f64697267
	.8byte 0x726564726f5f6431
	.2byte 0x0032
	.8byte 0x785f657461657263
	.8byte 0x7864325f64697267
	.8byte 0x726564726f5f6432
	.2byte 0x5f31
	.byte 0x00
	.8byte 0x785f657461657263
	.8byte 0x7864325f64697267
	.8byte 0x726564726f5f6432
	.2byte 0x0031
	.4byte 0x7031796e
	.byte 0x00
	.4byte 0x7032796e
	.byte 0x00
	.4byte 0x695f316e
	.2byte 0x006e
	.4byte 0x695f326e
	.2byte 0x006e
	.4byte 0x695f3178
	.2byte 0x006e
	.4byte 0x695f3179
	.2byte 0x006e
	.4byte 0x695f3278
	.2byte 0x006e
	.4byte 0x695f3279
	.2byte 0x006e
	.8byte 0x6d5f6e695f6e6f6c
	.2byte 0x6e69
	.byte 0x00
	.8byte 0x5f74756f5f6e6f6c
	.4byte 0x006e696d
	.8byte 0x6d5f6e695f6e6f6c
	.2byte 0x7861
	.byte 0x00
	.8byte 0x5f74756f5f6e6f6c
	.4byte 0x0078616d
	.8byte 0x6d5f6e695f74616c
	.2byte 0x6e69
	.byte 0x00
	.8byte 0x6d5f6e695f74616c
	.2byte 0x7861
	.byte 0x00
	.8byte 0x5f74756f5f74616c
	.4byte 0x006e696d
	.8byte 0x5f74756f5f74616c
	.4byte 0x0078616d
	.8byte 0x7864325f70696c63
	.2byte 0x6432
	.byte 0x00
	.8byte 0x006e695f316e6f6c
	.8byte 0x006e695f3174616c
	.8byte 0x006e695f326e6f6c
	.8byte 0x006e695f3274616c
	.8byte 0x00706d745f6e6f6c
	.8byte 0x00706d745f74616c
	.4byte 0x305f3178
	.byte 0x00
	.4byte 0x305f3179
	.byte 0x00
	.4byte 0x315f3178
	.byte 0x00
	.4byte 0x315f3179
	.byte 0x00
	.4byte 0x305f3278
	.byte 0x00
	.4byte 0x305f3279
	.byte 0x00
	.4byte 0x315f3278
	.byte 0x00
	.4byte 0x315f3279
	.byte 0x00
	.4byte 0x65746564
	.2byte 0x6d72
	.byte 0x00
	.8byte 0x655f656469736e69
	.4byte 0x00656764
	.4byte 0x4c414d53
	.2byte 0x004c
	.8byte 0x00746375646f7270
	.8byte 0x785f657461657263
	.8byte 0x7864325f64697267
	.8byte 0x726564726f5f6432
	.2byte 0x5f32
	.byte 0x00
	.8byte 0x785f657461657263
	.8byte 0x7864325f64697267
	.8byte 0x726564726f5f6432
	.2byte 0x0032
	.8byte 0x006e6f6c72746378
	.8byte 0x0074616c72746378
	.4byte 0x5f677661
	.2byte 0x0079
	.4byte 0x3174616c
	.byte 0x00
	.4byte 0x3274616c
	.byte 0x00
	.4byte 0x31696870
	.byte 0x00
	.4byte 0x32696870
	.byte 0x00
	.4byte 0x69687064
	.byte 0x00
	.4byte 0x69687064
	.2byte 0x0031
	.4byte 0x69687064
	.2byte 0x0032
	.4byte 0x746e6966
	.byte 0x00
	.8byte 0x6c7274635f786f62
	.2byte 0x7461
	.byte 0x00
	.8byte 0x6c7274635f786f62
	.2byte 0x6e6f
	.byte 0x00
	.8byte 0x786f625f64697267
	.8byte 0x007375696461725f
	.8byte 0x7465625f74736964
	.8byte 0x786f625f6e656577
	.2byte 0x7365
	.byte 0x00
	.4byte 0x74736964
	.byte 0x00
// -- Begin DWARF2 SEGMENT .eh_frame
	.section .eh_frame,"a",@progbits
.eh_frame_seg:
	.align 8
// -- Begin DWARF2 SEGMENT .debug_ranges
	.section .debug_ranges
.debug_ranges_seg:
	.align 1
	.8byte ..LN16
	.8byte ..LN108
	.8byte ..LN111
	.8byte ..LNget_grid_area_.120
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN343
	.8byte ..LN355
	.8byte ..LN356
	.8byte ..LN846
	.8byte ..LN852
	.8byte ..LN854
	.8byte ..LN859
	.8byte ..LN1086
	.8byte ..LN1097
	.8byte ..LNcreate_xgrid_1dx2d_order1_.1140
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN582
	.8byte ..LN667
	.8byte ..LN1111
	.8byte ..LN1118
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN667
	.8byte ..LN749
	.8byte ..LN1118
	.8byte ..LN1125
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN749
	.8byte ..LN833
	.8byte ..LN1104
	.8byte ..LN1111
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN1561
	.8byte ..LN1645
	.8byte ..LN1916
	.8byte ..LN1923
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN1479
	.8byte ..LN1561
	.8byte ..LN1930
	.8byte ..LN1937
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN1394
	.8byte ..LN1479
	.8byte ..LN1923
	.8byte ..LN1930
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN2206
	.8byte ..LN2218
	.8byte ..LN2219
	.8byte ..LN2530
	.8byte ..LN2532
	.8byte ..LN2646
	.8byte ..LN2648
	.8byte ..LN3249
	.8byte ..LN3260
	.8byte ..LNcreate_xgrid_1dx2d_order2_.3325
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN2438
	.8byte ..LN2526
	.8byte ..LN3303
	.8byte ..LN3310
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN2526
	.8byte ..LN2530
	.8byte ..LN2532
	.8byte ..LN2614
	.8byte ..LN3296
	.8byte ..LN3303
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN2629
	.8byte ..LN2630
	.8byte ..LN2644
	.8byte ..LN2645
	.8byte ..LN2821
	.8byte ..LN2824
	.8byte ..LN2825
	.8byte ..LN2835
	.8byte ..LN2836
	.8byte ..LN2838
	.8byte ..LN2843
	.8byte ..LN2844
	.8byte ..LN2846
	.8byte ..LN2947
	.8byte ..LN2948
	.8byte ..LN2949
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN2627
	.8byte ..LN2628
	.8byte ..LN2631
	.8byte ..LN2632
	.8byte ..LN2635
	.8byte ..LN2636
	.8byte ..LN2637
	.8byte ..LN2639
	.8byte ..LN2641
	.8byte ..LN2644
	.8byte ..LN2645
	.8byte ..LN2646
	.8byte ..LN2648
	.8byte ..LN2656
	.8byte ..LN2949
	.8byte ..LN2950
	.8byte ..LN2951
	.8byte ..LN2952
	.8byte ..LN2953
	.8byte ..LN2955
	.8byte ..LN2956
	.8byte ..LN2957
	.8byte ..LN2958
	.8byte ..LN2982
	.8byte ..LN2986
	.8byte ..LN3013
	.8byte ..LN3016
	.8byte ..LN3028
	.8byte ..LN3031
	.8byte ..LN3088
	.8byte ..LN3093
	.8byte ..LN3097
	.8byte ..LN3099
	.8byte ..LN3106
	.8byte ..LN3107
	.8byte ..LN3186
	.8byte ..LN3237
	.8byte ..LN3242
	.8byte ..LN3265
	.8byte ..LN3270
	.8byte ..LN3286
	.8byte ..LN3289
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN3761
	.8byte ..LN3762
	.8byte ..LN3765
	.8byte ..LN3766
	.8byte ..LN3769
	.8byte ..LN3770
	.8byte ..LN3771
	.8byte ..LN3773
	.8byte ..LN3775
	.8byte ..LN3778
	.8byte ..LN3779
	.8byte ..LN3780
	.8byte ..LN3782
	.8byte ..LN3790
	.8byte ..LN4083
	.8byte ..LN4084
	.8byte ..LN4085
	.8byte ..LN4086
	.8byte ..LN4087
	.8byte ..LN4089
	.8byte ..LN4090
	.8byte ..LN4091
	.8byte ..LN4092
	.8byte ..LN4116
	.8byte ..LN4120
	.8byte ..LN4147
	.8byte ..LN4150
	.8byte ..LN4162
	.8byte ..LN4165
	.8byte ..LN4222
	.8byte ..LN4227
	.8byte ..LN4231
	.8byte ..LN4233
	.8byte ..LN4240
	.8byte ..LN4241
	.8byte ..LN4320
	.8byte ..LN4371
	.8byte ..LN4376
	.8byte ..LN4399
	.8byte ..LN4404
	.8byte ..LN4420
	.8byte ..LN4423
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN3763
	.8byte ..LN3764
	.8byte ..LN3778
	.8byte ..LN3779
	.8byte ..LN3955
	.8byte ..LN3958
	.8byte ..LN3959
	.8byte ..LN3969
	.8byte ..LN3970
	.8byte ..LN3972
	.8byte ..LN3977
	.8byte ..LN3978
	.8byte ..LN3980
	.8byte ..LN4081
	.8byte ..LN4082
	.8byte ..LN4083
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN3660
	.8byte ..LN3664
	.8byte ..LN3666
	.8byte ..LN3748
	.8byte ..LN4430
	.8byte ..LN4437
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN3572
	.8byte ..LN3660
	.8byte ..LN4437
	.8byte ..LN4444
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN4472
	.8byte ..LN4473
	.8byte ..LN4474
	.8byte ..LN4480
	.8byte ..LN4482
	.8byte ..LN4899
	.8byte ..LN4906
	.8byte ..LN5102
	.8byte ..LN5113
	.8byte ..LNcreate_xgrid_2dx1d_order1_.5181
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN4700
	.8byte ..LN4791
	.8byte ..LN5159
	.8byte ..LN5166
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN4791
	.8byte ..LN4877
	.8byte ..LN5152
	.8byte ..LN5159
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN5513
	.8byte ..LN5599
	.8byte ..LN5874
	.8byte ..LN5881
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN5422
	.8byte ..LN5513
	.8byte ..LN5881
	.8byte ..LN5888
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN5916
	.8byte ..LN5917
	.8byte ..LN5918
	.8byte ..LN5924
	.8byte ..LN5926
	.8byte ..LN6374
	.8byte ..LN6385
	.8byte ..LN6972
	.8byte ..LN6983
	.8byte ..LNcreate_xgrid_2dx1d_order2_.7062
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN6150
	.8byte ..LN6245
	.8byte ..LN7041
	.8byte ..LN7048
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN6245
	.8byte ..LN6336
	.8byte ..LN7034
	.8byte ..LN7041
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN6353
	.8byte ..LN6354
	.8byte ..LN6365
	.8byte ..LN6366
	.8byte ..LN6532
	.8byte ..LN6535
	.8byte ..LN6536
	.8byte ..LN6546
	.8byte ..LN6547
	.8byte ..LN6549
	.8byte ..LN6554
	.8byte ..LN6555
	.8byte ..LN6557
	.8byte ..LN6658
	.8byte ..LN6659
	.8byte ..LN6660
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN6351
	.8byte ..LN6352
	.8byte ..LN6356
	.8byte ..LN6358
	.8byte ..LN6362
	.8byte ..LN6365
	.8byte ..LN6366
	.8byte ..LN6369
	.8byte ..LN6658
	.8byte ..LN6659
	.8byte ..LN6661
	.8byte ..LN6662
	.8byte ..LN6666
	.8byte ..LN6668
	.8byte ..LN6669
	.8byte ..LN6692
	.8byte ..LN6696
	.8byte ..LN6723
	.8byte ..LN6726
	.8byte ..LN6738
	.8byte ..LN6741
	.8byte ..LN6796
	.8byte ..LN6804
	.8byte ..LN6808
	.8byte ..LN6810
	.8byte ..LN6817
	.8byte ..LN6818
	.8byte ..LN6900
	.8byte ..LN6983
	.8byte ..LN6989
	.8byte ..LN6994
	.8byte ..LN6999
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN7510
	.8byte ..LN7511
	.8byte ..LN7515
	.8byte ..LN7517
	.8byte ..LN7521
	.8byte ..LN7524
	.8byte ..LN7525
	.8byte ..LN7528
	.8byte ..LN7817
	.8byte ..LN7818
	.8byte ..LN7820
	.8byte ..LN7821
	.8byte ..LN7825
	.8byte ..LN7827
	.8byte ..LN7828
	.8byte ..LN7851
	.8byte ..LN7855
	.8byte ..LN7882
	.8byte ..LN7885
	.8byte ..LN7897
	.8byte ..LN7900
	.8byte ..LN7955
	.8byte ..LN7963
	.8byte ..LN7967
	.8byte ..LN7969
	.8byte ..LN7976
	.8byte ..LN7977
	.8byte ..LN8059
	.8byte ..LN8142
	.8byte ..LN8148
	.8byte ..LN8153
	.8byte ..LN8158
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN7512
	.8byte ..LN7513
	.8byte ..LN7524
	.8byte ..LN7525
	.8byte ..LN7691
	.8byte ..LN7694
	.8byte ..LN7695
	.8byte ..LN7705
	.8byte ..LN7706
	.8byte ..LN7708
	.8byte ..LN7713
	.8byte ..LN7714
	.8byte ..LN7716
	.8byte ..LN7817
	.8byte ..LN7818
	.8byte ..LN7819
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN7404
	.8byte ..LN7495
	.8byte ..LN8193
	.8byte ..LN8200
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN7309
	.8byte ..LN7404
	.8byte ..LN8200
	.8byte ..LN8207
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN8232
	.8byte ..LN8233
	.8byte ..LN8235
	.8byte ..LN8236
	.8byte ..LN8237
	.8byte ..LN8245
	.8byte ..LN8247
	.8byte ..LN8461
	.8byte ..LN8462
	.8byte ..LN8993
	.8byte ..LN9004
	.8byte ..LNcreate_xgrid_2dx2d_order1_.9027
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN8266
	.8byte ..LN8356
	.8byte ..LN9018
	.8byte ..LNcreate_xgrid_2dx2d_order1_.9027
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN8356
	.8byte ..LN8443
	.8byte ..LN9011
	.8byte ..LN9018
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN8466
	.8byte ..LN8468
	.8byte ..LN8582
	.8byte ..LN8600
	.8byte ..LN8681
	.8byte ..LN8692
	.8byte ..LN8694
	.8byte ..LN8707
	.8byte ..LN8709
	.8byte ..LN8721
	.8byte ..LN8723
	.8byte ..LN8736
	.8byte ..LN8737
	.8byte ..LN8742
	.8byte ..LN8743
	.8byte ..LN8794
	.8byte ..LN8796
	.8byte ..LN8800
	.8byte ..LN8802
	.8byte ..LN8828
	.8byte ..LN8830
	.8byte ..LN8839
	.8byte ..LN8841
	.8byte ..LN8860
	.8byte ..LN8928
	.8byte ..LN8973
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN8762
	.8byte ..LN8769
	.8byte ..LN8770
	.8byte ..LN8771
	.8byte ..LN8775
	.8byte ..LN8776
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN8466
	.8byte ..LN8467
	.8byte ..LN8739
	.8byte ..LN8741
	.8byte ..LN8743
	.8byte ..LN8750
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN9272
	.8byte ..LN9274
	.8byte ..LN9388
	.8byte ..LN9406
	.8byte ..LN9487
	.8byte ..LN9498
	.8byte ..LN9500
	.8byte ..LN9513
	.8byte ..LN9515
	.8byte ..LN9527
	.8byte ..LN9529
	.8byte ..LN9542
	.8byte ..LN9543
	.8byte ..LN9548
	.8byte ..LN9549
	.8byte ..LN9600
	.8byte ..LN9602
	.8byte ..LN9606
	.8byte ..LN9608
	.8byte ..LN9634
	.8byte ..LN9636
	.8byte ..LN9645
	.8byte ..LN9647
	.8byte ..LN9666
	.8byte ..LN9734
	.8byte ..LN9779
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN9272
	.8byte ..LN9273
	.8byte ..LN9545
	.8byte ..LN9547
	.8byte ..LN9549
	.8byte ..LN9556
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN9568
	.8byte ..LN9575
	.8byte ..LN9576
	.8byte ..LN9577
	.8byte ..LN9581
	.8byte ..LN9582
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN9162
	.8byte ..LN9249
	.8byte ..LN9817
	.8byte ..LN9824
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN9072
	.8byte ..LN9162
	.8byte ..LN9824
	.8byte ..LNcreate_xgrid_2dx2d_order1.9833
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN9844
	.8byte ..LN9845
	.8byte ..LN9847
	.8byte ..LN9848
	.8byte ..LN9849
	.8byte ..LN9857
	.8byte ..LN9859
	.8byte ..LN10087
	.8byte ..LN10088
	.8byte ..LN10939
	.8byte ..LN10950
	.8byte ..LNcreate_xgrid_2dx2d_order2_.11044
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN9878
	.8byte ..LN9968
	.8byte ..LN11035
	.8byte ..LNcreate_xgrid_2dx2d_order2_.11044
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN9968
	.8byte ..LN10055
	.8byte ..LN11028
	.8byte ..LN11035
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN10085
	.8byte ..LN10087
	.8byte ..LN10203
	.8byte ..LN10221
	.8byte ..LN10302
	.8byte ..LN10313
	.8byte ..LN10315
	.8byte ..LN10328
	.8byte ..LN10330
	.8byte ..LN10342
	.8byte ..LN10344
	.8byte ..LN10357
	.8byte ..LN10358
	.8byte ..LN10363
	.8byte ..LN10364
	.8byte ..LN10415
	.8byte ..LN10417
	.8byte ..LN10421
	.8byte ..LN10423
	.8byte ..LN10449
	.8byte ..LN10451
	.8byte ..LN10460
	.8byte ..LN10462
	.8byte ..LN10481
	.8byte ..LN10960
	.8byte ..LN11005
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN10383
	.8byte ..LN10390
	.8byte ..LN10391
	.8byte ..LN10392
	.8byte ..LN10396
	.8byte ..LN10397
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN10085
	.8byte ..LN10086
	.8byte ..LN10360
	.8byte ..LN10362
	.8byte ..LN10364
	.8byte ..LN10371
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN10064
	.8byte ..LN10065
	.8byte ..LN10507
	.8byte ..LN10510
	.8byte ..LN10511
	.8byte ..LN10526
	.8byte ..LN10527
	.8byte ..LN10529
	.8byte ..LN10534
	.8byte ..LN10535
	.8byte ..LN10537
	.8byte ..LN10639
	.8byte ..LN10642
	.8byte ..LN10643
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN10071
	.8byte ..LN10072
	.8byte ..LN10078
	.8byte ..LN10079
	.8byte ..LN10080
	.8byte ..LN10081
	.8byte ..LN10082
	.8byte ..LN10085
	.8byte ..LN10643
	.8byte ..LN10644
	.8byte ..LN10646
	.8byte ..LN10647
	.8byte ..LN10648
	.8byte ..LN10649
	.8byte ..LN10650
	.8byte ..LN10677
	.8byte ..LN10681
	.8byte ..LN10708
	.8byte ..LN10711
	.8byte ..LN10723
	.8byte ..LN10726
	.8byte ..LN10782
	.8byte ..LN10786
	.8byte ..LN10790
	.8byte ..LN10792
	.8byte ..LN10799
	.8byte ..LN10800
	.8byte ..LN10879
	.8byte ..LN10929
	.8byte ..LN10932
	.8byte ..LN10955
	.8byte ..LN10960
	.8byte ..LN11018
	.8byte ..LN11021
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN11282
	.8byte ..LN11283
	.8byte ..LN11289
	.8byte ..LN11290
	.8byte ..LN11291
	.8byte ..LN11292
	.8byte ..LN11293
	.8byte ..LN11296
	.8byte ..LN11854
	.8byte ..LN11855
	.8byte ..LN11857
	.8byte ..LN11858
	.8byte ..LN11859
	.8byte ..LN11860
	.8byte ..LN11861
	.8byte ..LN11888
	.8byte ..LN11892
	.8byte ..LN11919
	.8byte ..LN11922
	.8byte ..LN11934
	.8byte ..LN11937
	.8byte ..LN11993
	.8byte ..LN11997
	.8byte ..LN12001
	.8byte ..LN12003
	.8byte ..LN12010
	.8byte ..LN12011
	.8byte ..LN12090
	.8byte ..LN12140
	.8byte ..LN12143
	.8byte ..LN12166
	.8byte ..LN12171
	.8byte ..LN12229
	.8byte ..LN12232
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN11275
	.8byte ..LN11276
	.8byte ..LN11718
	.8byte ..LN11721
	.8byte ..LN11722
	.8byte ..LN11737
	.8byte ..LN11738
	.8byte ..LN11740
	.8byte ..LN11745
	.8byte ..LN11746
	.8byte ..LN11748
	.8byte ..LN11850
	.8byte ..LN11853
	.8byte ..LN11854
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN11296
	.8byte ..LN11298
	.8byte ..LN11414
	.8byte ..LN11432
	.8byte ..LN11513
	.8byte ..LN11524
	.8byte ..LN11526
	.8byte ..LN11539
	.8byte ..LN11541
	.8byte ..LN11553
	.8byte ..LN11555
	.8byte ..LN11568
	.8byte ..LN11569
	.8byte ..LN11574
	.8byte ..LN11575
	.8byte ..LN11626
	.8byte ..LN11628
	.8byte ..LN11632
	.8byte ..LN11634
	.8byte ..LN11660
	.8byte ..LN11662
	.8byte ..LN11671
	.8byte ..LN11673
	.8byte ..LN11692
	.8byte ..LN12171
	.8byte ..LN12216
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN11296
	.8byte ..LN11297
	.8byte ..LN11571
	.8byte ..LN11573
	.8byte ..LN11575
	.8byte ..LN11582
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN11594
	.8byte ..LN11601
	.8byte ..LN11602
	.8byte ..LN11603
	.8byte ..LN11607
	.8byte ..LN11608
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN11179
	.8byte ..LN11266
	.8byte ..LN12239
	.8byte ..LN12246
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN11089
	.8byte ..LN11179
	.8byte ..LN12246
	.8byte ..LNcreate_xgrid_2dx2d_order2.12255
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN12340
	.8byte ..LN12347
	.8byte ..LN12348
	.8byte ..LN12349
	.8byte ..LN12353
	.8byte ..LN12354
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN12306
	.8byte ..LN12307
	.8byte ..LN12315
	.8byte ..LN12319
	.8byte ..LN12320
	.8byte ..LN12325
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.8byte ..LN0
	.8byte ..LNinside_edge.13271
	.8byte 0x0000000000000000
	.8byte 0x0000000000000000
	.section .text
.LNDBG_TXe:
# End
